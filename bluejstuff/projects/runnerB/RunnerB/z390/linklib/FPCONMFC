FPCONMFC  MZ390 START
AZ390I Copyright 2011 Automated Software Tools Corporation
AZ390I z390 is licensed under GNU General Public License
AZ390I program = linklib\FPCONMFC
AZ390I options = W:\work\z390\z390.OPT=(time(60)) bal notiming sysmac(mac) 
  syscpy(mac) stats sysmac(mac+linklib) systerm(linklib\rtlink)
External Symbol Definitions
 ESD=0001 LOC=00000000 LEN=000016B0 TYPE=CST NAME=FPCONMFC
 ESD=0002 LOC=00000000 LEN=00000000 TYPE=EXT NAME=FPCONVRT
Assembler Listing
000000                                        (1/1)1 *********************************************************************
000000                                        (1/2)2 * Copyright 2006 Automated Software Tools Corporation               *
000000                                        (1/3)3 * This source code is part of z390 assembler/emulator package       *
000000                                        (1/4)4 * The z390 package is distributed under GNU general public license  *
000000                                        (1/5)5 * Author - Don Higgins                                              *
000000                                        (1/6)6 * Date   - 07/17/07                                                 *
000000                                        (1/7)7 *********************************************************************
000000                                        (1/8)8 * FPCONMFC IS LINKAGE=MF INTERFACE CALLED BY CTD AND CFD MACROS TO
000000                                        (1/9)9 * TO CALL FPCONVRT TO PERFORM FP CONVERSIONS USING MAINFRAME
000000                                      (1/10)10 * INSTRUCTIONS VERSUS Z390 SVC 170 AND 170 FOR LINKAGE=SVC DEFAULT.
000000                                      (1/11)11 *
000000                                      (1/12)12 * NOTE THE ARCHLVL 1-5 ON THE FPCONVRT MACRO IN THIS PROGRAM USED
000000                                      (1/13)13 * TO DEFINE FPCON CONTROL BLOCK MUST MATCH THE ARCHLVL 2-5 IN
000000                                      (1/14)14 * FPCONVRT.MLC USED TO ASSEMBLE THE CODE.  BOTH THIS FPCONMFC.MLC
000000                                      (1/15)15 * DRIVER PROGRAM AND FPCONVRT.MLC USED TO ASSEMBLE FPCONVRT USE
000000                                      (1/16)16 * SHARED MACRO ARCHLVL TO SET GBLA &ARCHLVL SETTING FOR FPCONVRT
000000                                      (1/17)17 * GENERATION MACRO CALL.  THE &ARCHLVL IS ALSO USED TO SWITCH
000000                                      (1/18)18 * BETWEEN 31 BIT AND 64 BIT SAVE AREA AND PARM ADDRESS FIELDS.
000000                                      (1/19)19 *
000000                                      (1/20)20 *********************************************************************
000000                                      (1/21)21 * 07/17/06 RPI 374 - add FPCONMFC interface to FPCONVRT routines
000000                                      (1/22)22 * 07/21/06 RPI 379 - use compound DO conditions in (...)
000000                                      (1/23)23 * 08/04/06 RPI 391 - replace trailing output nulls with spaces
000000                                      (1/24)24 * 12/11/06 RPI 514 - add DD, ED, and LD DFP conversion support
000000                                      (1/25)25 * 04/27/07 RPI 600 - add GBLA &ARCHLVL to FPCON_CALL
000000                                      (1/26)26 * 12/07/07 RPI 749 - move LBUFF to front of pgm to avoid lit errors
000000                                      (1/27)27 * 03/27/08 RPI 829 - clearn high bits of 64 bit register parm
000000                                      (1/28)28 * 04/25/11 RPI 1161 - remove & from ARCHLVL macro comments
000000                                      (1/29)29 *********************************************************************
000000                                      (1/30)30          PRINT DATA
000000                                      (1/31)31          COPY  ASMMSP       STRUCTURED PROGRAM MACROS AND EQUS
000000                                       (2/1)32=         COPY ZSTRMAC  Z390 STRUCTURED PROGRAMMING MACROS
000000                                      (1/32)33          ARCHLVL            GET SHARED ARCHLVL=1-5 (SEE FPCONVRT.MAC)
000000                                      (4/11)35+         MNOTE 'ARCHLVL=7 ARCHSFX=G'
000000                                      (1/35)37          MACRO
000000                                      (1/36)38          FPCON_CALL
000000                                      (1/37)39          GBLA  &ARCHLVL          RPI 600
000000                                      (1/38)40          AIF   (&ARCHLVL GT 2).ZOS_CALL
000000                                      (1/39)41 .OS_CALL ANOP
000000                                      (1/40)42          LA    R1,=A(FPCON)      R1 > 32 BIT ADDR
000000                                      (1/41)43          L     R15,=V(FPCONVRT)
000000                                      (1/42)44          BASR  R14,R15           CALL USING STD SUBENTRY SAVE
000000                                      (1/43)45          AGO   .END_CALL
000000                                      (1/44)46 .ZOS_CALL ANOP
000000                                      (1/45)47          SGR   R1,R1             CLEAR HIGH BITS RPI 829
000000                                      (1/46)48          LA    R1,=AD(FPCON)     R1 > 64 BIT ADDR
000000                                      (1/47)49          LG    R15,=VD(FPCONVRT)
000000                                      (1/48)50          ST    R13,MYSAVE        SAVE CALLERS 18F SAVE AREA
000000                                      (1/49)51          LA    R13,BIGSAVE       FORMAT 4 - 18FD SAVE AREA
000000                                      (1/50)52          BASR  R14,R15           CALL USING BIG SAVE AREA
000000                                      (1/51)53          L     R13,MYSAVE-*(R14) RESTORE CALLERS SAVE AREA
000000                                      (1/52)54 .END_CALL ANOP
000000                                      (1/53)55          MEND
000000                                      (1/54)56 FPCONMFC SUBENTRY 
000000                                      (5/78)57+FPCONMFC CSECT 
000000 90ECD00C                            (5/168)58+         STM   14,12,12(13)
000004 45FF0068                            (5/169)59+         BAL   15,104(15)
000008 0000000000000000                    (5/170)60+         DC    18F'0'
000010 0000000000000000
000018 0000000000000000
000020 0000000000000000
000028 0000000000000000
000030 0000000000000000
000038 0000000000000000
000040 0000000000000000
000048 0000000000000000
000050 C6D7C3D6D5D4C6C3                    (5/171)61+         DC    CL8'FPCONMFC'
000058 F0F161F0F261F0F5                    (5/172)62+         DC    CL8'01/02/05'
000060 F2F24BF3F3404040                    (5/173)63+         DC    CL8'22.33'
000068 50FD0008                            (5/174)64+         ST    15,8(13)
00006C 50DF0004                            (5/175)65+         ST    13,4(15)
000070 18DF                                (5/176)66+         LR    13,15
000072                                     (5/189)67+         USING FPCONMFC+8,13
LISTUSE FPCONMFC ESD=0001 LOC=00000008 LEN=01000 REG=D OFF=00000 LAB=
000072                  0000002D            (1/55)69 LBUFF    EQU    45 CONSTANT PER CFD AND CTD MACRO DEFINITIONS
000072 B9090055                             (1/56)70          SGR   R5,R5 CLEAR HIGH BITS FOR FPCONVRT USE RPI 829
000076 98351000                             (1/57)71          LM    R3,R5,0(R1)  R3=TYPE, R4=ARG2, R5=ARG3
00007A 4230D828                000830       (1/58)72          STC   R3,TYPE
00007E                                      (1/59)73          IF    (CLI,TYPE,GE,21)     RPI 514
00007E 9515D828                000830       (6/47)98+         CLI   TYPE,21
000082 4740D086                00008E       (6/49)99+         BC    15-GE,#@IF_1_2
000086 4DC0D098                0000A0      (1/60)101                BAS   R12,CFD_RTNS
00008A                                     (1/61)102          ELSE 
00008A 47F0D08A                000092      (9/40)105+        B      #@IF_1_E
00008E                                     (9/41)106+#@IF_1_2                                                 DS 0H
00008E 4DC0D1F0                0001F8      (1/62)108                BAS   R12,CTD_RTNS
000092                                     (1/63)109          ENDIF 
000092                                    (10/23)112+#@IF_1_E                         DS 0H
000092                                     (1/64)114          SUBEXIT RC=(R15)
000092 58D0D004                           (11/50)117+         L     13,4(,13)
000096 58E0D00C                           (11/51)118+         L     14,12(,13)
00009A 982CD01C                           (11/52)119+         LM    2,12,28(13)
00009E 07FE                               (11/53)120+         BR    14
0000A0                                     (1/65)122 *********************************************************************
0000A0                                     (1/66)123 * Level 1 support routines using R12
0000A0                                     (1/67)124 *********************************************************************
0000A0                                     (1/68)125 *
0000A0                                     (1/69)126 * CONVERT FROM DECIMAL R4=A(OUT), R5=A(IN)
0000A0                                     (1/70)127 *
0000A0                  000000A0           (1/71)128 CFD_RTNS EQU   *
0000A0 98E1D7D8                0007E0      (1/72)129          LM    R14,R1,=A(Fpcon,FpconLength,0,0)
0000A4 0EE0                                (1/73)130          MVCL  R14,R0
0000A6 41F00000                            (1/74)131          LA    R15,0
0000AA                                     (1/75)132          IF     (CLI,TYPE,EQ,21) CFD INT128 FROM D40
0000AA 9515D828                000830      (6/47)136+         CLI   TYPE,21
0000AE 4770D0B2                0000BA      (6/49)137+         BC    15-EQ,#@IF_2_2
0000B2 4DB0D3BC                0003C4      (1/76)139                BAS   R11,CFD_GET_INT128
0000B6                                     (1/77)140          ELSEIF (CLI,TYPE,EQ,22) CFD EH     FROM D40
0000B6 47F0D1EE                0001F6     (13/24)144+         B     #@IF_2_E
0000BA                                    (13/25)145+#@IF_2_2                                                 DS 0H
0000BA 9516D828                000830     (13/48)146+         CLI   TYPE,22
0000BE 4770D0D2                0000DA     (13/50)147+         BC    15-EQ,#@IF_2_4
0000C2 9204DE6C                000E74      (1/78)149                MVI   FpconValueLen,FpconValueLenE
0000C6 9210DE6D                000E75      (1/79)150                MVI   FpconBase,FpconBase16
0000CA 4DB0D5E2                0005EA      (1/80)151                BAS   R11,CFD_CALL
0000CE 7800DE40                000E48      (1/81)152                LE    F0,FpconValueE  F0 =  EH
0000D2 70040000                            (1/82)153                STE   F0,0(R4)        STORE EH
0000D6                                     (1/83)154          ELSEIF (CLI,TYPE,EQ,23) CFD EB     FROM D40
0000D6 47F0D1EE                0001F6     (13/24)158+         B     #@IF_2_E
0000DA                                    (13/25)159+#@IF_2_4                                                 DS 0H
0000DA 9517D828                000830     (13/48)160+         CLI   TYPE,23
0000DE 4770D0F2                0000FA     (13/50)161+         BC    15-EQ,#@IF_2_6
0000E2 9204DE6C                000E74      (1/84)163                MVI   FpconValueLen,FpconValueLenE
0000E6 9202DE6D                000E75      (1/85)164                MVI   FpconBase,FpconBase2
0000EA 4DB0D5E2                0005EA      (1/86)165                BAS   R11,CFD_CALL
0000EE 7800DE40                000E48      (1/87)166                LE    F0,FpconValueE  F0 =  EB
0000F2 70040000                            (1/88)167                STE   F0,0(R4)        STORE EB
0000F6                                     (1/89)168          ELSEIF (CLI,TYPE,EQ,24) CFD DH     FROM D40
0000F6 47F0D1EE                0001F6     (13/24)172+         B     #@IF_2_E
0000FA                                    (13/25)173+#@IF_2_6                                                 DS 0H
0000FA 9518D828                000830     (13/48)174+         CLI   TYPE,24
0000FE 4770D112                00011A     (13/50)175+         BC    15-EQ,#@IF_2_8
000102 9208DE6C                000E74      (1/90)177                MVI   FpconValueLen,FpconValueLenD
000106 9210DE6D                000E75      (1/91)178                MVI   FpconBase,FpconBase16
00010A 4DB0D5E2                0005EA      (1/92)179                BAS   R11,CFD_CALL
00010E 6800DE40                000E48      (1/93)180                LD    F0,FpconValueD  F0 =  DH
000112 60040000                            (1/94)181                STD   F0,0(R4)        STORE DH
000116                                     (1/95)182          ELSEIF (CLI,TYPE,EQ,25) CFD DB     FROM D40
000116 47F0D1EE                0001F6     (13/24)186+         B     #@IF_2_E
00011A                                    (13/25)187+#@IF_2_8                                                 DS 0H
00011A 9519D828                000830     (13/48)188+         CLI   TYPE,25
00011E 4770D132                00013A     (13/50)189+         BC    15-EQ,#@IF_2_10
000122 9208DE6C                000E74      (1/96)191                MVI   FpconValueLen,FpconValueLenD
000126 9202DE6D                000E75      (1/97)192                MVI   FpconBase,FpconBase2
00012A 4DB0D5E2                0005EA      (1/98)193                BAS   R11,CFD_CALL
00012E 6800DE40                000E48      (1/99)194                LD    F0,FpconValueD  F0 =  DB
000132 60040000                           (1/100)195                STD   F0,0(R4)        STORE DB
000136                                    (1/101)196          ELSEIF (CLI,TYPE,EQ,26) CFD LH     FROM D40
000136 47F0D1EE                0001F6     (13/24)200+         B     #@IF_2_E
00013A                                    (13/25)201+#@IF_2_10                                                DS 0H
00013A 951AD828                000830     (13/48)202+         CLI   TYPE,26
00013E 4770D15A                000162     (13/50)203+         BC    15-EQ,#@IF_2_12
000142 9210DE6C                000E74     (1/102)205                MVI   FpconValueLen,FpconValueLenL
000146 9210DE6D                000E75     (1/103)206                MVI   FpconBase,FpconBase16
00014A 4DB0D5E2                0005EA     (1/104)207                BAS   R11,CFD_CALL
00014E 6800DE40                000E48     (1/105)208                LD    F0,FpconValueL    F0 =  LH1
000152 6820DE48                000E50     (1/106)209                LD    F2,FpconValueL+8  F2 =  LH2
000156 60040000                           (1/107)210                STD   F0,0(R4)        STORE   LB1
00015A 60240008                           (1/108)211                STD   F2,8(R4)        STORE   LB2
00015E                                    (1/109)212          ELSEIF (CLI,TYPE,EQ,27) CFD LB     FROM D40
00015E 47F0D1EE                0001F6     (13/24)216+         B     #@IF_2_E
000162                                    (13/25)217+#@IF_2_12                                                DS 0H
000162 951BD828                000830     (13/48)218+         CLI   TYPE,27
000166 4770D182                00018A     (13/50)219+         BC    15-EQ,#@IF_2_14
00016A 9210DE6C                000E74     (1/110)221                MVI   FpconValueLen,FpconValueLenL
00016E 9202DE6D                000E75     (1/111)222                MVI   FpconBase,FpconBase2
000172 4DB0D5E2                0005EA     (1/112)223                BAS   R11,CFD_CALL
000176 6800DE40                000E48     (1/113)224                LD    F0,FpconValueL    F0 =  LB1
00017A 6820DE48                000E50     (1/114)225                LD    F2,FpconValueL+8  F2 =  LB2
00017E 60040000                           (1/115)226                STD   F0,0(R4)        STORE   LB1
000182 60240008                           (1/116)227                STD   F2,8(R4)        STORE   LB2
000186                                    (1/117)228          ELSEIF (CLI,TYPE,EQ,28) CFD DD     FROM D40
000186 47F0D1EE                0001F6     (13/24)232+         B     #@IF_2_E
00018A                                    (13/25)233+#@IF_2_14                                                DS 0H
00018A 951CD828                000830     (13/48)234+         CLI   TYPE,28
00018E 4770D1A2                0001AA     (13/50)235+         BC    15-EQ,#@IF_2_16
000192 9208DE6C                000E74     (1/118)237                MVI   FpconValueLen,FpconValueLenD
000196 920ADE6D                000E75     (1/119)238                MVI   FpconBase,FpconBase10
00019A 4DB0D5E2                0005EA     (1/120)239                BAS   R11,CFD_CALL
00019E 6800DE40                000E48     (1/121)240                LD    F0,FpconValueD  F0 =  DD
0001A2 60040000                           (1/122)241                STD   F0,0(R4)        STORE DD
0001A6                                    (1/123)242          ELSEIF (CLI,TYPE,EQ,29) CFD ED     FROM D40
0001A6 47F0D1EE                0001F6     (13/24)246+         B     #@IF_2_E
0001AA                                    (13/25)247+#@IF_2_16                                                DS 0H
0001AA 951DD828                000830     (13/48)248+         CLI   TYPE,29
0001AE 4770D1C2                0001CA     (13/50)249+         BC    15-EQ,#@IF_2_18
0001B2 9204DE6C                000E74     (1/124)251                MVI   FpconValueLen,FpconValueLenE
0001B6 920ADE6D                000E75     (1/125)252                MVI   FpconBase,FpconBase10
0001BA 4DB0D5E2                0005EA     (1/126)253                BAS   R11,CFD_CALL
0001BE 7800DE40                000E48     (1/127)254                LE    F0,FpconValueE  F0 =  ED
0001C2 70040000                           (1/128)255                STE   F0,0(R4)        STORE ED
0001C6                                    (1/129)256          ELSEIF (CLI,TYPE,EQ,30) CFD LD     FROM D40
0001C6 47F0D1EE                0001F6     (13/24)260+         B     #@IF_2_E
0001CA                                    (13/25)261+#@IF_2_18                                                DS 0H
0001CA 951ED828                000830     (13/48)262+         CLI   TYPE,30
0001CE 4770D1EA                0001F2     (13/50)263+         BC    15-EQ,#@IF_2_20
0001D2 9210DE6C                000E74     (1/130)265                MVI   FpconValueLen,FpconValueLenL
0001D6 920ADE6D                000E75     (1/131)266                MVI   FpconBase,FpconBase10
0001DA 4DB0D5E2                0005EA     (1/132)267                BAS   R11,CFD_CALL
0001DE 6800DE40                000E48     (1/133)268                LD    F0,FpconValueL    F0 =  LD1
0001E2 6820DE48                000E50     (1/134)269                LD    F2,FpconValueL+8  F2 =  LD2
0001E6 60040000                           (1/135)270                STD   F0,0(R4)        STORE   LD1
0001EA 60240008                           (1/136)271                STD   F2,8(R4)        STORE   LD2
0001EE                                    (1/137)272          ELSE 
0001EE 47F0D1EE                0001F6      (9/40)275+        B      #@IF_2_E
0001F2                                     (9/41)276+#@IF_2_20                                                DS 0H
0001F2 41F0000C                           (1/138)278                LA   R15,12
0001F6                                    (1/139)279          ENDIF 
0001F6                                    (10/23)282+#@IF_2_E                         DS 0H
0001F6 07FC                               (1/140)284          BR    R12
0001F8                                    (1/141)285 *
0001F8                                    (1/142)286 * CONVERT TO DECIMAL
0001F8                                    (1/143)287 *
0001F8                  000001F8          (1/144)288 CTD_RTNS EQU   *
0001F8 98E1D7D8                0007E0     (1/145)289          LM    R14,R1,=A(Fpcon,FpconLength,0,0) ZERO FPCON
0001FC 0EE0                               (1/146)290          MVCL  R14,R0
0001FE D22C5000D7FA            000802     (1/147)291          MVC   0(LBUFF,R5),=(LBUFF)C' '         CLEAR OUTPUT
000204 41F00000                           (1/148)292          LA    R15,0
000208                                    (1/149)293          IF     (CLI,TYPE,EQ,1) CFD INT128 TO   D40
000208 9501D828                000830      (6/47)297+         CLI   TYPE,1
00020C 4770D210                000218      (6/49)298+         BC    15-EQ,#@IF_3_2
000210 45B0D4CE                0004D6     (1/150)300                BAL   R11,CTD_PUT_INT128
000214                                    (1/151)301          ELSEIF (CLI,TYPE,EQ,2) CFD EH     TO   D40
000214 47F0D3BA                0003C2     (13/24)305+         B     #@IF_3_E
000218                                    (13/25)306+#@IF_3_2                                                 DS 0H
000218 9502D828                000830     (13/48)307+         CLI   TYPE,2
00021C 4770D23C                000244     (13/50)308+         BC    15-EQ,#@IF_3_4
000220 9204DE6C                000E74     (1/152)310                MVI   FpconValueLen,FpconValueLenE
000224 9210DE6D                000E75     (1/153)311                MVI   FpconBase,FpconBase16
000228 D201DE62D7F0     000E6A 0007F8     (1/154)312                MVC   FpconMaxLeading,=H'7'
00022E D201DE64D7F2     000E6C 0007FA     (1/155)313                MVC   FpconMinDecimal,=H'-1'
000234 78040000                           (1/156)314                LE    F0,0(R4)        F0 =  EH
000238 7000DE40                000E48     (1/157)315                STE   F0,FpconValueE store  EH
00023C 4DB0D65A                000662     (1/158)316                BAS   R11,CTD_CALL
000240                                    (1/159)317          ELSEIF (CLI,TYPE,EQ,3) CFD EB     TO   D40
000240 47F0D3BA                0003C2     (13/24)321+         B     #@IF_3_E
000244                                    (13/25)322+#@IF_3_4                                                 DS 0H
000244 9503D828                000830     (13/48)323+         CLI   TYPE,3
000248 4770D268                000270     (13/50)324+         BC    15-EQ,#@IF_3_6
00024C 9204DE6C                000E74     (1/160)326                MVI   FpconValueLen,FpconValueLenE
000250 9202DE6D                000E75     (1/161)327                MVI   FpconBase,FpconBase2
000254 D201DE62D7F0     000E6A 0007F8     (1/162)328                MVC   FpconMaxLeading,=H'7'
00025A D201DE64D7F2     000E6C 0007FA     (1/163)329                MVC   FpconMinDecimal,=H'-1'
000260 78040000                           (1/164)330                LE    F0,0(R4)        F0 =  EB
000264 7000DE40                000E48     (1/165)331                STE   F0,FpconValueE store  EB
000268 4DB0D65A                000662     (1/166)332                BAS   R11,CTD_CALL
00026C                                    (1/167)333          ELSEIF (CLI,TYPE,EQ,4) CFD DH     TO   D40
00026C 47F0D3BA                0003C2     (13/24)337+         B     #@IF_3_E
000270                                    (13/25)338+#@IF_3_6                                                 DS 0H
000270 9504D828                000830     (13/48)339+         CLI   TYPE,4
000274 4770D294                00029C     (13/50)340+         BC    15-EQ,#@IF_3_8
000278 9208DE6C                000E74     (1/168)342                MVI   FpconValueLen,FpconValueLenD
00027C 9210DE6D                000E75     (1/169)343                MVI   FpconBase,FpconBase16
000280 D201DE62D7F4     000E6A 0007FC     (1/170)344                MVC   FpconMaxLeading,=H'15'
000286 D201DE64D7F2     000E6C 0007FA     (1/171)345                MVC   FpconMinDecimal,=H'-1'
00028C 68040000                           (1/172)346                LD    F0,0(R4)        F0 =  DH
000290 6000DE40                000E48     (1/173)347                STD   F0,FpconValueD store  DH
000294 4DB0D65A                000662     (1/174)348                BAS   R11,CTD_CALL
000298                                    (1/175)349          ELSEIF (CLI,TYPE,EQ,5) CFD DB     TO   D40
000298 47F0D3BA                0003C2     (13/24)353+         B     #@IF_3_E
00029C                                    (13/25)354+#@IF_3_8                                                 DS 0H
00029C 9505D828                000830     (13/48)355+         CLI   TYPE,5
0002A0 4770D2C0                0002C8     (13/50)356+         BC    15-EQ,#@IF_3_10
0002A4 9208DE6C                000E74     (1/176)358                MVI   FpconValueLen,FpconValueLenD
0002A8 9202DE6D                000E75     (1/177)359                MVI   FpconBase,FpconBase2
0002AC D201DE62D7F4     000E6A 0007FC     (1/178)360                MVC   FpconMaxLeading,=H'15'
0002B2 D201DE64D7F2     000E6C 0007FA     (1/179)361                MVC   FpconMinDecimal,=H'-1'
0002B8 68040000                           (1/180)362                LD    F0,0(R4)        F0 =  DB
0002BC 6000DE40                000E48     (1/181)363                STD   F0,FpconValueD store  DB
0002C0 4DB0D65A                000662     (1/182)364                BAS   R11,CTD_CALL
0002C4                                    (1/183)365          ELSEIF (CLI,TYPE,EQ,6) CFD LH     TO   D40
0002C4 47F0D3BA                0003C2     (13/24)369+         B     #@IF_3_E
0002C8                                    (13/25)370+#@IF_3_10                                                DS 0H
0002C8 9506D828                000830     (13/48)371+         CLI   TYPE,6
0002CC 4770D2F4                0002FC     (13/50)372+         BC    15-EQ,#@IF_3_12
0002D0 9210DE6C                000E74     (1/184)374                MVI   FpconValueLen,FpconValueLenL
0002D4 9210DE6D                000E75     (1/185)375                MVI   FpconBase,FpconBase16
0002D8 D201DE62D7F6     000E6A 0007FE     (1/186)376                MVC   FpconMaxLeading,=H'34'
0002DE D201DE64D7F2     000E6C 0007FA     (1/187)377                MVC   FpconMinDecimal,=H'-1'
0002E4 68040000                           (1/188)378                LD    F0,0(R4)        F0 =  LH1
0002E8 68240008                           (1/189)379                LD    F2,8(R4)        F2 =  LH2
0002EC 6000DE40                000E48     (1/190)380                STD   F0,FpconValueD   store  LH1
0002F0 6020DE48                000E50     (1/191)381                STD   F2,FpconValueD+8 store  LH2
0002F4 4DB0D65A                000662     (1/192)382                BAS   R11,CTD_CALL
0002F8                                    (1/193)383          ELSEIF (CLI,TYPE,EQ,7) CFD LB     TO   D40
0002F8 47F0D3BA                0003C2     (13/24)387+         B     #@IF_3_E
0002FC                                    (13/25)388+#@IF_3_12                                                DS 0H
0002FC 9507D828                000830     (13/48)389+         CLI   TYPE,7
000300 4770D328                000330     (13/50)390+         BC    15-EQ,#@IF_3_14
000304 9210DE6C                000E74     (1/194)392                MVI   FpconValueLen,FpconValueLenL
000308 9202DE6D                000E75     (1/195)393                MVI   FpconBase,FpconBase2
00030C D201DE62D7F6     000E6A 0007FE     (1/196)394                MVC   FpconMaxLeading,=H'34'
000312 D201DE64D7F2     000E6C 0007FA     (1/197)395                MVC   FpconMinDecimal,=H'-1'
000318 68040000                           (1/198)396                LD    F0,0(R4)        F0 =  LB1
00031C 68240008                           (1/199)397                LD    F2,8(R4)        F2 =  LB2
000320 6000DE40                000E48     (1/200)398                STD   F0,FpconValueD   store  LB1
000324 6020DE48                000E50     (1/201)399                STD   F2,FpconValueD+8 store  LB2
000328 4DB0D65A                000662     (1/202)400                BAS   R11,CTD_CALL
00032C                                    (1/203)401          ELSEIF (CLI,TYPE,EQ,8) CFD DD     TO   D40
00032C 47F0D3BA                0003C2     (13/24)405+         B     #@IF_3_E
000330                                    (13/25)406+#@IF_3_14                                                DS 0H
000330 9508D828                000830     (13/48)407+         CLI   TYPE,8
000334 4770D354                00035C     (13/50)408+         BC    15-EQ,#@IF_3_16
000338 9208DE6C                000E74     (1/204)410                MVI   FpconValueLen,FpconValueLenD
00033C 920ADE6D                000E75     (1/205)411                MVI   FpconBase,FpconBase10
000340 D201DE62D7F8     000E6A 000800     (1/206)412                MVC   FpconMaxLeading,=H'16'
000346 D201DE64D7F2     000E6C 0007FA     (1/207)413                MVC   FpconMinDecimal,=H'-1'
00034C 68040000                           (1/208)414                LD    F0,0(R4)        F0 =  DD
000350 6000DE40                000E48     (1/209)415                STD   F0,FpconValueD store  DD
000354 4DB0D65A                000662     (1/210)416                BAS   R11,CTD_CALL
000358                                    (1/211)417          ELSEIF (CLI,TYPE,EQ,9) CFD ED     TO   D40
000358 47F0D3BA                0003C2     (13/24)421+         B     #@IF_3_E
00035C                                    (13/25)422+#@IF_3_16                                                DS 0H
00035C 9509D828                000830     (13/48)423+         CLI   TYPE,9
000360 4770D380                000388     (13/50)424+         BC    15-EQ,#@IF_3_18
000364 9204DE6C                000E74     (1/212)426                MVI   FpconValueLen,FpconValueLenE
000368 920ADE6D                000E75     (1/213)427                MVI   FpconBase,FpconBase10
00036C D201DE62D7F0     000E6A 0007F8     (1/214)428                MVC   FpconMaxLeading,=H'7'
000372 D201DE64D7F2     000E6C 0007FA     (1/215)429                MVC   FpconMinDecimal,=H'-1'
000378 78040000                           (1/216)430                LE    F0,0(R4)        F0 =  ED
00037C 7000DE40                000E48     (1/217)431                STE   F0,FpconValueE store  ED
000380 4DB0D65A                000662     (1/218)432                BAS   R11,CTD_CALL
000384                                    (1/219)433          ELSEIF (CLI,TYPE,EQ,10) CFD LD     TO   D40
000384 47F0D3BA                0003C2     (13/24)437+         B     #@IF_3_E
000388                                    (13/25)438+#@IF_3_18                                                DS 0H
000388 950AD828                000830     (13/48)439+         CLI   TYPE,10
00038C 4770D3B4                0003BC     (13/50)440+         BC    15-EQ,#@IF_3_20
000390 9210DE6C                000E74     (1/220)442                MVI   FpconValueLen,FpconValueLenL
000394 920ADE6D                000E75     (1/221)443                MVI   FpconBase,FpconBase10
000398 D201DE62D7F6     000E6A 0007FE     (1/222)444                MVC   FpconMaxLeading,=H'34'
00039E D201DE64D7F2     000E6C 0007FA     (1/223)445                MVC   FpconMinDecimal,=H'-1'
0003A4 68040000                           (1/224)446                LD    F0,0(R4)        F0 =  LD1
0003A8 68240008                           (1/225)447                LD    F2,8(R4)        F2 =  LD2
0003AC 6000DE40                000E48     (1/226)448                STD   F0,FpconValueD   store  LD1
0003B0 6020DE48                000E50     (1/227)449                STD   F2,FpconValueD+8 store  LD2
0003B4 4DB0D65A                000662     (1/228)450                BAS   R11,CTD_CALL
0003B8                                    (1/229)451          ELSE 
0003B8 47F0D3BA                0003C2      (9/40)454+        B      #@IF_3_E
0003BC                                     (9/41)455+#@IF_3_20                                                DS 0H
0003BC 41F0000C                           (1/230)457                LA   R15,12
0003C0 07FC                               (1/231)458                BR   R12
0003C2                                    (1/232)459          ENDIF 
0003C2                                    (10/23)462+#@IF_3_E                         DS 0H
0003C2 07FC                               (1/233)464          BR    R12
0003C4                                    (1/234)465 *********************************************************************
0003C4                                    (1/235)466 * Level_3_E
#@DO_3_1                         DS 0H
*MEXIT #=   139 LV= 1 DO
               AHI  R5,1
               AHI  R0,1
*MCALL #=   145 LV= 1          ENDDO 
*MCALL #=   146 LV= 2          DO    END
*MCALL #=   147 LV= 3          ZSTREQU 
*MEXIT #=   147 LV= 3 ZSTREQU
         B     #@DO_3_T
#@DO_3_E                         DS 0H
*MEXIT #=   146 LV= 2 DO
*MEXIT #=   145 LV= 1 ENDDO
         STC   R0,FpconStringSize+1
         MVC   FpconStringLen,FpconStringSize
         MVI   FpconFlags,FpconToValue
*
*   CALL FPCONVRT TO CONVERT DECIMAL STRING TO FP FORMAT
*
*MCALL #=   148 LV= 1          FPCON_CALL 
         SGR   R1,R1             CLEAR HIGH BITS RPI 829
         LA    R1,=AD(FPCON)     R1 > 64 BIT ADDR
         LG    R15,=VD(FPCONVRT)
         ST    R13,MYSAVE        SAVE CALLERS 18F SAVE AREA
         LA    R13,BIGSAVE       FORMAT 4 - 18FD SAVE AREA
         BASR  R14,R15           CALL USING BIG SAVE AREA
         L     R13,MYSAVE-*(R14) RESTORE CALLERS SAVE AREA
*MEXIT #=   148 LV= 1 FPCON_CALL
         BR    R11
*
* CTD CALL INTERFACE TO FPCONVRT
*
CTD_CALL EQU *
*
*     SET STRING ADDR, SIZE, AND LENGTH PLUS FLAGS AND BASE
*
         STG         R5,FpconStringAddr  SET FPCON STRING ADDR 32/64
         MVI   FpconStringSize+1,LBUFF
         MVC   FpconStringLen,FpconStringSize
         MVI   FpconFlags,FpconToValue-FpconToValue  to decimal
*
*   CALL FPCONVRT TO CONVERT DECIMAL STRING TO BFP FORMAT
*
*MCALL #=   149 LV= 1          FPCON_CALL 
         SGR   R1,R1             CLEAR HIGH BITS RPI 829
         LA    R1,=AD(FPCON)     R1 > 64 BIT ADDR
         LG    R15,=VD(FPCONVRT)
         ST    R13,MYSAVE        SAVE CALLERS 18F SAVE AREA
         LA    R13,BIGSAVE       FORMAT 4 - 18FD SAVE AREA
         BASR  R14,R15           CALL USING BIG SAVE AREA
         L     R13,MYSAVE-*(R14) RESTORE CALLERS SAVE AREA
*MEXIT #=   149 LV= 1 FPCON_CALL
         TR    0(LBUFF,R5),TRTAB_NULL_SPACE OUTPUT NULLS > SPACES
         BR    R11
*********************************************************************
* Level 3 support routines using R10
*********************************************************************
*
* ADD DECIMAL POWER OF 2 TO DECIMAL FIELD WITH AT R6
*
CTD_ADD_POWER EQU *
         LA    R7,POWER+LBUFF-1
         SR    R3,R3                      R3=CARRY IF ANY
*MCALL #=   150 LV= 1          DO    UNTIL=((CLI,0(R7),EQ,C' '),AND,(LTX
               R,R3,Z,R3))
*MCALL #=   151 LV= 2          ZSTREQU 
*MEXIT #=   151 LV= 2 ZSTREQU
         B     #@DO_4_1
#@DO_4_T                         DS 0H
*MCALL #=   152 LV= 2          IF    (CLI,0(R7),EQ,C' '),AND,(LTR,R3,Z,X
               R3)
*MCALL #=   153 LV= 3          ZSTREQU 
*MEXIT #=   153 LV= 3 ZSTREQU
         CLI   0(R7),C' '
         BC    15-EQ,#@IF_20_2
         LTR   R3,R3
         BC    15-Z,#@IF_20_2
*MEXIT #=   152 LV= 2 IF
               B     #@DO_4_E
*MCALL #=   154 LV= 2          ENDIF 
*MCALL #=   155 LV= 3          ZSTREQU 
*MEXIT #=   155 LV= 3 ZSTREQU
#@IF_20_2                                                DS 0H
*MEXIT #=   154 LV= 2 ENDIF
#@DO_4_1                         DS 0H
*MEXIT #=   150 LV= 1 DO
               IC    R0,0(R6)
               NILF  R0,X'0000000F'
               IC    R1,0(R7)
               NILF  R1,X'0000000F'
               AR    R0,R1
               AR    R0,R3
*MCALL #=   156 LV= 1                IF    (CHI,R0,GT,9)
*MCALL #=   157 LV= 2          ZSTREQU 
*MEXIT #=   157 LV= 2 ZSTREQU
         CHI   R0,9
         BC    15-GT,#@IF_21_2
*MEXIT #=   156 LV= 1 IF
                     LA   R3,1           CARRY
                     AHI  R0,-10
*MCALL #=   158 LV= 1                ELSE 
*MCALL #=   159 LV= 2          ZSTREQU 
*MEXIT #=   159 LV= 2 ZSTREQU
        B      #@IF_21_E
#@IF_21_2                                                DS 0H
*MEXIT #=   158 LV= 1 ELSE
                     LA   R3,0           NO CARRY
*MCALL #=   160 LV= 1                ENDIF 
*MCALL #=   161 LV= 2          ZSTREQU 
*MEXIT #=   161 LV= 2 ZSTREQU
#@IF_21_E                        DS 0H
*MEXIT #=   160 LV= 1 ENDIF
               OILL R0,X'F0'
               STC  R0,0(R6)
               BCTR R6,0
               BCTR R7,0
*MCALL #=   162 LV= 1          ENDDO 
*MCALL #=   163 LV= 2          DO    END
*MCALL #=   164 LV= 3          ZSTREQU 
*MEXIT #=   164 LV= 3 ZSTREQU
         B     #@DO_4_T
#@DO_4_E                         DS 0H
*MEXIT #=   163 LV= 2 DO
*MEXIT #=   162 LV= 1 ENDDO
         BR    R10
*
* COMPLIMENT 128 BIT INT IN R8:R9
*
COMP128  EQU   *
         LG    R7,=FL8'-1'
         XGR   R8,R7
         XGR   R9,R7
         ALGF  R9,=F'1'
         ALCG  R8,=FL8'0'  R8-R9 = ABS NUM
         BR    R10
*********************************************************************
* Shared data
*********************************************************************
*
* SHARED DATA
*
MYSAVE   DC    A(0)
BIGSAVE  DC    18D'0' FOR ARCH=5 GREG SAVE AREA
INT_1E26 DC    FL16'1E26' MULTIPLIER FOR FIRST 1-13 DIGITS
         LTORG 
*MCALL #=   165 LV= 1          EQUREGS REGS=GPR
R0     EQU 0
R1     EQU 1
R2     EQU 2
R3     EQU 3
R4     EQU 4
R5     EQU 5
R6     EQU 6
R7     EQU 7
R8     EQU 8
R9     EQU 9
R10    EQU 10
R11    EQU 11
R12    EQU 12
R13    EQU 13
R14    EQU 14
R15    EQU 15
*MEXIT #=   165 LV= 1 EQUREGS
*MCALL #=   166 LV= 1          EQUREGS REGS=FPR
F0     EQU 0
F1     EQU 1
F2     EQU 2
F3     EQU 3
F4     EQU 4
F5     EQU 5
F6     EQU 6
F7     EQU 7
F8     EQU 8
F9     EQU 9
F10    EQU 10
F11    EQU 11
F12    EQU 12
F13    EQU 13
F14    EQU 14
F15    EQU 15
*MEXIT #=   166 LV= 1 EQUREGS
TYPE     DC    X'00' CTD/CFD OPERATION TYPE
SIGN     DC    C'+'  SIGN OF DECIMAL NUMBER
PWORK    DC    PL16'0'
DWORK    DC    CL32' '
DMASK    DC    C' ',31X'20'
POWER    DC    CL(LBUFF)' '
ASIGN    DC    A(0)
TRTTAB_DIGITS DC 256X'00'
         ORG   TRTTAB_DIGITS+C'0'
         DC    10X'FF'
         ORG 
TRTTAB_MINUS  DC 256X'00'
         ORG TRTTAB_MINUS+C'-'
         DC  X'FF'
         ORG 
TRTTAB_SPACE DC  256X'00'
         ORG TRTTAB_SPACE+C' '
         DC  X'FF'
         ORG 
TRTTAB_NOT_SPACE DC  256X'FF'
         ORG TRTTAB_NOT_SPACE+C' '
         DC  X'00'
         ORG 
TRTAB_NULL_SPACE DC 256AL1(*-TRTAB_NULL_SPACE)
         ORG TRTAB_NULL_SPACE+X'00'
         DC  C' '
         ORG 
*
* ASSEMBLE INLINE FPCONVRT INTERFACE BLOCK PASSED VIA R1
*
ADRCHK   DC    A(FPCON)
*MCALL #=   167 LV= 1          FPCONVRT Type=InLine,Archlvl=7 MUST MATCX
               H FPCONVRT.MLC
Fpcon           DS 0D          Floating Point Conversion Request Block
FpconSave       DS 18FD           Save area used by FPCONVRT
FpconValueE     DS 0E              Short floating point value
FpconValueD     DS 0D              Long floating point value
FpconValueL     DS L               Extended floating point value
FpconStringAddr DS AD             Address of string buffer
FpconReturnCode DS F               Return code (output)
FpconRetOk     EQU 0                   Success
FpconRetUndFlo EQU 4                   String value is too small
FpconRetDenorm EQU 4                   FP value is denormalized
FpconRetOvrFlo EQU 8                   String value is too big
FpconRetInf    EQU 8                   IEEE FP value is an infinity
FpconRetNan    EQU 12                  IEEE FP value is a NAN
FpconRetBadStr EQU 12                  Invalid floating point string
FpconRetBadPrm EQU 16                  Invalid parameters
FpconStringSize DS H               Size of string buffer
FpconStringLen  DS H               Length of string (output)
*                                  Offset to bad character (RetBadStr)
FpconMaxDigits  DS H               Maximum non-zero digits generated
FpconMaxLeading DS H               Maximum digits before decimal point
FpconMinDecimal DS H               Minimum digits after decimal point
FpconMaxDecimal DS H               Maximum digits after decimal point
FpconMinExpon   DS H               Minimum exponent digits
FpconExponent10 DS H               Base 10 exponent (output)
FpconValueLen   DS FL1             Length of floating point value (in)
FpconValueLenE EQU 4                   Short
FpconValueLenD EQU 8                   Long
FpconValueLenL EQU 16                  Extended
FpconBase       DS FL1             Base of floating point value (in)
FpconBase2     EQU 2                   Binary IEEE-754 (default)
FpconBase10    EQU 10                  Decimal (IEEE-754r)
FpconBase16    EQU 16                  Hexadecimal S/360
FpconFlags      DS X               Flags (in)
FpconToValue   EQU X'40'               Convert string to value
*                                      (otherwise convert to string)
FpconValuePlus EQU X'20'               If leading mantissa plus sign
FpconExponPlus EQU X'10'               If leading exponent plus sign
FpconZeroPlus  EQU X'08'               If zero is always positive
FpconZeroSign  EQU X'04'               If zero can be negative
FpconFixedDec  EQU X'02'               Round decimals to fit
FpconRetDigits EQU X'01'               Return digits only (ecvt/fcvt)
FpconZero       DS C               ASCII or EBCDIC '0' character
FpconPlus       DS C               ASCII or EBCDIC '+' character
FpconMinus      DS C               ASCII or EBCDIC '-' character
FpconDecimal    DS C               ASCII or EBCDIC decimal point char.
FpconExponent   DS C               Exponent character
FpconExpAlt     DS C               Alternate exponent character
                DS 3C              (Set/used by FPCONVRT)
                DS 0d              Align to doubleword
FpconWork       DS XL2096          Internal work area
FpconEnd        DS 0d              End of request block
FpconLength    EQU *-Fpcon          length of request block
***********************************************************************
*MEXIT #=   167 LV= 1 FPCONVRT
         END 
506                                    (10/20)627+#@IF_10_2                                                DS 0H
000506                                    (1/320)629          IF  (LTGR,R8,Z,R8),AND,(LTGR,R9,NM,R9)
000506 B9020088                            (6/47)632+         LTGR  R8,R8
00050A 4770D540                000548      (6/49)633+         BC    15-Z,#@IF_11_2
00050E B9020099                            (6/47)634+         LTGR  R9,R9
000512 4740D540                000548      (6/49)635+         BC    15-NM,#@IF_11_2
000516                                    (1/321)637 *
000516                                    (1/322)638 *              USE PACKED DECIMAL IF LESS THAN 64 BITS
000516                                    (1/323)639 *
000516 E390D82A002E            000832     (1/324)640                CVDG R9,PWORK
00051C D21FD83AD85A     000842 000862     (1/325)641                MVC  DWORK,DMASK
000522 1B11                               (1/326)642                SR   R1,R1
000524 DF1FD83AD82A     000842 000832     (1/327)643                EDMK DWORK,PWORK
00052A                                    (1/328)644                IF   (CLI,SIGN,EQ,C'-'),AND,(LTR,R1,NZ,R1)
00052A 9560D829                000831      (6/47)648+         CLI   SIGN,C'-'
00052E 4770D536                00053E      (6/49)649+         BC    15-EQ,#@IF_12_2
000532 1211                                (6/47)650+         LTR   R1,R1
000534 4780D536                00053E      (6/49)651+         BC    15-NZ,#@IF_12_2
000538 0610                               (1/329)653                     BCTR R1,0
00053A 92601000                           (1/330)654                     MVI  0(R1),C'-'
00053E                                    (1/331)655                ENDIF 
00053E                                    (10/20)658+#@IF_12_2                                                DS 0H
00053E D21F500DD83A            000842     (1/332)660                MVC  LBUFF-32(L'DWORK,R5),DWORK
000544                                    (1/333)661          ELSE 
000544 47F0D5BE                0005C6      (9/40)664+        B      #@IF_11_E
000548                                     (9/41)665+#@IF_11_2                                                DS 0H
000548                                    (1/334)667 *
000548                                    (1/335)668 *             SHIFT ALL 64 TO 128 BITS OUT AND ADD POWER
000548                                    (1/336)669 *             OF 2 TO DECIMAL COUNTER WHEN BIT IS ONE
000548                                    (1/337)670 *
000548                                    (1/338)671               DO   WHILE=((LTGR,R8,NZ,R8),OR,(LTGR,R9,NZ,R9))
000548                                    (14/63)675+#@DO_1_T                         DS 0H
000548 B9020088                            (6/47)679+         LTGR  R8,R8
00054C 4780D54C                000554      (6/49)680+         BC    15-NZ,#@IF_13_2
000550 47F0D554                00055C      (6/66)681+         B     #@IF_13_1
000554                                     (6/51)682+#@IF_13_2                                                DS 0H
000554 B9020099                            (6/54)683+         LTGR  R9,R9
000558 4780D558                000560      (6/56)684+         BC    15-NZ,#@IF_13_3
00055C                                     (6/82)685+#@IF_13_1                               DS 0H
00055C 47F0D55C                000564     (14/66)687+               B   #@DO_1_1
000560                                    (10/20)691+#@IF_13_3                                                DS 0H
000560 47F0D5A4                0005AC     (14/68)693+         B     #@DO_1_E
000564                                    (14/69)694+#@DO_1_1                         DS 0H
000564                                    (1/339)696                   IF (TMLL,R9,NZ,1)
000564 A7910001                            (6/47)699+         TMLL  R9,1
000568 4780D570                000578      (6/49)700+         BC    15-NZ,#@IF_14_2
00056C 4165002C                           (1/340)702                      LA   R6,LBUFF-1(R5)
000570 4DA0D692                00069A     (1/341)703                      BAS  R10,CTD_ADD_POWER
000574 5060D8A8                0008B0     (1/342)704                      ST   R6,ASIGN   ADDR TO SET SIGN IF NEG
000578                                    (1/343)705                   ENDIF 
000578                                    (10/20)708+#@IF_14_2                                                DS 0H
000578 4160D8A6                0008AE     (1/344)710                   LA   R6,POWER+LBUFF-1
00057C 45A0D692                00069A     (1/345)711                   BAL  R10,CTD_ADD_POWER
000580                                    (1/346)712                   IF   (TMLL,R8,NZ,1)    SHIFT R8:R9 BY 1 BIT
000580 A7810001                            (6/47)716+         TMLL  R8,1
000584 4780D594                00059C      (6/49)717+         BC    15-NZ,#@IF_15_2
000588 EB880001000C                       (1/347)719                        SRLG R8,R8,1
00058E EB990001000C                       (1/348)720                        SRLG R9,R9,1
000594 A5988000                           (1/349)721                        OIHH R9,X'8000'
000598                                    (1/350)722                   ELSE 
000598 47F0D5A0                0005A8      (9/40)725+        B      #@IF_15_E
00059C                                     (9/41)726+#@IF_15_2                                                DS 0H
00059C EB880001000C                       (1/351)728                        SRLG R8,R8,1
0005A2 EB990001000C                       (1/352)729                        SRLG R9,R9,1
0005A8                                    (1/353)730                   ENDIF 
0005A8                                    (10/23)733+#@IF_15_E                        DS 0H
0005A8                                    (1/354)735               ENDDO 
0005A8 47F0D540                000548     (14/55)739+         B     #@DO_1_T
0005AC                                    (14/56)740+#@DO_1_E                         DS 0H
0005AC                                    (1/355)743               IF  (CLI,SIGN,EQ,C'-'),AND,(CLC,ASIGN,P,=F'0')
0005AC 9560D829                000831      (6/47)747+         CLI   SIGN,C'-'
0005B0 4770D5BE                0005C6      (6/49)748+         BC    15-EQ,#@IF_16_2
0005B4 D503D8A8D7E8     0008B0 0007F0      (6/47)749+         CLC   ASIGN,=F'0'
0005BA 47D0D5BE                0005C6      (6/49)750+         BC    15-P,#@IF_16_2
0005BE 5810D8A8                0008B0     (1/356)752                   L    R1,ASIGN
0005C2 92601000                           (1/357)753                   MVI 0(R1),C'-'
0005C6                                    (1/358)754               ENDIF 
0005C6                                    (10/20)757+#@IF_16_2                                                DS 0H
0005C6                                    (1/359)759          ENDIF 
0005C6                                    (10/23)762+#@IF_11_E                        DS 0H
0005C6 96F0502C                           (1/360)764          OI   LBUFF-1(R5),X'F0'
0005CA                                    (1/361)765          IF   (TRT,0(LBUFF,R5),NZ,TRTTAB_NOT_SPACE)
0005CA DD2C5000DBAC            000BB4      (6/47)769+         TRT   0(LBUFF,R5),TRTTAB_NOT_SPACE
0005D0 4780D5E0                0005E8      (6/49)770+         BC    15-NZ,#@IF_17_2
0005D4 1881                               (1/362)772               LR  R8,R1
0005D6 4195002D                           (1/363)773               LA  R9,LBUFF(R5)
0005DA 1B98                               (1/364)774               SR  R9,R8
0005DC BF98D827                00082F     (1/365)775               ICM R9,8,=C' '
0005E0 1805                               (1/366)776               LR  R0,R5
0005E2 4110002D                           (1/367)777               LA  R1,LBUFF
0005E6 0E08                               (1/368)778               MVCL R0,R8 MOVE DISPLAY TO FRONT AND PAD WITH SPACES
0005E8                                    (1/369)779          ENDIF 
0005E8                                    (10/20)782+#@IF_17_2                                                DS 0H
0005E8 07FB                               (1/370)784          BR   R11
0005EA                                    (1/371)785 *
0005EA                                    (1/372)786 * CFD CALL INTERFACE TO FPCONVRT
0005EA                                    (1/373)787 *
0005EA                  000005EA          (1/374)788 CFD_CALL EQU *
0005EA                                    (1/375)789 *
0005EA                                    (1/376)790 *     SET STRING ADDR, SIZE, AND LENGTH PLUS FLAGS AND BASE
0005EA                                    (1/377)791 *
0005EA 4165002D                           (1/378)792          LA    R6,LBUFF(R5)
0005EE                                    (1/379)793          DO    WHILE=((CLR,R5,LT,R6),AND,(CLI,0(R5),EQ,C' '))
0005EE                                    (14/63)797+#@DO_2_T                         DS 0H
0005EE 1556                                (6/47)802+         CLR   R5,R6
0005F0 47B0D5F8                000600      (6/49)803+         BC    15-LT,#@IF_18_2
0005F4 95405000                            (6/47)804+         CLI   0(R5),C' '
0005F8 4770D5F8                000600      (6/49)805+         BC    15-EQ,#@IF_18_2
0005FC 47F0D5FC                000604     (14/66)807+               B   #@DO_2_1
000600                                    (10/20)811+#@IF_18_2                                                DS 0H
000600 47F0D604                00060C     (14/68)813+         B     #@DO_2_E
000604                                    (14/69)814+#@DO_2_1                         DS 0H
000604 41550001                           (1/380)816                LA   R5,1(R5)
000608                                    (1/381)817          ENDDO 
000608 47F0D5E6                0005EE     (14/55)821+         B     #@DO_2_T
00060C                                    (14/56)822+#@DO_2_E                         DS 0H
00060C E350DE500024            000E58     (1/382)825          STG         R5,FpconStringAddr SET FPCON 32/64 BIT ADDR
000612 1B00                               (1/383)826          SR    R0,R0
000614                                    (1/384)827          DO    WHILE=((CLR,R5,LT,R6),AND,(CLI,0(R5),GT,C' '))
000614                                    (14/63)831+#@DO_3_T                         DS 0H
000614 1556                                (6/47)836+         CLR   R5,R6
000616 47B0D61E                000626      (6/49)837+         BC    15-LT,#@IF_19_2
00061A 95405000                            (6/47)838+         CLI   0(R5),C' '
00061E 47D0D61E                000626      (6/49)839+         BC    15-GT,#@IF_19_2
000622 47F0D622                00062A     (14/66)841+               B   #@DO_3_1
000626                                    (10/20)845+#@IF_19_2                                                DS 0H
000626 47F0D62E                000636     (14/68)847+         B     #@DO_3_E
00062A                                    (14/69)848+#@DO_3_1                         DS 0H
00062A A75A0001                           (1/385)850                AHI  R5,1
00062E A70A0001                           (1/386)851                AHI  R0,1
000632                                    (1/387)852          ENDDO 
000632 47F0D60C                000614     (14/55)856+         B     #@DO_3_T
000636                                    (14/56)857+#@DO_3_E                         DS 0H
000636 4200DE5D                000E65     (1/388)860          STC   R0,FpconStringSize+1
00063A D201DE5EDE5C     000E66 000E64     (1/389)861          MVC   FpconStringLen,FpconStringSize
000640 9240DE6E                000E76     (1/390)862          MVI   FpconFlags,FpconToValue
000644                                    (1/391)863 *
000644                                    (1/392)864 *   CALL FPCONVRT TO CONVERT DECIMAL STRING TO FP FORMAT
000644                                    (1/393)865 *
000644                                    (1/394)866          FPCON_CALL 
000644 B9090011                            (1/45)867+         SGR   R1,R1             CLEAR HIGH BITS RPI 829
000648 4110D7B8                0007C0      (1/46)868+         LA    R1,=AD(FPCON)     R1 > 64 BIT ADDR
00064C E3F0D7C00004            0007C8      (1/47)869+         LG    R15,=VD(FPCONVRT)
000652 50D0D70C                000714      (1/48)870+         ST    R13,MYSAVE        SAVE CALLERS 18F SAVE AREA
000656 41D0D710                000718      (1/49)871+         LA    R13,BIGSAVE       FORMAT 4 - 18FD SAVE AREA
00065A 0DEF                                (1/50)872+         BASR  R14,R15           CALL USING BIG SAVE AREA
00065C 58DE00B8                            (1/51)873+         L     R13,MYSAVE-*(R14) RESTORE CALLERS SAVE AREA
000660 07FB                               (1/395)875          BR    R11
000662                                    (1/396)876 *
000662                                    (1/397)877 * CTD CALL INTERFACE TO FPCONVRT
000662                                    (1/398)878 *
000662                  00000662          (1/399)879 CTD_CALL EQU *
000662                                    (1/400)880 *
000662                                    (1/401)881 *     SET STRING ADDR, SIZE, AND LENGTH PLUS FLAGS AND BASE
000662                                    (1/402)882 *
000662 E350DE500024            000E58     (1/403)883          STG         R5,FpconStringAddr  SET FPCON STRING ADDR 32/64
000668 922DDE5D                000E65     (1/404)884          MVI   FpconStringSize+1,LBUFF
00066C D201DE5EDE5C     000E66 000E64     (1/405)885          MVC   FpconStringLen,FpconStringSize
000672 9200DE6E                000E76     (1/406)886          MVI   FpconFlags,FpconToValue-FpconToValue  to decimal
000676                                    (1/407)887 *
000676                                    (1/408)888 *   CALL FPCONVRT TO CONVERT DECIMAL STRING TO BFP FORMAT
000676                                    (1/409)889 *
000676                                    (1/410)890          FPCON_CALL 
000676 B9090011                            (1/45)891+         SGR   R1,R1             CLEAR HIGH BITS RPI 829
00067A 4110D7B8                0007C0      (1/46)892+         LA    R1,=AD(FPCON)     R1 > 64 BIT ADDR
00067E E3F0D7C00004            0007C8      (1/47)893+         LG    R15,=VD(FPCONVRT)
000684 50D0D70C                000714      (1/48)894+         ST    R13,MYSAVE        SAVE CALLERS 18F SAVE AREA
000688 41D0D710                000718      (1/49)895+         LA    R13,BIGSAVE       FORMAT 4 - 18FD SAVE AREA
00068C 0DEF                                (1/50)896+         BASR  R14,R15           CALL USING BIG SAVE AREA
00068E 58DE0086                            (1/51)897+         L     R13,MYSAVE-*(R14) RESTORE CALLERS SAVE AREA
000692 DC2C5000DCAC            000CB4     (1/411)899          TR    0(LBUFF,R5),TRTAB_NULL_SPACE OUTPUT NULLS > SPACES
000698 07FB                               (1/412)900          BR    R11
00069A                                    (1/413)901 *********************************************************************
00069A                                    (1/414)902 * Level 3 support routines using R10
00069A                                    (1/415)903 *********************************************************************
00069A                                    (1/416)904 *
00069A                                    (1/417)905 * ADD DECIMAL POWER OF 2 TO DECIMAL FIELD WITH AT R6
00069A                                    (1/418)906 *
00069A                  0000069A          (1/419)907 CTD_ADD_POWER EQU *
00069A 4170D8A6                0008AE     (1/420)908          LA    R7,POWER+LBUFF-1
00069E 1B33                               (1/421)909          SR    R3,R3                      R3=CARRY IF ANY
0006A0                                    (1/422)910          DO    UNTIL=((CLI,0(R7),EQ,C' '),AND,(LTR,R3,Z,R3))
0006A0 47F0D6AE                0006B6     (14/75)914+         B     #@DO_4_1
0006A4                                    (14/76)915+#@DO_4_T                         DS 0H
0006A4 95407000                            (6/47)920+         CLI   0(R7),C' '
0006A8 4770D6AE                0006B6      (6/49)921+         BC    15-EQ,#@IF_20_2
0006AC 1233                                (6/47)922+         LTR   R3,R3
0006AE 4770D6AE                0006B6      (6/49)923+         BC    15-Z,#@IF_20_2
0006B2 47F0D6EE                0006F6     (14/79)925+               B     #@DO_4_E
0006B6                                    (10/20)929+#@IF_20_2                                                DS 0H
0006B6                                    (14/81)931+#@DO_4_1                         DS 0H
0006B6 43060000                           (1/423)933                IC    R0,0(R6)
0006BA C00B0000000F            00000F     (1/424)934                NILF  R0,X'0000000F'
0006C0 43170000                           (1/425)935                IC    R1,0(R7)
0006C4 C01B0000000F            00000F     (1/426)936                NILF  R1,X'0000000F'
0006CA 1A01                               (1/427)937                AR    R0,R1
0006CC 1A03                               (1/428)938                AR    R0,R3
0006CE                                    (1/429)939                IF    (CHI,R0,GT,9)
0006CE A70E0009                            (6/47)942+         CHI   R0,9
0006D2 47D0D6DA                0006E2      (6/49)943+         BC    15-GT,#@IF_21_2
0006D6 41300001                           (1/430)945                      LA   R3,1           CARRY
0006DA A70AFFF6                           (1/431)946                      AHI  R0,-10
0006DE                                    (1/432)947                ELSE 
0006DE 47F0D6DE                0006E6      (9/40)950+        B      #@IF_21_E
0006E2                                     (9/41)951+#@IF_21_2                                                DS 0H
0006E2 41300000                           (1/433)953                      LA   R3,0           NO CARRY
0006E6                                    (1/434)954                ENDIF 
0006E6                                    (10/23)957+#@IF_21_E                        DS 0H
0006E6 A50B00F0                           (1/435)959                OILL R0,X'F0'
0006EA 42060000                           (1/436)960                STC  R0,0(R6)
0006EE 0660                               (1/437)961                BCTR R6,0
0006F0 0670                               (1/438)962                BCTR R7,0
0006F2                                    (1/439)963          ENDDO 
0006F2 47F0D69C                0006A4     (14/55)967+         B     #@DO_4_T
0006F6                                    (14/56)968+#@DO_4_E                         DS 0H
0006F6 07FA                               (1/440)971          BR    R10
0006F8                                    (1/441)972 *
0006F8                                    (1/442)973 * COMPLIMENT 128 BIT INT IN R8:R9
0006F8                                    (1/443)974 *
0006F8                  000006F8          (1/444)975 COMP128  EQU   *
0006F8 E370D7C80004            0007D0     (1/445)976          LG    R7,=FL8'-1'
0006FE B9820087                           (1/446)977          XGR   R8,R7
000702 B9820097                           (1/447)978          XGR   R9,R7
000706 E390D7EC001A            0007F4     (1/448)979          ALGF  R9,=F'1'
00070C E380D7D00088            0007D8     (1/449)980          ALCG  R8,=FL8'0'  R8-R9 = ABS NUM
000712 07FA                               (1/450)981          BR    R10
000714                                    (1/451)982 *********************************************************************
000714                                    (1/452)983 * Shared data
000714                                    (1/453)984 *********************************************************************
000714                                    (1/454)985 *
000714                                    (1/455)986 * SHARED DATA
000714                                    (1/456)987 *
000714 00000000                           (1/457)988 MYSAVE   DC    A(0)
000718 0000000000000000                   (1/458)989 BIGSAVE  DC    18D'0' FOR ARCH=5 GREG SAVE AREA
000720 0000000000000000
000728 0000000000000000
000730 0000000000000000
000738 0000000000000000
000740 0000000000000000
000748 0000000000000000
000750 0000000000000000
000758 0000000000000000
000760 0000000000000000
000768 0000000000000000
000770 0000000000000000
000778 0000000000000000
000780 0000000000000000
000788 0000000000000000
000790 0000000000000000
000798 0000000000000000
0007A0 0000000000000000
0007A8 000000000052B7D2                   (1/459)990 INT_1E26 DC    FL16'1E26' MULTIPLIER FOR FIRST 1-13 DIGITS
0007B0 DCC80CD2E4000000
0007B8                                    (1/460)991          LTORG 
0007B8 000009184E72A000 =FL8'1E13'
0007C0 0000000000000DB8 =AD(FPCON)
0007C8 0000000000000000 =VD(FPCONVRT)
0007D0 FFFFFFFFFFFFFFFF =FL8'-1'
0007D8 0000000000000000 =FL8'0'
0007E0 00000DB8000008F8 =A(Fpcon,FpconLength,0,0)
0007E8 0000000000000000
0007F0 00000000         =F'0'
0007F4 00000001         =F'1'
0007F8 0007             =H'7'
0007FA FFFF             =H'-1'
0007FC 000F             =H'15'
0007FE 0022             =H'34'
000800 0010             =H'16'
000802 4040404040404040 =(LBUFF)C' '
00080A 4040404040404040
000812 4040404040404040
00081A 4040404040404040
000822 4040404040404040
00082A 4040404040
00082F 40               =C' '
000830                                    (1/461)992          EQUREGS REGS=GPR
000830                  00000000          (16/41)993+R0     EQU 0
000830                  00000001          (16/41)994+R1     EQU 1
000830                  00000002          (16/41)995+R2     EQU 2
000830                  00000003          (16/41)996+R3     EQU 3
000830                  00000004          (16/41)997+R4     EQU 4
000830                  00000005          (16/41)998+R5     EQU 5
000830                  00000006          (16/41)999+R6     EQU 6
000830                  00000007         (16/41)1000+R7     EQU 7
000830                  00000008         (16/41)1001+R8     EQU 8
000830                  00000009         (16/41)1002+R9     EQU 9
000830                  0000000A         (16/41)1003+R10    EQU 10
000830                  0000000B         (16/41)1004+R11    EQU 11
000830                  0000000C         (16/41)1005+R12    EQU 12
000830                  0000000D         (16/41)1006+R13    EQU 13
000830                  0000000E         (16/41)1007+R14    EQU 14
000830                  0000000F         (16/41)1008+R15    EQU 15
000830                                   (1/462)1010          EQUREGS REGS=FPR
000830                  00000000         (16/41)1011+F0     EQU 0
000830                  00000001         (16/41)1012+F1     EQU 1
000830                  00000002         (16/41)1013+F2     EQU 2
000830                  00000003         (16/41)1014+F3     EQU 3
000830                  00000004         (16/41)1015+F4     EQU 4
000830                  00000005         (16/41)1016+F5     EQU 5
000830                  00000006         (16/41)1017+F6     EQU 6
000830                  00000007         (16/41)1018+F7     EQU 7
000830                  00000008         (16/41)1019+F8     EQU 8
000830                  00000009         (16/41)1020+F9     EQU 9
000830                  0000000A         (16/41)1021+F10    EQU 10
000830                  0000000B         (16/41)1022+F11    EQU 11
000830                  0000000C         (16/41)1023+F12    EQU 12
000830                  0000000D         (16/41)1024+F13    EQU 13
000830                  0000000E         (16/41)1025+F14    EQU 14
000830                  0000000F         (16/41)1026+F15    EQU 15
000830 00                                (1/463)1028 TYPE     DC    X'00' CTD/CFD OPERATION TYPE
000831 4E                                (1/464)1029 SIGN     DC    C'+'  SIGN OF DECIMAL NUMBER
000832 0000000000000000                  (1/465)1030 PWORK    DC    PL16'0'
00083A 000000000000000C
000842 4040404040404040                  (1/466)1031 DWORK    DC    CL32' '
00084A 4040404040404040
000852 4040404040404040
00085A 4040404040404040
000862 4020202020202020                  (1/467)1032 DMASK    DC    C' ',31X'20'
00086A 2020202020202020
000872 2020202020202020
00087A 2020202020202020
000882 4040404040404040                  (1/468)1033 POWER    DC    CL(LBUFF)' '
00088A 4040404040404040
000892 4040404040404040
00089A 4040404040404040
0008A2 4040404040404040
0008AA 4040404040
0008B0 00000000                          (1/469)1034 ASIGN    DC    A(0)
0008B4 0000000000000000                  (1/470)1035 TRTTAB_DIGITS DC 256X'00'
0008BC 0000000000000000
0008C4 0000000000000000
0008CC 0000000000000000
0008D4 0000000000000000
0008DC 0000000000000000
0008E4 0000000000000000
0008EC 0000000000000000
0008F4 0000000000000000
0008FC 0000000000000000
000904 0000000000000000
00090C 0000000000000000
000914 0000000000000000
00091C 0000000000000000
000924 0000000000000000
00092C 0000000000000000
000934 0000000000000000
00093C 0000000000000000
000944 0000000000000000
00094C 0000000000000000
000954 0000000000000000
00095C 0000000000000000
000964 0000000000000000
00096C 0000000000000000
000974 0000000000000000
00097C 0000000000000000
000984 0000000000000000
00098C 0000000000000000
000994 0000000000000000
00099C 0000000000000000
0009A4 0000000000000000
0009AC 0000000000000000
0009B4                  0009A4           (1/471)1036          ORG   TRTTAB_DIGITS+C'0'
0009A4 FFFFFFFFFFFFFFFF                  (1/472)1037          DC    10X'FF'
0009AC FFFF
0009AE                  0009B4           (1/473)1038          ORG 
0009B4 0000000000000000                  (1/474)1039 TRTTAB_MINUS  DC 256X'00'
0009BC 0000000000000000
0009C4 0000000000000000
0009CC 0000000000000000
0009D4 0000000000000000
0009DC 0000000000000000
0009E4 0000000000000000
0009EC 0000000000000000
0009F4 0000000000000000
0009FC 0000000000000000
000A04 0000000000000000
000A0C 0000000000000000
000A14 0000000000000000
000A1C 0000000000000000
000A24 0000000000000000
000A2C 0000000000000000
000A34 0000000000000000
000A3C 0000000000000000
000A44 0000000000000000
000A4C 0000000000000000
000A54 0000000000000000
000A5C 0000000000000000
000A64 0000000000000000
000A6C 0000000000000000
000A74 0000000000000000
000A7C 0000000000000000
000A84 0000000000000000
000A8C 0000000000000000
000A94 0000000000000000
000A9C 0000000000000000
000AA4 0000000000000000
000AAC 0000000000000000
000AB4                  000A14           (1/475)1040          ORG TRTTAB_MINUS+C'-'
000A14 FF                                (1/476)1041          DC  X'FF'
000A15                  000AB4           (1/477)1042          ORG 
000AB4 0000000000000000                  (1/478)1043 TRTTAB_SPACE DC  256X'00'
000ABC 0000000000000000
000AC4 0000000000000000
000ACC 0000000000000000
000AD4 0000000000000000
000ADC 0000000000000000
000AE4 0000000000000000
000AEC 0000000000000000
000AF4 0000000000000000
000AFC 0000000000000000
000B04 0000000000000000
000B0C 0000000000000000
000B14 0000000000000000
000B1C 0000000000000000
000B24 0000000000000000
000B2C 0000000000000000
000B34 0000000000000000
000B3C 0000000000000000
000B44 0000000000000000
000B4C 0000000000000000
000B54 0000000000000000
000B5C 0000000000000000
000B64 0000000000000000
000B6C 0000000000000000
000B74 0000000000000000
000B7C 0000000000000000
000B84 0000000000000000
000B8C 0000000000000000
000B94 0000000000000000
000B9C 0000000000000000
000BA4 0000000000000000
000BAC 0000000000000000
000BB4                  000AF4           (1/479)1044          ORG TRTTAB_SPACE+C' '
000AF4 FF                                (1/480)1045          DC  X'FF'
000AF5                  000BB4           (1/481)1046          ORG 
000BB4 FFFFFFFFFFFFFFFF                  (1/482)1047 TRTTAB_NOT_SPACE DC  256X'FF'
000BBC FFFFFFFFFFFFFFFF
000BC4 FFFFFFFFFFFFFFFF
000BCC FFFFFFFFFFFFFFFF
000BD4 FFFFFFFFFFFFFFFF
000BDC FFFFFFFFFFFFFFFF
000BE4 FFFFFFFFFFFFFFFF
000BEC FFFFFFFFFFFFFFFF
000BF4 FFFFFFFFFFFFFFFF
000BFC FFFFFFFFFFFFFFFF
000C04 FFFFFFFFFFFFFFFF
000C0C FFFFFFFFFFFFFFFF
000C14 FFFFFFFFFFFFFFFF
000C1C FFFFFFFFFFFFFFFF
000C24 FFFFFFFFFFFFFFFF
000C2C FFFFFFFFFFFFFFFF
000C34 FFFFFFFFFFFFFFFF
000C3C FFFFFFFFFFFFFFFF
000C44 FFFFFFFFFFFFFFFF
000C4C FFFFFFFFFFFFFFFF
000C54 FFFFFFFFFFFFFFFF
000C5C FFFFFFFFFFFFFFFF
000C64 FFFFFFFFFFFFFFFF
000C6C FFFFFFFFFFFFFFFF
000C74 FFFFFFFFFFFFFFFF
000C7C FFFFFFFFFFFFFFFF
000C84 FFFFFFFFFFFFFFFF
000C8C FFFFFFFFFFFFFFFF
000C94 FFFFFFFFFFFFFFFF
000C9C FFFFFFFFFFFFFFFF
000CA4 FFFFFFFFFFFFFFFF
000CAC FFFFFFFFFFFFFFFF
000CB4                  000BF4           (1/483)1048          ORG TRTTAB_NOT_SPACE+C' '
000BF4 00                                (1/484)1049          DC  X'00'
000BF5                  000CB4           (1/485)1050          ORG 
000CB4 0001020304050607                  (1/486)1051 TRTAB_NULL_SPACE DC 256AL1(*-TRTAB_NULL_SPACE)
000CBC 08090A0B0C0D0E0F
000CC4 1011121314151617
000CCC 18191A1B1C1D1E1F
000CD4 2021222324252627
000CDC 28292A2B2C2D2E2F
000CE4 3031323334353637
000CEC 38393A3B3C3D3E3F
000CF4 4041424344454647
000CFC 48494A4B4C4D4E4F
000D04 5051525354555657
000D0C 58595A5B5C5D5E5F
000D14 6061626364656667
000D1C 68696A6B6C6D6E6F
000D24 7071727374757677
000D2C 78797A7B7C7D7E7F
000D34 8081828384858687
000D3C 88898A8B8C8D8E8F
000D44 9091929394959697
000D4C 98999A9B9C9D9E9F
000D54 A0A1A2A3A4A5A6A7
000D5C A8A9AAABACADAEAF
000D64 B0B1B2B3B4B5B6B7
000D6C B8B9BABBBCBDBEBF
000D74 C0C1C2C3C4C5C6C7
000D7C C8C9CACBCCCDCECF
000D84 D0D1D2D3D4D5D6D7
000D8C D8D9DADBDCDDDEDF
000D94 E0E1E2E3E4E5E6E7
000D9C E8E9EAEBECEDEEEF
000DA4 F0F1F2F3F4F5F6F7
000DAC F8F9FAFBFCFDFEFF
000DB4                  000CB4           (1/487)1052          ORG TRTAB_NULL_SPACE+X'00'
000CB4 40                                (1/488)1053          DC  C' '
000CB5                  000DB4           (1/489)1054          ORG 
000DB4                                   (1/490)1055 *
000DB4                                   (1/491)1056 * ASSEMBLE INLINE FPCONVRT INTERFACE BLOCK PASSED VIA R1
000DB4                                   (1/492)1057 *
000DB4 00000DB8                          (1/493)1058 ADRCHK   DC    A(FPCON)
000DB8                                   (1/494)1059          FPCONVRT Type=InLine,Archlvl=7 MUST MATCH FPCONVRT.MLC
000DB8                                  (17/156)1061+Fpcon           DS 0D          Floating Point Conversion Request Block
000DB8                                  (17/204)1062+FpconSave       DS 18FD           Save area used by FPCONVRT
000E48                                  (17/206)1063+FpconValueE     DS 0E              Short floating point value
000E48                                  (17/207)1064+FpconValueD     DS 0D              Long floating point value
000E48                                  (17/208)1065+FpconValueL     DS L               Extended floating point value
000E58                                  (17/209)1066+FpconStringAddr DS AD             Address of string buffer
000E60                                  (17/210)1067+FpconReturnCode DS F               Return code (output)
000E64                  00000000        (17/211)1068+FpconRetOk     EQU 0                   Success
000E64                  00000004        (17/212)1069+FpconRetUndFlo EQU 4                   String value is too small
000E64                  00000004        (17/213)1070+FpconRetDenorm EQU 4                   FP value is denormalized
000E64                  00000008        (17/214)1071+FpconRetOvrFlo EQU 8                   String value is too big
000E64                  00000008        (17/215)1072+FpconRetInf    EQU 8                   IEEE FP value is an infinity
000E64                  0000000C        (17/216)1073+FpconRetNan    EQU 12                  IEEE FP value is a NAN
000E64                  0000000C        (17/217)1074+FpconRetBadStr EQU 12                  Invalid floating point string
000E64                  00000010        (17/218)1075+FpconRetBadPrm EQU 16                  Invalid parameters
000E64                                  (17/219)1076+FpconStringSize DS H               Size of string buffer
000E66                                  (17/220)1077+FpconStringLen  DS H               Length of string (output)
000E68                                  (17/221)1078+*                                  Offset to bad character (RetBadStr)
000E68                                  (17/222)1079+FpconMaxDigits  DS H               Maximum non-zero digits generated
000E6A                                  (17/223)1080+FpconMaxLeading DS H               Maximum digits before decimal point
000E6C                                  (17/224)1081+FpconMinDecimal DS H               Minimum digits after decimal point
000E6E                                  (17/225)1082+FpconMaxDecimal DS H               Maximum digits after decimal point
000E70                                  (17/226)1083+FpconMinExpon   DS H               Minimum exponent digits
000E72                                  (17/230)1084+FpconExponent10 DS H               Base 10 exponent (output)
000E74                                  (17/231)1085+FpconValueLen   DS FL1             Length of floating point value (in)
000E75                  00000004        (17/232)1086+FpconValueLenE EQU 4                   Short
000E75                  00000008        (17/233)1087+FpconValueLenD EQU 8                   Long
000E75                  00000010        (17/234)1088+FpconValueLenL EQU 16                  Extended
000E75                                  (17/235)1089+FpconBase       DS FL1             Base of floating point value (in)
000E76                  00000002        (17/236)1090+FpconBase2     EQU 2                   Binary IEEE-754 (default)
000E76                  0000000A        (17/237)1091+FpconBase10    EQU 10                  Decimal (IEEE-754r)
000E76                  00000010        (17/238)1092+FpconBase16    EQU 16                  Hexadecimal S/360
000E76                                  (17/239)1093+FpconFlags      DS X               Flags (in)
000E77                  00000040        (17/240)1094+FpconToValue   EQU X'40'               Convert string to value
000E77                                  (17/241)1095+*                                      (otherwise convert to string)
000E77                  00000020        (17/242)1096+FpconValuePlus EQU X'20'               If leading mantissa plus sign
000E77                  00000010        (17/243)1097+FpconExponPlus EQU X'10'               If leading exponent plus sign
000E77                  00000008        (17/244)1098+FpconZeroPlus  EQU X'08'               If zero is always positive
000E77                  00000004        (17/245)1099+FpconZeroSign  EQU X'04'               If zero can be negative
000E77                  00000002        (17/246)1100+FpconFixedDec  EQU X'02'               Round decimals to fit
000E77                  00000001        (17/247)1101+FpconRetDigits EQU X'01'               Return digits only (ecvt/fcvt)
000E77                                  (17/248)1102+FpconZero       DS C               ASCII or EBCDIC '0' character
000E78                                  (17/249)1103+FpconPlus       DS C               ASCII or EBCDIC '+' character
000E79                                  (17/250)1104+FpconMinus      DS C               ASCII or EBCDIC '-' character
000E7A                                  (17/251)1105+FpconDecimal    DS C               ASCII or EBCDIC decimal point char.
000E7B                                  (17/252)1106+FpconExponent   DS C               Exponent character
000E7C                                  (17/253)1107+FpconExpAlt     DS C               Alternate exponent character
000E7D                                  (17/259)1108+                DS 3C              (Set/used by FPCONVRT)
000E80                                  (17/260)1109+                DS 0d              Align to doubleword
000E80                                  (17/261)1110+FpconWork       DS XL2096          Internal work area
0016B0                                  (17/262)1111+FpconEnd        DS 0d              End of request block
0016B0                  000008F8        (17/263)1112+FpconLength    EQU *-Fpcon          length of request block
0016B0                                  (17/264)1113+***********************************************************************
0016B0                                   (1/495)1115          END 
Relocation Definitions
 ESD=0001 LOC=000007C0 LEN=8 SIGN=+ XESD=0001
 ESD=0001 LOC=000007C8 LEN=8 SIGN=+ XESD=0002
 ESD=0001 LOC=000007E0 LEN=4 SIGN=+ XESD=0001
 ESD=0001 LOC=00000DB4 LEN=4 SIGN=+ XESD=0001

Symbol Table Listing

 SYM=#@DO_1_1 LOC=00000564 LEN=00000002 ESD=0001 TYPE=REL  XREF=694 687 
 SYM=#@DO_1_E LOC=000005AC LEN=00000002 ESD=0001 TYPE=REL  XREF=740 693 
 SYM=#@DO_1_T LOC=00000548 LEN=00000002 ESD=0001 TYPE=REL  XREF=675 739 
 SYM=#@DO_2_1 LOC=00000604 LEN=00000002 ESD=0001 TYPE=REL  XREF=814 807 
 SYM=#@DO_2_E LOC=0000060C LEN=00000002 ESD=0001 TYPE=REL  XREF=822 813 
 SYM=#@DO_2_T LOC=000005EE LEN=00000002 ESD=0001 TYPE=REL  XREF=797 821 
 SYM=#@DO_3_1 LOC=0000062A LEN=00000002 ESD=0001 TYPE=REL  XREF=848 841 
 SYM=#@DO_3_E LOC=00000636 LEN=00000002 ESD=0001 TYPE=REL  XREF=857 847 
 SYM=#@DO_3_T LOC=00000614 LEN=00000002 ESD=0001 TYPE=REL  XREF=831 856 
 SYM=#@DO_4_1 LOC=000006B6 LEN=00000002 ESD=0001 TYPE=REL  XREF=931 914 
 SYM=#@DO_4_E LOC=000006F6 LEN=00000002 ESD=0001 TYPE=REL  XREF=968 925 
 SYM=#@DO_4_T LOC=000006A4 LEN=00000002 ESD=0001 TYPE=REL  XREF=915 967 
 SYM=#@IF_10_2 LOC=00000506 LEN=00000002 ESD=0001 TYPE=REL  XREF=627 620 
 SYM=#@IF_11_2 LOC=00000548 LEN=00000002 ESD=0001 TYPE=REL  XREF=665 633 635 
 SYM=#@IF_11_E LOC=000005C6 LEN=00000002 ESD=0001 TYPE=REL  XREF=762 664 
 SYM=#@IF_12_2 LOC=0000053E LEN=00000002 ESD=0001 TYPE=REL  XREF=658 649 651 
 SYM=#@IF_13_1 LOC=0000055C LEN=00000002 ESD=0001 TYPE=REL  XREF=685 681 
 SYM=#@IF_13_2 LOC=00000554 LEN=00000002 ESD=0001 TYPE=REL  XREF=682 680 
 SYM=#@IF_13_3 LOC=00000560 LEN=00000002 ESD=0001 TYPE=REL  XREF=691 684 
 SYM=#@IF_14_2 LOC=00000578 LEN=00000002 ESD=0001 TYPE=REL  XREF=708 700 
 SYM=#@IF_15_2 LOC=0000059C LEN=00000002 ESD=0001 TYPE=REL  XREF=726 717 
 SYM=#@IF_15_E LOC=000005A8 LEN=00000002 ESD=0001 TYPE=REL  XREF=733 725 
 SYM=#@IF_16_2 LOC=000005C6 LEN=00000002 ESD=0001 TYPE=REL  XREF=757 748 750 
 SYM=#@IF_17_2 LOC=000005E8 LEN=00000002 ESD=0001 TYPE=REL  XREF=782 770 
 SYM=#@IF_18_2 LOC=00000600 LEN=00000002 ESD=0001 TYPE=REL  XREF=811 803 805 
 SYM=#@IF_19_2 LOC=00000626 LEN=00000002 ESD=0001 TYPE=REL  XREF=845 837 839 
 SYM=#@IF_1_2 LOC=0000008E LEN=00000002 ESD=0001 TYPE=REL  XREF=106 99 
 SYM=#@IF_1_E LOC=00000092 LEN=00000002 ESD=0001 TYPE=REL  XREF=112 105 
 SYM=#@IF_20_2 LOC=000006B6 LEN=00000002 ESD=0001 TYPE=REL  XREF=929 921 923 
 SYM=#@IF_21_2 LOC=000006E2 LEN=00000002 ESD=0001 TYPE=REL  XREF=951 943 
 SYM=#@IF_21_E LOC=000006E6 LEN=00000002 ESD=0001 TYPE=REL  XREF=957 950 
 SYM=#@IF_2_10 LOC=0000013A LEN=00000002 ESD=0001 TYPE=REL  XREF=201 189 
 SYM=#@IF_2_12 LOC=00000162 LEN=00000002 ESD=0001 TYPE=REL  XREF=217 203 
 SYM=#@IF_2_14 LOC=0000018A LEN=00000002 ESD=0001 TYPE=REL  XREF=233 219 
 SYM=#@IF_2_16 LOC=000001AA LEN=00000002 ESD=0001 TYPE=REL  XREF=247 235 
 SYM=#@IF_2_18 LOC=000001CA LEN=00000002 ESD=0001 TYPE=REL  XREF=261 249 
 SYM=#@IF_2_20 LOC=000001F2 LEN=00000002 ESD=0001 TYPE=REL  XREF=276 263 
 SYM=#@IF_2_2 LOC=000000BA LEN=00000002 ESD=0001 TYPE=REL  XREF=145 137 
 SYM=#@IF_2_4 LOC=000000DA LEN=00000002 ESD=0001 TYPE=REL  XREF=159 147 
 SYM=#@IF_2_6 LOC=000000FA LEN=00000002 ESD=0001 TYPE=REL  XREF=173 161 
 SYM=#@IF_2_8 LOC=0000011A LEN=00000002 ESD=0001 TYPE=REL  XREF=187 175 
 SYM=#@IF_2_E LOC=000001F6 LEN=00000002 ESD=0001 TYPE=REL  XREF=282 144 158 172 186 
  200 216 232 246 260 275 
 SYM=#@IF_3_10 LOC=000002C8 LEN=00000002 ESD=0001 TYPE=REL  XREF=370 356 
 SYM=#@IF_3_12 LOC=000002FC LEN=00000002 ESD=0001 TYPE=REL  XREF=388 372 
 SYM=#@IF_3_14 LOC=00000330 LEN=00000002 ESD=0001 TYPE=REL  XREF=406 390 
 SYM=#@IF_3_16 LOC=0000035C LEN=00000002 ESD=0001 TYPE=REL  XREF=422 408 
 SYM=#@IF_3_18 LOC=00000388 LEN=00000002 ESD=0001 TYPE=REL  XREF=438 424 
 SYM=#@IF_3_20 LOC=000003BC LEN=00000002 ESD=0001 TYPE=REL  XREF=455 440 
 SYM=#@IF_3_2 LOC=00000218 LEN=00000002 ESD=0001 TYPE=REL  XREF=306 298 
 SYM=#@IF_3_4 LOC=00000244 LEN=00000002 ESD=0001 TYPE=REL  XREF=322 308 
 SYM=#@IF_3_6 LOC=00000270 LEN=00000002 ESD=0001 TYPE=REL  XREF=338 324 
 SYM=#@IF_3_8 LOC=0000029C LEN=00000002 ESD=0001 TYPE=REL  XREF=354 340 
 SYM=#@IF_3_E LOC=000003C2 LEN=00000002 ESD=0001 TYPE=REL  XREF=462 305 321 337 353 
  369 387 405 421 437 454 
 SYM=#@IF_4_2 LOC=000003D6 LEN=00000002 ESD=0001 TYPE=REL  XREF=483 477 
 SYM=#@IF_5_2 LOC=000004A6 LEN=00000002 ESD=0001 TYPE=REL  XREF=579 489 
 SYM=#@IF_5_E LOC=000004AC LEN=00000002 ESD=0001 TYPE=REL  XREF=586 578 
 SYM=#@IF_6_2 LOC=000003F6 LEN=00000002 ESD=0001 TYPE=REL  XREF=505 499 
 SYM=#@IF_7_2 LOC=00000492 LEN=00000002 ESD=0001 TYPE=REL  XREF=564 513 
 SYM=#@IF_7_E LOC=000004A2 LEN=00000002 ESD=0001 TYPE=REL  XREF=573 563 
 SYM=#@IF_8_2 LOC=00000474 LEN=00000002 ESD=0001 TYPE=REL  XREF=547 524 
 SYM=#@IF_8_E LOC=0000048E LEN=00000002 ESD=0001 TYPE=REL  XREF=558 546 
 SYM=#@IF_9_2 LOC=000004B8 LEN=00000002 ESD=0001 TYPE=REL  XREF=598 592 
 SYM=ADRCHK   LOC=00000DB4 LEN=00000004 ESD=0001 TYPE=REL  XREF=1058 
 SYM=ASIGN    LOC=000008B0 LEN=00000004 ESD=0001 TYPE=REL  XREF=1034 704 749 752 
 SYM=BIGSAVE  LOC=00000718 LEN=00000008 ESD=0001 TYPE=REL  XREF=989 871 895 
 SYM=CFD_CALL LOC=000005EA LEN=00000001 ESD=0001 TYPE=REL  XREF=788 151 165 179 193 
  207 223 239 253 267 
 SYM=CFD_GET_INT128 LOC=000003C4 LEN=00000001 ESD=0001 TYPE=REL  XREF=471 139 
 SYM=CFD_RTNS LOC=000000A0 LEN=00000001 ESD=0001 TYPE=REL  XREF=128 101 
 SYM=COMP128  LOC=000006F8 LEN=00000001 ESD=0001 TYPE=REL  XREF=975 594 623 
 SYM=CTD_ADD_POWER LOC=0000069A LEN=00000001 ESD=0001 TYPE=REL  XREF=907 703 711 
 SYM=CTD_CALL LOC=00000662 LEN=00000001 ESD=0001 TYPE=REL  XREF=879 316 332 348 364 
  382 400 416 432 450 
 SYM=CTD_PUT_INT128 LOC=000004D6 LEN=00000001 ESD=0001 TYPE=REL  XREF=609 300 
 SYM=CTD_RTNS LOC=000001F8 LEN=00000001 ESD=0001 TYPE=REL  XREF=288 108 
 SYM=DMASK    LOC=00000862 LEN=00000001 ESD=0001 TYPE=REL  XREF=1032 641 
 SYM=DWORK    LOC=00000842 LEN=00000020 ESD=0001 TYPE=REL  XREF=1031 641 643 660 
 SYM=E        LOC=00000008 LEN=00000001 ESD=0000 TYPE=ABS  XREF=79 
 SYM=EQ       LOC=00000008 LEN=00000001 ESD=0000 TYPE=ABS  XREF=91 137 147 161 175 
  189 203 219 235 249 263 298 308 324 340 356 372 390 408 424 440 499 592 649 748 
  805 921 
 SYM=F0       LOC=00000000 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1011 152 153 166 
  167 180 181 194 195 208 210 224 226 240 241 254 255 268 270 314 315 330 331 346 
  347 362 363 378 380 396 398 414 415 430 431 446 448 
 SYM=F10      LOC=0000000A LEN=00000001 ESD=0000 TYPE=ABS  XREF=1021 
 SYM=F1       LOC=00000001 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1012 
 SYM=F11      LOC=0000000B LEN=00000001 ESD=0000 TYPE=ABS  XREF=1022 
 SYM=F12      LOC=0000000C LEN=00000001 ESD=0000 TYPE=ABS  XREF=1023 
 SYM=F13      LOC=0000000D LEN=00000001 ESD=0000 TYPE=ABS  XREF=1024 
 SYM=F14      LOC=0000000E LEN=00000001 ESD=0000 TYPE=ABS  XREF=1025 
 SYM=F15      LOC=0000000F LEN=00000001 ESD=0000 TYPE=ABS  XREF=1026 
 SYM=F2       LOC=00000002 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1013 209 211 225 
  227 269 271 379 381 397 399 447 449 
 SYM=F3       LOC=00000003 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1014 
 SYM=F4       LOC=00000004 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1015 
 SYM=F5       LOC=00000005 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1016 
 SYM=F6       LOC=00000006 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1017 
 SYM=F7       LOC=00000007 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1018 
 SYM=F8       LOC=00000008 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1019 
 SYM=F9       LOC=00000009 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1020 
 SYM=FPCON    LOC=00000DB8 LEN=00000008 ESD=0001 TYPE=REL  XREF=1061 129 289 868 
  892 991 1058 1112 
 SYM=FPCONBASE LOC=00000E75 LEN=00000001 ESD=0001 TYPE=REL  XREF=1089 150 164 178 
  192 206 222 238 252 266 311 327 343 359 375 393 411 427 443 
 SYM=FPCONDECIMAL LOC=00000E7A LEN=00000001 ESD=0001 TYPE=REL  XREF=1105 
 SYM=FPCONEND LOC=000016B0 LEN=00000008 ESD=0001 TYPE=REL  XREF=1111 
 SYM=FPCONEXPALT LOC=00000E7C LEN=00000001 ESD=0001 TYPE=REL  XREF=1107 
 SYM=FPCONEXPONENT LOC=00000E7B LEN=00000001 ESD=0001 TYPE=REL  XREF=1106 
 SYM=FPCONEXPONENT10 LOC=00000E72 LEN=00000002 ESD=0001 TYPE=REL  XREF=1084 
 SYM=FPCONFLAGS LOC=00000E76 LEN=00000001 ESD=0001 TYPE=REL  XREF=1093 862 886 
 SYM=FPCONMAXDECIMAL LOC=00000E6E LEN=00000002 ESD=0001 TYPE=REL  XREF=1082 
 SYM=FPCONMAXDIGITS LOC=00000E68 LEN=00000002 ESD=0001 TYPE=REL  XREF=1079 
 SYM=FPCONMAXLEADING LOC=00000E6A LEN=00000002 ESD=0001 TYPE=REL  XREF=1080 312 328 
  344 360 376 394 412 428 444 
 SYM=FPCONMFC LOC=00000000 LEN=000016B0 ESD=0001 TYPE=CST  XREF=57 67 
 SYM=FPCONMINDECIMAL LOC=00000E6C LEN=00000002 ESD=0001 TYPE=REL  XREF=1081 313 329 
  345 361 377 395 413 429 445 
 SYM=FPCONMINEXPON LOC=00000E70 LEN=00000002 ESD=0001 TYPE=REL  XREF=1083 
 SYM=FPCONMINUS LOC=00000E79 LEN=00000001 ESD=0001 TYPE=REL  XREF=1104 
 SYM=FPCONPLUS LOC=00000E78 LEN=00000001 ESD=0001 TYPE=REL  XREF=1103 
 SYM=FPCONRETURNCODE LOC=00000E60 LEN=00000004 ESD=0001 TYPE=REL  XREF=1067 
 SYM=FPCONSAVE LOC=00000DB8 LEN=00000008 ESD=0001 TYPE=REL  XREF=1062 
 SYM=FPCONSTRINGADDR LOC=00000E58 LEN=00000008 ESD=0001 TYPE=REL  XREF=1066 825 883 
 SYM=FPCONSTRINGLEN LOC=00000E66 LEN=00000002 ESD=0001 TYPE=REL  XREF=1077 861 885 
 SYM=FPCONSTRINGSIZE LOC=00000E64 LEN=00000002 ESD=0001 TYPE=REL  XREF=1076 860 861 
  884 885 
 SYM=FPCONVALUED LOC=00000E48 LEN=00000008 ESD=0001 TYPE=REL  XREF=1064 180 194 240 
  347 363 380 381 398 399 415 448 449 
 SYM=FPCONVALUEE LOC=00000E48 LEN=00000004 ESD=0001 TYPE=REL  XREF=1063 152 166 254 
  315 331 431 
 SYM=FPCONVALUEL LOC=00000E48 LEN=00000010 ESD=0001 TYPE=REL  XREF=1065 208 209 224 
  225 268 269 
 SYM=FPCONVALUELEN LOC=00000E74 LEN=00000001 ESD=0001 TYPE=REL  XREF=1085 149 163 
  177 191 205 221 237 251 265 310 326 342 358 374 392 410 426 442 
 SYM=FPCONVRT LOC=00000000 LEN=00000000 ESD=0002 TYPE=EXT  XREF=869 893 991 
 SYM=FPCONWORK LOC=00000E80 LEN=00000830 ESD=0001 TYPE=REL  XREF=1110 
 SYM=FPCONZERO LOC=00000E77 LEN=00000001 ESD=0001 TYPE=REL  XREF=1102 
 SYM=FpconBase10 LOC=0000000A LEN=00000001 ESD=0000 TYPE=ABS  XREF=1091 238 252 266 
  411 427 443 
 SYM=FpconBase16 LOC=00000010 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1092 150 178 206 
  311 343 375 
 SYM=FpconBase2 LOC=00000002 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1090 164 192 222 
  327 359 393 
 SYM=FpconExponPlus LOC=00000010 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1097 
 SYM=FpconFixedDec LOC=00000002 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1100 
 SYM=FpconLength LOC=000008F8 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1112 129 289 991 
 SYM=FpconRetBadPrm LOC=00000010 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1075 
 SYM=FpconRetBadStr LOC=0000000C LEN=00000001 ESD=0000 TYPE=ABS  XREF=1074 
 SYM=FpconRetDenorm LOC=00000004 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1070 
 SYM=FpconRetDigits LOC=00000001 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1101 
 SYM=FpconRetInf LOC=00000008 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1072 
 SYM=FpconRetNan LOC=0000000C LEN=00000001 ESD=0000 TYPE=ABS  XREF=1073 
 SYM=FpconRetOk LOC=00000000 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1068 
 SYM=FpconRetOvrFlo LOC=00000008 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1071 
 SYM=FpconRetUndFlo LOC=00000004 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1069 
 SYM=FpconToValue LOC=00000040 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1094 862 886 
 SYM=FpconValueLenD LOC=00000008 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1087 177 191 
  237 342 358 410 
 SYM=FpconValueLenE LOC=00000004 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1086 149 163 
  251 310 326 426 
 SYM=FpconValueLenL LOC=00000010 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1088 205 221 
  265 374 392 442 
 SYM=FpconValuePlus LOC=00000020 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1096 
 SYM=FpconZeroPlus LOC=00000008 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1098 
 SYM=FpconZeroSign LOC=00000004 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1099 
 SYM=GE       LOC=0000000B LEN=00000001 ESD=0000 TYPE=ABS  XREF=94 99 
 SYM=GT       LOC=00000002 LEN=00000001 ESD=0000 TYPE=ABS  XREF=92 513 524 839 943 
 SYM=H        LOC=00000002 LEN=00000001 ESD=0000 TYPE=ABS  XREF=77 
 SYM=INT_1E26 LOC=000007A8 LEN=00000010 ESD=0001 TYPE=REL  XREF=990 537 541 
 SYM=L        LOC=00000004 LEN=00000001 ESD=0000 TYPE=ABS  XREF=78 
 SYM=LBUFF    LOC=0000002D LEN=00000001 ESD=0000 TYPE=ABS  XREF=69 291 476 488 492 
  501 610 611 612 660 702 710 764 769 773 777 792 884 899 908 991 1033 
 SYM=LE       LOC=0000000D LEN=00000001 ESD=0000 TYPE=ABS  XREF=95 
 SYM=LT       LOC=00000004 LEN=00000001 ESD=0000 TYPE=ABS  XREF=93 803 837 
 SYM=M        LOC=00000004 LEN=00000001 ESD=0000 TYPE=ABS  XREF=85 620 
 SYM=MYSAVE   LOC=00000714 LEN=00000004 ESD=0001 TYPE=REL  XREF=988 870 873 894 897 
 SYM=NE       LOC=00000007 LEN=00000001 ESD=0000 TYPE=ABS  XREF=82 
 SYM=NH       LOC=0000000D LEN=00000001 ESD=0000 TYPE=ABS  XREF=80 
 SYM=NL       LOC=0000000B LEN=00000001 ESD=0000 TYPE=ABS  XREF=81 
 SYM=NM       LOC=0000000B LEN=00000001 ESD=0000 TYPE=ABS  XREF=88 635 
 SYM=NO       LOC=0000000E LEN=00000001 ESD=0000 TYPE=ABS  XREF=90 
 SYM=NP       LOC=0000000D LEN=00000001 ESD=0000 TYPE=ABS  XREF=87 
 SYM=NZ       LOC=00000007 LEN=00000001 ESD=0000 TYPE=ABS  XREF=89 477 489 651 680 
  684 700 717 770 
 SYM=O        LOC=00000001 LEN=00000001 ESD=0000 TYPE=ABS  XREF=83 
 SYM=P        LOC=00000002 LEN=00000001 ESD=0000 TYPE=ABS  XREF=84 750 
 SYM=PACK     LOC=000004CA LEN=00000006 ESD=0001 TYPE=REL  XREF=604 534 550 567 
 SYM=POWER    LOC=00000882 LEN=0000002D ESD=0001 TYPE=REL  XREF=1033 611 612 710 
  908 
 SYM=PWORK    LOC=00000832 LEN=00000010 ESD=0001 TYPE=REL  XREF=1030 517 519 528 
  529 535 551 569 604 640 643 
 SYM=R0       LOC=00000000 LEN=00000001 ESD=0000 TYPE=ABS  XREF=993 130 290 530 532 
  537 539 541 552 554 776 778 826 851 860 933 934 937 938 942 946 959 960 
 SYM=R10      LOC=0000000A LEN=00000001 ESD=0000 TYPE=ABS  XREF=1003 594 623 703 
  711 971 981 
 SYM=R1       LOC=00000001 LEN=00000001 ESD=0000 TYPE=ABS  XREF=994 71 129 289 491 
  492 493 494 498 501 507 508 516 517 527 528 529 531 535 536 538 540 542 551 553 
  642 650 653 654 752 753 772 777 867 868 891 892 935 936 937 
 SYM=R11      LOC=0000000B LEN=00000001 ESD=0000 TYPE=ABS  XREF=1004 139 151 165 
  179 193 207 223 239 253 267 300 316 332 348 364 382 400 416 432 450 582 603 784 
  875 900 
 SYM=R12      LOC=0000000C LEN=00000001 ESD=0000 TYPE=ABS  XREF=1005 101 108 284 
  458 464 
 SYM=R13      LOC=0000000D LEN=00000001 ESD=0000 TYPE=ABS  XREF=1006 870 871 873 
  894 895 897 
 SYM=R14      LOC=0000000E LEN=00000001 ESD=0000 TYPE=ABS  XREF=1007 129 130 289 
  290 536 540 872 873 896 897 
 SYM=R15      LOC=0000000F LEN=00000001 ESD=0000 TYPE=ABS  XREF=1008 131 278 292 
  457 581 602 869 872 893 896 
 SYM=R2       LOC=00000002 LEN=00000001 ESD=0000 TYPE=ABS  XREF=995 508 512 515 516 
  523 526 527 533 534 549 550 566 567 
 SYM=R3       LOC=00000003 LEN=00000001 ESD=0000 TYPE=ABS  XREF=996 71 72 909 922 
  938 945 953 
 SYM=R4       LOC=00000004 LEN=00000001 ESD=0000 TYPE=ABS  XREF=997 153 167 181 195 
  210 211 226 227 241 255 270 271 314 330 346 362 378 379 396 397 414 430 446 447 
  600 601 614 615 
 SYM=R5       LOC=00000005 LEN=00000001 ESD=0000 TYPE=ABS  XREF=998 70 71 291 476 
  488 492 501 610 660 702 764 769 773 776 792 802 804 816 825 836 838 850 883 899 
 SYM=R6       LOC=00000006 LEN=00000001 ESD=0000 TYPE=ABS  XREF=999 702 704 710 792 
  802 836 933 960 961 
 SYM=R7       LOC=00000007 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1000 491 493 507 
  516 527 604 605 908 920 935 962 976 977 978 
 SYM=R8       LOC=00000008 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1001 518 532 539 
  542 554 568 600 614 619 632 679 716 719 728 772 774 778 977 980 
 SYM=R9       LOC=00000009 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1002 519 531 538 
  553 569 601 615 634 640 683 699 720 721 729 773 774 775 978 979 
 SYM=SIGN     LOC=00000831 LEN=00000001 ESD=0001 TYPE=REL  XREF=1029 472 479 591 
  613 622 648 747 
 SYM=TRTAB_NULL_SPACE LOC=00000CB4 LEN=00000001 ESD=0001 TYPE=REL  XREF=1051 899 
  1052 
 SYM=TRTSP    LOC=000004D0 LEN=00000006 ESD=0001 TYPE=REL  XREF=605 498 
 SYM=TRTTAB_DIGITS LOC=000008B4 LEN=00000001 ESD=0001 TYPE=REL  XREF=1035 488 1036 
 SYM=TRTTAB_MINUS LOC=000009B4 LEN=00000001 ESD=0001 TYPE=REL  XREF=1039 476 1040 
 SYM=TRTTAB_NOT_SPACE LOC=00000BB4 LEN=00000001 ESD=0001 TYPE=REL  XREF=1047 769 
  1048 
 SYM=TRTTAB_SPACE LOC=00000AB4 LEN=00000001 ESD=0001 TYPE=REL  XREF=1043 605 1044 
 SYM=TYPE     LOC=00000830 LEN=00000001 ESD=0001 TYPE=REL  XREF=1028 72 98 136 146 
  160 174 188 202 218 234 248 262 297 307 323 339 355 371 389 407 423 439 
 SYM=Z        LOC=00000008 LEN=00000001 ESD=0000 TYPE=ABS  XREF=86 633 923 

Literal Table Listing

 LIT=(LBUFF)C' ' LOC=00000802 LEN=00000001 ESD=0001 POOL=0001 XREF=291 610 611 
 LIT=A(Fpcon,FpconLength,0,0) LOC=000007E0 LEN=00000004 ESD=0001 POOL=0001 XREF=129 
  289 
 LIT=AD(FPCON) LOC=000007C0 LEN=00000008 ESD=0001 POOL=0001 XREF=868 892 
 LIT=C' '     LOC=0000082F LEN=00000001 ESD=0001 POOL=0001 XREF=775 
 LIT=F'0'     LOC=000007F0 LEN=00000004 ESD=0001 POOL=0001 XREF=749 
 LIT=F'1'     LOC=000007F4 LEN=00000004 ESD=0001 POOL=0001 XREF=979 
 LIT=FL8'-1'  LOC=000007D0 LEN=00000008 ESD=0001 POOL=0001 XREF=976 
 LIT=FL8'0'   LOC=000007D8 LEN=00000008 ESD=0001 POOL=0001 XREF=980 
 LIT=FL8'1E13' LOC=000007B8 LEN=00000008 ESD=0001 POOL=0001 XREF=530 552 
 LIT=H'-1'    LOC=000007FA LEN=00000002 ESD=0001 POOL=0001 XREF=313 329 345 361 377 
  395 413 429 445 
 LIT=H'15'    LOC=000007FC LEN=00000002 ESD=0001 POOL=0001 XREF=344 360 
 LIT=H'16'    LOC=00000800 LEN=00000002 ESD=0001 POOL=0001 XREF=412 
 LIT=H'34'    LOC=000007FE LEN=00000002 ESD=0001 POOL=0001 XREF=376 394 444 
 LIT=H'7'     LOC=000007F8 LEN=00000002 ESD=0001 POOL=0001 XREF=312 328 428 
 LIT=VD(FPCONVRT) LOC=000007C8 LEN=00000008 ESD=0001 POOL=0001 XREF=869 893 
 
AZ390I total mnote warnings = 0
AZ390I total mnote errors   = 0
AZ390I max   mnote level    = 0
AZ390I total mz390 errors   = 0
AZ390I total az390 errors   = 0
FPCONMFC  MZ390 ENDED   RC= 0 MEM(MB)= MB IO=7254
                       FPCONMFC  MZ390 Copyright 2011 Automated Software Tools Corporation
FPCONMFC  MZ390 z390 is licensed under GNU General Public License
FPCONMFC  MZ390 program = linklib\FPCONMFC.MLC
FPCONMFC  MZ390 options = W:\work\z390\z390.OPT=(time(60)) bal notiming sysmac(mac) 
  syscpy(mac) stats sysmac(mac+linklib) systerm(linklib\rtlink)
FPCONMFC  MZ390 final_options=ALIGN
FPCONMFC  MZ390 final_options=NOALLOW
FPCONMFC  MZ390 final_options=NOAMODE24
FPCONMFC  MZ390 final_options=AMODE31
FPCONMFC  MZ390 final_options=NOASCII
FPCONMFC  MZ390 final_options=ASM
FPCONMFC  MZ390 final_options=NOASSIST
FPCONMFC  MZ390 final_options=AUTOLINK
FPCONMFC  MZ390 final_options=BAL
FPCONMFC  MZ390 final_options=NOBS2000
FPCONMFC  MZ390 final_options=EDF
FPCONMFC  MZ390 final_options=NOCICS
FPCONMFC  MZ390 final_options=CODEPAGE(ISO-8859-1+IBM1047)
FPCONMFC  MZ390 final_options=COMMENT
FPCONMFC  MZ390 final_options=CON
FPCONMFC  MZ390 final_options=NODUMP
FPCONMFC  MZ390 final_options=EPILOG
FPCONMFC  MZ390 final_options=NOERRSUM
FPCONMFC  MZ390 final_options=EXTEND
FPCONMFC  MZ390 final_options=FLOAT(DECIMAL)
FPCONMFC  MZ390 final_options=NOGUAM
FPCONMFC  MZ390 final_options=INIT
FPCONMFC  MZ390 final_options=LIST
FPCONMFC  MZ390 final_options=LISTCALL
FPCONMFC  MZ390 final_options=LISTUSE
FPCONMFC  MZ390 final_options=LOADHIGH
FPCONMFC  MZ390 final_options=NOMCALL
FPCONMFC  MZ390 final_options=NOMOD
FPCONMFC  MZ390 final_options=OBJ
FPCONMFC  MZ390 final_options=NOOBJHEX
FPCONMFC  MZ390 final_options=PC
FPCONMFC  MZ390 final_options=PCOPT
FPCONMFC  MZ390 final_options=NOPDSMEM8
FPCONMFC  MZ390 final_options=NOPRINTALL
FPCONMFC  MZ390 final_options=PROLOG
FPCONMFC  MZ390 final_options=PROTECT
FPCONMFC  MZ390 final_options=R64
FPCONMFC  MZ390 final_options=NOREFORMAT
FPCONMFC  MZ390 final_options=NOREGS
FPCONMFC  MZ390 final_options=RMODE24
FPCONMFC  MZ390 final_options=NORMODE31
FPCONMFC  MZ390 final_options=STATS
FPCONMFC  MZ390 final_options=NOTEST
FPCONMFC  MZ390 final_options=THREAD
FPCONMFC  MZ390 final_options=NOTIME
FPCONMFC  MZ390 final_options=NOTIMING
FPCONMFC  MZ390 final_options=NOTRACE
FPCONMFC  MZ390 final_options=NOTRACEA
FPCONMFC  MZ390 final_options=NOTRACEALL
FPCONMFC  MZ390 final_options=NOTRACEC
FPCONMFC  MZ390 final_options=NOTRACEG
FPCONMFC  MZ390 final_options=NOTRACEI
FPCONMFC  MZ390 final_options=NOTRACEL
FPCONMFC  MZ390 final_options=NOTRACEM
FPCONMFC  MZ390 final_options=NOTRACEP
FPCONMFC  MZ390 final_options=NOTRACEQ
FPCONMFC  MZ390 final_options=NOTRACES
FPCONMFC  MZ390 final_options=NOTRACET
FPCONMFC  MZ390 final_options=NOTRACEV
FPCONMFC  MZ390 final_options=TRAP
FPCONMFC  MZ390 final_options=NOTRUNC
FPCONMFC  MZ390 final_options=NOTS
FPCONMFC  MZ390 final_options=VCB
FPCONMFC  MZ390 final_options=WARN
FPCONMFC  MZ390 final_options=XREF
FPCONMFC  MZ390 final_options=ZSTRMAC
FPCONMFC  MZ390 final_options=CHKMAC=0
FPCONMFC  MZ390 final_options=CHKSRC=1
FPCONMFC  MZ390 final_options=ERR=100
FPCONMFC  MZ390 final_options=MAXCALL=50
FPCONMFC  MZ390 final_options=MAXDISPLAY=80
FPCONMFC  MZ390 final_options=MAXESD=1000
FPCONMFC  MZ390 final_options=MAXFILE=1000
FPCONMFC  MZ390 final_options=MAXGBL=100000
FPCONMFC  MZ390 final_options=MAXHEIGHT=600
FPCONMFC  MZ390 final_options=MAXLCL=100000
FPCONMFC  MZ390 final_options=MAXLEN=80
FPCONMFC  MZ390 final_options=MAXLINE=200000
FPCONMFC  MZ390 final_options=MAXLOG=1000000
FPCONMFC  MZ390 final_options=MAXPARM=10000
FPCONMFC  MZ390 final_options=MAXPASS=2
FPCONMFC  MZ390 final_options=MAXPC=50000
FPCONMFC  MZ390 final_options=MAXQUE=1000
FPCONMFC  MZ390 final_options=MAXRLD=10000
FPCONMFC  MZ390 final_options=MAXSIZE=52428800
FPCONMFC  MZ390 final_options=MAXSYM=50000
FPCONMFC  MZ390 final_options=MAXWARN=4
FPCONMFC  MZ390 final_options=MAXWIDTH=800
FPCONMFC  MZ390 final_options=MEM=1
FPCONMFC  MZ390 final_options=MINHEIGHT=150
FPCONMFC  MZ390 final_options=MINWIDTH=150
FPCONMFC  MZ390 final_options=MNOTE=0
FPCONMFC  MZ390 final_options=PARM=
FPCONMFC  MZ390 final_options=PROFILE=
FPCONMFC  MZ390 final_options=STATS=W:\work\z390\linklib\FPCONMFC
FPCONMFC  MZ390 final_options=SYSPARM=
FPCONMFC  MZ390 final_options=SYSTERM=W:\work\z390\linklib\rtlink
FPCONMFC  MZ390 final_options=TESTDD=
FPCONMFC  MZ390 final_options=TIME=60
FPCONMFC  MZ390 final_options=TRACE=
FPCONMFC  MZ390 final_options=Z390ACROBAT=cmd.exe /c Start
FPCONMFC  MZ390 final_options=Z390BROWSER=cmd.exe /c Start
FPCONMFC  MZ390 final_options=Z390COMMAND=cmd.exe
FPCONMFC  MZ390 final_options=Z390EDITOR=notepad.exe
FPCONMFC  MZ390 final_options=INSTALL=
FPCONMFC  MZ390 final_options=IPL=
FPCONMFC  MZ390 final_options=LOG=
FPCONMFC  MZ390 final_options=SYS390=linklib\+linklib
FPCONMFC  MZ390 final_options=SYSBAL=linklib\
FPCONMFC  MZ390 final_options=SYSCPY=mac
FPCONMFC  MZ390 final_options=SYSDAT=linklib\
FPCONMFC  MZ390 final_options=SYSERR=linklib\
FPCONMFC  MZ390 final_options=SYSLOG=linklib\
FPCONMFC  MZ390 final_options=SYSLST=linklib\
FPCONMFC  MZ390 final_options=SYSMAC=mac+linklib
FPCONMFC  MZ390 final_options=SYSMLC=linklib\
FPCONMFC  MZ390 final_options=SYSPCH=linklib\
FPCONMFC  MZ390 final_options=SYSPRN=linklib\
FPCONMFC  MZ390 final_options=SYSOBJ=linklib\
FPCONMFC  MZ390 final_options=SYSOPT=linklib\
FPCONMFC  MZ390 final_options=SYSTRC=linklib\
FPCONMFC  MZ390 total MLC/MAC loaded  = 4043
FPCONMFC  MZ390 total BAL output lines= 1082
FPCONMFC  MZ390 total BAL instructions= 66
FPCONMFC  MZ390 total macros          = 15
FPCONMFC  MZ390 total macro loads     = 15
FPCONMFC  MZ390 total macro calls     = 167
FPCONMFC  MZ390 total AENTRY blocks   = 5
FPCONMFC  MZ390 total ACALL  calls    = 5
FPCONMFC  MZ390 total AIF    blocks   = 42
FPCONMFC  MZ390 total ACASE  blocks   = 0
FPCONMFC  MZ390 total AWHILE calls    = 3
FPCONMFC  MZ390 total AUNTIL blocks   = 0
FPCONMFC  MZ390 total global set names= 82
FPCONMFC  MZ390 tot global seta cells = 323
FPCONMFC  MZ390 tot global setb cells = 278
FPCONMFC  MZ390 tot global setc cells = 543
FPCONMFC  MZ390 max local pos parms   = 7
FPCONMFC  MZ390 max local key parms   = 11
FPCONMFC  MZ390 max local set names   = 25
FPCONMFC  MZ390 max local seta cells  = 8
FPCONMFC  MZ390 max local setb cells  = 3
FPCONMFC  MZ390 max local setc cells  = 25
FPCONMFC  MZ390 total array expansions= 0
FPCONMFC  MZ390 total Keys            = 4303
FPCONMFC  MZ390 Key searches          = 31482
FPCONMFC  MZ390 Key avg comps         = 0
FPCONMFC  MZ390 Key max comps         = 4
FPCONMFC  MZ390 total macro line exec = 4460
FPCONMFC  MZ390 total pcode line exec = 1458
FPCONMFC  MZ390 total pcode line gen. = 160
FPCONMFC  MZ390 total pcode line reuse= 0
FPCONMFC  MZ390 total pcode op   gen. = 650
FPCONMFC  MZ390 total pcode op   exec = 6226
FPCONMFC  MZ390 total pcode gen  opt  = 135
FPCONMFC  MZ390 total pcode exec opt  = 10
FPCONMFC  MZ390 FID=  1 ERR= 0 W:\work\z390\linklib\FPCONMFC.MLC
FPCONMFC  MZ390 FID=  2 ERR= 0 W:\work\z390\mac\ASMMSP.CPY
FPCONMFC  MZ390 FID=  3 ERR= 0 W:\work\z390\mac\ZSTRMAC.CPY
FPCONMFC  MZ390 FID=  4 ERR= 0 W:\work\z390\linklib\ARCHLVL.MAC
FPCONMFC  MZ390 FID=  5 ERR= 0 W:\work\z390\mac\SUBENTRY.MAC
FPCONMFC  MZ390 FID=  6 ERR= 0 W:\work\z390\mac\IF.MAC
FPCONMFC  MZ390 FID=  7 ERR= 0 W:\work\z390\mac\ZSTRGBL.CPY
FPCONMFC  MZ390 FID=  8 ERR= 0 W:\work\z390\mac\ZSTREQU.MAC
FPCONMFC  MZ390 FID=  9 ERR= 0 W:\work\z390\mac\ELSE.MAC
FPCONMFC  MZ390 FID= 10 ERR= 0 W:\work\z390\mac\ENDIF.MAC
FPCONMFC  MZ390 FID= 11 ERR= 0 W:\work\z390\mac\SUBEXIT.MAC
FPCONMFC  MZ390 FID= 12 ERR= 0 W:\work\z390\mac\ZOPTLR.MAC
FPCONMFC  MZ390 FID= 13 ERR= 0 W:\work\z390\mac\ELSEIF.MAC
FPCONMFC  MZ390 FID= 14 ERR= 0 W:\work\z390\mac\DO.MAC
FPCONMFC  MZ390 FID= 15 ERR= 0 W:\work\z390\mac\ENDDO.MAC
FPCONMFC  MZ390 FID= 16 ERR= 0 W:\work\z390\mac\EQUREGS.MAC
FPCONMFC  MZ390 FID= 17 ERR= 0 W:\work\z390\linklib\FPCONVRT.MAC
FPCONMFC  MZ390 total mnote warnings  = 0
FPCONMFC  MZ390 total mnote errors    = 0
FPCONMFC  MZ390 max   mnote level     = 0
FPCONMFC  MZ390 total mz390 errors    = 0
FPCONMFC  AZ390 BAL lines             = 1082
FPCONMFC  AZ390 symbols               = 190
FPCONMFC  AZ390 Literals              = 15
FPCONMFC  AZ390 alloc passes          = 3
FPCONMFC  AZ390 Keys                  = 1524
FPCONMFC  AZ390 Key searches          = 11357
FPCONMFC  AZ390 Key avg comps         = 1
FPCONMFC  AZ390 Key max comps         = 3
FPCONMFC  AZ390 ESD symbols           = 2
FPCONMFC  AZ390 object bytes          = 3525
FPCONMFC  AZ390 object rlds           = 4
FPCONMFC  AZ390 total mnote warnings  = 0
FPCONMFC  AZ390 total mnote errors    = 0
FPCONMFC  AZ390 max   mnote level     = 0
FPCONMFC  AZ390 total mz390 errors    = 0
FPCONMFC  AZ390 total az390 errors    = 0
FPCONMFC  MZ390 ENDED   RC= 0 MEM(MB)= MB IO=13116
