*    ZCOBOL PGM='cics\TESTICC1' VER=V1.5.06 05/21/12 13:48:23 
*    ZCOBOL OPTIONS=(CICS) 
         COPY  TESTICC1_ZC_LABELS.CPY
*      ****************************************************************X
                              *
*      * Copyright 2006 Automated Software Tools Corporation           X
                              *
*      * This source code is part of z390 assembler/emulator package   X
                              *
*      * The z390 package is distributed under GNU general public      X
                              *
*      * license                                                       X
                              *
*      * Author - Don Higgins                                          X
                              *
*      ****************************************************************X
                              *
*      * 11/11/08 RPI 946 CORRECTIONS TO MESSAGES TO PREVENT 6'S       X
                              *
*      *          DISPLAYED                                            X
                              *
*      ****************************************************************X
                              *
*         IDENTIFICATION DIVISION.
*      * TEST INTERVAL CONTROL FUNCTIONS
*      *  ASKTIME
*      *     SHOW BEFORE AND AFTER EIBDATE/EIBTIME
*      *  ASKTIME ABSTIME(STCKTIME)
*      *     SHOW AFTER EIBDATE/EIBTIME
*      *     SHOW DECIMAL STCK TIME IN 0.001 SECS SINCE 1/1/1900
*      *  DELAY TO SHOW IT WORKS
*      *     INVREQ/ 4, 5, 6
*      *  FORMATTIME LINE 1
*      *     DATE WITH/WITHOUT DATESEP
*      *     FULLDATE WITH/WITHOUT DATESEP
*      *  FORMATTIME LINE 2
*      *     DDMMYY MMDDYY YYDDMM YYMMDD DATEFORM
*      *  FORMATTIME LINE 3
*      *     DDMMYYYY MMDDYYYY YYYYDDMM YYYYMMDD YYDDD YYYYDDD
*      *     WITH DATESEP
*      *  FORMATTIME LINE 4
*      *     DATESTRING AND TIME WITH/WITHOUT TIMESEP
*      *  FORMATTIME LINE 5
*      *     INVREQ/ 1
*         PROGRAM-ID. TESTICC1.
         PRINT NOLIST,NOGEN,NOLISTUSE    SET LIST OPTION FOR INTERNAL CX
               ODE
DFHEIBR  EQU   11
         USING DFHEIBLK_DSECT,DFHEIBR
*
* TERMINAL CONTROL TABLE - TERMINAL ENTRY
*
DFHTCTTE DSECT 
TCTTEHED DS    CL8         'DFHTCTTE'
TCTTETI  DS    CL4         TERMINAL ID
TCTTEDA  DS    AL4         A(TIOA)
TCTTETC  DS    CL4         NEXT TRANSID
TCTTEINT DS    CL4         INITIAL TRANSID
TCTTECA  DS    AL4         RETURN COMMAREA ADDRESS
TCTTECAL DS    XL2         RETURN COMMAREA ADDRESS LENGTH
TCTTELNK DS    XL2         RETURN LINK LEVEL, 0 RETURNS TO Z390KCP
TCTTELKA DS    AL4         LINK LEVEL AREA POINTER
*                          EACH 4-BYTE ENTRY HAS THE DSA ADDRESS
TCTTEABD DS    AL4         HANDLE ABEND BLOCK
TCTTESCC DS    AL4         STORAGE CONTROL CHAIN
TCTTEPCT DS    AL4         ADDRESS OF DFHPCT
TCTTEIMM DS    X           FF=RETURN IMMEDIATE
TCTTETS  DS    X           FF=SHUTDOWN REQUEST
TCTTETYP DS    C           TRANSID START TYPE (FROM Z390KCP/KCPGOTYP)
*                             A = .INI INITIAL TRANSID
*                             B = SCREEN INPUT
*                             C = RETURN TRANSID()
*                             D = IC START-NO DATA
*                             E = IC START-DATA
TCTTECND DS    X           FF=XCTL COMMAREA MUST BE FREED ON RETURN
TCTTEEDF DS    X           FF=EDF IS ACTIVE
TCTTEEBA DS    X           CEDF INTERCEPT INDICATOR
*                             00='BEFORE'
*                             FE='AFTER' LINK/XCTL/RETURN FAIL
*                             FF='AFTER'
TCTTEEDL DS    X           CEDF LINKAGE INDICATOR
*                             00=NORMAL LINKAGE
*                             FE=SPECIAL LINKAGE
*                             FF=DIRECT LINKAGE
TCTTEEDT DS    CL4         TERMID FOR EDF OUTPUT
TCTTEEDA DS    AL4         ADDRESS OF EDF PROCESSOR LCLCEDF
TCTTEQFN DS    PL3         SEQUENTIAL TERMINAL FILE NUMBER
TCTTEQFO DS    X           FF=CURRENT SEQUENTIAL FILE IS OPEN
TCTTEQFL DS    AL4         ADDRESS OF SEQUENTIAL TERMINAL FILENAME
TCTTEQDI DS    AL4         ADDRESS OF RECEIVE DCB
TCTTEQDO DS    AL4         ADDRESS OF SEND DCB
TCTTECWA DS    AL4         ADDRESS OF LOCAL CWA COPY
TCTTECWL DS    XL4         LENGTH OF LOCAL CWA COPY
TCTTELCL DS    AL4         ADDRESS OF LCL MODULE INDEXER
TCTTEIQF DS    X           FF=INQUIRE FILE BROWSE IN PROGRESS
TCTTEIFN DS    CL8         INQUIRE FILE CURRENT POSITION
TCTTECHN DS    CL16        PASSED CHANNEL NAME
TCTTECAQ DS    AL4         ANCHOR FOR CHANNEL CHAIN
TCTTETKN DS    XL4         TOKEN FOR STARTBROWSE CONTAINER
TCTTECHW DS    AL4         ADDRESS OF CHWA (STARTBROWSE CONTAINER)
* FIELDS FOR ASSIGN
TCTTEABP DS    X           ABDUMP INDICATOR
TCTTEABG DS    CL8         ABENDING PROGRAM
TCTTEPSW DS    XL8         ASRA PSW
TCTTEASR DS    XL64        ASRA REGS
TCTTEINV DS    CL8         INVOKING PROGRAM
TCTTERET DS    CL8         RETURN PROGRAM
TCTTELNA EQU   *-TCTTEABP  ASSIGN FIELDS TO CLEAR
TCTTEABC DS    CL4         ABCODE OR BLANK
TCTTENXT DS    CL4         RETURN TRANSID OR BLANK
TCTTEMCL DS    AL2         MAP COLUMN
TCTTEMHT DS    AL2         MAP HEIGHT
TCTTEMLN DS    AL2         MAP LINE
TCTTEMWH DS    AL2         MAP WIDTH
TCTTELEN EQU   *-DFHTCTTE
TCTTEAR  EQU   10
         USING DFHTCTTE,TCTTEAR
R0     EQU 0
R1     EQU 1
R2     EQU 2
R3     EQU 3
R4     EQU 4
R5     EQU 5
R6     EQU 6
R7     EQU 7
R8     EQU 8
R9     EQU 9
R10    EQU 10
R11    EQU 11
R12    EQU 12
R13    EQU 13
R14    EQU 14
R15    EQU 15
TESTICC1 CSECT 
*            R1 >>> A(EIB,COMMAREA)
*            R2 >>> P0E02 (LINK) OR P0E04 (XCTL) PARMS
* TCTTEAR (R10) >>> TCTTE
* DFHEIBR (R11) >>> EIB
*         (R14) >>> RETURN ADDRESS (LINK ONLY)
*
         L     R2,0(R2)           R2=P0E02/P0E04 PARM POINTER
         STRL  R2,CICS_EIENT_0025_PARMPNTR SAVE IT
* ENTRY IS ONLY BY DIRECT BRANCH FROM MODULES LCL0E02 (LINK)
* OR LCL0E04 (XCTL)
         LR    R2,R1              R2=SAVE USER PARM POINTER
* DON'T SAVE THE REGS IF XCTL, THIS ISN'T A NEW LINK LEVEL
         CHHSI EIBFN,X'0E04'      XCTL ?
         JE    CICS_EIENT_0025_NOSAVE EXIT IF IT IS
* FIND LAST LINKER AND ESTABLISH LINKAGE
         LH    R15,TCTTELNK       R15=CURRENT LINK LEVEL
         AHI   R15,-1             -1
         SLL   R15,2              *4
         L     R1,TCTTELKA        R0=LKA ADDRESS
         AR    R1,R15             INDEX TO LAST LINK-LEVEL ENTRY
         L     R13,0(R1)          SAVE AREA OF LAST LINK-LEVEL
         STM   14,12,12+4*(14-14)(13)
CICS_EIENT_0025_NOSAVE     EQU *
*
* GETMAIN THE DSA, AND SET UP THE CHAIN
*
         IILF  R1,(DFHEIEND-DFHEISTG) R1=DSA LENGTH RPI 1181
         LA    0,B'00'
         SVC   4 GMAIN R0=(X'02'=31B,X'01'=COND),R1=LEN OUT(R0=L,R1=A)
* DON'T SAVE THE REGS IF XCTL, THIS ISN'T A NEW LINK LEVEL
         CHHSI EIBFN,X'0E04'      XCTL ?
         JE    CICS_EIENT_0025_NOSAVE2 EXIT IF IT IS
         ST    R1,8(R13)          SAVE NEW DSA SAVE AREA IN PRIOR SAVE
         ST    R13,4(R1)          SAVE OLD SAVE AREA IN NEW DSA SAVE
CICS_EIENT_0025_NOSAVE2     EQU *
         LR    R13,R1             DSA BASE 1
         USING DFHEISTG,R13
         XC    DFHEICAP(DFHEIUSR-DFHEICAP),DFHEICAP CLEAR PREFIX DSA
*
* SAVE DSA LENGTH
*
         ST    R0,DFHEILEN        SAVE DSA LENGTH FOR FREEMAIN
*
* SET EIB AND COMMAREA ADDRESSES
*
         MVC   DFHEIEIB,0(R2)     SET EIB ADDRESS IN DSA
         MVC   DFHEICAP,4(R2)     SET COMMAREA ADDRESS IN DSA
*
* IF WE CAME FROM XCTL, WE MUST FREE THE PARM STORAGE AREA
*
         CHHSI EIBFN,X'0E04'      XCTL ?
         JNE   CICS_EIENT_0025_01 EXIT IF NOT
         LA    R0,8               LENGTH OF 8
         LR    1,R2
         SVC   5 FREEMAIN R0=LEN, R1=ADDR
         LA    R2,DFHEIEIB        NEW PARM POSITION FOR ZCOBOL
CICS_EIENT_0025_01     DS 0H
*
* FIND OUR LKA ENTRY AND STORE OUR DSA ADDRESS
*
         LH    R15,TCTTELNK       R15=CURRENT LINK LEVEL
         SLL   R15,2              *4
         L     R1,TCTTELKA        R1=LKA ADDRESS
         AR    R1,R15             INDEX TO OUR LINK LEVEL ENTRY
         ST    R13,0(R1)          SAVE OUR DSA ADDRESS
         MVC   DFHEIINV,TCTTEINV  SET INVOKING PROGRAM FOR ASSIGN
         MVC   DFHEIRET,TCTTERET  SET RETURN PROGRAM FOR ASSIGN
         MVC   DFHEICHN,TCTTECHN  SET CHANNEL FOR ASSIGN
*
         CLI   TCTTEEDF,X'FF'     EDF ON ?
         JNE   CICS_EIENT_0025_NOEDFA EXIT IF NOT
* PROGRAM INITIATION
         MVI   TCTTEEBA,X'FF'     SET 'AFTER' INTERCEPT
         MVI   TCTTEEDL,X'FE'     SET SPECIAL LINKAGE
         L     R15,TCTTEEDA       R15=EDF PROCESSOR ADDRESS
         BAKR  0,R15              STACK REGS AND GO
         J     CICS_EIENT_0025_NOEDFA EXIT
CICS_EIENT_0025_PARMPNTR     DS AL4 SAVE P0E02/P0E04 PARM POINTER
*
CICS_EIENT_0025_NOEDFA     DS 0H
         CNOP  4,8             FORCE ZC390PVT TO DOUBLEWORD BOUNDARY
         BRAS  ZC_R8,ZC_LOAD
         USING *,ZC_R8            BASE FOR LOAD AND CICS V5 USE
*
*  THESE FIELDS MUST BE KEPT IN SYNC WITH zcobol\ZC390PVT.CPY
*
         DC    CL8'TESTICC1'    PVTPGM   ZCOBOL PGM NAME
         DC    CL8'05/21/12'   PVTDATE  ZCOBOL COMPILE DATE
         DC    CL8'13.48'   PVTTIME  ZCOBOL COMPILE TIME
         DC    CL8'V1.5.06'    PVTVER   ZCOBOL COMPILER VERSION
         DC    C'1'     PVTCICS  ZCOBOL EXEC CICS PGM
         DC    C'1'   PVTEXTND ZCOBOL EXTENDED PRECISION
         DC    C'0'    PVTTRUNC ZCOBOL TRUNCATE TO PICTURE
         DC    C'1'      PVTR64   ZCOBOL USE 64 BIT REGISTERS
         DC    H'80' MAX DISPLAY LINE LEN  RPI 1118
         DS    XL10            RESERVED
ZC_LOAD  DS    0H
         LA    0,=CL8'ZC390LIB'
         SR    15,15 USE DEFAULT SYS390 SEARCH
         SVC   8 LOAD R0=A(NAME) R15=DDNAME/DSNAME ADDR OR 0
         LTR   ZC_R15,ZC_R15
         JZ    ZC_LOAD_OK
         BRAS  1,*+(WTO#0035_EOT-*+1)/2*2
         DC    AL2(WTO#0035_EOT-*,0),C'ZC390LIB NOT FOUND'
WTO#0035_EOT     EQU *
         SVC   35
         LA  ZC_R15,16
         SVC 3      EXIT TO CALLER WITH RC=16
ZC_LOAD_OK DS  0H
         LR    ZC_R9,ZC_R0
         USING ZC390CVT,ZC_R9    R9=CVT
         CLC   ZCVT_ID,=C'ZCVT'              CHECK ZCVT ID AND LENGTH
         JNE   ZC_VER_ERR                    IN ZC390LIB.390 MATCH
         CLC   ZCVT_LEN,=A(ZCVT_END-ZCVT_ID) ZCOBOL PGM COMPILED ID/LEN
         BNE   ZC_VER_ERR
         L     ZC_R15,ZCVT_ZC390NUC
         BASR  ZC_R14,ZC_R15 CALL ZC390NUC TO VERIFY VER, OPTIONS
         J     ZC_VER_OK
ZC_VER_ERR DS 0H
         BRAS  1,*+(WTO#0036_EOT-*+1)/2*2
         DC    AL2(WTO#0036_EOT-*,0),C'ZC390LIB ZCVT VERIFY ERROR'
WTO#0036_EOT     EQU *
         SVC   35
         LA  ZC_R15,16
         SVC 3      EXIT TO CALLER WITH RC=16
         LTORG 
         PUSH  PRINT,NOPRINT
         PRINT OFF,NOPRINT
ZC_R0    EQU   0
ZC_R1    EQU   1
ZC_R2    EQU   2
ZC_R3    EQU   3
ZC_R4    EQU   4
ZC_R5    EQU   5
ZC_R6    EQU   6
ZC_R7    EQU   7
ZC_R8    EQU   8
ZC_R9    EQU   9
ZC_R10   EQU  10
ZC_R11   EQU  11
ZC_R12   EQU  12
ZC_R13   EQU  13
ZC_R14   EQU  14
ZC_R15   EQU  15
ZC_F0    EQU   0
ZC_F1    EQU   1
ZC_F2    EQU   2
ZC_F3    EQU   3
ZC_F4    EQU   4
ZC_F5    EQU   5
ZC_F6    EQU   6
ZC_F7    EQU   7
ZC_F8    EQU   8
ZC_F9    EQU   9
ZC_F10   EQU  10
ZC_F11   EQU  11
ZC_F12   EQU  12
ZC_F13   EQU  13
ZC_F14   EQU  14
ZC_F15   EQU  15
ZC_H     EQU   2   HIGH
ZC_L     EQU   4   LOW
ZC_E     EQU   8   EQUAL
ZC_NH    EQU   13  NOT HIGHT
ZC_NL    EQU   11  NOT LOW
ZC_NE    EQU   7   NOT EQUAL
ZC_O     EQU   1   OVERFLOW
ZC_P     EQU   2   POSITIVE
ZC_M     EQU   4   MINUS
ZC_Z     EQU   8   ZERO
ZC_NP    EQU   13  NOT POSITIVE
ZC_NM    EQU   11  NOT MINUS
ZC_NZ    EQU   7   NOT ZERO
ZC_NO    EQU   14  NOT OVERFLOW
ZC_EQ    EQU   8   EQUAL
ZC_GT    EQU   2   GREATER THAN
ZC_LT    EQU   4   LESS    THAN
ZC_GE    EQU   11  GREATER THAN OR EQUAL
ZC_LE    EQU   13  LESS    THAN OR EQUAL
         POP   PRINT,NOPRINT
PFPO_TEST    EQU  X'80' PFPO TEST IF VALID OPCODE (NOT SUPPORTED YET)
PFPO_RADIX   EQU  1 PFPO OPCODE - CONVERT FROM ONE RADIX TO ANOTHER
PFPO_RND     EQU  0 PFOP ROUNDING OPTION (ONLY DEFAULT ALLOWED)
PFPO_TYPE_EH EQU  0 EH HFP SHORT     32 BITS 7  DIGITS
PFPO_TYPE_DH EQU  1 ED HFP LONG      64 BITS 15 DIGITS
PFPO_TYPE_LH EQU  2 EL HFP EXTENDED 128 BITS 30 DIGITS
PFPO_TYPE_EB EQU  5 EB BFP SHORT     32 BITS 7  DIGITS
PFPO_TYPE_DB EQU  6 DB BFP LONG      64 BITS 16 DIGITS
PFPO_TYPE_LB EQU  7 LB BFP EXTENDED 128 BITS 34 DIGITS
PFPO_TYPE_ED EQU  8 ED DFP SHORT     32 BITS 7  DIGITS
PFPO_TYPE_DD EQU  9 DD DFP LONG      64 BITS 16 DIGITS
PFPO_TYPE_LD EQU 10 LD DFP EXTENDED 128 BITS 34 DIGITS
ZC_VER_OK DS   0H
ZC390CVT DSECT                ZCOBOL CVT AT ENTRY TO ZC390LIB.390
ZCVT_ID            DC    C'ZCVT'             ZCVT ID  VERIFIED BY ZCOB
ZCVT_LEN           DC    A(ZCVT_END-ZCVT_ID) ZCVT LEN VERIFIED BY ZCOB
ZCVT_VER           DC    CL8'V1.5.06'    ZCVT VER VERIFIED BY ZC390NUC
ZCVT_ZC390NUC  DC V(ZC390NUC)      MODULE  SYSTEM ROUTINE MODULE INIT
ZCVT_CALL           DC V(CALL)       ENTRY R0=A(PGM),R1=A(PARMLIST)
ZCVT_CMP64R32       DC V(CMP64R32)   ENTRY COMPARE R0-1=FLD1 R2-3=FLD2
ZCVT_CVTLBTQ        DC V(CVTLBTQ)    ENTRY CVT LB IN F4-6 TO Q IN R0-1
ZCVT_CVTLDTP        DC V(CVTLDTP)    ENTRY CVT LD IN F0-2 TO PL31 R0-1
ZCVT_CVTQTLB        DC V(CVTQTLB)    ENTRY CVT Q IN R0-1 TO LB IN F4-6
ZCVT_DIV64R32       DC V(DIV64R32)   ENTRY DIVIDE R0-1=N64, R2-3=MAX64
ZCVT_DIVQ128        DC V(DIVQ128)    ENTRY DIVIDE Q128 R0-R1 BY R2-R3
ZCVT_GOBACK         DC V(GOBACK)     ENTRY R1=RC
ZCVT_MPYQ128        DC V(MPYQ128)    ENTRY MULTIPLY Q128 R0-R1 BY R2-R3
ZCVT_OSE64R32       DC V(OSE64R32)   ENTRY ON SIZE ERR R0-1=N, R2-3=MAX
ZCVT_PERFORM        DC V(PERFORM)    ENTRY R14=PGTAR,R0=PGEXT,R1=PMRET
ZCVT_PMCHECK        DC V(PMCHECK)    ENTRY R14=RETURN TO NEXT INSTR.
ZCVT_ROUNDF         DC V(ROUNDF)     ENTRY R0=REM,R1=QUO,R2=DIVISOR
ZCVT_STACKORG       DC V(STACKORG)   ENTRY PERFORM STACK ORIGIN
ZCVT_STACKPTR       DC V(STACKPTR)   ENTRY CUR ENTRY A(PG_END+4,RET)
ZCVT_STACKEND       DC V(STACKEND)   ENTRY PERFORM STACK END
ZCVT_STOPRUN        DC V(STOPRUN)    ENTRY R1=RC
ZCVT_TALPHAX        DC V(TALPHAX)    ENTRY TEST ALPHABETIC X
ZCVT_TNUMP          DC V(TNUMP)      ENTRY TEST NUMERIC P
ZCVT_TNUMX          DC V(TNUMX)      ENTRY TEST NUMERIC X
ZCVT_TNUMZ          DC V(TNUMZ)      ENTRY TEST NUMERIC Z
*
* ADDITIONAL SEPARATE MODULES LINKED WITH Z390NUC IN ZC390LIB.390
*
ZCVT_ABORT     DC V(ABORT)         MODULE  R1=ABORT ERROR MSG #
ZCVT_ABORT_ALTER   EQU    1 ABORT ALTER DUE TO BRC NOT FOUND AT TARGET
ZCVT_ABORT_CALL    EQU    2 ABORT DYNAMIC CALL - PGM NOT FOUND
ZCVT_ABORT_DISPLAY EQU    3 ABORT DISPLAY DUE TO BUFFER EXCEEDED
ZCVT_ABORT_OPEN    EQU    4 ABORT OPEN  INVALID DCB
ZCVT_ABORT_STACK   EQU    6 ABORT PEROFRM STACK OVERFLOW
ZCVT_ABORT_VERSION EQU    7 ABORT ZC390NUC INIT ZCOBOL VERSION ERROR
ZCVT_ABORT_INT128  EQU    8 ABORT INTEGER 128 CONVERSION OVERFLO
ZCVT_ABORT_DIVQ    EQU    9 ABORT DIVIDE Q IF DIVISOR 0 OR > 2**63
ZCVT_ABORT_CICS    EQU   10 ABORT THIS PGM REQUIRES EXEC CICS TRANS MGR
ZCVT_ABORT_ACCEPT  EQU   11 ABORT ACCEPT EOF
ZCVT_ABORT_MAXERR  EQU   11 ABORT MAX ERROR CODE
ZCVT_ACCEPT    DC V(ACCEPT)        MODULE  R1=A(TYPE,FLD_ADD,FLD_LEN)
ZCVT_ACCEPT_DEFAULT EQU   1 INPUT DEFAULT DDNAME=SYSIN
ZCVT_ACCEPT_CONSOLE EQU   2 INPUT VIA WTOR FROM CONSOLE
ZCVT_ACCEPT_DDNAME  EQU   3 INPUT FROM DDNAME WITH DDNAME ADDR IN R3
ZCVT_ACCEPT_DATE    EQU   4 RETURN DAY OF WEEK PIC 9(8) MMDDYYYY
ZCVT_ACCEPT_TIME    EQU   5 RETURN DAY OF WEEK PIC 9(8) HHMMSSTH
ZCVT_ACCEPT_DOW     EQU   6 RETURN DAY OF WEEK PIC 9 1-7
ZCVT_DISPLAY   DC V(DISPLAY)       MODULE  R1=A(ADDR,LEN,TYPE)
ZCVT_INSPECT   DC V(INSPECT)       MODULE  R0=TYPE,R1=PARMLIST
ZCVT_TALLYING      EQU   0 INSPECT TALLYING
ZCVT_REPLACING     EQU   4 INSPECT REPLACING
ZCVT_CONVERTING    EQU   8 INSPECT CONVERTING
*
* SHARED DATA AREAS
*
ZCVT_PVTMAXDL  DS H          MAXIMUM DISPLAY LINE LENGTH  RPI 1118
               DS 0D
ZCVT_ZERO      DC XL16'00'   BINARY ZEROS
ZCVT_HIGH_VALUES DC 0XL16,16X'FF' BINARY FF'S     RPI 1181
ZCVT_PWORK     DS PL8        CVD/CVB WORK
ZCVT_PWORK1    DS PL16       DIV DIVIDEND, CVDG/CVBG WORK
ZCVT_PWORK2    DS PL16       DIV DIVISOR
ZCVT_PWORK3    DS PL16       DIV QUOTIENT
ZCVT_PWORK4    DS PL16       DIV REMAINDER
ZCVT_NDDX      DS XL16       DIV DIVIDEND HOLD AREA
ZCVT_WORKAREA  DS XL256      GEN_INSPECT PARMS, GEN_EDIT WORK, ETC.
*
* END OF ZC390CVT
*
ZCVT_END   EQU   *
ZC390PVT DSECT 
PVTPGM   DS    CL8  ZCOBOL PGM NAME
PVTDATE  DS    CL8  ZCOBOL COMPILE DATE
PVTTIME  DS    CL8  ZCOBOL COMPILE TIME
PVTVER   DS    CL8  ZCOBOL COMPILER VERSION
PVTCICS  DS    C    ZCOBOL EXEC CICS PGM
PVTEXTND DS    C    ZCOBOL EXTENDED PRECISION
PVTTRUNC DS    C    ZCOBOL TRUNCATE TO PICTURE
PVTR64   DS    C    ZCOBOL USE 64 BIT REGISTERS
PVTMAXDL DS    H    ZCOBOL MAX DISPLAY LINE LENGTH
         DS    XL10 RESERVED
DFHEISTG DSECT 
         DS    18F  SAVE AREA
DFHEIEIB DS    A    EIB POINTER
DFHEICAP DS    A    COMMAREA POINTER
DFHEICAL DS    H    COMMAREA LENGTH, COPY OF EIBCALEN
DFHEILEN DS    A    LENGTH OF DSA SET BY DFHEIENT
DFHEIAID DS    A    ADDRESS OF HANDLE AID BLOCK (DSECT=DFHADBLK)
DFHEIHCN DS    A    ADDRESS OF HANDLE CONDITION BLOCK (DSECT=DFHHCBLK)
DFHEIINV DS    CL8  INVOKING PROGRAM FOR ASSIGN
DFHEIRET DS    CL8  RETURN PROGRAM FOR ASSIGN
DFHEICHN DS    CL16 CHANNEL FOR ASSIGN
DFHEIUSR DS    0D   USER PROGRAM STORAGE (SEE DFHEIEND FOR END)
ZC_WS    EQU   DFHEISTG
*         ENVIRONMENT DIVISION.
*         DATA DIVISION.
         PRINT DATA
*         WORKING-STORAGE SECTION.
*         77  STCKTIME PIC 9(15)  COMP-3.
*         01  FILLER REDEFINES STCKTIME.
*             02  STCKBAD  PIC X.
*             02  FILLER   PIC X(7).
*         77  SBA3     PIC X(3)   VALUE X'11C260'.
*         77  SBA4     PIC X(3)   VALUE X'11C3F0'.
*         77  SBA5     PIC X(3)   VALUE X'11C540'.
*         77  SBA6     PIC X(3)   VALUE X'11C650'.
*         77  SBA7     PIC X(3)   VALUE X'11C760'.
*         77  SBA8     PIC X(3)   VALUE X'11C8F0'.
*         77  SBA9     PIC X(3)   VALUE X'114A40'.
*         77  SBA10    PIC X(3)   VALUE X'114B50'.
*         77  SBA11    PIC X(3)   VALUE X'114C60'.
*         77  SBA12    PIC X(3)   VALUE X'114DF0'.
*         77  SBA13    PIC X(3)   VALUE X'114F40'.
*         77  SBA14    PIC X(3)   VALUE X'115050'.
*         77  SBA15    PIC X(3)   VALUE X'11D160'.
*         77  SBA16    PIC X(3)   VALUE X'11D2F0'.
*         77  SBA17    PIC X(3)   VALUE X'11D440'.
*         77  SBA18    PIC X(3)   VALUE X'11D550'.
*         77  SBA19    PIC X(3)   VALUE X'11D660'.
*         01  TDBEF.
*             02  FILLER   PIC X     VALUE X'C3'.
*             02  TDBEFSBA PIC X(3).
*             02  FILLER   PIC X(13) VALUE 'EIBTIME/DATE '.
*             02  FILLER   PIC X(16) VALUE 'AT TASK START   '.
*             02  TIMEBEF  PIC 9(8).
*             02  FILLER   REDEFINES TIMEBEF.
*                 03  TIMEBEFS PIC X(2).
*                 03  FILLER   PIC X(6).
*             02  DATEBEF  PIC 9(8).
*             02  FILLER   REDEFINES DATEBEF.
*                 03  DATEBEFS PIC X.
*                 03  FILLER   PIC X(7).
*         77  TDBEFLEN PIC 9(4) COMP.
*         01  TDAFT.
*             02  FILLER   PIC X     VALUE X'C3'.
*             02  TDAFTSBA PIC X(3).
*             02  FILLER   PIC X(13) VALUE 'EIBTIME/DATE '.
*             02  TIMESPEC PIC X(16) VALUE 'AFTER TASK START'.
*             02  TIMEAFT  PIC 9(8).
*             02  FILLER   REDEFINES TIMEAFT.
*                 03  TIMEAFTS PIC X(2)  VALUE SPACES.
*                 03  TIMEAFDL PIC X(6)  VALUE SPACES.
*             02  FILLER   REDEFINES TIMEAFT.
*                 03  FILLER   PIC X(6).
*                 03  TIMEAF59 PIC X(2).
*             02  DATEAFT  PIC 9(8).
*             02  FILLER   REDEFINES DATEAFT.
*                 03  DATEAFTS PIC X.
*                 03  FILLER   PIC X(7).
*             02  STCKAFT  PIC 9(16).
*             02  FILLER   REDEFINES STCKAFT.
*                 03  STCKAFTS PIC X     VALUE SPACE.
*                 03  FILLER   PIC X(15) VALUE SPACES.
*         77  TDAFTLEN PIC 9(4) COMP.
*         01  FORMAT.
*             02  FILLER   PIC X     VALUE X'C3'.
*             02  FMTSBA   PIC X(3).
*             02  FILLER   PIC X(11) VALUE 'FORMATTIME '.
*             02  FMTDATE1 PIC X(10) VALUE SPACES.
*             02  FILLER   PIC X     VALUE SPACE.
*             02  FMTDATE2 PIC X(10) VALUE SPACES.
*             02  FILLER   PIC X     VALUE SPACE.
*             02  FMTDATE3 PIC X(10) VALUE SPACES.
*             02  FILLER   PIC X     VALUE SPACE.
*             02  FMTDATE4 PIC X(10) VALUE SPACES.
*             02  FILLER   PIC X     VALUE SPACE.
*             02  FMTDATE5 PIC X(10) VALUE SPACES.
*             02  FILLER   PIC X     VALUE SPACE.
*             02  FMTDATE6 PIC X(10) VALUE SPACES.
*         77  FORMATL  PIC 9(4) COMP.
*         01  FORMAT2.
*             02  FILLER   PIC X     VALUE X'C3'.
*             02  FMT2SBA  PIC X(3).
*             02  FILLER   PIC X(11) VALUE 'FORMATTIME '.
*             02  DAYCOUNT PIC Z(5)9.
*             02  FILLER   PIC X     VALUE SPACE.
*             02  DAYWEEK  PIC ZZZ9.
*             02  FILLER   PIC X     VALUE SPACE.
*             02  DAYMONTH PIC ZZZ9.
*             02  FILLER   PIC X     VALUE SPACE.
*             02  MONTHYR  PIC ZZZ9.
*             02  FILLER   PIC X     VALUE SPACE.
*             02  YEARNUM  PIC Z(5)9.
*             02  FILLER   PIC X     VALUE SPACE.
*         77  FORMAT2L PIC 9(4) COMP.
*         01  FORMAT3.
*             02  FILLER   PIC X     VALUE X'C3'.
*             02  FMT3SBA  PIC X(3).
*             02  FILLER   PIC X(11) VALUE 'FORMATTIME '.
*             02  DSTRING  PIC X(25) VALUE SPACES.
*             02  FILLER   PIC X     VALUE SPACE.
*             02  FMTTIME1 PIC X(6)  VALUE SPACES.
*             02  FILLER   PIC X     VALUE SPACE.
*             02  FMTTIME2 PIC X(8)  VALUE SPACES.
*             02  FILLER   PIC X     VALUE SPACE.
*             02  FMTTIME3 PIC X(8)  VALUE SPACES.
*         77  FORMAT3L PIC 9(4) COMP.
*         01  ICCOND.
*             02  FILLER   PIC X     VALUE X'C3'.
*             02  ICSBA    PIC X(3).
*             02  ICFUNC   PIC X(10) VALUE 'DELAY     '.
*             02  FILLER   PIC X     VALUE SPACE.
*             02  FHANDCON.
*                 03  FILLER   PIC X(7) VALUE SPACES.
*                 03  FHAINV   PIC X(2).
*                 03  FILLER   PIC X(3) VALUE SPACES.
*             02  FILLER   PIC X(18) VALUE ' CONDITION RAISED '.
*         77  FHANDL   PIC 9(4) COMP.
*         01  ENDMSG.
*             02  FILLER   PIC X(4)  VALUE X'C3115CF0'.
*             02  FILLER   PIC X(31)
*                          VALUE 'TESTICC1 COMPLETED, PRESS CLEAR'.
*         77  ENDMSGL  PIC 9(4) COMP.
*         01  FILLER.
*             02  WORK1A   PIC 9(4).
*             02  FILLER   REDEFINES WORK1A.
*                 03  FILLER   PIC X(2).
*                 03  WORK1B   PIC X(2).
*         77  SECS19   PIC X(6)  VALUE '000019'.
*         77  DAYCNT   PIC 9(9)  COMP.
*         77  DAYOFWK  PIC 9(9)  COMP.
*         77  DAYOFMN  PIC 9(9)  COMP.
*         77  MONTH    PIC 9(9)  COMP.
*         77  YEAR     PIC 9(9)  COMP.
*         77  MYSEP    PIC X     VALUE ':'.
*      * GO TO DEPENDING CONTROL
*      *   1=IC01RTN1
*      *   2=IC01RTN2
*      *   3=IC01RTN3
*      *   4=IC01RTN4
*      *   5=IC01RTN5
*         77  DEPCTRL   PIC 9(4) COMP.
*         LINKAGE SECTION.
*         77  MYCWA    PIC X(50).
*         PROCEDURE DIVISION USING DFHEIBLK DFHCOMMAREA.
*      * EXEC INTERFACE BLOCK
*            02  EIBHEAD  PIC X(8).
*            02  EIBTIME  PIC 9(7) COMP-3.
*            02  EIBDATE  PIC 9(7) COMP-3.
*            02  EIBTRNID PIC X(4).
*            02  EIBTASKN PIC 9(7) COMP-3.
*            02  EIBTRMID PIC X(4).
*            02  FILLER   PIC X(2).
*            02  EIBCPOSN PIC 9(4) COMP.
*            02  EIBCALEN PIC 9(4) COMP.
*            02  EIBAID   PIC X.
*            02  EIBFN    PIC 9(4) COMP.
*            02  EIBRCODE PIC X(6).
*            02  EIBREQID PIC X(8).
*            02  EIBDS    PIC X(8).
*            02  EIBRSRCE PIC X(8).
*            02  EIBRESP  PIC 9(9) COMP.
*            02  EIBRESP2 PIC 9(9) COMP.
*            02  EIBPROG  PIC X(8).
*            02  EIBDTFRM PIC X.
         PRINT LIST,GEN,LISTUSE TURN PRINT LISTING ON FOR USER CODE GEN
TESTICC1 CSECT                SWITCH TO PROCEDURE CODE AHEAD OF WS
         L     ZC_R0,0(ZC_R2)          LOAD PARM ADDR FROM PARMLIST
         ST    ZC_R0,ZC_DFHEIBLK_PTR STORE PARM POINTER
         L     ZC_R0,4(ZC_R2)          LOAD PARM ADDR FROM PARMLIST
         ST    ZC_R0,ZC_DFHCOMMAREA_PTR STORE PARM POINTER
         LARL  ZC_R1,=XL4'11C260'
          MVC   SBA3,1(ZC_R1)
         LARL  ZC_R1,=XL4'11C3F0'
          MVC   SBA4,1(ZC_R1)
         LARL  ZC_R1,=XL4'11C540'
          MVC   SBA5,1(ZC_R1)
         LARL  ZC_R1,=XL4'11C650'
          MVC   SBA6,1(ZC_R1)
         LARL  ZC_R1,=XL4'11C760'
          MVC   SBA7,1(ZC_R1)
         LARL  ZC_R1,=XL4'11C8F0'
          MVC   SBA8,1(ZC_R1)
         LARL  ZC_R1,=XL4'114A40'
          MVC   SBA9,1(ZC_R1)
         LARL  ZC_R1,=XL4'114B50'
          MVC   SBA10,1(ZC_R1)
         LARL  ZC_R1,=XL4'114C60'
          MVC   SBA11,1(ZC_R1)
         LARL  ZC_R1,=XL4'114DF0'
          MVC   SBA12,1(ZC_R1)
         LARL  ZC_R1,=XL4'114F40'
          MVC   SBA13,1(ZC_R1)
         LARL  ZC_R1,=XL4'115050'
          MVC   SBA14,1(ZC_R1)
         LARL  ZC_R1,=XL4'11D160'
          MVC   SBA15,1(ZC_R1)
         LARL  ZC_R1,=XL4'11D2F0'
          MVC   SBA16,1(ZC_R1)
         LARL  ZC_R1,=XL4'11D440'
          MVC   SBA17,1(ZC_R1)
         LARL  ZC_R1,=XL4'11D550'
          MVC   SBA18,1(ZC_R1)
         LARL  ZC_R1,=XL4'11D660'
          MVC   SBA19,1(ZC_R1)
         MVI   ZC_FILLER_V1,X'C3'
         LARL  ZC_R1,=CL14'EIBTIME/DATE '
          MVC   ZC_FILLER_V2,0(ZC_R1)
         LARL  ZC_R1,=CL16'AT TASK START   '
          MVC   ZC_FILLER_V3,0(ZC_R1)
         MVI   ZC_FILLER_V4,X'C3'
         LARL  ZC_R1,=CL14'EIBTIME/DATE '
          MVC   ZC_FILLER_V5,0(ZC_R1)
         LARL  ZC_R1,=CL16'AFTER TASK START'
          MVC   TIMESPEC,0(ZC_R1)
         MVI   TIMEAFTS,C' '
         MVC   TIMEAFTS+1(2-1),TIMEAFTS
         MVI   TIMEAFDL,C' '
         MVC   TIMEAFDL+1(6-1),TIMEAFDL
         MVI   STCKAFTS,C' '
         MVI   ZC_FILLER_V6,C' '
         MVC   ZC_FILLER_V6+1(15-1),ZC_FILLER_V6
         MVI   ZC_FILLER_V7,X'C3'
         LARL  ZC_R1,=CL12'FORMATTIME '
          MVC   ZC_FILLER_V8,0(ZC_R1)
         MVI   FMTDATE1,C' '
         MVC   FMTDATE1+1(10-1),FMTDATE1
         MVI   ZC_FILLER_V9,C' '
         MVI   FMTDATE2,C' '
         MVC   FMTDATE2+1(10-1),FMTDATE2
         MVI   ZC_FILLER_V10,C' '
         MVI   FMTDATE3,C' '
         MVC   FMTDATE3+1(10-1),FMTDATE3
         MVI   ZC_FILLER_V11,C' '
         MVI   FMTDATE4,C' '
         MVC   FMTDATE4+1(10-1),FMTDATE4
         MVI   ZC_FILLER_V12,C' '
         MVI   FMTDATE5,C' '
         MVC   FMTDATE5+1(10-1),FMTDATE5
         MVI   ZC_FILLER_V13,C' '
         MVI   FMTDATE6,C' '
         MVC   FMTDATE6+1(10-1),FMTDATE6
         MVI   ZC_FILLER_V14,X'C3'
         LARL  ZC_R1,=CL12'FORMATTIME '
          MVC   ZC_FILLER_V15,0(ZC_R1)
         MVI   ZC_FILLER_V16,C' '
         MVI   ZC_FILLER_V17,C' '
         MVI   ZC_FILLER_V18,C' '
         MVI   ZC_FILLER_V19,C' '
         MVI   ZC_FILLER_V20,C' '
         MVI   ZC_FILLER_V21,X'C3'
         LARL  ZC_R1,=CL12'FORMATTIME '
          MVC   ZC_FILLER_V22,0(ZC_R1)
         MVI   DSTRING,C' '
         MVC   DSTRING+1(25-1),DSTRING
         MVI   ZC_FILLER_V23,C' '
         MVI   FMTTIME1,C' '
         MVC   FMTTIME1+1(6-1),FMTTIME1
         MVI   ZC_FILLER_V24,C' '
         MVI   FMTTIME2,C' '
         MVC   FMTTIME2+1(8-1),FMTTIME2
         MVI   ZC_FILLER_V25,C' '
         MVI   FMTTIME3,C' '
         MVC   FMTTIME3+1(8-1),FMTTIME3
         MVI   ZC_FILLER_V26,X'C3'
         LARL  ZC_R1,=CL10'DELAY     '
          MVC   ICFUNC,0(ZC_R1)
         MVI   ZC_FILLER_V27,C' '
         MVI   ZC_FILLER_V28,C' '
         MVC   ZC_FILLER_V28+1(7-1),ZC_FILLER_V28
         MVI   ZC_FILLER_V29,C' '
         MVC   ZC_FILLER_V29+1(3-1),ZC_FILLER_V29
         LARL  ZC_R1,=CL18' CONDITION RAISED '
          MVC   ZC_FILLER_V30,0(ZC_R1)
         LARL  ZC_R1,=XL4'C3115CF0'
          MVC   ZC_FILLER_V31,0(ZC_R1)
         LARL  ZC_R1,=CL32'TESTICC1 COMPLETED, PRESS CLEAR'
          MVC   ZC_FILLER_V32,0(ZC_R1)
         LARL  ZC_R1,=CL6'000019'
          MVC   SECS19,0(ZC_R1)
         MVI   MYSEP,C':'
         LARL  ZC_R1,=CL8'ZCWSID1'
          MVC   ZC_WS_ID1,0(ZC_R1)
         MVI   ZC_FILLER_V33,C' '
         MVI   ZC_FILLER_V34,C' '
         MVI   ZC_FILLER_V35,C' '
         MVI   ZC_FILLER_V36,C' '
         MVI   ZC_FILLER_V37,C' '
          MVI   TRUE,C'1'
          MVI   FALSE,C'0'
          MVHHI RETURN_CODE,0
*
*             MOVE LENGTH OF TDBEF    TO TDBEFLEN.
*ZC    203         MOVE  LENGTH,OF,TDBEF,TO,TDBEFLEN
          MVHHI TDBEFLEN,49
*             MOVE LENGTH OF TDAFT    TO TDAFTLEN.
*ZC    204         MOVE  LENGTH,OF,TDAFT,TO,TDAFTLEN
          MVHHI TDAFTLEN,65
*             MOVE LENGTH OF FORMAT   TO FORMATL.
*ZC    205         MOVE  LENGTH,OF,FORMAT,TO,FORMATL
          MVHHI FORMATL,80
*             MOVE LENGTH OF FORMAT2  TO FORMAT2L.
*ZC    206         MOVE  LENGTH,OF,FORMAT2,TO,FORMAT2L
          MVHHI FORMAT2L,44
*             MOVE LENGTH OF FORMAT3  TO FORMAT3L.
*ZC    207         MOVE  LENGTH,OF,FORMAT3,TO,FORMAT3L
          MVHHI FORMAT3L,65
*             MOVE LENGTH OF ICCOND   TO FHANDL.
*ZC    208         MOVE  LENGTH,OF,ICCOND,TO,FHANDL
          MVHHI FHANDL,45
*             MOVE LENGTH OF ENDMSG   TO ENDMSGL.
*      * DISPLAY TASK START TIME
*ZC    209         MOVE  LENGTH,OF,ENDMSG,TO,ENDMSGL
          MVHHI ENDMSGL,35
*             EXEC CICS ADDRESS CWA(ADDRESS OF MYCWA) END-EXEC.
*ZC    211         EXEC  CICS,ADDRESS,CWA(ADDRESS,OF,MYCWA)
         LARL  R1,P0202         ADDRESS SOURCE
         LARL  R15,P0202        ADDRESS TARGET
         XC    0(P0202END-P0202,R15),0(R1) XC IT
         LARL  R1,=X'0202'         ADDRESS SOURCE
         LARL  R15,P0202FN        ADDRESS TARGET AS LABEL
         MVC   0(L'P0202FN,R15),0(R1) MVC IT
         LARL  R15,P0202CAP       ADDRESS TARGET
         MVC   0(4,R15),DFHEICAP  SET COMMAREA ADDRESS
         LA    R0,ZC_MYCWA_PTR ADDRESS OF L-S CWA POINTER
         LARL  R1,P0202ACW         ADDRESS TARGET
         ST    R0,0(R1)      ST IT
         LA    R0,DFHEIHCN        ADDRESS OF DFHEIHCN
         LARL  R1,P0202HCN         ADDRESS TARGET
         ST    R0,0(R1)      ST IT
         LARL  R1,P0202EIB         ADDRESS TARGET
         ST    DFHEIBR,0(R1)      ST IT
         LARL  R1,P0202TCT         ADDRESS TARGET
         ST    TCTTEAR,0(R1)      ST IT
         LARL  R1,P0202EDS         ADDRESS TARGET
         ST    R13,0(R1)      ST IT
         L     R0,DFHEILEN        DSA LENGTH
         LARL  R1,P0202EDL         ADDRESS TARGET
         STH   R0,0(R1)      STH IT
         LA    R0,DFHEIUSR        DSA USER AREA
         SR    R0,R13             R0=CICS DSA LENGTH
         LARL  R1,P0202EDC         ADDRESS TARGET
         STH   R0,0(R1)      STH IT
         LARL  R0,P0202EDF_0754 ADDRESS ORIGIN FOR CEDF
         LARL  R1,P0202EDF         ADDRESS TARGET
         ST    R0,0(R1)      ST IT
         L     R15,TCTTELCL       R15=LCL MODULE INDEXER
         LARL  R1,=A(P0202)       R1=LCL MODULE PARAMETER LIST
P0202EDF_0754    DS 0H
         BAKR  0,R15              STACK REGS AND GO
         J     P0202BYP_0754   EXIT
*
P0202    DS    0H
P0202FN  DS    XL2                FUNCTION CODE
P0202EIB DS    AL4                EIB
P0202TCT DS    AL4                TCTTE
P0202HCN DS    AL4                A(DFHEIHCN)
P0202CAP DS    AL4                DFHEICAP
P0202ACM DS    AL4                LABEL ADDRESS FOR COMMAREA
P0202ACW DS    AL4                LABEL ADDRESS FOR CWA
P0202AEI DS    AL4                LABEL ADDRESS FOR EIB
P0202EDF DS    AL4                ORIGIN ADDRESS FOR CEDF
P0202EDS DS    AL4                DSA ADDRESS FOR EDF
P0202EDC DS    XL2                CICS DSA LENGTH FOR EDF
P0202EDL DS    XL2                DSA LENGTH FOR EDF
P0202NED DS    X                  FF=NOEDF
         DS    X
P0202RSP DS    AL4                RESP
P0202RS2 DS    AL4                RESP2
P0202END EQU   *                  END MARKER
*
P0202BYP_0754    DS 0H
*      *  MVC   TDBEFSBA,SBA3      1ST SBA
*             MOVE SBA3 TO TDBEFSBA.
*      *  MVC   TIMEBEF,=X'F020202020202020' MOVE EDIT WORD
*      *  ED    TIMEBEF,EIBTIME    EDIT EIBTIME
*ZC    213         MOVE  SBA3,TO,TDBEFSBA
         MVC   TDBEFSBA,SBA3  ALIGN LEFT X OTHER
*             MOVE EIBTIME TO TIMEBEF.
*      *  MVI   TIMEBEF,C' '       BLANK 1ST BYTE
*      *  MVI   TIMEBEF+1,C' '     BLANK 2ND BYTE
*ZC    216         MOVE  EIBTIME,TO,TIMEBEF
         MVI   TIMEBEF,C'0'
         UNPK  1+TIMEBEF(7),0+EIBTIME(4) UNPK #1 NORMAL
         OI    8-1+TIMEBEF,X'F0'  RPI 1065
*             MOVE SPACES TO TIMEBEFS
*      *  MVC   DATEBEF,=X'F020202020202020' MOVE EDIT WORD
*      *  ED    DATEBEF,EIBDATE    EDIT EIBDATE
*ZC    219         MOVE  SPACES,TO,TIMEBEFS
         MVI   TIMEBEFS,C' '
         MVC   TIMEBEFS+1(2-1),TIMEBEFS
*             MOVE EIBDATE TO DATEBEF.
*      *  MVI   DATEBEF,C' '       BLANK 1ST BYTE
*ZC    222         MOVE  EIBDATE,TO,DATEBEF
         MVI   DATEBEF,C'0'
         UNPK  1+DATEBEF(7),0+EIBDATE(4) UNPK #1 NORMAL
         OI    8-1+DATEBEF,X'F0'  RPI 1065
*             MOVE SPACE TO DATEBEFS.
*ZC    224         MOVE  SPACE,TO,DATEBEFS
         MVI   DATEBEFS,C' '
*             EXEC CICS SEND FROM(TDBEF) LENGTH(TDBEFLEN) END-EXEC.
*ZC    225         EXEC  CICS,SEND,FROM(TDBEF),LENGTH(TDBEFLEN)
         LARL  R1,P0404         ADDRESS SOURCE
         LARL  R15,P0404        ADDRESS TARGET
         XC    0(P0404END-P0404,R15),0(R1) XC IT
         LARL  R1,=X'0404'         ADDRESS SOURCE
         LARL  R15,P0404FN        ADDRESS TARGET AS LABEL
         MVC   0(L'P0404FN,R15),0(R1) MVC IT
         LARL  R15,P0404LEN       ADDRESS TARGET
         MVC   0(2,R15),TDBEFLEN   SET LENGTH FROM LABEL
         LA    R0,TDBEF           FROM ADDRESS
         LARL  R1,P0404FRM         ADDRESS TARGET
         ST    R0,0(R1)      ST IT
         LARL  R1,P0404EIB         ADDRESS TARGET
         ST    DFHEIBR,0(R1)      ST IT
         LARL  R1,P0404TCT         ADDRESS TARGET
         ST    TCTTEAR,0(R1)      ST IT
         LARL  R1,P0404EDS         ADDRESS TARGET
         ST    R13,0(R1)      ST IT
         L     R0,DFHEILEN        DSA LENGTH
         LARL  R1,P0404EDL         ADDRESS TARGET
         STH   R0,0(R1)      STH IT
         LA    R0,DFHEIUSR        DSA USER AREA
         SR    R0,R13             R0=CICS DSA LENGTH
         LARL  R1,P0404EDC         ADDRESS TARGET
         STH   R0,0(R1)      STH IT
         LARL  R0,P0404EDF_0805 ADDRESS ORIGIN FOR CEDF
         LARL  R1,P0404EDF         ADDRESS TARGET
         ST    R0,0(R1)      ST IT
         L     R15,TCTTELCL       R15=LCL MODULE INDEXER
         LARL  R1,=A(P0404)       R1=LCL MODULE PARAMETER LIST
P0404EDF_0805    DS 0H
         BAKR  0,R15              STACK REGS AND GO
         LARL  R1,P0404NOH         ADDRESS TARGET
         CLI   0(R1),X'FF'      CLI IT
         JE    P0404BYP_0805   EXIT IF IT IS
         OC    EIBRESP,EIBRESP    ANY BAD RESPONSE ?
         JZ    P0404BYP_0805   EXIT IF NONE
* INVREQ
         DC    AL3(0),C'ABEND'    MARKER FOR Z390KCP ESTAE
         DC    AL4(P0404BYP_0805) ENTRYPOINT FOR IGNORE CONDITION
*
         J     P0404BYP_0805   EXIT
*
P0404    DS    0H
P0404FN  DS    XL2                FUNCTION CODE
P0404EIB DS    AL4                EIB
P0404TCT DS    AL4                TCTTE
P0404FRM DS    AL4                FROM
P0404LEN DS    XL2                LENGTH
P0404EDF DS    AL4                ORIGIN ADDRESS FOR CEDF
P0404EDS DS    AL4                DSA ADDRESS FOR EDF
P0404EDC DS    XL2                CICS DSA LENGTH FOR EDF
P0404EDL DS    XL2                DSA LENGTH FOR EDF
P0404NED DS    X                  FF=NOEDF
         DS    X
P0404NOH DS    X                  FF=NOHANDLE
         DS    X
P0404RSP DS    AL4                RESP
P0404RS2 DS    AL4                RESP2
P0404END EQU   *                  END MARKER
*
P0404BYP_0805    DS 0H
*      * DISPLAY TIME NOW
*             EXEC CICS ASKTIME END-EXEC.
*ZC    227         EXEC  CICS,ASKTIME
         LARL  R1,P1002         ADDRESS SOURCE
         LARL  R15,P1002        ADDRESS TARGET
         XC    0(P1002END-P1002,R15),0(R1) XC IT
         LARL  R1,=X'1002'         ADDRESS SOURCE
         LARL  R15,P1002FN        ADDRESS TARGET AS LABEL
         MVC   0(L'P1002FN,R15),0(R1) MVC IT
         LARL  R1,P1002EIB         ADDRESS TARGET
         ST    DFHEIBR,0(R1)      ST IT
         LARL  R1,P1002TCT         ADDRESS TARGET
         ST    TCTTEAR,0(R1)      ST IT
         LARL  R1,P1002EDS         ADDRESS TARGET
         ST    R13,0(R1)      ST IT
         L     R0,DFHEILEN        DSA LENGTH
         LARL  R1,P1002EDL         ADDRESS TARGET
         STH   R0,0(R1)      STH IT
         LA    R0,DFHEIUSR        DSA USER AREA
         SR    R0,R13             R0=CICS DSA LENGTH
         LARL  R1,P1002EDC         ADDRESS TARGET
         STH   R0,0(R1)      STH IT
         LARL  R0,P1002EDF_0819 ADDRESS ORIGIN FOR CEDF
         LARL  R1,P1002EDF         ADDRESS TARGET
         ST    R0,0(R1)      ST IT
         L     R15,TCTTELCL       R15=LCL MODULE INDEXER
         LARL  R1,=A(P1002)       R1=LCL MODULE PARAMETER LIST
P1002EDF_0819    EQU *
         BAKR  0,R15              STACK REGS AND GO
         J     P1002BYP_0819   EXIT
*
P1002    DS    0H
P1002FN  DS    XL2                FUNCTION CODE
P1002EIB DS    AL4                EIB
P1002TCT DS    AL4                TCTTE
P1002EDF DS    AL4                ORIGIN ADDRESS FOR CEDF
P1002EDS DS    AL4                DSA ADDRESS FOR EDF
P1002EDC DS    XL2                CICS DSA LENGTH FOR EDF
P1002EDL DS    XL2                DSA LENGTH FOR EDF
P1002NED DS    X                  FF=NOEDF
         DS    X
P1002ABS DS    X                  FF=ABSTIME REQUESTED
         DS    X
P1002NOH DS    X                  FF=NOHANDLE
         DS    X
P1002RSP DS    AL4                RESP
P1002RS2 DS    AL4                RESP2
P1002END EQU   *                  END MARKER
*
P1002BYP_0819    DS 0H
*      *  MVC   TDAFTSBA,SBA4      2ND SBA
*             MOVE SBA4 TO TDAFTSBA.
*      *  MVC   TIMEAFT,=X'F020202020202020' MOVE EDIT WORD
*      *  ED    TIMEAFT,EIBTIME    EDIT EIBTIME
*ZC    229         MOVE  SBA4,TO,TDAFTSBA
         MVC   TDAFTSBA,SBA4  ALIGN LEFT X OTHER
*             MOVE EIBTIME TO TIMEAFT.
*      *  MVI   TIMEAFT,C' '       BLANK 1ST BYTE
*      *  MVI   TIMEAFT+1,C' '     BLANK 2ND BYTE
*ZC    232         MOVE  EIBTIME,TO,TIMEAFT
         MVI   TIMEAFT,C'0'
         UNPK  1+TIMEAFT(7),0+EIBTIME(4) UNPK #1 NORMAL
         OI    8-1+TIMEAFT,X'F0'  RPI 1065
*             MOVE SPACES TO TIMEAFTS.
*      *  MVC   DATEAFT,=X'F020202020202020' MOVE EDIT WORD
*      *  ED    DATEAFT,EIBDATE    EDIT EIBDATE
*ZC    235         MOVE  SPACES,TO,TIMEAFTS
         MVI   TIMEAFTS,C' '
         MVC   TIMEAFTS+1(2-1),TIMEAFTS
*             MOVE EIBDATE TO DATEAFT.
*      *  MVI   DATEAFT,C' '       BLANK 1ST BYTE
*ZC    238         MOVE  EIBDATE,TO,DATEAFT
         MVI   DATEAFT,C'0'
         UNPK  1+DATEAFT(7),0+EIBDATE(4) UNPK #1 NORMAL
         OI    8-1+DATEAFT,X'F0'  RPI 1065
*             MOVE SPACE TO DATEAFTS.
*      *  MVC   TIMESPEC,=C'AFTER TASK START'
*ZC    240         MOVE  SPACE,TO,DATEAFTS
         MVI   DATEAFTS,C' '
*             MOVE 'AFTER TASK START' TO TIMESPEC.
*ZC    242         MOVE  'AFTER TASK START',TO,TIMESPEC
         LARL  ZC_R1,=CL16'AFTER TASK START'
          MVC   TIMESPEC,0(ZC_R1)
*             EXEC CICS SEND FROM(TDAFT) LENGTH(TDAFTLEN) END-EXEC.
*ZC    243         EXEC  CICS,SEND,FROM(TDAFT),LENGTH(TDAFTLEN)
         LARL  R1,P0404         ADDRESS SOURCE
         LARL  R15,P0404        ADDRESS TARGET
         XC    0(P0404END-P0404,R15),0(R1) XC IT
         LARL  R1,=X'0404'         ADDRESS SOURCE
         LARL  R15,P0404FN        ADDRESS TARGET AS LABEL
         MVC   0(L'P0404FN,R15),0(R1) MVC IT
         LARL  R15,P0404LEN       ADDRESS TARGET
         MVC   0(2,R15),TDAFTLEN   SET LENGTH FROM LABEL
         LA    R0,TDAFT           FROM ADDRESS
         LARL  R1,P0404FRM         ADDRESS TARGET
         ST    R0,0(R1)      ST IT
         LARL  R1,P0404EIB         ADDRESS TARGET
         ST    DFHEIBR,0(R1)      ST IT
         LARL  R1,P0404TCT         ADDRESS TARGET
         ST    TCTTEAR,0(R1)      ST IT
         LARL  R1,P0404EDS         ADDRESS TARGET
         ST    R13,0(R1)      ST IT
         L     R0,DFHEILEN        DSA LENGTH
         LARL  R1,P0404EDL         ADDRESS TARGET
         STH   R0,0(R1)      STH IT
         LA    R0,DFHEIUSR        DSA USER AREA
         SR    R0,R13             R0=CICS DSA LENGTH
         LARL  R1,P0404EDC         ADDRESS TARGET
         STH   R0,0(R1)      STH IT
         LARL  R0,P0404EDF_0874 ADDRESS ORIGIN FOR CEDF
         LARL  R1,P0404EDF         ADDRESS TARGET
         ST    R0,0(R1)      ST IT
         L     R15,TCTTELCL       R15=LCL MODULE INDEXER
         LARL  R1,=A(P0404)       R1=LCL MODULE PARAMETER LIST
P0404EDF_0874    DS 0H
         BAKR  0,R15              STACK REGS AND GO
         LARL  R1,P0404NOH         ADDRESS TARGET
         CLI   0(R1),X'FF'      CLI IT
         JE    P0404BYP_0874   EXIT IF IT IS
         OC    EIBRESP,EIBRESP    ANY BAD RESPONSE ?
         JZ    P0404BYP_0874   EXIT IF NONE
* INVREQ
         DC    AL3(0),C'ABEND'    MARKER FOR Z390KCP ESTAE
         DC    AL4(P0404BYP_0874) ENTRYPOINT FOR IGNORE CONDITION
*
P0404BYP_0874    DS 0H
*      * DISPLAY TIME AFTER 9 SECS
*             EXEC CICS DELAY INTERVAL(9) END-EXEC.
*ZC    245         EXEC  CICS,DELAY,INTERVAL(9)
         LARL  R1,P1004         ADDRESS SOURCE
         LARL  R15,P1004        ADDRESS TARGET
         XC    0(P1004END-P1004,R15),0(R1) XC IT
         LARL  R1,=X'1004'         ADDRESS SOURCE
         LARL  R15,P1004FN        ADDRESS TARGET AS LABEL
         MVC   0(L'P1004FN,R15),0(R1) MVC IT
         LARL  R1,P1004INT         ADDRESS TARGET
         MVI   0(R1),X'FF'      MVI IT
         LARL  R1,=PL4'9'         ADDRESS SOURCE
         LARL  R15,P1004HMS        ADDRESS TARGET
         ZAP   0(L'P1004HMS,R15),0(4,R1) ZAP IT
         LARL  R1,P1004EIB         ADDRESS TARGET
         ST    DFHEIBR,0(R1)      ST IT
         LARL  R1,P1004TCT         ADDRESS TARGET
         ST    TCTTEAR,0(R1)      ST IT
         LARL  R1,P1004EDS         ADDRESS TARGET
         ST    R13,0(R1)      ST IT
         L     R0,DFHEILEN        DSA LENGTH
         LARL  R1,P1004EDL         ADDRESS TARGET
         STH   R0,0(R1)      STH IT
         LA    R0,DFHEIUSR        DSA USER AREA
         SR    R0,R13             R0=CICS DSA LENGTH
         LARL  R1,P1004EDC         ADDRESS TARGET
         STH   R0,0(R1)      STH IT
         LA    R0,DFHEIHCN        ADDRESS OF DFHEIHCN
         LARL  R1,P1004HCN         ADDRESS TARGET
         ST    R0,0(R1)      ST IT
         LARL  R0,P1004EDF_0887 ADDRESS ORIGIN FOR CEDF
         LARL  R1,P1004EDF         ADDRESS TARGET
         ST    R0,0(R1)      ST IT
         L     R15,TCTTELCL       R15=LCL MODULE INDEXER
         LARL  R1,=A(P1004)       R1=LCL MODULE PARAMETER LIST
P1004EDF_0887    EQU *
         BAKR  0,R15              STACK REGS AND GO
         LARL  R1,P1004NOH         ADDRESS TARGET
         CLI   0(R1),X'FF'      CLI IT
         JE    P1004BYP_0887   EXIT IF IT IS
         OC    EIBRESP,EIBRESP    ANY BAD RESPONSE ?
         JZ    P1004BYP_0887   EXIT IF NONE
* INVREQ, EXPIRED
         DC    AL3(0),C'ABEND'    MARKER FOR Z390KCP ESTAE
         DC    AL4(P1004BYP_0887) ENTRYPOINT FOR IGNORE CONDITION
*
P1004    DS    0H
P1004FN  DS    XL2                FUNCTION CODE
P1004EIB DS    AL4                EIB
P1004TCT DS    AL4                TCTTE
P1004INT DS    X                  FF=INTERVAL/TIME
         DS    X
P1004TME DS    X                  00=INTERVAL/FOR  FF=TIME/UNTIL
         DS    X
P1004HMS DS    PL4                0HHMMSS+
P1004IND DS    X                  FF=MORE THAN 1 PARM IN NEXT 3
         DS    X
P1004HRS DS    PL8                HOURS
P1004MIN DS    PL8                MINUTES
P1004SEC DS    PL8                SECONDS
P1004HCN DS    AL4                A(DFHEIHCN)
P1004REQ DS    CL8                REQID
P1004EDF DS    AL4                ORIGIN ADDRESS FOR CEDF
P1004EDS DS    AL4                DSA ADDRESS FOR EDF
P1004EDC DS    XL2                CICS DSA LENGTH FOR EDF
P1004EDL DS    XL2                DSA LENGTH FOR EDF
P1004NED DS    X                  FF=NOEDF
         DS    X
P1004NOH DS    X                  FF=NOHANDLE
         DS    X
P1004RSP DS    AL4                RESP
P1004RS2 DS    AL4                RESP2
P1004END EQU   *                  END MARKER
*
P1004BYP_0887    DS 0H
*             EXEC CICS ASKTIME ABSTIME(STCKTIME) END-EXEC.
*ZC    246         EXEC  CICS,ASKTIME,ABSTIME(STCKTIME)
         LARL  R1,P1002         ADDRESS SOURCE
         LARL  R15,P1002        ADDRESS TARGET
         XC    0(P1002END-P1002,R15),0(R1) XC IT
         LARL  R1,=X'1002'         ADDRESS SOURCE
         LARL  R15,P1002FN        ADDRESS TARGET AS LABEL
         MVC   0(L'P1002FN,R15),0(R1) MVC IT
         LARL  R1,P1002EIB         ADDRESS TARGET
         ST    DFHEIBR,0(R1)      ST IT
         LARL  R1,P1002TCT         ADDRESS TARGET
         ST    TCTTEAR,0(R1)      ST IT
         LARL  R1,P1002EDS         ADDRESS TARGET
         ST    R13,0(R1)      ST IT
         L     R0,DFHEILEN        DSA LENGTH
         LARL  R1,P1002EDL         ADDRESS TARGET
         STH   R0,0(R1)      STH IT
         LA    R0,DFHEIUSR        DSA USER AREA
         SR    R0,R13             R0=CICS DSA LENGTH
         LARL  R1,P1002EDC         ADDRESS TARGET
         STH   R0,0(R1)      STH IT
         LARL  R1,P1002ABS         ADDRESS TARGET
         MVI   0(R1),X'FF'      MVI IT
         LARL  R0,P1002EDF_0903 ADDRESS ORIGIN FOR CEDF
         LARL  R1,P1002EDF         ADDRESS TARGET
         ST    R0,0(R1)      ST IT
         L     R15,TCTTELCL       R15=LCL MODULE INDEXER
         LARL  R1,=A(P1002)       R1=LCL MODULE PARAMETER LIST
P1002EDF_0903    EQU *
         BAKR  0,R15              STACK REGS AND GO
         LARL  R1,P4A02         ADDRESS SOURCE
         LARL  R15,P4A02        ADDRESS TARGET
         XC    0(P4A02END-P4A02,R15),0(R1) XC IT
         LARL  R1,=X'4A02'         ADDRESS SOURCE
         LARL  R15,P4A02FN        ADDRESS TARGET AS LABEL
         MVC   0(L'P4A02FN,R15),0(R1) MVC IT
         LARL  R1,P4A02EIB         ADDRESS TARGET
         ST    DFHEIBR,0(R1)      ST IT
         LARL  R1,P4A02TCT         ADDRESS TARGET
         ST    TCTTEAR,0(R1)      ST IT
         LARL  R1,P4A02EDS         ADDRESS TARGET
         ST    R13,0(R1)      ST IT
         L     R0,DFHEILEN        DSA LENGTH
         LARL  R1,P4A02EDL         ADDRESS TARGET
         STH   R0,0(R1)      STH IT
         LA    R0,DFHEIUSR        DSA USER AREA
         SR    R0,R13             R0=CICS DSA LENGTH
         LARL  R1,P4A02EDC         ADDRESS TARGET
         STH   R0,0(R1)      STH IT
         LA    R0,STCKTIME        ABSTIME ADDRESS
         LARL  R1,P4A02ABT         ADDRESS TARGET
         ST    R0,0(R1)      ST IT
         LARL  R0,P4A02EDF_0903 ADDRESS ORIGIN FOR CEDF
         LARL  R1,P4A02EDF         ADDRESS TARGET
         ST    R0,0(R1)      ST IT
         L     R15,TCTTELCL       R15=LCL MODULE INDEXER
         LARL  R1,=A(P4A02)       R1=LCL MODULE PARAMETER LIST
P4A02EDF_0903    EQU *
         BAKR  0,R15              STACK REGS AND GO
         J     P4A02BYP_0903   EXIT
*
P4A02    DS    0H
P4A02FN  DS    XL2                FUNCTION CODE
P4A02EIB DS    AL4                EIB
P4A02TCT DS    AL4                TCTTE
P4A02ABT DS    AL4                ABSTIME ADDRESS
P4A02EDF DS    AL4                ORIGIN ADDRESS FOR CEDF
P4A02EDS DS    AL4                DSA ADDRESS FOR EDF
P4A02EDC DS    XL2                CICS DSA LENGTH FOR EDF
P4A02EDL DS    XL2                DSA LENGTH FOR EDF
P4A02NED DS    X                  FF=NOEDF
         DS    X
P4A02NOH DS    X                  FF=NOHANDLE
         DS    X
P4A02RSP DS    AL4                RESP
P4A02RS2 DS    AL4                RESP2
P4A02END EQU   *                  END MARKER
*
P4A02BYP_0903    DS 0H
*      *  MVC   TDAFTSBA,SBA5      2ND SBA
*             MOVE SBA5 TO TDAFTSBA.
*      *  MVC   TIMESPEC,=C'AFTER  9 SECONDS'
*ZC    248         MOVE  SBA5,TO,TDAFTSBA
         MVC   TDAFTSBA,SBA5  ALIGN LEFT X OTHER
*             MOVE 'AFTER  9 SECONDS' TO TIMESPEC.
*      *  BAL   R9,DOAFT           SHOW TIME/DATE/STCKTIME
*ZC    250         MOVE  'AFTER  9 SECONDS',TO,TIMESPEC
         LARL  ZC_R1,=CL16'AFTER  9 SECONDS'
          MVC   TIMESPEC,0(ZC_R1)
*             PERFORM DOAFT.
*      * DISPLAY TIME AFTER 9+12=21 SECS
*ZC    252         PERFORM DOAFT
         LARL  ZC_R14,PG_DOAFT
         LARL  ZC_R0,PG_DOAFT_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*             EXEC CICS DELAY INTERVAL(12) END-EXEC.
*ZC    254         EXEC  CICS,DELAY,INTERVAL(12)
         LARL  R1,P1004         ADDRESS SOURCE
         LARL  R15,P1004        ADDRESS TARGET
         XC    0(P1004END-P1004,R15),0(R1) XC IT
         LARL  R1,=X'1004'         ADDRESS SOURCE
         LARL  R15,P1004FN        ADDRESS TARGET AS LABEL
         MVC   0(L'P1004FN,R15),0(R1) MVC IT
         LARL  R1,P1004INT         ADDRESS TARGET
         MVI   0(R1),X'FF'      MVI IT
         LARL  R1,=PL4'12'         ADDRESS SOURCE
         LARL  R15,P1004HMS        ADDRESS TARGET
         ZAP   0(L'P1004HMS,R15),0(4,R1) ZAP IT
         LARL  R1,P1004EIB         ADDRESS TARGET
         ST    DFHEIBR,0(R1)      ST IT
         LARL  R1,P1004TCT         ADDRESS TARGET
         ST    TCTTEAR,0(R1)      ST IT
         LARL  R1,P1004EDS         ADDRESS TARGET
         ST    R13,0(R1)      ST IT
         L     R0,DFHEILEN        DSA LENGTH
         LARL  R1,P1004EDL         ADDRESS TARGET
         STH   R0,0(R1)      STH IT
         LA    R0,DFHEIUSR        DSA USER AREA
         SR    R0,R13             R0=CICS DSA LENGTH
         LARL  R1,P1004EDC         ADDRESS TARGET
         STH   R0,0(R1)      STH IT
         LA    R0,DFHEIHCN        ADDRESS OF DFHEIHCN
         LARL  R1,P1004HCN         ADDRESS TARGET
         ST    R0,0(R1)      ST IT
         LARL  R0,P1004EDF_0942 ADDRESS ORIGIN FOR CEDF
         LARL  R1,P1004EDF         ADDRESS TARGET
         ST    R0,0(R1)      ST IT
         L     R15,TCTTELCL       R15=LCL MODULE INDEXER
         LARL  R1,=A(P1004)       R1=LCL MODULE PARAMETER LIST
P1004EDF_0942    EQU *
         BAKR  0,R15              STACK REGS AND GO
         LARL  R1,P1004NOH         ADDRESS TARGET
         CLI   0(R1),X'FF'      CLI IT
         JE    P1004BYP_0942   EXIT IF IT IS
         OC    EIBRESP,EIBRESP    ANY BAD RESPONSE ?
         JZ    P1004BYP_0942   EXIT IF NONE
* INVREQ, EXPIRED
         DC    AL3(0),C'ABEND'    MARKER FOR Z390KCP ESTAE
         DC    AL4(P1004BYP_0942) ENTRYPOINT FOR IGNORE CONDITION
*
P1004BYP_0942    DS 0H
*             EXEC CICS ASKTIME ABSTIME(STCKTIME) END-EXEC.
*ZC    255         EXEC  CICS,ASKTIME,ABSTIME(STCKTIME)
         LARL  R1,P1002         ADDRESS SOURCE
         LARL  R15,P1002        ADDRESS TARGET
         XC    0(P1002END-P1002,R15),0(R1) XC IT
         LARL  R1,=X'1002'         ADDRESS SOURCE
         LARL  R15,P1002FN        ADDRESS TARGET AS LABEL
         MVC   0(L'P1002FN,R15),0(R1) MVC IT
         LARL  R1,P1002EIB         ADDRESS TARGET
         ST    DFHEIBR,0(R1)      ST IT
         LARL  R1,P1002TCT         ADDRESS TARGET
         ST    TCTTEAR,0(R1)      ST IT
         LARL  R1,P1002EDS         ADDRESS TARGET
         ST    R13,0(R1)      ST IT
         L     R0,DFHEILEN        DSA LENGTH
         LARL  R1,P1002EDL         ADDRESS TARGET
         STH   R0,0(R1)      STH IT
         LA    R0,DFHEIUSR        DSA USER AREA
         SR    R0,R13             R0=CICS DSA LENGTH
         LARL  R1,P1002EDC         ADDRESS TARGET
         STH   R0,0(R1)      STH IT
         LARL  R1,P1002ABS         ADDRESS TARGET
         MVI   0(R1),X'FF'      MVI IT
         LARL  R0,P1002EDF_0957 ADDRESS ORIGIN FOR CEDF
         LARL  R1,P1002EDF         ADDRESS TARGET
         ST    R0,0(R1)      ST IT
         L     R15,TCTTELCL       R15=LCL MODULE INDEXER
         LARL  R1,=A(P1002)       R1=LCL MODULE PARAMETER LIST
P1002EDF_0957    EQU *
         BAKR  0,R15              STACK REGS AND GO
         LARL  R1,P4A02         ADDRESS SOURCE
         LARL  R15,P4A02        ADDRESS TARGET
         XC    0(P4A02END-P4A02,R15),0(R1) XC IT
         LARL  R1,=X'4A02'         ADDRESS SOURCE
         LARL  R15,P4A02FN        ADDRESS TARGET AS LABEL
         MVC   0(L'P4A02FN,R15),0(R1) MVC IT
         LARL  R1,P4A02EIB         ADDRESS TARGET
         ST    DFHEIBR,0(R1)      ST IT
         LARL  R1,P4A02TCT         ADDRESS TARGET
         ST    TCTTEAR,0(R1)      ST IT
         LARL  R1,P4A02EDS         ADDRESS TARGET
         ST    R13,0(R1)      ST IT
         L     R0,DFHEILEN        DSA LENGTH
         LARL  R1,P4A02EDL         ADDRESS TARGET
         STH   R0,0(R1)      STH IT
         LA    R0,DFHEIUSR        DSA USER AREA
         SR    R0,R13             R0=CICS DSA LENGTH
         LARL  R1,P4A02EDC         ADDRESS TARGET
         STH   R0,0(R1)      STH IT
         LA    R0,STCKTIME        ABSTIME ADDRESS
         LARL  R1,P4A02ABT         ADDRESS TARGET
         ST    R0,0(R1)      ST IT
         LARL  R0,P4A02EDF_0957 ADDRESS ORIGIN FOR CEDF
         LARL  R1,P4A02EDF         ADDRESS TARGET
         ST    R0,0(R1)      ST IT
         L     R15,TCTTELCL       R15=LCL MODULE INDEXER
         LARL  R1,=A(P4A02)       R1=LCL MODULE PARAMETER LIST
P4A02EDF_0957    EQU *
         BAKR  0,R15              STACK REGS AND GO
*      *  MVC   TDAFTSBA,SBA6      3RD SBA
*             MOVE SBA6 TO TDAFTSBA.
*      *  MVC   TIMESPEC,=C'AFTER 12 SECONDS'
*ZC    257         MOVE  SBA6,TO,TDAFTSBA
         MVC   TDAFTSBA,SBA6  ALIGN LEFT X OTHER
*             MOVE 'AFTER 12 SECONDS' TO TIMESPEC.
*      *  BAL   R9,DOAFT           SHOW TIME/DATE/STCKTIME
*ZC    259         MOVE  'AFTER 12 SECONDS',TO,TIMESPEC
         LARL  ZC_R1,=CL16'AFTER 12 SECONDS'
          MVC   TIMESPEC,0(ZC_R1)
*             PERFORM DOAFT.
*      * DISPLAY TIME AFTER 9+12+19=40 SECS
*ZC    261         PERFORM DOAFT
         LARL  ZC_R14,PG_DOAFT
         LARL  ZC_R0,PG_DOAFT_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*             EXEC CICS DELAY INTERVAL(SECS19) END-EXEC.
*ZC    263         EXEC  CICS,DELAY,INTERVAL(SECS19)
         LARL  R1,P1004         ADDRESS SOURCE
         LARL  R15,P1004        ADDRESS TARGET
         XC    0(P1004END-P1004,R15),0(R1) XC IT
         LARL  R1,=X'1004'         ADDRESS SOURCE
         LARL  R15,P1004FN        ADDRESS TARGET AS LABEL
         MVC   0(L'P1004FN,R15),0(R1) MVC IT
         LARL  R1,P1004INT         ADDRESS TARGET
         MVI   0(R1),X'FF'      MVI IT
         LARL  R15,P1004HRS+2     ADDRESS TARGET
         PACK  0(4,R15),SECS19(7) PACK FROM LABEL+BYTE
         LARL  R1,P1004HRS+2         ADDRESS SOURCE
         LARL  R15,P1004HMS        ADDRESS TARGET
         MVO   0(L'P1004HMS,R15),0(3,R1) MVO IT
         LARL  R1,P1004HMS+2      ADDRESS TARGET-1
         OI    1(R1),X'0C'        SET SIGN
         LARL  R1,P1004EIB         ADDRESS TARGET
         ST    DFHEIBR,0(R1)      ST IT
         LARL  R1,P1004TCT         ADDRESS TARGET
         ST    TCTTEAR,0(R1)      ST IT
         LARL  R1,P1004EDS         ADDRESS TARGET
         ST    R13,0(R1)      ST IT
         L     R0,DFHEILEN        DSA LENGTH
         LARL  R1,P1004EDL         ADDRESS TARGET
         STH   R0,0(R1)      STH IT
         LA    R0,DFHEIUSR        DSA USER AREA
         SR    R0,R13             R0=CICS DSA LENGTH
         LARL  R1,P1004EDC         ADDRESS TARGET
         STH   R0,0(R1)      STH IT
         LA    R0,DFHEIHCN        ADDRESS OF DFHEIHCN
         LARL  R1,P1004HCN         ADDRESS TARGET
         ST    R0,0(R1)      ST IT
         LARL  R0,P1004EDF_0995 ADDRESS ORIGIN FOR CEDF
         LARL  R1,P1004EDF         ADDRESS TARGET
         ST    R0,0(R1)      ST IT
         L     R15,TCTTELCL       R15=LCL MODULE INDEXER
         LARL  R1,=A(P1004)       R1=LCL MODULE PARAMETER LIST
P1004EDF_0995    EQU *
         BAKR  0,R15              STACK REGS AND GO
         LARL  R1,P1004NOH         ADDRESS TARGET
         CLI   0(R1),X'FF'      CLI IT
         JE    P1004BYP_0995   EXIT IF IT IS
         OC    EIBRESP,EIBRESP    ANY BAD RESPONSE ?
         JZ    P1004BYP_0995   EXIT IF NONE
* INVREQ, EXPIRED
         DC    AL3(0),C'ABEND'    MARKER FOR Z390KCP ESTAE
         DC    AL4(P1004BYP_0995) ENTRYPOINT FOR IGNORE CONDITION
*
P1004BYP_0995    DS 0H
*             EXEC CICS ASKTIME ABSTIME(STCKTIME) END-EXEC.
*ZC    264         EXEC  CICS,ASKTIME,ABSTIME(STCKTIME)
         LARL  R1,P1002         ADDRESS SOURCE
         LARL  R15,P1002        ADDRESS TARGET
         XC    0(P1002END-P1002,R15),0(R1) XC IT
         LARL  R1,=X'1002'         ADDRESS SOURCE
         LARL  R15,P1002FN        ADDRESS TARGET AS LABEL
         MVC   0(L'P1002FN,R15),0(R1) MVC IT
         LARL  R1,P1002EIB         ADDRESS TARGET
         ST    DFHEIBR,0(R1)      ST IT
         LARL  R1,P1002TCT         ADDRESS TARGET
         ST    TCTTEAR,0(R1)      ST IT
         LARL  R1,P1002EDS         ADDRESS TARGET
         ST    R13,0(R1)      ST IT
         L     R0,DFHEILEN        DSA LENGTH
         LARL  R1,P1002EDL         ADDRESS TARGET
         STH   R0,0(R1)      STH IT
         LA    R0,DFHEIUSR        DSA USER AREA
         SR    R0,R13             R0=CICS DSA LENGTH
         LARL  R1,P1002EDC         ADDRESS TARGET
         STH   R0,0(R1)      STH IT
         LARL  R1,P1002ABS         ADDRESS TARGET
         MVI   0(R1),X'FF'      MVI IT
         LARL  R0,P1002EDF_1010 ADDRESS ORIGIN FOR CEDF
         LARL  R1,P1002EDF         ADDRESS TARGET
         ST    R0,0(R1)      ST IT
         L     R15,TCTTELCL       R15=LCL MODULE INDEXER
         LARL  R1,=A(P1002)       R1=LCL MODULE PARAMETER LIST
P1002EDF_1010    EQU *
         BAKR  0,R15              STACK REGS AND GO
         LARL  R1,P4A02         ADDRESS SOURCE
         LARL  R15,P4A02        ADDRESS TARGET
         XC    0(P4A02END-P4A02,R15),0(R1) XC IT
         LARL  R1,=X'4A02'         ADDRESS SOURCE
         LARL  R15,P4A02FN        ADDRESS TARGET AS LABEL
         MVC   0(L'P4A02FN,R15),0(R1) MVC IT
         LARL  R1,P4A02EIB         ADDRESS TARGET
         ST    DFHEIBR,0(R1)      ST IT
         LARL  R1,P4A02TCT         ADDRESS TARGET
         ST    TCTTEAR,0(R1)      ST IT
         LARL  R1,P4A02EDS         ADDRESS TARGET
         ST    R13,0(R1)      ST IT
         L     R0,DFHEILEN        DSA LENGTH
         LARL  R1,P4A02EDL         ADDRESS TARGET
         STH   R0,0(R1)      STH IT
         LA    R0,DFHEIUSR        DSA USER AREA
         SR    R0,R13             R0=CICS DSA LENGTH
         LARL  R1,P4A02EDC         ADDRESS TARGET
         STH   R0,0(R1)      STH IT
         LA    R0,STCKTIME        ABSTIME ADDRESS
         LARL  R1,P4A02ABT         ADDRESS TARGET
         ST    R0,0(R1)      ST IT
         LARL  R0,P4A02EDF_1010 ADDRESS ORIGIN FOR CEDF
         LARL  R1,P4A02EDF         ADDRESS TARGET
         ST    R0,0(R1)      ST IT
         L     R15,TCTTELCL       R15=LCL MODULE INDEXER
         LARL  R1,=A(P4A02)       R1=LCL MODULE PARAMETER LIST
P4A02EDF_1010    EQU *
         BAKR  0,R15              STACK REGS AND GO
*      *  MVC   TDAFTSBA,SBA7      4TH SBA
*             MOVE SBA7 TO TDAFTSBA.
*      *  MVC   TIMESPEC,=C'AFTER 19 SECONDS'
*ZC    266         MOVE  SBA7,TO,TDAFTSBA
         MVC   TDAFTSBA,SBA7  ALIGN LEFT X OTHER
*             MOVE 'AFTER 19 SECONDS' TO TIMESPEC.
*      *  BAL   R9,DOAFT           SHOW TIME/DATE/STCKTIME
*ZC    268         MOVE  'AFTER 19 SECONDS',TO,TIMESPEC
         LARL  ZC_R1,=CL16'AFTER 19 SECONDS'
          MVC   TIMESPEC,0(ZC_R1)
*             PERFORM DOAFT.
*      * DISPLAY TIME AFTER 9+12+19+5=45 SECS
*ZC    270         PERFORM DOAFT
         LARL  ZC_R14,PG_DOAFT
         LARL  ZC_R0,PG_DOAFT_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*             EXEC CICS DELAY FOR SECONDS(5) END-EXEC.
*ZC    272         EXEC  CICS,DELAY,FOR,SECONDS(5)
         LARL  R1,P1004         ADDRESS SOURCE
         LARL  R15,P1004        ADDRESS TARGET
         XC    0(P1004END-P1004,R15),0(R1) XC IT
         LARL  R1,=X'1004'         ADDRESS SOURCE
         LARL  R15,P1004FN        ADDRESS TARGET AS LABEL
         MVC   0(L'P1004FN,R15),0(R1) MVC IT
         LARL  R1,=PL8'0'         ADDRESS SOURCE
         LARL  R15,P1004HRS        ADDRESS TARGET
         ZAP   0(L'P1004HRS,R15),0(8,R1) ZAP IT
         LARL  R1,=PL8'0'         ADDRESS SOURCE
         LARL  R15,P1004MIN        ADDRESS TARGET
         ZAP   0(L'P1004MIN,R15),0(8,R1) ZAP IT
         LARL  R1,=PL8'5'         ADDRESS SOURCE
         LARL  R15,P1004SEC        ADDRESS TARGET
         ZAP   0(L'P1004SEC,R15),0(8,R1) ZAP IT
         LARL  R1,P1004EIB         ADDRESS TARGET
         ST    DFHEIBR,0(R1)      ST IT
         LARL  R1,P1004TCT         ADDRESS TARGET
         ST    TCTTEAR,0(R1)      ST IT
         LARL  R1,P1004EDS         ADDRESS TARGET
         ST    R13,0(R1)      ST IT
         L     R0,DFHEILEN        DSA LENGTH
         LARL  R1,P1004EDL         ADDRESS TARGET
         STH   R0,0(R1)      STH IT
         LA    R0,DFHEIUSR        DSA USER AREA
         SR    R0,R13             R0=CICS DSA LENGTH
         LARL  R1,P1004EDC         ADDRESS TARGET
         STH   R0,0(R1)      STH IT
         LA    R0,DFHEIHCN        ADDRESS OF DFHEIHCN
         LARL  R1,P1004HCN         ADDRESS TARGET
         ST    R0,0(R1)      ST IT
         LARL  R0,P1004EDF_1048 ADDRESS ORIGIN FOR CEDF
         LARL  R1,P1004EDF         ADDRESS TARGET
         ST    R0,0(R1)      ST IT
         L     R15,TCTTELCL       R15=LCL MODULE INDEXER
         LARL  R1,=A(P1004)       R1=LCL MODULE PARAMETER LIST
P1004EDF_1048    EQU *
         BAKR  0,R15              STACK REGS AND GO
         LARL  R1,P1004NOH         ADDRESS TARGET
         CLI   0(R1),X'FF'      CLI IT
         JE    P1004BYP_1048   EXIT IF IT IS
         OC    EIBRESP,EIBRESP    ANY BAD RESPONSE ?
         JZ    P1004BYP_1048   EXIT IF NONE
* INVREQ, EXPIRED
         DC    AL3(0),C'ABEND'    MARKER FOR Z390KCP ESTAE
         DC    AL4(P1004BYP_1048) ENTRYPOINT FOR IGNORE CONDITION
*
P1004BYP_1048    DS 0H
*             EXEC CICS ASKTIME ABSTIME(STCKTIME) END-EXEC.
*ZC    273         EXEC  CICS,ASKTIME,ABSTIME(STCKTIME)
         LARL  R1,P1002         ADDRESS SOURCE
         LARL  R15,P1002        ADDRESS TARGET
         XC    0(P1002END-P1002,R15),0(R1) XC IT
         LARL  R1,=X'1002'         ADDRESS SOURCE
         LARL  R15,P1002FN        ADDRESS TARGET AS LABEL
         MVC   0(L'P1002FN,R15),0(R1) MVC IT
         LARL  R1,P1002EIB         ADDRESS TARGET
         ST    DFHEIBR,0(R1)      ST IT
         LARL  R1,P1002TCT         ADDRESS TARGET
         ST    TCTTEAR,0(R1)      ST IT
         LARL  R1,P1002EDS         ADDRESS TARGET
         ST    R13,0(R1)      ST IT
         L     R0,DFHEILEN        DSA LENGTH
         LARL  R1,P1002EDL         ADDRESS TARGET
         STH   R0,0(R1)      STH IT
         LA    R0,DFHEIUSR        DSA USER AREA
         SR    R0,R13             R0=CICS DSA LENGTH
         LARL  R1,P1002EDC         ADDRESS TARGET
         STH   R0,0(R1)      STH IT
         LARL  R1,P1002ABS         ADDRESS TARGET
         MVI   0(R1),X'FF'      MVI IT
         LARL  R0,P1002EDF_1064 ADDRESS ORIGIN FOR CEDF
         LARL  R1,P1002EDF         ADDRESS TARGET
         ST    R0,0(R1)      ST IT
         L     R15,TCTTELCL       R15=LCL MODULE INDEXER
         LARL  R1,=A(P1002)       R1=LCL MODULE PARAMETER LIST
P1002EDF_1064    EQU *
         BAKR  0,R15              STACK REGS AND GO
         LARL  R1,P4A02         ADDRESS SOURCE
         LARL  R15,P4A02        ADDRESS TARGET
         XC    0(P4A02END-P4A02,R15),0(R1) XC IT
         LARL  R1,=X'4A02'         ADDRESS SOURCE
         LARL  R15,P4A02FN        ADDRESS TARGET AS LABEL
         MVC   0(L'P4A02FN,R15),0(R1) MVC IT
         LARL  R1,P4A02EIB         ADDRESS TARGET
         ST    DFHEIBR,0(R1)      ST IT
         LARL  R1,P4A02TCT         ADDRESS TARGET
         ST    TCTTEAR,0(R1)      ST IT
         LARL  R1,P4A02EDS         ADDRESS TARGET
         ST    R13,0(R1)      ST IT
         L     R0,DFHEILEN        DSA LENGTH
         LARL  R1,P4A02EDL         ADDRESS TARGET
         STH   R0,0(R1)      STH IT
         LA    R0,DFHEIUSR        DSA USER AREA
         SR    R0,R13             R0=CICS DSA LENGTH
         LARL  R1,P4A02EDC         ADDRESS TARGET
         STH   R0,0(R1)      STH IT
         LA    R0,STCKTIME        ABSTIME ADDRESS
         LARL  R1,P4A02ABT         ADDRESS TARGET
         ST    R0,0(R1)      ST IT
         LARL  R0,P4A02EDF_1064 ADDRESS ORIGIN FOR CEDF
         LARL  R1,P4A02EDF         ADDRESS TARGET
         ST    R0,0(R1)      ST IT
         L     R15,TCTTELCL       R15=LCL MODULE INDEXER
         LARL  R1,=A(P4A02)       R1=LCL MODULE PARAMETER LIST
P4A02EDF_1064    EQU *
         BAKR  0,R15              STACK REGS AND GO
*      *  MVC   TDAFTSBA,SBA8      5TH SBA
*             MOVE SBA8 TO TDAFTSBA.
*      *  MVC   TIMESPEC,=C'AFTER  5 SECONDS'
*ZC    275         MOVE  SBA8,TO,TDAFTSBA
         MVC   TDAFTSBA,SBA8  ALIGN LEFT X OTHER
*             MOVE 'AFTER  5 SECONDS' TO TIMESPEC.
*      *  BAL   R9,DOAFT           SHOW TIME/DATE/STCKTIME
*ZC    277         MOVE  'AFTER  5 SECONDS',TO,TIMESPEC
         LARL  ZC_R1,=CL16'AFTER  5 SECONDS'
          MVC   TIMESPEC,0(ZC_R1)
*             PERFORM DOAFT.
*      * TIMEAFT='  HHMMSS'
*      *  MVC   TIMEAFT+6(2),=C'59' WAIT TO END OF CURRENT MINUTE
*ZC    279         PERFORM DOAFT
         LARL  ZC_R14,PG_DOAFT
         LARL  ZC_R0,PG_DOAFT_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*             MOVE '59' TO TIMEAF59.
*ZC    282         MOVE  '59',TO,TIMEAF59
         LARL  ZC_R1,=CL2'59'
          MVC   TIMEAF59,0(ZC_R1)
*             EXEC CICS DELAY TIME(TIMEAFDL) END-EXEC.
*ZC    283         EXEC  CICS,DELAY,TIME(TIMEAFDL)
         LARL  R1,P1004         ADDRESS SOURCE
         LARL  R15,P1004        ADDRESS TARGET
         XC    0(P1004END-P1004,R15),0(R1) XC IT
         LARL  R1,=X'1004'         ADDRESS SOURCE
         LARL  R15,P1004FN        ADDRESS TARGET AS LABEL
         MVC   0(L'P1004FN,R15),0(R1) MVC IT
         LARL  R1,P1004INT         ADDRESS TARGET
         MVI   0(R1),X'FF'      MVI IT
         LARL  R1,P1004TME         ADDRESS TARGET
         MVI   0(R1),X'FF'      MVI IT
         LARL  R15,P1004HRS+2     ADDRESS TARGET
         PACK  0(4,R15),TIMEAFDL(7) PACK FROM LABEL+BYTE
         LARL  R1,P1004HRS+2         ADDRESS SOURCE
         LARL  R15,P1004HMS        ADDRESS TARGET
         MVO   0(L'P1004HMS,R15),0(3,R1) MVO IT
         LARL  R1,P1004HMS+2      ADDRESS TARGET-1
         OI    1(R1),X'0C'        SET SIGN
         LARL  R1,P1004EIB         ADDRESS TARGET
         ST    DFHEIBR,0(R1)      ST IT
         LARL  R1,P1004TCT         ADDRESS TARGET
         ST    TCTTEAR,0(R1)      ST IT
         LARL  R1,P1004EDS         ADDRESS TARGET
         ST    R13,0(R1)      ST IT
         L     R0,DFHEILEN        DSA LENGTH
         LARL  R1,P1004EDL         ADDRESS TARGET
         STH   R0,0(R1)      STH IT
         LA    R0,DFHEIUSR        DSA USER AREA
         SR    R0,R13             R0=CICS DSA LENGTH
         LARL  R1,P1004EDC         ADDRESS TARGET
         STH   R0,0(R1)      STH IT
         LA    R0,DFHEIHCN        ADDRESS OF DFHEIHCN
         LARL  R1,P1004HCN         ADDRESS TARGET
         ST    R0,0(R1)      ST IT
         LARL  R0,P1004EDF_1107 ADDRESS ORIGIN FOR CEDF
         LARL  R1,P1004EDF         ADDRESS TARGET
         ST    R0,0(R1)      ST IT
         L     R15,TCTTELCL       R15=LCL MODULE INDEXER
         LARL  R1,=A(P1004)       R1=LCL MODULE PARAMETER LIST
P1004EDF_1107    EQU *
         BAKR  0,R15              STACK REGS AND GO
         LARL  R1,P1004NOH         ADDRESS TARGET
         CLI   0(R1),X'FF'      CLI IT
         JE    P1004BYP_1107   EXIT IF IT IS
         OC    EIBRESP,EIBRESP    ANY BAD RESPONSE ?
         JZ    P1004BYP_1107   EXIT IF NONE
* INVREQ, EXPIRED
         DC    AL3(0),C'ABEND'    MARKER FOR Z390KCP ESTAE
         DC    AL4(P1004BYP_1107) ENTRYPOINT FOR IGNORE CONDITION
*
P1004BYP_1107    DS 0H
*             EXEC CICS ASKTIME ABSTIME(STCKTIME) END-EXEC.
*ZC    284         EXEC  CICS,ASKTIME,ABSTIME(STCKTIME)
         LARL  R1,P1002         ADDRESS SOURCE
         LARL  R15,P1002        ADDRESS TARGET
         XC    0(P1002END-P1002,R15),0(R1) XC IT
         LARL  R1,=X'1002'         ADDRESS SOURCE
         LARL  R15,P1002FN        ADDRESS TARGET AS LABEL
         MVC   0(L'P1002FN,R15),0(R1) MVC IT
         LARL  R1,P1002EIB         ADDRESS TARGET
         ST    DFHEIBR,0(R1)      ST IT
         LARL  R1,P1002TCT         ADDRESS TARGET
         ST    TCTTEAR,0(R1)      ST IT
         LARL  R1,P1002EDS         ADDRESS TARGET
         ST    R13,0(R1)      ST IT
         L     R0,DFHEILEN        DSA LENGTH
         LARL  R1,P1002EDL         ADDRESS TARGET
         STH   R0,0(R1)      STH IT
         LA    R0,DFHEIUSR        DSA USER AREA
         SR    R0,R13             R0=CICS DSA LENGTH
         LARL  R1,P1002EDC         ADDRESS TARGET
         STH   R0,0(R1)      STH IT
         LARL  R1,P1002ABS         ADDRESS TARGET
         MVI   0(R1),X'FF'      MVI IT
         LARL  R0,P1002EDF_1123 ADDRESS ORIGIN FOR CEDF
         LARL  R1,P1002EDF         ADDRESS TARGET
         ST    R0,0(R1)      ST IT
         L     R15,TCTTELCL       R15=LCL MODULE INDEXER
         LARL  R1,=A(P1002)       R1=LCL MODULE PARAMETER LIST
P1002EDF_1123    EQU *
         BAKR  0,R15              STACK REGS AND GO
         LARL  R1,P4A02         ADDRESS SOURCE
         LARL  R15,P4A02        ADDRESS TARGET
         XC    0(P4A02END-P4A02,R15),0(R1) XC IT
         LARL  R1,=X'4A02'         ADDRESS SOURCE
         LARL  R15,P4A02FN        ADDRESS TARGET AS LABEL
         MVC   0(L'P4A02FN,R15),0(R1) MVC IT
         LARL  R1,P4A02EIB         ADDRESS TARGET
         ST    DFHEIBR,0(R1)      ST IT
         LARL  R1,P4A02TCT         ADDRESS TARGET
         ST    TCTTEAR,0(R1)      ST IT
         LARL  R1,P4A02EDS         ADDRESS TARGET
         ST    R13,0(R1)      ST IT
         L     R0,DFHEILEN        DSA LENGTH
         LARL  R1,P4A02EDL         ADDRESS TARGET
         STH   R0,0(R1)      STH IT
         LA    R0,DFHEIUSR        DSA USER AREA
         SR    R0,R13             R0=CICS DSA LENGTH
         LARL  R1,P4A02EDC         ADDRESS TARGET
         STH   R0,0(R1)      STH IT
         LA    R0,STCKTIME        ABSTIME ADDRESS
         LARL  R1,P4A02ABT         ADDRESS TARGET
         ST    R0,0(R1)      ST IT
         LARL  R0,P4A02EDF_1123 ADDRESS ORIGIN FOR CEDF
         LARL  R1,P4A02EDF         ADDRESS TARGET
         ST    R0,0(R1)      ST IT
         L     R15,TCTTELCL       R15=LCL MODULE INDEXER
         LARL  R1,=A(P4A02)       R1=LCL MODULE PARAMETER LIST
P4A02EDF_1123    EQU *
         BAKR  0,R15              STACK REGS AND GO
*      *  MVC   TDAFTSBA,SBA9      6TH SBA
*             MOVE SBA9 TO TDAFTSBA.
*      *  MVC   TIMESPEC,=C'UNTIL HHMM59    '
*ZC    286         MOVE  SBA9,TO,TDAFTSBA
         MVC   TDAFTSBA,SBA9  ALIGN LEFT X OTHER
*             MOVE 'UNTIL HHMM59    ' TO TIMESPEC.
*      *  BAL   R9,DOAFT           SHOW TIME/DATE/STCKTIME
*ZC    288         MOVE  'UNTIL HHMM59    ',TO,TIMESPEC
         LARL  ZC_R1,=CL16'UNTIL HHMM59    '
          MVC   TIMESPEC,0(ZC_R1)
*             PERFORM DOAFT.
*      * HANDLE ALL CONDITIONS, ALWAYS RETURN TO MAIN LINE
*ZC    290         PERFORM DOAFT
         LARL  ZC_R14,PG_DOAFT
         LARL  ZC_R0,PG_DOAFT_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*             EXEC CICS HANDLE CONDITION
*                       EXPIRED(IC01EXP)
*                       INVREQ(IC01INV)
*ZC    294         EXEC  CICS,HANDLE,CONDITION,EXPIRED(IC01EXP),INVREQ(X
               IC01INV)
         LARL  R1,P0204         ADDRESS SOURCE
         LARL  R15,P0204        ADDRESS TARGET
         XC    0(P0204END-P0204,R15),0(R1) XC IT
         LARL  R1,=X'0204'         ADDRESS SOURCE
         LARL  R15,P0204FN        ADDRESS TARGET AS LABEL
         MVC   0(L'P0204FN,R15),0(R1) MVC IT
         LARL  R1,P0204EIB         ADDRESS TARGET
         ST    DFHEIBR,0(R1)      ST IT
         LARL  R1,P0204TCT         ADDRESS TARGET
         ST    TCTTEAR,0(R1)      ST IT
         LARL  R1,P0204CND        R1=ADDRESS CONDITION NUMBERS
         LARL  R14,P0204ADR       R14=ADDRESSES OR FF IF CANCEL
         MVI   0(R1),31       SET CONDITION NUMBER
         LARL  R0,PG_IC01EXP     R0=LABEL (COBOL)
         ST    R0,0(R14)          SAVE IT
         AHI   R1,1               BUMP CONDITION NUMBER POINTER
         AHI   R14,4              BUMP CONDITION ADDRESS POINTER
         MVI   0(R1),16       SET CONDITION NUMBER
         LARL  R0,PG_IC01INV     R0=LABEL (COBOL)
         ST    R0,0(R14)          SAVE IT
         AHI   R1,1               BUMP CONDITION NUMBER POINTER
         AHI   R14,4              BUMP CONDITION ADDRESS POINTER
         LA    R0,DFHEIHCN        ADDRESS OF DFHEIHCN
         LARL  R1,P0204HCN         ADDRESS TARGET
         ST    R0,0(R1)      ST IT
         LARL  R1,P0204EDS         ADDRESS TARGET
         ST    R13,0(R1)      ST IT
         L     R0,DFHEILEN        DSA LENGTH
         LARL  R1,P0204EDL         ADDRESS TARGET
         STH   R0,0(R1)      STH IT
         LA    R0,DFHEIUSR        DSA USER AREA
         SR    R0,R13             R0=CICS DSA LENGTH
         LARL  R1,P0204EDC         ADDRESS TARGET
         STH   R0,0(R1)      STH IT
         LARL  R0,P0204EDF_1161 ADDRESS ORIGIN FOR CEDF
         LARL  R1,P0204EDF         ADDRESS TARGET
         ST    R0,0(R1)      ST IT
         L     R15,TCTTELCL       R15=LCL MODULE INDEXER
         LARL  R1,=A(P0204)       R1=LCL MODULE PARAMETER LIST
P0204EDF_1161    DS 0H
         BAKR  0,R15              STACK REGS AND GO
         J     P0204BYP_1161   EXIT
*
P0204    DS    0H
P0204FN  DS    XL2                FUNCTION CODE
P0204EIB DS    AL4                EIB
P0204TCT DS    AL4                TCTTE
P0204HCN DS    AL4                A(DFHEIHCN)
P0204CND DS    XL30               ROOM FOR 30 CONDITIONS
P0204ADR DS    30AL4              ROOM FOR 30 ADDRESSES, FF......=CLEAR
P0204EDF DS    AL4                ORIGIN ADDRESS FOR CEDF
P0204EDS DS    AL4                DSA ADDRESS FOR EDF
P0204EDC DS    XL2                CICS DSA LENGTH FOR EDF
P0204EDL DS    XL2                DSA LENGTH FOR EDF
P0204NED DS    X                  FF=NOEDF
         DS    X
P0204RSP DS    AL4                RESP
P0204RS2 DS    AL4                RESP2
P0204END EQU   *                  END MARKER
*
P0204BYP_1161    DS 0H
*                       END-EXEC.
*      * INTERVAL EXPIRED, RAISE EXPIRED
*      *  MVC   ICSBA,SBA10        7TH SBA
*             MOVE SBA10 TO ICSBA.
*      *  LA    R7,IC01RTN1        R7=HANDLE RETURN
*ZC    302         MOVE  SBA10,TO,ICSBA
         MVC   ICSBA,SBA10  ALIGN LEFT X OTHER
*             MOVE 1 TO DEPCTRL.
*ZC    304         MOVE  1,TO,DEPCTRL
          MVHHI DEPCTRL,1
*             EXEC CICS DELAY INTERVAL(0) END-EXEC.
*ZC    305         EXEC  CICS,DELAY,INTERVAL(0)
         LARL  R1,P1004         ADDRESS SOURCE
         LARL  R15,P1004        ADDRESS TARGET
         XC    0(P1004END-P1004,R15),0(R1) XC IT
         LARL  R1,=X'1004'         ADDRESS SOURCE
         LARL  R15,P1004FN        ADDRESS TARGET AS LABEL
         MVC   0(L'P1004FN,R15),0(R1) MVC IT
         LARL  R1,P1004INT         ADDRESS TARGET
         MVI   0(R1),X'FF'      MVI IT
         LARL  R1,=PL4'0'         ADDRESS SOURCE
         LARL  R15,P1004HMS        ADDRESS TARGET
         ZAP   0(L'P1004HMS,R15),0(4,R1) ZAP IT
         LARL  R1,P1004EIB         ADDRESS TARGET
         ST    DFHEIBR,0(R1)      ST IT
         LARL  R1,P1004TCT         ADDRESS TARGET
         ST    TCTTEAR,0(R1)      ST IT
         LARL  R1,P1004EDS         ADDRESS TARGET
         ST    R13,0(R1)      ST IT
         L     R0,DFHEILEN        DSA LENGTH
         LARL  R1,P1004EDL         ADDRESS TARGET
         STH   R0,0(R1)      STH IT
         LA    R0,DFHEIUSR        DSA USER AREA
         SR    R0,R13             R0=CICS DSA LENGTH
         LARL  R1,P1004EDC         ADDRESS TARGET
         STH   R0,0(R1)      STH IT
         LA    R0,DFHEIHCN        ADDRESS OF DFHEIHCN
         LARL  R1,P1004HCN         ADDRESS TARGET
         ST    R0,0(R1)      ST IT
         LARL  R0,P1004EDF_1187 ADDRESS ORIGIN FOR CEDF
         LARL  R1,P1004EDF         ADDRESS TARGET
         ST    R0,0(R1)      ST IT
         L     R15,TCTTELCL       R15=LCL MODULE INDEXER
         LARL  R1,=A(P1004)       R1=LCL MODULE PARAMETER LIST
P1004EDF_1187    EQU *
         BAKR  0,R15              STACK REGS AND GO
         LARL  R1,P1004NOH         ADDRESS TARGET
         CLI   0(R1),X'FF'      CLI IT
         JE    P1004BYP_1187   EXIT IF IT IS
         OC    EIBRESP,EIBRESP    ANY BAD RESPONSE ?
         JZ    P1004BYP_1187   EXIT IF NONE
* INVREQ, EXPIRED
         DC    AL3(0),C'ABEND'    MARKER FOR Z390KCP ESTAE
         DC    AL4(P1004BYP_1187) ENTRYPOINT FOR IGNORE CONDITION
*
P1004BYP_1187    DS 0H
*      * BAD HOURS, RAISE INVREQ/4
*      * IC01RTN1 DS    0H
*         IC01RTN1.
*      *  MVC   ICSBA,SBA11        8TH SBA
PG_IC01RTN1 DS 0H
*             MOVE SBA11 TO ICSBA.
*      *  LA    R7,IC01RTN2        R7=HANDLE RETURN
*ZC    312         MOVE  SBA11,TO,ICSBA
         MVC   ICSBA,SBA11  ALIGN LEFT X OTHER
*             MOVE 2 TO DEPCTRL.
*ZC    314         MOVE  2,TO,DEPCTRL
          MVHHI DEPCTRL,2
*             EXEC CICS DELAY FOR HOURS(456) END-EXEC.
*ZC    315         EXEC  CICS,DELAY,FOR,HOURS(456)
         LARL  R1,P1004         ADDRESS SOURCE
         LARL  R15,P1004        ADDRESS TARGET
         XC    0(P1004END-P1004,R15),0(R1) XC IT
         LARL  R1,=X'1004'         ADDRESS SOURCE
         LARL  R15,P1004FN        ADDRESS TARGET AS LABEL
         MVC   0(L'P1004FN,R15),0(R1) MVC IT
         LARL  R1,=PL8'456'         ADDRESS SOURCE
         LARL  R15,P1004HRS        ADDRESS TARGET
         ZAP   0(L'P1004HRS,R15),0(8,R1) ZAP IT
         LARL  R1,=PL8'0'         ADDRESS SOURCE
         LARL  R15,P1004MIN        ADDRESS TARGET
         ZAP   0(L'P1004MIN,R15),0(8,R1) ZAP IT
         LARL  R1,=PL8'0'         ADDRESS SOURCE
         LARL  R15,P1004SEC        ADDRESS TARGET
         ZAP   0(L'P1004SEC,R15),0(8,R1) ZAP IT
         LARL  R1,P1004EIB         ADDRESS TARGET
         ST    DFHEIBR,0(R1)      ST IT
         LARL  R1,P1004TCT         ADDRESS TARGET
         ST    TCTTEAR,0(R1)      ST IT
         LARL  R1,P1004EDS         ADDRESS TARGET
         ST    R13,0(R1)      ST IT
         L     R0,DFHEILEN        DSA LENGTH
         LARL  R1,P1004EDL         ADDRESS TARGET
         STH   R0,0(R1)      STH IT
         LA    R0,DFHEIUSR        DSA USER AREA
         SR    R0,R13             R0=CICS DSA LENGTH
         LARL  R1,P1004EDC         ADDRESS TARGET
         STH   R0,0(R1)      STH IT
         LA    R0,DFHEIHCN        ADDRESS OF DFHEIHCN
         LARL  R1,P1004HCN         ADDRESS TARGET
         ST    R0,0(R1)      ST IT
         LARL  R0,P1004EDF_1218 ADDRESS ORIGIN FOR CEDF
         LARL  R1,P1004EDF         ADDRESS TARGET
         ST    R0,0(R1)      ST IT
         L     R15,TCTTELCL       R15=LCL MODULE INDEXER
         LARL  R1,=A(P1004)       R1=LCL MODULE PARAMETER LIST
P1004EDF_1218    EQU *
         BAKR  0,R15              STACK REGS AND GO
         LARL  R1,P1004NOH         ADDRESS TARGET
         CLI   0(R1),X'FF'      CLI IT
         JE    P1004BYP_1218   EXIT IF IT IS
         OC    EIBRESP,EIBRESP    ANY BAD RESPONSE ?
         JZ    P1004BYP_1218   EXIT IF NONE
* INVREQ, EXPIRED
         DC    AL3(0),C'ABEND'    MARKER FOR Z390KCP ESTAE
         DC    AL4(P1004BYP_1218) ENTRYPOINT FOR IGNORE CONDITION
*
P1004BYP_1218    DS 0H
*      * BAD MINUTES, RAISE INVREQ/5
*      * IC01RTN2 DS    0H
*         IC01RTN2.
*      *  MVC   ICSBA,SBA12        9TH SBA
PG_IC01RTN1_END L ZC_R15,ZCVT_PMCHECK
         BASR  ZC_R14,ZC_R15 CHECK FOR END OF CURRENT PERFORM
PG_IC01RTN2 DS 0H
*             MOVE SBA12 TO ICSBA.
*      *  LA    R7,IC01RTN3        R7=HANDLE RETURN
*ZC    322         MOVE  SBA12,TO,ICSBA
         MVC   ICSBA,SBA12  ALIGN LEFT X OTHER
*             MOVE 3 TO DEPCTRL.
*ZC    324         MOVE  3,TO,DEPCTRL
          MVHHI DEPCTRL,3
*             EXEC CICS DELAY TIME(128812) END-EXEC.
*ZC    325         EXEC  CICS,DELAY,TIME(128812)
         LARL  R1,P1004         ADDRESS SOURCE
         LARL  R15,P1004        ADDRESS TARGET
         XC    0(P1004END-P1004,R15),0(R1) XC IT
         LARL  R1,=X'1004'         ADDRESS SOURCE
         LARL  R15,P1004FN        ADDRESS TARGET AS LABEL
         MVC   0(L'P1004FN,R15),0(R1) MVC IT
         LARL  R1,P1004INT         ADDRESS TARGET
         MVI   0(R1),X'FF'      MVI IT
         LARL  R1,P1004TME         ADDRESS TARGET
         MVI   0(R1),X'FF'      MVI IT
         LARL  R1,=PL4'128812'         ADDRESS SOURCE
         LARL  R15,P1004HMS        ADDRESS TARGET
         ZAP   0(L'P1004HMS,R15),0(4,R1) ZAP IT
         LARL  R1,P1004EIB         ADDRESS TARGET
         ST    DFHEIBR,0(R1)      ST IT
         LARL  R1,P1004TCT         ADDRESS TARGET
         ST    TCTTEAR,0(R1)      ST IT
         LARL  R1,P1004EDS         ADDRESS TARGET
         ST    R13,0(R1)      ST IT
         L     R0,DFHEILEN        DSA LENGTH
         LARL  R1,P1004EDL         ADDRESS TARGET
         STH   R0,0(R1)      STH IT
         LA    R0,DFHEIUSR        DSA USER AREA
         SR    R0,R13             R0=CICS DSA LENGTH
         LARL  R1,P1004EDC         ADDRESS TARGET
         STH   R0,0(R1)      STH IT
         LA    R0,DFHEIHCN        ADDRESS OF DFHEIHCN
         LARL  R1,P1004HCN         ADDRESS TARGET
         ST    R0,0(R1)      ST IT
         LARL  R0,P1004EDF_1250 ADDRESS ORIGIN FOR CEDF
         LARL  R1,P1004EDF         ADDRESS TARGET
         ST    R0,0(R1)      ST IT
         L     R15,TCTTELCL       R15=LCL MODULE INDEXER
         LARL  R1,=A(P1004)       R1=LCL MODULE PARAMETER LIST
P1004EDF_1250    EQU *
         BAKR  0,R15              STACK REGS AND GO
         LARL  R1,P1004NOH         ADDRESS TARGET
         CLI   0(R1),X'FF'      CLI IT
         JE    P1004BYP_1250   EXIT IF IT IS
         OC    EIBRESP,EIBRESP    ANY BAD RESPONSE ?
         JZ    P1004BYP_1250   EXIT IF NONE
* INVREQ, EXPIRED
         DC    AL3(0),C'ABEND'    MARKER FOR Z390KCP ESTAE
         DC    AL4(P1004BYP_1250) ENTRYPOINT FOR IGNORE CONDITION
*
P1004BYP_1250    DS 0H
*      * BAD SECONDS, RAISE INVREQ/6
*      * IC01RTN3 DS    0H
*         IC01RTN3.
*      *  MVC   ICSBA,SBA13        10TH SBA
PG_IC01RTN2_END L ZC_R15,ZCVT_PMCHECK
         BASR  ZC_R14,ZC_R15 CHECK FOR END OF CURRENT PERFORM
PG_IC01RTN3 DS 0H
*             MOVE SBA13 TO ICSBA.
*      *  LA    R7,IC01RTN4        R7=HANDLE RETURN
*ZC    332         MOVE  SBA13,TO,ICSBA
         MVC   ICSBA,SBA13  ALIGN LEFT X OTHER
*             MOVE 4 TO DEPCTRL.
*ZC    334         MOVE  4,TO,DEPCTRL
          MVHHI DEPCTRL,4
*             EXEC CICS DELAY INTERVAL(77) END-EXEC.
*ZC    335         EXEC  CICS,DELAY,INTERVAL(77)
         LARL  R1,P1004         ADDRESS SOURCE
         LARL  R15,P1004        ADDRESS TARGET
         XC    0(P1004END-P1004,R15),0(R1) XC IT
         LARL  R1,=X'1004'         ADDRESS SOURCE
         LARL  R15,P1004FN        ADDRESS TARGET AS LABEL
         MVC   0(L'P1004FN,R15),0(R1) MVC IT
         LARL  R1,P1004INT         ADDRESS TARGET
         MVI   0(R1),X'FF'      MVI IT
         LARL  R1,=PL4'77'         ADDRESS SOURCE
         LARL  R15,P1004HMS        ADDRESS TARGET
         ZAP   0(L'P1004HMS,R15),0(4,R1) ZAP IT
         LARL  R1,P1004EIB         ADDRESS TARGET
         ST    DFHEIBR,0(R1)      ST IT
         LARL  R1,P1004TCT         ADDRESS TARGET
         ST    TCTTEAR,0(R1)      ST IT
         LARL  R1,P1004EDS         ADDRESS TARGET
         ST    R13,0(R1)      ST IT
         L     R0,DFHEILEN        DSA LENGTH
         LARL  R1,P1004EDL         ADDRESS TARGET
         STH   R0,0(R1)      STH IT
         LA    R0,DFHEIUSR        DSA USER AREA
         SR    R0,R13             R0=CICS DSA LENGTH
         LARL  R1,P1004EDC         ADDRESS TARGET
         STH   R0,0(R1)      STH IT
         LA    R0,DFHEIHCN        ADDRESS OF DFHEIHCN
         LARL  R1,P1004HCN         ADDRESS TARGET
         ST    R0,0(R1)      ST IT
         LARL  R0,P1004EDF_1282 ADDRESS ORIGIN FOR CEDF
         LARL  R1,P1004EDF         ADDRESS TARGET
         ST    R0,0(R1)      ST IT
         L     R15,TCTTELCL       R15=LCL MODULE INDEXER
         LARL  R1,=A(P1004)       R1=LCL MODULE PARAMETER LIST
P1004EDF_1282    EQU *
         BAKR  0,R15              STACK REGS AND GO
         LARL  R1,P1004NOH         ADDRESS TARGET
         CLI   0(R1),X'FF'      CLI IT
         JE    P1004BYP_1282   EXIT IF IT IS
         OC    EIBRESP,EIBRESP    ANY BAD RESPONSE ?
         JZ    P1004BYP_1282   EXIT IF NONE
* INVREQ, EXPIRED
         DC    AL3(0),C'ABEND'    MARKER FOR Z390KCP ESTAE
         DC    AL4(P1004BYP_1282) ENTRYPOINT FOR IGNORE CONDITION
*
P1004BYP_1282    DS 0H
*      * FORMATTIME TESTS
*      * IC01RTN4 DS    0H
*         IC01RTN4.
*      *  MVC   FMTSBA,SBA14       11TH SBA
PG_IC01RTN3_END L ZC_R15,ZCVT_PMCHECK
         BASR  ZC_R14,ZC_R15 CHECK FOR END OF CURRENT PERFORM
PG_IC01RTN4 DS 0H
*             MOVE SBA14 TO FMTSBA.
*ZC    342         MOVE  SBA14,TO,FMTSBA
         MVC   FMTSBA,SBA14  ALIGN LEFT X OTHER
*             EXEC CICS FORMATTIME ABSTIME(STCKTIME)
*ZC    343         EXEC  CICS,FORMATTIME,ABSTIME(STCKTIME),DATE(FMTDATEX
               1),FULLDATE(FMTDATE4)
         LARL  R1,P4A04         ADDRESS SOURCE
         LARL  R15,P4A04        ADDRESS TARGET
         XC    0(P4A04END-P4A04,R15),0(R1) XC IT
         LARL  R1,=X'4A04'         ADDRESS SOURCE
         LARL  R15,P4A04FN        ADDRESS TARGET AS LABEL
         MVC   0(L'P4A04FN,R15),0(R1) MVC IT
         LARL  R15,P4A04ABS       ADDRESS TARGET
         MVC   0(8,R15),STCKTIME  SET ABSTIME
         LA    R0,FMTDATE1           DATE ADDRESS
         LARL  R1,P4A04DAT         ADDRESS TARGET
         ST    R0,0(R1)      ST IT
         LA    R0,FMTDATE4        FULLDAT ADDRESS
         LARL  R1,P4A04FDT         ADDRESS TARGET
         ST    R0,0(R1)      ST IT
         LARL  R1,P4A04EIB         ADDRESS TARGET
         ST    DFHEIBR,0(R1)      ST IT
         LARL  R1,P4A04TCT         ADDRESS TARGET
         ST    TCTTEAR,0(R1)      ST IT
         LARL  R1,P4A04EDS         ADDRESS TARGET
         ST    R13,0(R1)      ST IT
         L     R0,DFHEILEN        DSA LENGTH
         LARL  R1,P4A04EDL         ADDRESS TARGET
         STH   R0,0(R1)      STH IT
         LA    R0,DFHEIUSR        DSA USER AREA
         SR    R0,R13             R0=CICS DSA LENGTH
         LARL  R1,P4A04EDC         ADDRESS TARGET
         STH   R0,0(R1)      STH IT
         LARL  R0,P4A04EDF_1308 ADDRESS ORIGIN FOR CEDF
         LARL  R1,P4A04EDF         ADDRESS TARGET
         ST    R0,0(R1)      ST IT
         L     R15,TCTTELCL       R15=LCL MODULE INDEXER
         LARL  R1,=A(P4A04)       R1=LCL MODULE PARAMETER LIST
P4A04EDF_1308    EQU *
         BAKR  0,R15              STACK REGS AND GO
         LARL  R1,P4A04NOH         ADDRESS TARGET
         CLI   0(R1),X'FF'      CLI IT
         JE    P4A04BYP_1308   EXIT IF IT IS
         OC    EIBRESP,EIBRESP    ANY BAD RESPONSE ?
         JZ    P4A04BYP_1308   EXIT IF NONE
* INVREQ
         DC    AL3(0),C'ABEND'    MARKER FOR Z390KCP ESTAE
         DC    AL4(P4A04BYP_1308) ENTRYPOINT FOR IGNORE CONDITION
*
P4A04    DS    0H
P4A04FN  DS    XL2                FUNCTION CODE
P4A04EIB DS    AL4                EIB
P4A04TCT DS    AL4                TCTTE
P4A04ABS DS    PL8                ABSTIME
P4A04DAT DS    AL4                DATE
P4A04DFM DS    AL4                DATEFORM
P4A04DSP DS    C                  DATESEP
         DS    X
P4A04DST DS    AL4                DATESTRING
P4A04DYC DS    AL4                DAYCOUNT
P4A04DOM DS    AL4                DAYOFMONTH
P4A04DOW DS    AL4                DAYOFWEEK
P4A04DM2 DS    AL4                DDMMYY
P4A04DM4 DS    AL4                DDMMYYYY
P4A04FDT DS    AL4                FULLDATE
P4A04MD2 DS    AL4                MMDDYY
P4A04MD4 DS    AL4                MMDDYYYY
P4A04MOY DS    AL4                MONTHOFYEAR
P4A04TIM DS    AL4                TIME
P4A04TSP DS    C                  TIMESEP
         DS    X
P4A04YR  DS    AL4                YEAR
P4A04Y2D DS    AL4                YYDDD
P4A04YD2 DS    AL4                YYDDMM
P4A04YM2 DS    AL4                YYMMDD
P4A04Y4D DS    AL4                YYYYDD
P4A04YD4 DS    AL4                YYYYDDMM
P4A04YM4 DS    AL4                YYYYMMDD
P4A04EDF DS    AL4                ORIGIN ADDRESS FOR CEDF
P4A04EDS DS    AL4                DSA ADDRESS FOR EDF
P4A04EDC DS    XL2                CICS DSA LENGTH FOR EDF
P4A04EDL DS    XL2                DSA LENGTH FOR EDF
P4A04NED DS    X                  FF=NOEDF
         DS    X
P4A04NOH DS    X                  FF=NOHANDLE
         DS    X
P4A04RSP DS    AL4                RESP
P4A04RS2 DS    AL4                RESP2
P4A04END EQU   *                  END MARKER
*
P4A04BYP_1308    DS 0H
*                       DATE(FMTDATE1) FULLDATE(FMTDATE4) END-EXEC.
*             EXEC CICS FORMATTIME ABSTIME(STCKTIME) DATE(FMTDATE2)
*ZC    345         EXEC  CICS,FORMATTIME,ABSTIME(STCKTIME),DATE(FMTDATEX
               2),FULLDATE(FMTDATE5),DATESEP
         LARL  R1,P4A04         ADDRESS SOURCE
         LARL  R15,P4A04        ADDRESS TARGET
         XC    0(P4A04END-P4A04,R15),0(R1) XC IT
         LARL  R1,=X'4A04'         ADDRESS SOURCE
         LARL  R15,P4A04FN        ADDRESS TARGET AS LABEL
         MVC   0(L'P4A04FN,R15),0(R1) MVC IT
         LARL  R15,P4A04ABS       ADDRESS TARGET
         MVC   0(8,R15),STCKTIME  SET ABSTIME
         LARL  R1,P4A04DSP         ADDRESS TARGET
         MVI   0(R1),C'/'      MVI IT
         LA    R0,FMTDATE2           DATE ADDRESS
         LARL  R1,P4A04DAT         ADDRESS TARGET
         ST    R0,0(R1)      ST IT
         LA    R0,FMTDATE5        FULLDAT ADDRESS
         LARL  R1,P4A04FDT         ADDRESS TARGET
         ST    R0,0(R1)      ST IT
         LARL  R1,P4A04EIB         ADDRESS TARGET
         ST    DFHEIBR,0(R1)      ST IT
         LARL  R1,P4A04TCT         ADDRESS TARGET
         ST    TCTTEAR,0(R1)      ST IT
         LARL  R1,P4A04EDS         ADDRESS TARGET
         ST    R13,0(R1)      ST IT
         L     R0,DFHEILEN        DSA LENGTH
         LARL  R1,P4A04EDL         ADDRESS TARGET
         STH   R0,0(R1)      STH IT
         LA    R0,DFHEIUSR        DSA USER AREA
         SR    R0,R13             R0=CICS DSA LENGTH
         LARL  R1,P4A04EDC         ADDRESS TARGET
         STH   R0,0(R1)      STH IT
         LARL  R0,P4A04EDF_1323 ADDRESS ORIGIN FOR CEDF
         LARL  R1,P4A04EDF         ADDRESS TARGET
         ST    R0,0(R1)      ST IT
         L     R15,TCTTELCL       R15=LCL MODULE INDEXER
         LARL  R1,=A(P4A04)       R1=LCL MODULE PARAMETER LIST
P4A04EDF_1323    EQU *
         BAKR  0,R15              STACK REGS AND GO
         LARL  R1,P4A04NOH         ADDRESS TARGET
         CLI   0(R1),X'FF'      CLI IT
         JE    P4A04BYP_1323   EXIT IF IT IS
         OC    EIBRESP,EIBRESP    ANY BAD RESPONSE ?
         JZ    P4A04BYP_1323   EXIT IF NONE
* INVREQ
         DC    AL3(0),C'ABEND'    MARKER FOR Z390KCP ESTAE
         DC    AL4(P4A04BYP_1323) ENTRYPOINT FOR IGNORE CONDITION
P4A04BYP_1323    DS 0H
*                       FULLDATE(FMTDATE5) DATESEP END-EXEC.
*             EXEC CICS FORMATTIME ABSTIME(STCKTIME) DATE(FMTDATE3)
*ZC    347         EXEC  CICS,FORMATTIME,ABSTIME(STCKTIME),DATE(FMTDATEX
               3),FULLDATE(FMTDATE6),DATESEP(MYSEP)
         LARL  R1,P4A04         ADDRESS SOURCE
         LARL  R15,P4A04        ADDRESS TARGET
         XC    0(P4A04END-P4A04,R15),0(R1) XC IT
         LARL  R1,=X'4A04'         ADDRESS SOURCE
         LARL  R15,P4A04FN        ADDRESS TARGET AS LABEL
         MVC   0(L'P4A04FN,R15),0(R1) MVC IT
         LARL  R15,P4A04ABS       ADDRESS TARGET
         MVC   0(8,R15),STCKTIME  SET ABSTIME
         LARL  R15,P4A04DSP       ADDRESS TARGET
         MVC   0(1,R15),MYSEP  MOVE DATE SEPARATOR FROM LABEL
         LA    R0,FMTDATE3           DATE ADDRESS
         LARL  R1,P4A04DAT         ADDRESS TARGET
         ST    R0,0(R1)      ST IT
         LA    R0,FMTDATE6        FULLDAT ADDRESS
         LARL  R1,P4A04FDT         ADDRESS TARGET
         ST    R0,0(R1)      ST IT
         LARL  R1,P4A04EIB         ADDRESS TARGET
         ST    DFHEIBR,0(R1)      ST IT
         LARL  R1,P4A04TCT         ADDRESS TARGET
         ST    TCTTEAR,0(R1)      ST IT
         LARL  R1,P4A04EDS         ADDRESS TARGET
         ST    R13,0(R1)      ST IT
         L     R0,DFHEILEN        DSA LENGTH
         LARL  R1,P4A04EDL         ADDRESS TARGET
         STH   R0,0(R1)      STH IT
         LA    R0,DFHEIUSR        DSA USER AREA
         SR    R0,R13             R0=CICS DSA LENGTH
         LARL  R1,P4A04EDC         ADDRESS TARGET
         STH   R0,0(R1)      STH IT
         LARL  R0,P4A04EDF_1338 ADDRESS ORIGIN FOR CEDF
         LARL  R1,P4A04EDF         ADDRESS TARGET
         ST    R0,0(R1)      ST IT
         L     R15,TCTTELCL       R15=LCL MODULE INDEXER
         LARL  R1,=A(P4A04)       R1=LCL MODULE PARAMETER LIST
P4A04EDF_1338    EQU *
         BAKR  0,R15              STACK REGS AND GO
         LARL  R1,P4A04NOH         ADDRESS TARGET
         CLI   0(R1),X'FF'      CLI IT
         JE    P4A04BYP_1338   EXIT IF IT IS
         OC    EIBRESP,EIBRESP    ANY BAD RESPONSE ?
         JZ    P4A04BYP_1338   EXIT IF NONE
* INVREQ
         DC    AL3(0),C'ABEND'    MARKER FOR Z390KCP ESTAE
         DC    AL4(P4A04BYP_1338) ENTRYPOINT FOR IGNORE CONDITION
P4A04BYP_1338    DS 0H
*                       FULLDATE(FMTDATE6) DATESEP(MYSEP) END-EXEC.
*             EXEC CICS SEND FROM(FORMAT) LENGTH(FORMATL) END-EXEC.
*ZC    349         EXEC  CICS,SEND,FROM(FORMAT),LENGTH(FORMATL)
         LARL  R1,P0404         ADDRESS SOURCE
         LARL  R15,P0404        ADDRESS TARGET
         XC    0(P0404END-P0404,R15),0(R1) XC IT
         LARL  R1,=X'0404'         ADDRESS SOURCE
         LARL  R15,P0404FN        ADDRESS TARGET AS LABEL
         MVC   0(L'P0404FN,R15),0(R1) MVC IT
         LARL  R15,P0404LEN       ADDRESS TARGET
         MVC   0(2,R15),FORMATL   SET LENGTH FROM LABEL
         LA    R0,FORMAT           FROM ADDRESS
         LARL  R1,P0404FRM         ADDRESS TARGET
         ST    R0,0(R1)      ST IT
         LARL  R1,P0404EIB         ADDRESS TARGET
         ST    DFHEIBR,0(R1)      ST IT
         LARL  R1,P0404TCT         ADDRESS TARGET
         ST    TCTTEAR,0(R1)      ST IT
         LARL  R1,P0404EDS         ADDRESS TARGET
         ST    R13,0(R1)      ST IT
         L     R0,DFHEILEN        DSA LENGTH
         LARL  R1,P0404EDL         ADDRESS TARGET
         STH   R0,0(R1)      STH IT
         LA    R0,DFHEIUSR        DSA USER AREA
         SR    R0,R13             R0=CICS DSA LENGTH
         LARL  R1,P0404EDC         ADDRESS TARGET
         STH   R0,0(R1)      STH IT
         LARL  R0,P0404EDF_1352 ADDRESS ORIGIN FOR CEDF
         LARL  R1,P0404EDF         ADDRESS TARGET
         ST    R0,0(R1)      ST IT
         L     R15,TCTTELCL       R15=LCL MODULE INDEXER
         LARL  R1,=A(P0404)       R1=LCL MODULE PARAMETER LIST
P0404EDF_1352    DS 0H
         BAKR  0,R15              STACK REGS AND GO
         LARL  R1,P0404NOH         ADDRESS TARGET
         CLI   0(R1),X'FF'      CLI IT
         JE    P0404BYP_1352   EXIT IF IT IS
         OC    EIBRESP,EIBRESP    ANY BAD RESPONSE ?
         JZ    P0404BYP_1352   EXIT IF NONE
* INVREQ
         DC    AL3(0),C'ABEND'    MARKER FOR Z390KCP ESTAE
         DC    AL4(P0404BYP_1352) ENTRYPOINT FOR IGNORE CONDITION
*
P0404BYP_1352    DS 0H
*      *  XC    FMTDATE1(FMTDATE6+10-FMTDATE1),FMTDATE1 REUSE AREA
*             MOVE SPACES TO FMTDATE1.
*ZC    351         MOVE  SPACES,TO,FMTDATE1
         MVI   FMTDATE1,C' '
         MVC   FMTDATE1+1(10-1),FMTDATE1
*             MOVE SPACES TO FMTDATE2.
*ZC    352         MOVE  SPACES,TO,FMTDATE2
         MVI   FMTDATE2,C' '
         MVC   FMTDATE2+1(10-1),FMTDATE2
*             MOVE SPACES TO FMTDATE3.
*ZC    353         MOVE  SPACES,TO,FMTDATE3
         MVI   FMTDATE3,C' '
         MVC   FMTDATE3+1(10-1),FMTDATE3
*             MOVE SPACES TO FMTDATE4.
*ZC    354         MOVE  SPACES,TO,FMTDATE4
         MVI   FMTDATE4,C' '
         MVC   FMTDATE4+1(10-1),FMTDATE4
*             MOVE SPACES TO FMTDATE5.
*ZC    355         MOVE  SPACES,TO,FMTDATE5
         MVI   FMTDATE5,C' '
         MVC   FMTDATE5+1(10-1),FMTDATE5
*             MOVE SPACES TO FMTDATE6.
*      *  MVC   FMTSBA,SBA15       12TH SBA
*ZC    356         MOVE  SPACES,TO,FMTDATE6
         MVI   FMTDATE6,C' '
         MVC   FMTDATE6+1(10-1),FMTDATE6
*             MOVE SBA15 TO FMTSBA.
*ZC    358         MOVE  SBA15,TO,FMTSBA
         MVC   FMTSBA,SBA15  ALIGN LEFT X OTHER
*             EXEC CICS FORMATTIME ABSTIME(STCKTIME)
*                       DDMMYY(FMTDATE1) MMDDYY(FMTDATE2)
*                       YYDDMM(FMTDATE3) YYMMDD(FMTDATE4)
*ZC    359         EXEC  CICS,FORMATTIME,ABSTIME(STCKTIME),DDMMYY(FMTDAX
               TE1),MMDDYY(FMTDATE2),YYDDMM(FMTDATE3),YYMMDD(FMTDATE4),X
               DATEFORM(FMTDATE5)
         LARL  R1,P4A04         ADDRESS SOURCE
         LARL  R15,P4A04        ADDRESS TARGET
         XC    0(P4A04END-P4A04,R15),0(R1) XC IT
         LARL  R1,=X'4A04'         ADDRESS SOURCE
         LARL  R15,P4A04FN        ADDRESS TARGET AS LABEL
         MVC   0(L'P4A04FN,R15),0(R1) MVC IT
         LARL  R15,P4A04ABS       ADDRESS TARGET
         MVC   0(8,R15),STCKTIME  SET ABSTIME
         LA    R0,FMTDATE5        DATEFRM ADDRESS
         LARL  R1,P4A04DFM         ADDRESS TARGET
         ST    R0,0(R1)      ST IT
         LA    R0,FMTDATE1           DMY2 ADDRESS
         LARL  R1,P4A04DM2         ADDRESS TARGET
         ST    R0,0(R1)      ST IT
         LA    R0,FMTDATE2           MDY2 ADDRESS
         LARL  R1,P4A04MD2         ADDRESS TARGET
         ST    R0,0(R1)      ST IT
         LA    R0,FMTDATE3           YDM2 ADDRESS
         LARL  R1,P4A04YD2         ADDRESS TARGET
         ST    R0,0(R1)      ST IT
         LA    R0,FMTDATE4           YMD2 ADDRESS
         LARL  R1,P4A04YM2         ADDRESS TARGET
         ST    R0,0(R1)      ST IT
         LARL  R1,P4A04EIB         ADDRESS TARGET
         ST    DFHEIBR,0(R1)      ST IT
         LARL  R1,P4A04TCT         ADDRESS TARGET
         ST    TCTTEAR,0(R1)      ST IT
         LARL  R1,P4A04EDS         ADDRESS TARGET
         ST    R13,0(R1)      ST IT
         L     R0,DFHEILEN        DSA LENGTH
         LARL  R1,P4A04EDL         ADDRESS TARGET
         STH   R0,0(R1)      STH IT
         LA    R0,DFHEIUSR        DSA USER AREA
         SR    R0,R13             R0=CICS DSA LENGTH
         LARL  R1,P4A04EDC         ADDRESS TARGET
         STH   R0,0(R1)      STH IT
         LARL  R0,P4A04EDF_1409 ADDRESS ORIGIN FOR CEDF
         LARL  R1,P4A04EDF         ADDRESS TARGET
         ST    R0,0(R1)      ST IT
         L     R15,TCTTELCL       R15=LCL MODULE INDEXER
         LARL  R1,=A(P4A04)       R1=LCL MODULE PARAMETER LIST
P4A04EDF_1409    EQU *
         BAKR  0,R15              STACK REGS AND GO
         LARL  R1,P4A04NOH         ADDRESS TARGET
         CLI   0(R1),X'FF'      CLI IT
         JE    P4A04BYP_1409   EXIT IF IT IS
         OC    EIBRESP,EIBRESP    ANY BAD RESPONSE ?
         JZ    P4A04BYP_1409   EXIT IF NONE
* INVREQ
         DC    AL3(0),C'ABEND'    MARKER FOR Z390KCP ESTAE
         DC    AL4(P4A04BYP_1409) ENTRYPOINT FOR IGNORE CONDITION
P4A04BYP_1409    DS 0H
*                       DATEFORM(FMTDATE5) END-EXEC.
*             EXEC CICS SEND FROM(FORMAT) LENGTH(FORMATL) END-EXEC.
*ZC    363         EXEC  CICS,SEND,FROM(FORMAT),LENGTH(FORMATL)
         LARL  R1,P0404         ADDRESS SOURCE
         LARL  R15,P0404        ADDRESS TARGET
         XC    0(P0404END-P0404,R15),0(R1) XC IT
         LARL  R1,=X'0404'         ADDRESS SOURCE
         LARL  R15,P0404FN        ADDRESS TARGET AS LABEL
         MVC   0(L'P0404FN,R15),0(R1) MVC IT
         LARL  R15,P0404LEN       ADDRESS TARGET
         MVC   0(2,R15),FORMATL   SET LENGTH FROM LABEL
         LA    R0,FORMAT           FROM ADDRESS
         LARL  R1,P0404FRM         ADDRESS TARGET
         ST    R0,0(R1)      ST IT
         LARL  R1,P0404EIB         ADDRESS TARGET
         ST    DFHEIBR,0(R1)      ST IT
         LARL  R1,P0404TCT         ADDRESS TARGET
         ST    TCTTEAR,0(R1)      ST IT
         LARL  R1,P0404EDS         ADDRESS TARGET
         ST    R13,0(R1)      ST IT
         L     R0,DFHEILEN        DSA LENGTH
         LARL  R1,P0404EDL         ADDRESS TARGET
         STH   R0,0(R1)      STH IT
         LA    R0,DFHEIUSR        DSA USER AREA
         SR    R0,R13             R0=CICS DSA LENGTH
         LARL  R1,P0404EDC         ADDRESS TARGET
         STH   R0,0(R1)      STH IT
         LARL  R0,P0404EDF_1426 ADDRESS ORIGIN FOR CEDF
         LARL  R1,P0404EDF         ADDRESS TARGET
         ST    R0,0(R1)      ST IT
         L     R15,TCTTELCL       R15=LCL MODULE INDEXER
         LARL  R1,=A(P0404)       R1=LCL MODULE PARAMETER LIST
P0404EDF_1426    DS 0H
         BAKR  0,R15              STACK REGS AND GO
         LARL  R1,P0404NOH         ADDRESS TARGET
         CLI   0(R1),X'FF'      CLI IT
         JE    P0404BYP_1426   EXIT IF IT IS
         OC    EIBRESP,EIBRESP    ANY BAD RESPONSE ?
         JZ    P0404BYP_1426   EXIT IF NONE
* INVREQ
         DC    AL3(0),C'ABEND'    MARKER FOR Z390KCP ESTAE
         DC    AL4(P0404BYP_1426) ENTRYPOINT FOR IGNORE CONDITION
*
P0404BYP_1426    DS 0H
*      *  XC    FMTDATE1(FMTDATE6+10-FMTDATE1),FMTDATE1 REUSE AREA
*             MOVE SPACES TO FMTDATE1.
*ZC    365         MOVE  SPACES,TO,FMTDATE1
         MVI   FMTDATE1,C' '
         MVC   FMTDATE1+1(10-1),FMTDATE1
*             MOVE SPACES TO FMTDATE2.
*ZC    366         MOVE  SPACES,TO,FMTDATE2
         MVI   FMTDATE2,C' '
         MVC   FMTDATE2+1(10-1),FMTDATE2
*             MOVE SPACES TO FMTDATE3.
*ZC    367         MOVE  SPACES,TO,FMTDATE3
         MVI   FMTDATE3,C' '
         MVC   FMTDATE3+1(10-1),FMTDATE3
*             MOVE SPACES TO FMTDATE4.
*ZC    368         MOVE  SPACES,TO,FMTDATE4
         MVI   FMTDATE4,C' '
         MVC   FMTDATE4+1(10-1),FMTDATE4
*             MOVE SPACES TO FMTDATE5.
*ZC    369         MOVE  SPACES,TO,FMTDATE5
         MVI   FMTDATE5,C' '
         MVC   FMTDATE5+1(10-1),FMTDATE5
*             MOVE SPACES TO FMTDATE6.
*      *  MVC   FMTSBA,SBA16       13TH SBA
*ZC    370         MOVE  SPACES,TO,FMTDATE6
         MVI   FMTDATE6,C' '
         MVC   FMTDATE6+1(10-1),FMTDATE6
*             MOVE SBA16 TO FMTSBA.
*ZC    372         MOVE  SBA16,TO,FMTSBA
         MVC   FMTSBA,SBA16  ALIGN LEFT X OTHER
*             EXEC CICS FORMATTIME ABSTIME(STCKTIME)
*                       DDMMYYYY(FMTDATE1) MMDDYYYY(FMTDATE2)
*                       YYYYDDMM(FMTDATE3) YYYYMMDD(FMTDATE4)
*                       YYDDD(FMTDATE5) YYYYDDD(FMTDATE6) DATESEP(',')
*ZC    373         EXEC  CICS,FORMATTIME,ABSTIME(STCKTIME),DDMMYYYY(FMTX
               DATE1),MMDDYYYY(FMTDATE2),YYYYDDMM(FMTDATE3),YYYYMMDD(FMX
               TDATE4),YYDDD(FMTDATE5),YYYYDDD(FMTDATE6),DATESEP(',')
         LARL  R1,P4A04         ADDRESS SOURCE
         LARL  R15,P4A04        ADDRESS TARGET
         XC    0(P4A04END-P4A04,R15),0(R1) XC IT
         LARL  R1,=X'4A04'         ADDRESS SOURCE
         LARL  R15,P4A04FN        ADDRESS TARGET AS LABEL
         MVC   0(L'P4A04FN,R15),0(R1) MVC IT
         LARL  R15,P4A04ABS       ADDRESS TARGET
         MVC   0(8,R15),STCKTIME  SET ABSTIME
         LARL  R1,=CL2','         ADDRESS SOURCE
         LARL  R15,P4A04DSP        ADDRESS TARGET AS LABEL
         MVC   0(L'P4A04DSP,R15),0(R1) MVC IT
         LA    R0,FMTDATE1           DMY4 ADDRESS
         LARL  R1,P4A04DM4         ADDRESS TARGET
         ST    R0,0(R1)      ST IT
         LA    R0,FMTDATE2           MDY4 ADDRESS
         LARL  R1,P4A04MD4         ADDRESS TARGET
         ST    R0,0(R1)      ST IT
         LA    R0,FMTDATE3           YDM4 ADDRESS
         LARL  R1,P4A04YD4         ADDRESS TARGET
         ST    R0,0(R1)      ST IT
         LA    R0,FMTDATE4           YMD4 ADDRESS
         LARL  R1,P4A04YM4         ADDRESS TARGET
         ST    R0,0(R1)      ST IT
         LA    R0,FMTDATE5            YD2 ADDRESS
         LARL  R1,P4A04Y2D         ADDRESS TARGET
         ST    R0,0(R1)      ST IT
         LA    R0,FMTDATE6            YD4 ADDRESS
         LARL  R1,P4A04Y4D         ADDRESS TARGET
         ST    R0,0(R1)      ST IT
         LARL  R1,P4A04EIB         ADDRESS TARGET
         ST    DFHEIBR,0(R1)      ST IT
         LARL  R1,P4A04TCT         ADDRESS TARGET
         ST    TCTTEAR,0(R1)      ST IT
         LARL  R1,P4A04EDS         ADDRESS TARGET
         ST    R13,0(R1)      ST IT
         L     R0,DFHEILEN        DSA LENGTH
         LARL  R1,P4A04EDL         ADDRESS TARGET
         STH   R0,0(R1)      STH IT
         LA    R0,DFHEIUSR        DSA USER AREA
         SR    R0,R13             R0=CICS DSA LENGTH
         LARL  R1,P4A04EDC         ADDRESS TARGET
         STH   R0,0(R1)      STH IT
         LARL  R0,P4A04EDF_1483 ADDRESS ORIGIN FOR CEDF
         LARL  R1,P4A04EDF         ADDRESS TARGET
         ST    R0,0(R1)      ST IT
         L     R15,TCTTELCL       R15=LCL MODULE INDEXER
         LARL  R1,=A(P4A04)       R1=LCL MODULE PARAMETER LIST
P4A04EDF_1483    EQU *
         BAKR  0,R15              STACK REGS AND GO
         LARL  R1,P4A04NOH         ADDRESS TARGET
         CLI   0(R1),X'FF'      CLI IT
         JE    P4A04BYP_1483   EXIT IF IT IS
         OC    EIBRESP,EIBRESP    ANY BAD RESPONSE ?
         JZ    P4A04BYP_1483   EXIT IF NONE
* INVREQ
         DC    AL3(0),C'ABEND'    MARKER FOR Z390KCP ESTAE
         DC    AL4(P4A04BYP_1483) ENTRYPOINT FOR IGNORE CONDITION
P4A04BYP_1483    DS 0H
*                       END-EXEC.
*             EXEC CICS SEND FROM(FORMAT) LENGTH(FORMATL) END-EXEC.
*ZC    378         EXEC  CICS,SEND,FROM(FORMAT),LENGTH(FORMATL)
         LARL  R1,P0404         ADDRESS SOURCE
         LARL  R15,P0404        ADDRESS TARGET
         XC    0(P0404END-P0404,R15),0(R1) XC IT
         LARL  R1,=X'0404'         ADDRESS SOURCE
         LARL  R15,P0404FN        ADDRESS TARGET AS LABEL
         MVC   0(L'P0404FN,R15),0(R1) MVC IT
         LARL  R15,P0404LEN       ADDRESS TARGET
         MVC   0(2,R15),FORMATL   SET LENGTH FROM LABEL
         LA    R0,FORMAT           FROM ADDRESS
         LARL  R1,P0404FRM         ADDRESS TARGET
         ST    R0,0(R1)      ST IT
         LARL  R1,P0404EIB         ADDRESS TARGET
         ST    DFHEIBR,0(R1)      ST IT
         LARL  R1,P0404TCT         ADDRESS TARGET
         ST    TCTTEAR,0(R1)      ST IT
         LARL  R1,P0404EDS         ADDRESS TARGET
         ST    R13,0(R1)      ST IT
         L     R0,DFHEILEN        DSA LENGTH
         LARL  R1,P0404EDL         ADDRESS TARGET
         STH   R0,0(R1)      STH IT
         LA    R0,DFHEIUSR        DSA USER AREA
         SR    R0,R13             R0=CICS DSA LENGTH
         LARL  R1,P0404EDC         ADDRESS TARGET
         STH   R0,0(R1)      STH IT
         LARL  R0,P0404EDF_1502 ADDRESS ORIGIN FOR CEDF
         LARL  R1,P0404EDF         ADDRESS TARGET
         ST    R0,0(R1)      ST IT
         L     R15,TCTTELCL       R15=LCL MODULE INDEXER
         LARL  R1,=A(P0404)       R1=LCL MODULE PARAMETER LIST
P0404EDF_1502    DS 0H
         BAKR  0,R15              STACK REGS AND GO
         LARL  R1,P0404NOH         ADDRESS TARGET
         CLI   0(R1),X'FF'      CLI IT
         JE    P0404BYP_1502   EXIT IF IT IS
         OC    EIBRESP,EIBRESP    ANY BAD RESPONSE ?
         JZ    P0404BYP_1502   EXIT IF NONE
* INVREQ
         DC    AL3(0),C'ABEND'    MARKER FOR Z390KCP ESTAE
         DC    AL4(P0404BYP_1502) ENTRYPOINT FOR IGNORE CONDITION
*
P0404BYP_1502    DS 0H
*      *  MVC   FMT2SBA,SBA17      14TH SBA
*             MOVE SBA17 TO FMT2SBA.
*ZC    380         MOVE  SBA17,TO,FMT2SBA
         MVC   FMT2SBA,SBA17  ALIGN LEFT X OTHER
*             EXEC CICS FORMATTIME ABSTIME(STCKTIME)
*                       DAYCOUNT(DAYCNT) DAYOFWEEK(DAYOFWK)
*                       DAYOFMONTH(DAYOFMN) MONTHOFYEAR(MONTH) YEAR(YEAX
               R)
*ZC    381         EXEC  CICS,FORMATTIME,ABSTIME(STCKTIME),DAYCOUNT(DAYX
               CNT),DAYOFWEEK(DAYOFWK),DAYOFMONTH(DAYOFMN),MONTHOFYEAR(X
               MONTH),YEAR(YEAR)
         LARL  R1,P4A04         ADDRESS SOURCE
         LARL  R15,P4A04        ADDRESS TARGET
         XC    0(P4A04END-P4A04,R15),0(R1) XC IT
         LARL  R1,=X'4A04'         ADDRESS SOURCE
         LARL  R15,P4A04FN        ADDRESS TARGET AS LABEL
         MVC   0(L'P4A04FN,R15),0(R1) MVC IT
         LARL  R15,P4A04ABS       ADDRESS TARGET
         MVC   0(8,R15),STCKTIME  SET ABSTIME
         LA    R0,DAYCNT         DAYCNT ADDRESS
         LARL  R1,P4A04DYC         ADDRESS TARGET
         ST    R0,0(R1)      ST IT
         LA    R0,DAYOFWK        DAYOFWK ADDRESS
         LARL  R1,P4A04DOW         ADDRESS TARGET
         ST    R0,0(R1)      ST IT
         LA    R0,DAYOFMN        DAYOFMN ADDRESS
         LARL  R1,P4A04DOM         ADDRESS TARGET
         ST    R0,0(R1)      ST IT
         LA    R0,MONTH         MNOFYR ADDRESS
         LARL  R1,P4A04MOY         ADDRESS TARGET
         ST    R0,0(R1)      ST IT
         LA    R0,YEAR           YEAR ADDRESS
         LARL  R1,P4A04YR         ADDRESS TARGET
         ST    R0,0(R1)      ST IT
         LARL  R1,P4A04EIB         ADDRESS TARGET
         ST    DFHEIBR,0(R1)      ST IT
         LARL  R1,P4A04TCT         ADDRESS TARGET
         ST    TCTTEAR,0(R1)      ST IT
         LARL  R1,P4A04EDS         ADDRESS TARGET
         ST    R13,0(R1)      ST IT
         L     R0,DFHEILEN        DSA LENGTH
         LARL  R1,P4A04EDL         ADDRESS TARGET
         STH   R0,0(R1)      STH IT
         LA    R0,DFHEIUSR        DSA USER AREA
         SR    R0,R13             R0=CICS DSA LENGTH
         LARL  R1,P4A04EDC         ADDRESS TARGET
         STH   R0,0(R1)      STH IT
         LARL  R0,P4A04EDF_1523 ADDRESS ORIGIN FOR CEDF
         LARL  R1,P4A04EDF         ADDRESS TARGET
         ST    R0,0(R1)      ST IT
         L     R15,TCTTELCL       R15=LCL MODULE INDEXER
         LARL  R1,=A(P4A04)       R1=LCL MODULE PARAMETER LIST
P4A04EDF_1523    EQU *
         BAKR  0,R15              STACK REGS AND GO
         LARL  R1,P4A04NOH         ADDRESS TARGET
         CLI   0(R1),X'FF'      CLI IT
         JE    P4A04BYP_1523   EXIT IF IT IS
         OC    EIBRESP,EIBRESP    ANY BAD RESPONSE ?
         JZ    P4A04BYP_1523   EXIT IF NONE
* INVREQ
         DC    AL3(0),C'ABEND'    MARKER FOR Z390KCP ESTAE
         DC    AL4(P4A04BYP_1523) ENTRYPOINT FOR IGNORE CONDITION
P4A04BYP_1523    DS 0H
*                       END-EXEC.
*      *  L     R8,DAYCNT          LOAD DAY COUNT
*      *  CVD   R8,DEC             CONVERT TO DECIMAL
*      *  MVC   DAYCOUNT,=X'402020202120' MOVE MASK
*      *  ED    DAYCOUNT,DEC+5     EDIT DAY COUNT
*             MOVE DAYCNT TO DAYCOUNT.
*      *  L     R8,DAYOFWK         LOAD DAY OF WEEK
*      *  CVD   R8,DEC             CONVERT TO DECIMAL
*      *  MVC   DAYWEEK,=X'40202120' MOVE MASK
*      *  ED    DAYWEEK,DEC+6      EDIT DAY OF WEEK
*ZC    389         MOVE  DAYCNT,TO,DAYCOUNT
         L     0,DAYCNT
         CVD   0,ZCVT_PWORK
         LARL  ZC_R1,=AL1(C' ',X'20',X'20',X'20',X'20',X'20',X'21',X'20X
               ')
         MVC   ZCVT_WORKAREA(8),0(ZC_R1) MOVE MASK FOR ED
         ED    ZCVT_WORKAREA(8),8-4+ZCVT_PWORK
         MVC   DAYCOUNT,ZCVT_WORKAREA+2
*             MOVE DAYOFWK TO DAYWEEK.
*      *  L     R8,DAYOFMN         LOAD DAY OF MONTH
*      *  CVD   R8,DEC             CONVERT TO DECIMAL
*      *  MVC   DAYMONTH,=X'40202120' MOVE MASK
*      *  ED    DAYMONTH,DEC+6      EDIT DAY OF MONTH
*ZC    394         MOVE  DAYOFWK,TO,DAYWEEK
         L     0,DAYOFWK
         CVD   0,ZCVT_PWORK
         LARL  ZC_R1,=AL1(C' ',X'20',X'20',X'20',X'21',X'20')
         MVC   ZCVT_WORKAREA(6),0(ZC_R1) MOVE MASK FOR ED
         LA    ZC_R1,ZCVT_WORKAREA+1+1
         EDMK  ZCVT_WORKAREA(6),8-3+ZCVT_PWORK
         MVC   DAYWEEK,ZCVT_WORKAREA+2
*             MOVE DAYOFMN TO DAYMONTH.
*      *  L     R8,MONTH           LOAD MONTH
*      *  CVD   R8,DEC             CONVERT TO DECIMAL
*      *  MVC   MONTHYR,=X'40202120' MOVE MASK
*      *  ED    MONTHYR,DEC+6      EDIT MONTH
*ZC    399         MOVE  DAYOFMN,TO,DAYMONTH
         L     0,DAYOFMN
         CVD   0,ZCVT_PWORK
         LARL  ZC_R1,=AL1(C' ',X'20',X'20',X'20',X'21',X'20')
         MVC   ZCVT_WORKAREA(6),0(ZC_R1) MOVE MASK FOR ED
         LA    ZC_R1,ZCVT_WORKAREA+1+1
         EDMK  ZCVT_WORKAREA(6),8-3+ZCVT_PWORK
         MVC   DAYMONTH,ZCVT_WORKAREA+2
*             MOVE MONTH TO MONTHYR.
*      *  L     R8,YEAR            LOAD YEAR
*      *  CVD   R8,DEC             CONVERT TO DECIMAL
*      *  MVC   YEARNUM,=X'402020202120' MOVE MASK
*      *  ED    YEARNUM,DEC+5      EDIT YEAR
*ZC    404         MOVE  MONTH,TO,MONTHYR
         L     0,MONTH
         CVD   0,ZCVT_PWORK
         LARL  ZC_R1,=AL1(C' ',X'20',X'20',X'20',X'21',X'20')
         MVC   ZCVT_WORKAREA(6),0(ZC_R1) MOVE MASK FOR ED
         LA    ZC_R1,ZCVT_WORKAREA+1+1
         EDMK  ZCVT_WORKAREA(6),8-3+ZCVT_PWORK
         MVC   MONTHYR,ZCVT_WORKAREA+2
*             MOVE YEAR TO YEARNUM.
*ZC    409         MOVE  YEAR,TO,YEARNUM
         L     0,YEAR
         CVD   0,ZCVT_PWORK
         LARL  ZC_R1,=AL1(C' ',X'20',X'20',X'20',X'20',X'20',X'21',X'20X
               ')
         MVC   ZCVT_WORKAREA(8),0(ZC_R1) MOVE MASK FOR ED
         ED    ZCVT_WORKAREA(8),8-4+ZCVT_PWORK
         MVC   YEARNUM,ZCVT_WORKAREA+2
*             EXEC CICS SEND FROM(FORMAT2) LENGTH(FORMAT2L) END-EXEC.
*ZC    410         EXEC  CICS,SEND,FROM(FORMAT2),LENGTH(FORMAT2L)
         LARL  R1,P0404         ADDRESS SOURCE
         LARL  R15,P0404        ADDRESS TARGET
         XC    0(P0404END-P0404,R15),0(R1) XC IT
         LARL  R1,=X'0404'         ADDRESS SOURCE
         LARL  R15,P0404FN        ADDRESS TARGET AS LABEL
         MVC   0(L'P0404FN,R15),0(R1) MVC IT
         LARL  R15,P0404LEN       ADDRESS TARGET
         MVC   0(2,R15),FORMAT2L   SET LENGTH FROM LABEL
         LA    R0,FORMAT2           FROM ADDRESS
         LARL  R1,P0404FRM         ADDRESS TARGET
         ST    R0,0(R1)      ST IT
         LARL  R1,P0404EIB         ADDRESS TARGET
         ST    DFHEIBR,0(R1)      ST IT
         LARL  R1,P0404TCT         ADDRESS TARGET
         ST    TCTTEAR,0(R1)      ST IT
         LARL  R1,P0404EDS         ADDRESS TARGET
         ST    R13,0(R1)      ST IT
         L     R0,DFHEILEN        DSA LENGTH
         LARL  R1,P0404EDL         ADDRESS TARGET
         STH   R0,0(R1)      STH IT
         LA    R0,DFHEIUSR        DSA USER AREA
         SR    R0,R13             R0=CICS DSA LENGTH
         LARL  R1,P0404EDC         ADDRESS TARGET
         STH   R0,0(R1)      STH IT
         LARL  R0,P0404EDF_1585 ADDRESS ORIGIN FOR CEDF
         LARL  R1,P0404EDF         ADDRESS TARGET
         ST    R0,0(R1)      ST IT
         L     R15,TCTTELCL       R15=LCL MODULE INDEXER
         LARL  R1,=A(P0404)       R1=LCL MODULE PARAMETER LIST
P0404EDF_1585    DS 0H
         BAKR  0,R15              STACK REGS AND GO
         LARL  R1,P0404NOH         ADDRESS TARGET
         CLI   0(R1),X'FF'      CLI IT
         JE    P0404BYP_1585   EXIT IF IT IS
         OC    EIBRESP,EIBRESP    ANY BAD RESPONSE ?
         JZ    P0404BYP_1585   EXIT IF NONE
* INVREQ
         DC    AL3(0),C'ABEND'    MARKER FOR Z390KCP ESTAE
         DC    AL4(P0404BYP_1585) ENTRYPOINT FOR IGNORE CONDITION
*
P0404BYP_1585    DS 0H
*      *  MVC   FMT3SBA,SBA18      15TH SBA
*             MOVE SBA18 TO FMT3SBA.
*ZC    412         MOVE  SBA18,TO,FMT3SBA
         MVC   FMT3SBA,SBA18  ALIGN LEFT X OTHER
*             EXEC CICS FORMATTIME ABSTIME(STCKTIME) DATESTRING(DSTRINGX
                              )
*ZC    413         EXEC  CICS,FORMATTIME,ABSTIME(STCKTIME),DATESTRING(DX
               STRING),TIME(FMTTIME1)
         LARL  R1,P4A04         ADDRESS SOURCE
         LARL  R15,P4A04        ADDRESS TARGET
         XC    0(P4A04END-P4A04,R15),0(R1) XC IT
         LARL  R1,=X'4A04'         ADDRESS SOURCE
         LARL  R15,P4A04FN        ADDRESS TARGET AS LABEL
         MVC   0(L'P4A04FN,R15),0(R1) MVC IT
         LARL  R15,P4A04ABS       ADDRESS TARGET
         MVC   0(8,R15),STCKTIME  SET ABSTIME
         LA    R0,DSTRING        DSTRING ADDRESS
         LARL  R1,P4A04DST         ADDRESS TARGET
         ST    R0,0(R1)      ST IT
         LA    R0,FMTTIME1           TIME ADDRESS
         LARL  R1,P4A04TIM         ADDRESS TARGET
         ST    R0,0(R1)      ST IT
         LARL  R1,P4A04EIB         ADDRESS TARGET
         ST    DFHEIBR,0(R1)      ST IT
         LARL  R1,P4A04TCT         ADDRESS TARGET
         ST    TCTTEAR,0(R1)      ST IT
         LARL  R1,P4A04EDS         ADDRESS TARGET
         ST    R13,0(R1)      ST IT
         L     R0,DFHEILEN        DSA LENGTH
         LARL  R1,P4A04EDL         ADDRESS TARGET
         STH   R0,0(R1)      STH IT
         LA    R0,DFHEIUSR        DSA USER AREA
         SR    R0,R13             R0=CICS DSA LENGTH
         LARL  R1,P4A04EDC         ADDRESS TARGET
         STH   R0,0(R1)      STH IT
         LARL  R0,P4A04EDF_1606 ADDRESS ORIGIN FOR CEDF
         LARL  R1,P4A04EDF         ADDRESS TARGET
         ST    R0,0(R1)      ST IT
         L     R15,TCTTELCL       R15=LCL MODULE INDEXER
         LARL  R1,=A(P4A04)       R1=LCL MODULE PARAMETER LIST
P4A04EDF_1606    EQU *
         BAKR  0,R15              STACK REGS AND GO
         LARL  R1,P4A04NOH         ADDRESS TARGET
         CLI   0(R1),X'FF'      CLI IT
         JE    P4A04BYP_1606   EXIT IF IT IS
         OC    EIBRESP,EIBRESP    ANY BAD RESPONSE ?
         JZ    P4A04BYP_1606   EXIT IF NONE
* INVREQ
         DC    AL3(0),C'ABEND'    MARKER FOR Z390KCP ESTAE
         DC    AL4(P4A04BYP_1606) ENTRYPOINT FOR IGNORE CONDITION
P4A04BYP_1606    DS 0H
*                       TIME(FMTTIME1) END-EXEC.
*             EXEC CICS FORMATTIME ABSTIME(STCKTIME)
*ZC    415         EXEC  CICS,FORMATTIME,ABSTIME(STCKTIME),TIME(FMTTIMEX
               2),TIMESEP
         LARL  R1,P4A04         ADDRESS SOURCE
         LARL  R15,P4A04        ADDRESS TARGET
         XC    0(P4A04END-P4A04,R15),0(R1) XC IT
         LARL  R1,=X'4A04'         ADDRESS SOURCE
         LARL  R15,P4A04FN        ADDRESS TARGET AS LABEL
         MVC   0(L'P4A04FN,R15),0(R1) MVC IT
         LARL  R15,P4A04ABS       ADDRESS TARGET
         MVC   0(8,R15),STCKTIME  SET ABSTIME
         LARL  R1,P4A04TSP         ADDRESS TARGET
         MVI   0(R1),C':'      MVI IT
         LA    R0,FMTTIME2           TIME ADDRESS
         LARL  R1,P4A04TIM         ADDRESS TARGET
         ST    R0,0(R1)      ST IT
         LARL  R1,P4A04EIB         ADDRESS TARGET
         ST    DFHEIBR,0(R1)      ST IT
         LARL  R1,P4A04TCT         ADDRESS TARGET
         ST    TCTTEAR,0(R1)      ST IT
         LARL  R1,P4A04EDS         ADDRESS TARGET
         ST    R13,0(R1)      ST IT
         L     R0,DFHEILEN        DSA LENGTH
         LARL  R1,P4A04EDL         ADDRESS TARGET
         STH   R0,0(R1)      STH IT
         LA    R0,DFHEIUSR        DSA USER AREA
         SR    R0,R13             R0=CICS DSA LENGTH
         LARL  R1,P4A04EDC         ADDRESS TARGET
         STH   R0,0(R1)      STH IT
         LARL  R0,P4A04EDF_1620 ADDRESS ORIGIN FOR CEDF
         LARL  R1,P4A04EDF         ADDRESS TARGET
         ST    R0,0(R1)      ST IT
         L     R15,TCTTELCL       R15=LCL MODULE INDEXER
         LARL  R1,=A(P4A04)       R1=LCL MODULE PARAMETER LIST
P4A04EDF_1620    EQU *
         BAKR  0,R15              STACK REGS AND GO
         LARL  R1,P4A04NOH         ADDRESS TARGET
         CLI   0(R1),X'FF'      CLI IT
         JE    P4A04BYP_1620   EXIT IF IT IS
         OC    EIBRESP,EIBRESP    ANY BAD RESPONSE ?
         JZ    P4A04BYP_1620   EXIT IF NONE
* INVREQ
         DC    AL3(0),C'ABEND'    MARKER FOR Z390KCP ESTAE
         DC    AL4(P4A04BYP_1620) ENTRYPOINT FOR IGNORE CONDITION
P4A04BYP_1620    DS 0H
*                       TIME(FMTTIME2) TIMESEP END-EXEC.
*             EXEC CICS FORMATTIME ABSTIME(STCKTIME)
*ZC    417         EXEC  CICS,FORMATTIME,ABSTIME(STCKTIME),TIME(FMTTIMEX
               3),TIMESEP('-')
         LARL  R1,P4A04         ADDRESS SOURCE
         LARL  R15,P4A04        ADDRESS TARGET
         XC    0(P4A04END-P4A04,R15),0(R1) XC IT
         LARL  R1,=X'4A04'         ADDRESS SOURCE
         LARL  R15,P4A04FN        ADDRESS TARGET AS LABEL
         MVC   0(L'P4A04FN,R15),0(R1) MVC IT
         LARL  R15,P4A04ABS       ADDRESS TARGET
         MVC   0(8,R15),STCKTIME  SET ABSTIME
         LARL  R1,=CL2'-'         ADDRESS SOURCE
         LARL  R15,P4A04TSP        ADDRESS TARGET AS LABEL
         MVC   0(L'P4A04TSP,R15),0(R1) MVC IT
         LA    R0,FMTTIME3           TIME ADDRESS
         LARL  R1,P4A04TIM         ADDRESS TARGET
         ST    R0,0(R1)      ST IT
         LARL  R1,P4A04EIB         ADDRESS TARGET
         ST    DFHEIBR,0(R1)      ST IT
         LARL  R1,P4A04TCT         ADDRESS TARGET
         ST    TCTTEAR,0(R1)      ST IT
         LARL  R1,P4A04EDS         ADDRESS TARGET
         ST    R13,0(R1)      ST IT
         L     R0,DFHEILEN        DSA LENGTH
         LARL  R1,P4A04EDL         ADDRESS TARGET
         STH   R0,0(R1)      STH IT
         LA    R0,DFHEIUSR        DSA USER AREA
         SR    R0,R13             R0=CICS DSA LENGTH
         LARL  R1,P4A04EDC         ADDRESS TARGET
         STH   R0,0(R1)      STH IT
         LARL  R0,P4A04EDF_1634 ADDRESS ORIGIN FOR CEDF
         LARL  R1,P4A04EDF         ADDRESS TARGET
         ST    R0,0(R1)      ST IT
         L     R15,TCTTELCL       R15=LCL MODULE INDEXER
         LARL  R1,=A(P4A04)       R1=LCL MODULE PARAMETER LIST
P4A04EDF_1634    EQU *
         BAKR  0,R15              STACK REGS AND GO
         LARL  R1,P4A04NOH         ADDRESS TARGET
         CLI   0(R1),X'FF'      CLI IT
         JE    P4A04BYP_1634   EXIT IF IT IS
         OC    EIBRESP,EIBRESP    ANY BAD RESPONSE ?
         JZ    P4A04BYP_1634   EXIT IF NONE
* INVREQ
         DC    AL3(0),C'ABEND'    MARKER FOR Z390KCP ESTAE
         DC    AL4(P4A04BYP_1634) ENTRYPOINT FOR IGNORE CONDITION
P4A04BYP_1634    DS 0H
*                       TIME(FMTTIME3) TIMESEP('-') END-EXEC.
*             EXEC CICS SEND FROM(FORMAT3) LENGTH(FORMAT3L) END-EXEC.
*ZC    419         EXEC  CICS,SEND,FROM(FORMAT3),LENGTH(FORMAT3L)
         LARL  R1,P0404         ADDRESS SOURCE
         LARL  R15,P0404        ADDRESS TARGET
         XC    0(P0404END-P0404,R15),0(R1) XC IT
         LARL  R1,=X'0404'         ADDRESS SOURCE
         LARL  R15,P0404FN        ADDRESS TARGET AS LABEL
         MVC   0(L'P0404FN,R15),0(R1) MVC IT
         LARL  R15,P0404LEN       ADDRESS TARGET
         MVC   0(2,R15),FORMAT3L   SET LENGTH FROM LABEL
         LA    R0,FORMAT3           FROM ADDRESS
         LARL  R1,P0404FRM         ADDRESS TARGET
         ST    R0,0(R1)      ST IT
         LARL  R1,P0404EIB         ADDRESS TARGET
         ST    DFHEIBR,0(R1)      ST IT
         LARL  R1,P0404TCT         ADDRESS TARGET
         ST    TCTTEAR,0(R1)      ST IT
         LARL  R1,P0404EDS         ADDRESS TARGET
         ST    R13,0(R1)      ST IT
         L     R0,DFHEILEN        DSA LENGTH
         LARL  R1,P0404EDL         ADDRESS TARGET
         STH   R0,0(R1)      STH IT
         LA    R0,DFHEIUSR        DSA USER AREA
         SR    R0,R13             R0=CICS DSA LENGTH
         LARL  R1,P0404EDC         ADDRESS TARGET
         STH   R0,0(R1)      STH IT
         LARL  R0,P0404EDF_1648 ADDRESS ORIGIN FOR CEDF
         LARL  R1,P0404EDF         ADDRESS TARGET
         ST    R0,0(R1)      ST IT
         L     R15,TCTTELCL       R15=LCL MODULE INDEXER
         LARL  R1,=A(P0404)       R1=LCL MODULE PARAMETER LIST
P0404EDF_1648    DS 0H
         BAKR  0,R15              STACK REGS AND GO
         LARL  R1,P0404NOH         ADDRESS TARGET
         CLI   0(R1),X'FF'      CLI IT
         JE    P0404BYP_1648   EXIT IF IT IS
         OC    EIBRESP,EIBRESP    ANY BAD RESPONSE ?
         JZ    P0404BYP_1648   EXIT IF NONE
* INVREQ
         DC    AL3(0),C'ABEND'    MARKER FOR Z390KCP ESTAE
         DC    AL4(P0404BYP_1648) ENTRYPOINT FOR IGNORE CONDITION
*
P0404BYP_1648    DS 0H
*      * BAD ABSTIME, RAISE INVREQ/1
*      *  MVC   ICSBA,SBA19        16TH SBA
*             MOVE SBA19 TO ICSBA.
*      *  MVC   ICFUNC(10),=C'FORMATTIME' SET FUNCTION
*ZC    424         MOVE  SBA19,TO,ICSBA
         MVC   ICSBA,SBA19  ALIGN LEFT X OTHER
*             MOVE 'FORMATTIME' TO ICFUNC.
*      *  LA    R7,IC01RTN5        R7=HANDLE RETURN
*ZC    426         MOVE  'FORMATTIME',TO,ICFUNC
         LARL  ZC_R1,=CL10'FORMATTIME'
          MVC   ICFUNC,0(ZC_R1)
*             MOVE 5 TO DEPCTRL.
*      *  MVI   STCKTIME,X'0A'     MAKE ABSTIME INVALID
*ZC    428         MOVE  5,TO,DEPCTRL
          MVHHI DEPCTRL,5
*             MOVE X'0A' TO STCKBAD.
*ZC    430         MOVE  X'0A',TO,STCKBAD
         MVI   STCKBAD,X'0A'
*             EXEC CICS FORMATTIME ABSTIME(STCKTIME) END-EXEC.
*ZC    431         EXEC  CICS,FORMATTIME,ABSTIME(STCKTIME)
         LARL  R1,P4A04         ADDRESS SOURCE
         LARL  R15,P4A04        ADDRESS TARGET
         XC    0(P4A04END-P4A04,R15),0(R1) XC IT
         LARL  R1,=X'4A04'         ADDRESS SOURCE
         LARL  R15,P4A04FN        ADDRESS TARGET AS LABEL
         MVC   0(L'P4A04FN,R15),0(R1) MVC IT
         LARL  R15,P4A04ABS       ADDRESS TARGET
         MVC   0(8,R15),STCKTIME  SET ABSTIME
         LARL  R1,P4A04EIB         ADDRESS TARGET
         ST    DFHEIBR,0(R1)      ST IT
         LARL  R1,P4A04TCT         ADDRESS TARGET
         ST    TCTTEAR,0(R1)      ST IT
         LARL  R1,P4A04EDS         ADDRESS TARGET
         ST    R13,0(R1)      ST IT
         L     R0,DFHEILEN        DSA LENGTH
         LARL  R1,P4A04EDL         ADDRESS TARGET
         STH   R0,0(R1)      STH IT
         LA    R0,DFHEIUSR        DSA USER AREA
         SR    R0,R13             R0=CICS DSA LENGTH
         LARL  R1,P4A04EDC         ADDRESS TARGET
         STH   R0,0(R1)      STH IT
         LARL  R0,P4A04EDF_1684 ADDRESS ORIGIN FOR CEDF
         LARL  R1,P4A04EDF         ADDRESS TARGET
         ST    R0,0(R1)      ST IT
         L     R15,TCTTELCL       R15=LCL MODULE INDEXER
         LARL  R1,=A(P4A04)       R1=LCL MODULE PARAMETER LIST
P4A04EDF_1684    EQU *
         BAKR  0,R15              STACK REGS AND GO
         LARL  R1,P4A04NOH         ADDRESS TARGET
         CLI   0(R1),X'FF'      CLI IT
         JE    P4A04BYP_1684   EXIT IF IT IS
         OC    EIBRESP,EIBRESP    ANY BAD RESPONSE ?
         JZ    P4A04BYP_1684   EXIT IF NONE
* INVREQ
         DC    AL3(0),C'ABEND'    MARKER FOR Z390KCP ESTAE
         DC    AL4(P4A04BYP_1684) ENTRYPOINT FOR IGNORE CONDITION
P4A04BYP_1684    DS 0H
*      * IC01RTN5 DS    0H
*         IC01RTN5.
PG_IC01RTN4_END L ZC_R15,ZCVT_PMCHECK
         BASR  ZC_R14,ZC_R15 CHECK FOR END OF CURRENT PERFORM
PG_IC01RTN5 DS 0H
*             EXEC CICS SEND FROM(ENDMSG) LENGTH(ENDMSGL) END-EXEC.
*ZC    434         EXEC  CICS,SEND,FROM(ENDMSG),LENGTH(ENDMSGL)
         LARL  R1,P0404         ADDRESS SOURCE
         LARL  R15,P0404        ADDRESS TARGET
         XC    0(P0404END-P0404,R15),0(R1) XC IT
         LARL  R1,=X'0404'         ADDRESS SOURCE
         LARL  R15,P0404FN        ADDRESS TARGET AS LABEL
         MVC   0(L'P0404FN,R15),0(R1) MVC IT
         LARL  R15,P0404LEN       ADDRESS TARGET
         MVC   0(2,R15),ENDMSGL   SET LENGTH FROM LABEL
         LA    R0,ENDMSG           FROM ADDRESS
         LARL  R1,P0404FRM         ADDRESS TARGET
         ST    R0,0(R1)      ST IT
         LARL  R1,P0404EIB         ADDRESS TARGET
         ST    DFHEIBR,0(R1)      ST IT
         LARL  R1,P0404TCT         ADDRESS TARGET
         ST    TCTTEAR,0(R1)      ST IT
         LARL  R1,P0404EDS         ADDRESS TARGET
         ST    R13,0(R1)      ST IT
         L     R0,DFHEILEN        DSA LENGTH
         LARL  R1,P0404EDL         ADDRESS TARGET
         STH   R0,0(R1)      STH IT
         LA    R0,DFHEIUSR        DSA USER AREA
         SR    R0,R13             R0=CICS DSA LENGTH
         LARL  R1,P0404EDC         ADDRESS TARGET
         STH   R0,0(R1)      STH IT
         LARL  R0,P0404EDF_1699 ADDRESS ORIGIN FOR CEDF
         LARL  R1,P0404EDF         ADDRESS TARGET
         ST    R0,0(R1)      ST IT
         L     R15,TCTTELCL       R15=LCL MODULE INDEXER
         LARL  R1,=A(P0404)       R1=LCL MODULE PARAMETER LIST
P0404EDF_1699    DS 0H
         BAKR  0,R15              STACK REGS AND GO
         LARL  R1,P0404NOH         ADDRESS TARGET
         CLI   0(R1),X'FF'      CLI IT
         JE    P0404BYP_1699   EXIT IF IT IS
         OC    EIBRESP,EIBRESP    ANY BAD RESPONSE ?
         JZ    P0404BYP_1699   EXIT IF NONE
* INVREQ
         DC    AL3(0),C'ABEND'    MARKER FOR Z390KCP ESTAE
         DC    AL4(P0404BYP_1699) ENTRYPOINT FOR IGNORE CONDITION
*
P0404BYP_1699    DS 0H
*             EXEC CICS RETURN END-EXEC.
*ZC    435         EXEC  CICS,RETURN
         LARL  R1,P0E08         ADDRESS SOURCE
         LARL  R15,P0E08        ADDRESS TARGET
         XC    0(P0E08END-P0E08,R15),0(R1) XC IT
         LARL  R1,=X'0E08'         ADDRESS SOURCE
         LARL  R15,P0E08FN        ADDRESS TARGET AS LABEL
         MVC   0(L'P0E08FN,R15),0(R1) MVC IT
         LARL  R1,P0E08EDS         ADDRESS TARGET
         ST    R13,0(R1)      ST IT
         L     R0,DFHEILEN        DSA LENGTH
         LARL  R1,P0E08EDL         ADDRESS TARGET
         STH   R0,0(R1)      STH IT
         LA    R0,DFHEIUSR        DSA USER AREA
         SR    R0,R13             R0=CICS DSA LENGTH
         LARL  R1,P0E08EDC         ADDRESS TARGET
         STH   R0,0(R1)      STH IT
* SPECIAL LINKAGE
         LARL  R0,P0E08EDF_1712 ADDRESS ORIGIN FOR CEDF
         LARL  R1,P0E08EDF         ADDRESS TARGET
         ST    R0,0(R1)      ST IT
         LARL  R1,P0E08           R1=PARAMETER LIST
         LARL  R14,P0E08RTN_1712 RETURN ADDRESS
         LRL   R15,=V(LCL0E08)    R15=EXTERNAL RETURN MODULE ADDRESS
P0E08EDF_1712    EQU *
         BR    R15                GO TO IT
*
P0E08RTN_1712    EQU *
         OC    EIBRESP,EIBRESP    ANY BAD RESPONSE ?
         JZ    P0E08BYP_1712   EXIT IF NONE
* INVREQ
         DC    AL3(0),C'ABEND'    MARKER FOR Z390KCP ESTAE
         DC    AL4(0)             IGNORE HERE IS NOT PERMITTED
*
P0E08    DS    0H
P0E08FN  DS    XL2                FUNCTION CODE
P0E08TRN DS    CL4                TRANSID
P0E08COM DS    AL4                COMMAREA ADDRESS
P0E08CLN DS    XL2                COMMAREA LENGTH
P0E08CHN DS    CL16               CHANNEL NAME
P0E08IMM DS    X                  FF=IMMEDIATE
         DS    X
P0E08CNR DS    X                  FF=CLEANER
         DS    X
P0E08EDF DS    AL4                ORIGIN ADDRESS FOR CEDF
P0E08EDS DS    AL4                DSA ADDRESS FOR EDF
P0E08EDC DS    XL2                CICS DSA LENGTH FOR EDF
P0E08EDL DS    XL2                DSA LENGTH FOR EDF
P0E08NED DS    X                  FF=NOEDF
         DS    X
P0E08RSP DS    AL4                RESP
P0E08RS2 DS    AL4                RESP2
P0E08END EQU   *                  END MARKER
*
P0E08BYP_1712    DS 0H
*      * IC01EXP  DS    0H
*         IC01EXP.
*      *  MVC   FHANDCON(7),=C'EXPIRED' MOVE CONDITION
PG_IC01RTN5_END L ZC_R15,ZCVT_PMCHECK
         BASR  ZC_R14,ZC_R15 CHECK FOR END OF CURRENT PERFORM
PG_IC01EXP DS  0H
*             MOVE 'EXPIRED     ' TO FHANDCON.
*      *  B     ICONSEND           EXIT
*ZC    439         MOVE  'EXPIRED     ',TO,FHANDCON
         LARL  ZC_R1,=CL12'EXPIRED     '
          MVC   FHANDCON,0(ZC_R1)
*             GO TO ICONSEND.
*      * IC01INV  DS    0H
*ZC    441         GO    TO,ICONSEND
         J     PG_ICONSEND
*         IC01INV.
*      *  L     R8,EIBRESP2        R8=RESP2
*      *  CVD   R8,DEC             CONVERT TO DECIMAL
*      *  XC    FHANDCON,FHANDCON  CLEAR CONDITION
*      *  MVC   FHANDCON+5(4),=X'40202020' MOVE EDIT WORD
*      *  ED    FHANDCON+5(4),DEC+6 EDIT RESP2
*      *  MVC   FHANDCON(7),=C'INVREQ/' MOVE CONDITION
PG_IC01EXP_END L ZC_R15,ZCVT_PMCHECK
         BASR  ZC_R14,ZC_R15 CHECK FOR END OF CURRENT PERFORM
PG_IC01INV DS  0H
*             MOVE 'INVREQ/     ' TO FHANDCON.
*ZC    450         MOVE  'INVREQ/     ',TO,FHANDCON
         LARL  ZC_R1,=CL12'INVREQ/     '
          MVC   FHANDCON,0(ZC_R1)
*             MOVE EIBRESP2 TO WORK1A.
*ZC    451         MOVE  EIBRESP2,TO,WORK1A
         L     0,EIBRESP2
         CVD   0,ZCVT_PWORK
         UNPK  0+WORK1A(4),5+ZCVT_PWORK(3) UNPK #1 NORMAL
         OI    4-1+WORK1A,X'F0'  RPI 1065
*             MOVE WORK1B TO FHAINV.
*      * ICONSEND DS    0H
*ZC    452         MOVE  WORK1B,TO,FHAINV
         MVC   FHAINV,WORK1B  ALIGN LEFT X OTHER
*         ICONSEND.
PG_IC01INV_END L ZC_R15,ZCVT_PMCHECK
         BASR  ZC_R14,ZC_R15 CHECK FOR END OF CURRENT PERFORM
PG_ICONSEND DS 0H
*             EXEC CICS SEND FROM(ICCOND) LENGTH(FHANDL) END-EXEC.
*ZC    455         EXEC  CICS,SEND,FROM(ICCOND),LENGTH(FHANDL)
         LARL  R1,P0404         ADDRESS SOURCE
         LARL  R15,P0404        ADDRESS TARGET
         XC    0(P0404END-P0404,R15),0(R1) XC IT
         LARL  R1,=X'0404'         ADDRESS SOURCE
         LARL  R15,P0404FN        ADDRESS TARGET AS LABEL
         MVC   0(L'P0404FN,R15),0(R1) MVC IT
         LARL  R15,P0404LEN       ADDRESS TARGET
         MVC   0(2,R15),FHANDL   SET LENGTH FROM LABEL
         LA    R0,ICCOND           FROM ADDRESS
         LARL  R1,P0404FRM         ADDRESS TARGET
         ST    R0,0(R1)      ST IT
         LARL  R1,P0404EIB         ADDRESS TARGET
         ST    DFHEIBR,0(R1)      ST IT
         LARL  R1,P0404TCT         ADDRESS TARGET
         ST    TCTTEAR,0(R1)      ST IT
         LARL  R1,P0404EDS         ADDRESS TARGET
         ST    R13,0(R1)      ST IT
         L     R0,DFHEILEN        DSA LENGTH
         LARL  R1,P0404EDL         ADDRESS TARGET
         STH   R0,0(R1)      STH IT
         LA    R0,DFHEIUSR        DSA USER AREA
         SR    R0,R13             R0=CICS DSA LENGTH
         LARL  R1,P0404EDC         ADDRESS TARGET
         STH   R0,0(R1)      STH IT
         LARL  R0,P0404EDF_1761 ADDRESS ORIGIN FOR CEDF
         LARL  R1,P0404EDF         ADDRESS TARGET
         ST    R0,0(R1)      ST IT
         L     R15,TCTTELCL       R15=LCL MODULE INDEXER
         LARL  R1,=A(P0404)       R1=LCL MODULE PARAMETER LIST
P0404EDF_1761    DS 0H
         BAKR  0,R15              STACK REGS AND GO
         LARL  R1,P0404NOH         ADDRESS TARGET
         CLI   0(R1),X'FF'      CLI IT
         JE    P0404BYP_1761   EXIT IF IT IS
         OC    EIBRESP,EIBRESP    ANY BAD RESPONSE ?
         JZ    P0404BYP_1761   EXIT IF NONE
* INVREQ
         DC    AL3(0),C'ABEND'    MARKER FOR Z390KCP ESTAE
         DC    AL4(P0404BYP_1761) ENTRYPOINT FOR IGNORE CONDITION
*
P0404BYP_1761    DS 0H
*      *  BR    R7                 RETURN TO MAIN LINE
*             GO TO IC01RTN1 IC01RTN2 IC01RTN3 IC01RTN4 IC01RTN5
*                   DEPENDING ON DEPCTRL.
*      * SUBROUTINES
*      * DOAFT    DS    0H
*ZC    457         GO    TO,IC01RTN1,IC01RTN2,IC01RTN3,IC01RTN4,IC01RTNX
               5,DEPENDING,ON,DEPCTRL
         LH    ZC_R1,DEPCTRL
         CHI   ZC_R1,1
         JL    PG_ZC_GO_TAB_1+4*5
         CHI   ZC_R1,5
         JH    PG_ZC_GO_TAB_1+4*5
         SLL   ZC_R1,2
         LARL  ZC_R2,PG_ZC_GO_TAB_1-4
         B     0(ZC_R1,ZC_R2)
PG_ZC_GO_TAB_1 DS  0H  &TYPE
         J     PG_IC01RTN1
         J     PG_IC01RTN2
         J     PG_IC01RTN3
         J     PG_IC01RTN4
         J     PG_IC01RTN5
*         DOAFT.
*      *  MVC   TIMEAFT,=X'F020202020202020' MOVE EDIT WORD
*      *  ED    TIMEAFT,EIBTIME    EDIT EIBTIME
PG_ICONSEND_END L ZC_R15,ZCVT_PMCHECK
         BASR  ZC_R14,ZC_R15 CHECK FOR END OF CURRENT PERFORM
PG_DOAFT DS    0H
*             MOVE EIBTIME TO TIMEAFT.
*      *  MVI   TIMEAFT,C' '       BLANK 1ST BYTE
*      *  MVI   TIMEAFT+1,C' '     BLANK 2ND BYTE
*ZC    466         MOVE  EIBTIME,TO,TIMEAFT
         MVI   TIMEAFT,C'0'
         UNPK  1+TIMEAFT(7),0+EIBTIME(4) UNPK #1 NORMAL
         OI    8-1+TIMEAFT,X'F0'  RPI 1065
*             MOVE SPACES TO TIMEAFTS.
*      *  MVC   DATEAFT,=X'F020202020202020' MOVE EDIT WORD
*      *  ED    DATEAFT,EIBDATE    EDIT EIBDATE
*ZC    469         MOVE  SPACES,TO,TIMEAFTS
         MVI   TIMEAFTS,C' '
         MVC   TIMEAFTS+1(2-1),TIMEAFTS
*             MOVE EIBDATE TO DATEAFT.
*      *  MVI   DATEAFT,C' '       BLANK 1ST BYTE
*ZC    472         MOVE  EIBDATE,TO,DATEAFT
         MVI   DATEAFT,C'0'
         UNPK  1+DATEAFT(7),0+EIBDATE(4) UNPK #1 NORMAL
         OI    8-1+DATEAFT,X'F0'  RPI 1065
*             MOVE SPACE TO DATEAFTS.
*      *  MVC   STCKAFT,=X'F0202020202020202020202020202020' MOVE EDWD
*      *  ED    STCKAFT,STCKTIME   EDIT STCKTIME
*ZC    474         MOVE  SPACE,TO,DATEAFTS
         MVI   DATEAFTS,C' '
*             MOVE STCKTIME TO STCKAFT.
*      *  MVI   STCKAFT,C' '       BLANK 1ST BYTE
*ZC    477         MOVE  STCKTIME,TO,STCKAFT
         MVI   STCKAFT,C'0'
         UNPK  1+STCKAFT(15),0+STCKTIME(8) UNPK #1 NORMAL
         OI    16-1+STCKAFT,X'F0'  RPI 1065
*             MOVE SPACE TO STCKAFTS.
*ZC    479         MOVE  SPACE,TO,STCKAFTS
         MVI   STCKAFTS,C' '
*             EXEC CICS SEND FROM(TDAFT) LENGTH(TDAFTLEN) END-EXEC.
*ZC    480         EXEC  CICS,SEND,FROM(TDAFT),LENGTH(TDAFTLEN)
         LARL  R1,P0404         ADDRESS SOURCE
         LARL  R15,P0404        ADDRESS TARGET
         XC    0(P0404END-P0404,R15),0(R1) XC IT
         LARL  R1,=X'0404'         ADDRESS SOURCE
         LARL  R15,P0404FN        ADDRESS TARGET AS LABEL
         MVC   0(L'P0404FN,R15),0(R1) MVC IT
         LARL  R15,P0404LEN       ADDRESS TARGET
         MVC   0(2,R15),TDAFTLEN   SET LENGTH FROM LABEL
         LA    R0,TDAFT           FROM ADDRESS
         LARL  R1,P0404FRM         ADDRESS TARGET
         ST    R0,0(R1)      ST IT
         LARL  R1,P0404EIB         ADDRESS TARGET
         ST    DFHEIBR,0(R1)      ST IT
         LARL  R1,P0404TCT         ADDRESS TARGET
         ST    TCTTEAR,0(R1)      ST IT
         LARL  R1,P0404EDS         ADDRESS TARGET
         ST    R13,0(R1)      ST IT
         L     R0,DFHEILEN        DSA LENGTH
         LARL  R1,P0404EDL         ADDRESS TARGET
         STH   R0,0(R1)      STH IT
         LA    R0,DFHEIUSR        DSA USER AREA
         SR    R0,R13             R0=CICS DSA LENGTH
         LARL  R1,P0404EDC         ADDRESS TARGET
         STH   R0,0(R1)      STH IT
         LARL  R0,P0404EDF_1834 ADDRESS ORIGIN FOR CEDF
         LARL  R1,P0404EDF         ADDRESS TARGET
         ST    R0,0(R1)      ST IT
         L     R15,TCTTELCL       R15=LCL MODULE INDEXER
         LARL  R1,=A(P0404)       R1=LCL MODULE PARAMETER LIST
P0404EDF_1834    DS 0H
         BAKR  0,R15              STACK REGS AND GO
         LARL  R1,P0404NOH         ADDRESS TARGET
         CLI   0(R1),X'FF'      CLI IT
         JE    P0404BYP_1834   EXIT IF IT IS
         OC    EIBRESP,EIBRESP    ANY BAD RESPONSE ?
         JZ    P0404BYP_1834   EXIT IF NONE
* INVREQ
         DC    AL3(0),C'ABEND'    MARKER FOR Z390KCP ESTAE
         DC    AL4(P0404BYP_1834) ENTRYPOINT FOR IGNORE CONDITION
*
P0404BYP_1834    DS 0H
*      *  BR    R9                 RETURN
PG_DOAFT_END L ZC_R15,ZCVT_PMCHECK
         BASR  ZC_R14,ZC_R15 CHECK FOR END OF CURRENT PERFORM
SN_END_PROCEDURE DS 0H SECTION
*        PROCEDURE END
         LH    ZC_R1,RETURN_CODE
         L     ZC_R15,ZCVT_GOBACK
         BASR  ZC_R14,ZC_R15
         LTORG 
*    ZCOBOL WORKING STORAGE SECTION DATA ITEMS 
*    LVL DATA NAME                      ADDR     LEN      DUP TYP PIC  X
                     VALUE 
*    01  STCKTIME                       00000080 00000008 1   P   9(15)X
                      
*    01  FILLER                         00000080 00000008 1   X        X
                      
*    02  STCKBAD                        00000080 00000001 1   X   X    X
                      
*    02  FILLER                         00000081 00000007 1   X   X(7) X
                      
*    01  SBA3                           00000088 00000003 1   X   X(3) X
                     X''11C260'' 
*    01  SBA4                           0000008B 00000003 1   X   X(3) X
                     X''11C3F0'' 
*    01  SBA5                           0000008E 00000003 1   X   X(3) X
                     X''11C540'' 
*    01  SBA6                           00000091 00000003 1   X   X(3) X
                     X''11C650'' 
*    01  SBA7                           00000094 00000003 1   X   X(3) X
                     X''11C760'' 
*    01  SBA8                           00000097 00000003 1   X   X(3) X
                     X''11C8F0'' 
*    01  SBA9                           0000009A 00000003 1   X   X(3) X
                     X''114A40'' 
*    01  SBA10                          0000009D 00000003 1   X   X(3) X
                     X''114B50'' 
*    01  SBA11                          000000A0 00000003 1   X   X(3) X
                     X''114C60'' 
*    01  SBA12                          000000A3 00000003 1   X   X(3) X
                     X''114DF0'' 
*    01  SBA13                          000000A6 00000003 1   X   X(3) X
                     X''114F40'' 
*    01  SBA14                          000000A9 00000003 1   X   X(3) X
                     X''115050'' 
*    01  SBA15                          000000AC 00000003 1   X   X(3) X
                     X''11D160'' 
*    01  SBA16                          000000AF 00000003 1   X   X(3) X
                     X''11D2F0'' 
*    01  SBA17                          000000B2 00000003 1   X   X(3) X
                     X''11D440'' 
*    01  SBA18                          000000B5 00000003 1   X   X(3) X
                     X''11D550'' 
*    01  SBA19                          000000B8 00000003 1   X   X(3) X
                     X''11D660'' 
*    01  TDBEF                          000000BB 00000031 1   X        X
                      
*    02  ZC_FILLER_V1                   000000BB 00000001 1   X   X    X
                     X''C3'' 
*    02  TDBEFSBA                       000000BC 00000003 1   X   X(3) X
                      
*    02  ZC_FILLER_V2                   000000BF 0000000D 1   X   X(13)X
                     ''EIBTIME/DATE '' 
*    02  ZC_FILLER_V3                   000000CC 00000010 1   X   X(16)X
                     ''AT TASK START   '' 
*    02  TIMEBEF                        000000DC 00000008 1   Z   9(8) X
                      
*    02  FILLER                         000000DC 00000008 1   X        X
                      
*    03  TIMEBEFS                       000000DC 00000002 1   X   X(2) X
                      
*    03  FILLER                         000000DE 00000006 1   X   X(6) X
                      
*    02  DATEBEF                        000000E4 00000008 1   Z   9(8) X
                      
*    02  FILLER                         000000E4 00000008 1   X        X
                      
*    03  DATEBEFS                       000000E4 00000001 1   X   X    X
                      
*    03  FILLER                         000000E5 00000007 1   X   X(7) X
                      
*    01  TDBEFLEN                       000000EC 00000002 1   H   9(4) X
                      
*    01  TDAFT                          000000EE 00000041 1   X        X
                      
*    02  ZC_FILLER_V4                   000000EE 00000001 1   X   X    X
                     X''C3'' 
*    02  TDAFTSBA                       000000EF 00000003 1   X   X(3) X
                      
*    02  ZC_FILLER_V5                   000000F2 0000000D 1   X   X(13)X
                     ''EIBTIME/DATE '' 
*    02  TIMESPEC                       000000FF 00000010 1   X   X(16)X
                     ''AFTER TASK START'' 
*    02  TIMEAFT                        0000010F 00000008 1   Z   9(8) X
                      
*    02  FILLER                         0000010F 00000008 1   X        X
                      
*    03  TIMEAFTS                       0000010F 00000002 1   X   X(2) X
                     SPACES 
*    03  TIMEAFDL                       00000111 00000006 1   X   X(6) X
                     SPACES 
*    02  FILLER                         0000010F 00000008 1   X        X
                      
*    03  FILLER                         0000010F 00000006 1   X   X(6) X
                      
*    03  TIMEAF59                       00000115 00000002 1   X   X(2) X
                      
*    02  DATEAFT                        00000117 00000008 1   Z   9(8) X
                      
*    02  FILLER                         00000117 00000008 1   X        X
                      
*    03  DATEAFTS                       00000117 00000001 1   X   X    X
                      
*    03  FILLER                         00000118 00000007 1   X   X(7) X
                      
*    02  STCKAFT                        0000011F 00000010 1   Z   9(16)X
                      
*    02  FILLER                         0000011F 00000010 1   X        X
                      
*    03  STCKAFTS                       0000011F 00000001 1   X   X    X
                     SPACE 
*    03  ZC_FILLER_V6                   00000120 0000000F 1   X   X(15)X
                     SPACES 
*    01  TDAFTLEN                       0000012F 00000002 1   H   9(4) X
                      
*    01  FORMAT                         00000131 00000050 1   X        X
                      
*    02  ZC_FILLER_V7                   00000131 00000001 1   X   X    X
                     X''C3'' 
*    02  FMTSBA                         00000132 00000003 1   X   X(3) X
                      
*    02  ZC_FILLER_V8                   00000135 0000000B 1   X   X(11)X
                     ''FORMATTIME '' 
*    02  FMTDATE1                       00000140 0000000A 1   X   X(10)X
                     SPACES 
*    02  ZC_FILLER_V9                   0000014A 00000001 1   X   X    X
                     SPACE 
*    02  FMTDATE2                       0000014B 0000000A 1   X   X(10)X
                     SPACES 
*    02  ZC_FILLER_V10                  00000155 00000001 1   X   X    X
                     SPACE 
*    02  FMTDATE3                       00000156 0000000A 1   X   X(10)X
                     SPACES 
*    02  ZC_FILLER_V11                  00000160 00000001 1   X   X    X
                     SPACE 
*    02  FMTDATE4                       00000161 0000000A 1   X   X(10)X
                     SPACES 
*    02  ZC_FILLER_V12                  0000016B 00000001 1   X   X    X
                     SPACE 
*    02  FMTDATE5                       0000016C 0000000A 1   X   X(10)X
                     SPACES 
*    02  ZC_FILLER_V13                  00000176 00000001 1   X   X    X
                     SPACE 
*    02  FMTDATE6                       00000177 0000000A 1   X   X(10)X
                     SPACES 
*    01  FORMATL                        00000181 00000002 1   H   9(4) X
                      
*    01  FORMAT2                        00000183 0000002C 1   X        X
                      
*    02  ZC_FILLER_V14                  00000183 00000001 1   X   X    X
                     X''C3'' 
*    02  FMT2SBA                        00000184 00000003 1   X   X(3) X
                      
*    02  ZC_FILLER_V15                  00000187 0000000B 1   X   X(11)X
                     ''FORMATTIME '' 
*    02  DAYCOUNT                       00000192 00000006 1   X   Z(5)9X
                      
*    02  ZC_FILLER_V16                  00000198 00000001 1   X   X    X
                     SPACE 
*    02  DAYWEEK                        00000199 00000004 1   X   ZZZ9 X
                      
*    02  ZC_FILLER_V17                  0000019D 00000001 1   X   X    X
                     SPACE 
*    02  DAYMONTH                       0000019E 00000004 1   X   ZZZ9 X
                      
*    02  ZC_FILLER_V18                  000001A2 00000001 1   X   X    X
                     SPACE 
*    02  MONTHYR                        000001A3 00000004 1   X   ZZZ9 X
                      
*    02  ZC_FILLER_V19                  000001A7 00000001 1   X   X    X
                     SPACE 
*    02  YEARNUM                        000001A8 00000006 1   X   Z(5)9X
                      
*    02  ZC_FILLER_V20                  000001AE 00000001 1   X   X    X
                     SPACE 
*    01  FORMAT2L                       000001AF 00000002 1   H   9(4) X
                      
*    01  FORMAT3                        000001B1 00000041 1   X        X
                      
*    02  ZC_FILLER_V21                  000001B1 00000001 1   X   X    X
                     X''C3'' 
*    02  FMT3SBA                        000001B2 00000003 1   X   X(3) X
                      
*    02  ZC_FILLER_V22                  000001B5 0000000B 1   X   X(11)X
                     ''FORMATTIME '' 
*    02  DSTRING                        000001C0 00000019 1   X   X(25)X
                     SPACES 
*    02  ZC_FILLER_V23                  000001D9 00000001 1   X   X    X
                     SPACE 
*    02  FMTTIME1                       000001DA 00000006 1   X   X(6) X
                     SPACES 
*    02  ZC_FILLER_V24                  000001E0 00000001 1   X   X    X
                     SPACE 
*    02  FMTTIME2                       000001E1 00000008 1   X   X(8) X
                     SPACES 
*    02  ZC_FILLER_V25                  000001E9 00000001 1   X   X    X
                     SPACE 
*    02  FMTTIME3                       000001EA 00000008 1   X   X(8) X
                     SPACES 
*    01  FORMAT3L                       000001F2 00000002 1   H   9(4) X
                      
*    01  ICCOND                         000001F4 0000002D 1   X        X
                      
*    02  ZC_FILLER_V26                  000001F4 00000001 1   X   X    X
                     X''C3'' 
*    02  ICSBA                          000001F5 00000003 1   X   X(3) X
                      
*    02  ICFUNC                         000001F8 0000000A 1   X   X(10)X
                     ''DELAY     '' 
*    02  ZC_FILLER_V27                  00000202 00000001 1   X   X    X
                     SPACE 
*    02  FHANDCON                       00000203 0000000C 1   X        X
                      
*    03  ZC_FILLER_V28                  00000203 00000007 1   X   X(7) X
                     SPACES 
*    03  FHAINV                         0000020A 00000002 1   X   X(2) X
                      
*    03  ZC_FILLER_V29                  0000020C 00000003 1   X   X(3) X
                     SPACES 
*    02  ZC_FILLER_V30                  0000020F 00000012 1   X   X(18)X
                     '' CONDITION RAISED '' 
*    01  FHANDL                         00000221 00000002 1   H   9(4) X
                      
*    01  ENDMSG                         00000223 00000023 1   X        X
                      
*    02  ZC_FILLER_V31                  00000223 00000004 1   X   X(4) X
                     X''C3115CF0'' 
*    02  ZC_FILLER_V32                  00000227 0000001F 1   X   X(31)X
                     ''TESTICC1 COMPLETED, PRESS CLEAR'' 
*    01  ENDMSGL                        00000246 00000002 1   H   9(4) X
                      
*    01  FILLER                         00000248 00000004 1   X        X
                      
*    02  WORK1A                         00000248 00000004 1   Z   9(4) X
                      
*    02  FILLER                         00000248 00000004 1   X        X
                      
*    03  FILLER                         00000248 00000002 1   X   X(2) X
                      
*    03  WORK1B                         0000024A 00000002 1   X   X(2) X
                      
*    01  SECS19                         0000024C 00000006 1   X   X(6) X
                     ''000019'' 
*    01  DAYCNT                         00000252 00000004 1   F   9(9) X
                      
*    01  DAYOFWK                        00000256 00000004 1   F   9(9) X
                      
*    01  DAYOFMN                        0000025A 00000004 1   F   9(9) X
                      
*    01  MONTH                          0000025E 00000004 1   F   9(9) X
                      
*    01  YEAR                           00000262 00000004 1   F   9(9) X
                      
*    01  MYSEP                          00000266 00000001 1   X   X    X
                     '':'' 
*    01  DEPCTRL                        00000267 00000002 1   H   9(4) X
                      
*    01  ZC_WS_ID1                      00000269 00000007 1   X   X(7) X
                     ''ZCWSID1'' 
*    01  DEBUG_ITEM                     00000270 00000058 1   X        X
                      
*    02  DEBUG_LINE                     00000270 00000006 1   X   X(6) X
                      
*    02  ZC_FILLER_V33                  00000276 00000001 1   X   X    X
                     SPACE 
*    02  DEBUG_NAME                     00000277 0000001E 1   X   X(30)X
                      
*    02  ZC_FILLER_V34                  00000295 00000001 1   X   X    X
                     SPACE 
*    02  DEBUG_SUB_1                    00000296 00000004 1   Z   9999 X
                      
*    02  ZC_FILLER_V35                  0000029A 00000001 1   X   X    X
                     SPACE 
*    02  DEBUG_SUB_2                    0000029B 00000004 1   Z   9999 X
                      
*    02  ZC_FILLER_V36                  0000029F 00000001 1   X   X    X
                     SPACE 
*    02  DEBUG_SUB_3                    000002A0 00000004 1   Z   9999 X
                      
*    02  ZC_FILLER_V37                  000002A4 00000001 1   X   X    X
                     SPACE 
*    02  DEBUG_CONTENTS                 000002A5 00000023 1   X   X(35)X
                      
*    01  TRUE                           000002C8 00000001 1   Z   9    X
                     1 
*    01  FALSE                          000002C9 00000001 1   Z   9    X
                     0 
*    01  RETURN_CODE                    000002CA 00000002 1   H   9(4) X
                     0 
*    01  ZC_MYCWA_PTR                   000002CC 00000004 1   A        X
                      
*    01  ZC_DFHCOMMAREA_PTR             000002D0 00000004 1   A        X
                      
*    01  ZC_DFHEIBLK_PTR                000002D4 00000004 1   A        X
                      
*    01  ZC_ZC_LK_END_PTR               000002D8 00000004 1   A        X
                      
DFHEISTG DSECT 
ZC_WS_LOC_1  EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
STCKTIME DS  PL8
         ORG   STCKTIME  START REDEFINE
ZC_WS_LOC_2  EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
         DS  0CL8
ZC_WS_LOC_3  EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
STCKBAD  DS  CL1
ZC_WS_LOC_4  EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
         DS  CL7
ZC_WS_LOC_5  EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
SBA3     DC XL3'11C260'
ZC_WS_LOC_6  EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
SBA4     DC XL3'11C3F0'
ZC_WS_LOC_7  EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
SBA5     DC XL3'11C540'
ZC_WS_LOC_8  EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
SBA6     DC XL3'11C650'
ZC_WS_LOC_9  EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
SBA7     DC XL3'11C760'
ZC_WS_LOC_10 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
SBA8     DC XL3'11C8F0'
ZC_WS_LOC_11 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
SBA9     DC XL3'114A40'
ZC_WS_LOC_12 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
SBA10    DC XL3'114B50'
ZC_WS_LOC_13 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
SBA11    DC XL3'114C60'
ZC_WS_LOC_14 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
SBA12    DC XL3'114DF0'
ZC_WS_LOC_15 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
SBA13    DC XL3'114F40'
ZC_WS_LOC_16 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
SBA14    DC XL3'115050'
ZC_WS_LOC_17 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
SBA15    DC XL3'11D160'
ZC_WS_LOC_18 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
SBA16    DC XL3'11D2F0'
ZC_WS_LOC_19 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
SBA17    DC XL3'11D440'
ZC_WS_LOC_20 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
SBA18    DC XL3'11D550'
ZC_WS_LOC_21 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
SBA19    DC XL3'11D660'
ZC_WS_LOC_22 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
TDBEF    DS  0CL49
ZC_WS_LOC_23 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
ZC_FILLER_V1 DC XL1'C3'
ZC_WS_LOC_24 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
TDBEFSBA DS  CL3
ZC_WS_LOC_25 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
ZC_FILLER_V2 DC CL13'EIBTIME/DATE '
ZC_WS_LOC_26 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
ZC_FILLER_V3 DC CL16'AT TASK START   '
ZC_WS_LOC_27 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
TIMEBEF  DS  ZL8
         ORG   TIMEBEF  START REDEFINE
ZC_WS_LOC_28 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
         DS  0CL8
ZC_WS_LOC_29 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
TIMEBEFS DS  CL2
ZC_WS_LOC_30 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
         DS  CL6
ZC_WS_LOC_31 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
DATEBEF  DS  ZL8
         ORG   DATEBEF  START REDEFINE
ZC_WS_LOC_32 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
         DS  0CL8
ZC_WS_LOC_33 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
DATEBEFS DS  CL1
ZC_WS_LOC_34 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
         DS  CL7
ZC_WS_LOC_35 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
TDBEFLEN DS  HL2
ZC_WS_LOC_36 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
TDAFT    DS  0CL65
ZC_WS_LOC_37 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
ZC_FILLER_V4 DC XL1'C3'
ZC_WS_LOC_38 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
TDAFTSBA DS  CL3
ZC_WS_LOC_39 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
ZC_FILLER_V5 DC CL13'EIBTIME/DATE '
ZC_WS_LOC_40 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
TIMESPEC DC CL16'AFTER TASK START'
ZC_WS_LOC_41 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
TIMEAFT  DS  ZL8
         ORG   TIMEAFT  START REDEFINE
ZC_WS_LOC_42 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
         DS  0CL8
ZC_WS_LOC_43 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
TIMEAFTS DC CL2' '
ZC_WS_LOC_44 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
TIMEAFDL DC CL6' '
         ORG   TIMEAFT  START REDEFINE
ZC_WS_LOC_45 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
         DS  0CL8
ZC_WS_LOC_46 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
         DS  CL6
ZC_WS_LOC_47 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
TIMEAF59 DS  CL2
ZC_WS_LOC_48 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
DATEAFT  DS  ZL8
         ORG   DATEAFT  START REDEFINE
ZC_WS_LOC_49 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
         DS  0CL8
ZC_WS_LOC_50 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
DATEAFTS DS  CL1
ZC_WS_LOC_51 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
         DS  CL7
ZC_WS_LOC_52 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
STCKAFT  DS  ZL16
         ORG   STCKAFT  START REDEFINE
ZC_WS_LOC_53 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
         DS  0CL16
ZC_WS_LOC_54 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
STCKAFTS DC CL1' '
ZC_WS_LOC_55 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
ZC_FILLER_V6 DC CL15' '
ZC_WS_LOC_56 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
TDAFTLEN DS  HL2
ZC_WS_LOC_57 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
FORMAT   DS  0CL80
ZC_WS_LOC_58 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
ZC_FILLER_V7 DC XL1'C3'
ZC_WS_LOC_59 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
FMTSBA   DS  CL3
ZC_WS_LOC_60 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
ZC_FILLER_V8 DC CL11'FORMATTIME '
ZC_WS_LOC_61 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
FMTDATE1 DC CL10' '
ZC_WS_LOC_62 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
ZC_FILLER_V9 DC CL1' '
ZC_WS_LOC_63 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
FMTDATE2 DC CL10' '
ZC_WS_LOC_64 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
ZC_FILLER_V10 DC CL1' '
ZC_WS_LOC_65 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
FMTDATE3 DC CL10' '
ZC_WS_LOC_66 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
ZC_FILLER_V11 DC CL1' '
ZC_WS_LOC_67 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
FMTDATE4 DC CL10' '
ZC_WS_LOC_68 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
ZC_FILLER_V12 DC CL1' '
ZC_WS_LOC_69 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
FMTDATE5 DC CL10' '
ZC_WS_LOC_70 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
ZC_FILLER_V13 DC CL1' '
ZC_WS_LOC_71 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
FMTDATE6 DC CL10' '
ZC_WS_LOC_72 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
FORMATL  DS  HL2
ZC_WS_LOC_73 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
FORMAT2  DS  0CL44
ZC_WS_LOC_74 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
ZC_FILLER_V14 DC XL1'C3'
ZC_WS_LOC_75 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
FMT2SBA  DS  CL3
ZC_WS_LOC_76 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
ZC_FILLER_V15 DC CL11'FORMATTIME '
ZC_WS_LOC_77 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
DAYCOUNT DS  CL6
ZC_WS_LOC_78 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
ZC_FILLER_V16 DC CL1' '
ZC_WS_LOC_79 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
DAYWEEK  DS  CL4
ZC_WS_LOC_80 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
ZC_FILLER_V17 DC CL1' '
ZC_WS_LOC_81 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
DAYMONTH DS  CL4
ZC_WS_LOC_82 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
ZC_FILLER_V18 DC CL1' '
ZC_WS_LOC_83 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
MONTHYR  DS  CL4
ZC_WS_LOC_84 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
ZC_FILLER_V19 DC CL1' '
ZC_WS_LOC_85 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
YEARNUM  DS  CL6
ZC_WS_LOC_86 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
ZC_FILLER_V20 DC CL1' '
ZC_WS_LOC_87 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
FORMAT2L DS  HL2
ZC_WS_LOC_88 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
FORMAT3  DS  0CL65
ZC_WS_LOC_89 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
ZC_FILLER_V21 DC XL1'C3'
ZC_WS_LOC_90 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
FMT3SBA  DS  CL3
ZC_WS_LOC_91 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
ZC_FILLER_V22 DC CL11'FORMATTIME '
ZC_WS_LOC_92 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
DSTRING  DC CL25' '
ZC_WS_LOC_93 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
ZC_FILLER_V23 DC CL1' '
ZC_WS_LOC_94 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
FMTTIME1 DC CL6' '
ZC_WS_LOC_95 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
ZC_FILLER_V24 DC CL1' '
ZC_WS_LOC_96 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
FMTTIME2 DC CL8' '
ZC_WS_LOC_97 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
ZC_FILLER_V25 DC CL1' '
ZC_WS_LOC_98 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
FMTTIME3 DC CL8' '
ZC_WS_LOC_99 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
FORMAT3L DS  HL2
ZC_WS_LOC_100 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
ICCOND   DS  0CL45
ZC_WS_LOC_101 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
ZC_FILLER_V26 DC XL1'C3'
ZC_WS_LOC_102 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
ICSBA    DS  CL3
ZC_WS_LOC_103 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
ICFUNC   DC CL10'DELAY     '
ZC_WS_LOC_104 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
ZC_FILLER_V27 DC CL1' '
ZC_WS_LOC_105 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
FHANDCON DS  0CL12
ZC_WS_LOC_106 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
ZC_FILLER_V28 DC CL7' '
ZC_WS_LOC_107 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
FHAINV   DS  CL2
ZC_WS_LOC_108 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
ZC_FILLER_V29 DC CL3' '
ZC_WS_LOC_109 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
ZC_FILLER_V30 DC CL18' CONDITION RAISED '
ZC_WS_LOC_110 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
FHANDL   DS  HL2
ZC_WS_LOC_111 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
ENDMSG   DS  0CL35
ZC_WS_LOC_112 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
ZC_FILLER_V31 DC XL4'C3115CF0'
ZC_WS_LOC_113 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
ZC_FILLER_V32 DC CL31'TESTICC1 COMPLETED, PRESS CLEAR'
ZC_WS_LOC_114 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
ENDMSGL  DS  HL2
ZC_WS_LOC_115 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
         DS  0CL4
ZC_WS_LOC_116 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
WORK1A   DS  ZL4
         ORG   WORK1A  START REDEFINE
ZC_WS_LOC_117 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
         DS  0CL4
ZC_WS_LOC_118 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
         DS  CL2
ZC_WS_LOC_119 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
WORK1B   DS  CL2
ZC_WS_LOC_120 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
SECS19   DC CL6'000019'
ZC_WS_LOC_121 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
DAYCNT   DS  FL4
ZC_WS_LOC_122 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
DAYOFWK  DS  FL4
ZC_WS_LOC_123 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
DAYOFMN  DS  FL4
ZC_WS_LOC_124 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
MONTH    DS  FL4
ZC_WS_LOC_125 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
YEAR     DS  FL4
ZC_WS_LOC_126 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
MYSEP    DC CL1':'
ZC_WS_LOC_127 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
DEPCTRL  DS  HL2
ZC_WS_LOC_128 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
ZC_WS_ID1 DC CL7'ZCWSID1'
ZC_WS_LOC_152 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
DEBUG_ITEM DS 0CL88
ZC_WS_LOC_153 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
DEBUG_LINE DS CL6
ZC_WS_LOC_154 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
ZC_FILLER_V33 DC CL1' '
ZC_WS_LOC_155 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
DEBUG_NAME DS CL30
ZC_WS_LOC_156 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
ZC_FILLER_V34 DC CL1' '
ZC_WS_LOC_157 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
DEBUG_SUB_1 DS ZL4
ZC_WS_LOC_158 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
ZC_FILLER_V35 DC CL1' '
ZC_WS_LOC_159 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
DEBUG_SUB_2 DS ZL4
ZC_WS_LOC_160 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
ZC_FILLER_V36 DC CL1' '
ZC_WS_LOC_161 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
DEBUG_SUB_3 DS ZL4
ZC_WS_LOC_162 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
ZC_FILLER_V37 DC CL1' '
ZC_WS_LOC_163 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
DEBUG_CONTENTS DS CL35
ZC_WS_LOC_164 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
TRUE     DC CL1'1'
ZC_WS_LOC_165 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
FALSE    DC CL1'0'
ZC_WS_LOC_166 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
RETURN_CODE DC AL2(0)                  RPI 1065
ZC_WS_LOC_167 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
ZC_MYCWA_PTR DS AL4
ZC_WS_LOC_168 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
ZC_DFHCOMMAREA_PTR DS AL4
ZC_WS_LOC_169 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
ZC_DFHEIBLK_PTR DS AL4
ZC_WS_LOC_170 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
ZC_ZC_LK_END_PTR DS AL4
*    ZCOBOL LINKAGE SECTION DATA ITEMS 
*    LVL DATA NAME                      ADDR     LEN      DUP TYP PIC  X
                     VALUE 
*    01  MYCWA                          00000000 00000032 1   X   X(50)X
                      
*    01  DFHCOMMAREA                    00000000 00000054 1   X        X
                      
*    01  DFHEIBLK                       00000000 00000054 1   X        X
                      
*    02  EIBHEAD                        00000000 00000008 1   X   X(8) X
                      
*    02  EIBTIME                        00000008 00000004 1   P   9(7) X
                      
*    02  EIBDATE                        0000000C 00000004 1   P   9(7) X
                      
*    02  EIBTRNID                       00000010 00000004 1   X   X(4) X
                      
*    02  EIBTASKN                       00000014 00000004 1   P   9(7) X
                      
*    02  EIBTRMID                       00000018 00000004 1   X   X(4) X
                      
*    02  FILLER                         0000001C 00000002 1   X   X(2) X
                      
*    02  EIBCPOSN                       0000001E 00000002 1   H   9(4) X
                      
*    02  EIBCALEN                       00000020 00000002 1   H   9(4) X
                      
*    02  EIBAID                         00000022 00000001 1   X   X    X
                      
*    02  EIBFN                          00000023 00000002 1   H   9(4) X
                      
*    02  EIBRCODE                       00000025 00000006 1   X   X(6) X
                      
*    02  EIBREQID                       0000002B 00000008 1   X   X(8) X
                      
*    02  EIBDS                          00000033 00000008 1   X   X(8) X
                      
*    02  EIBRSRCE                       0000003B 00000008 1   X   X(8) X
                      
*    02  EIBRESP                        00000043 00000004 1   F   9(9) X
                      
*    02  EIBRESP2                       00000047 00000004 1   F   9(9) X
                      
*    02  EIBPROG                        0000004B 00000008 1   X   X(8) X
                      
*    02  EIBDTFRM                       00000053 00000001 1   X   X    X
                      
*    01  ZC_LK_END                      00000000 00000001 1   X   X    X
                      
DFHEISTG DSECT 
MYCWA_DSECT DSECT 
ZC_LK_LOC_129 EQU *-MYCWA CHECK &SYM_NAME(&I) LK LOC
MYCWA    DS  CL50
DFHCOMMAREA_DSECT DSECT 
ZC_LK_LOC_130 EQU *-DFHCOMMAREA CHECK &SYM_NAME(&I) LK LOC
DFHCOMMAREA DS 0CL84
DFHEIBLK_DSECT DSECT 
ZC_LK_LOC_131 EQU *-DFHEIBLK CHECK &SYM_NAME(&I) LK LOC
DFHEIBLK DS  0CL84
ZC_LK_LOC_132 EQU *-DFHEIBLK CHECK &SYM_NAME(&I) LK LOC
EIBHEAD  DS  CL8
ZC_LK_LOC_133 EQU *-DFHEIBLK CHECK &SYM_NAME(&I) LK LOC
EIBTIME  DS  PL4
ZC_LK_LOC_134 EQU *-DFHEIBLK CHECK &SYM_NAME(&I) LK LOC
EIBDATE  DS  PL4
ZC_LK_LOC_135 EQU *-DFHEIBLK CHECK &SYM_NAME(&I) LK LOC
EIBTRNID DS  CL4
ZC_LK_LOC_136 EQU *-DFHEIBLK CHECK &SYM_NAME(&I) LK LOC
EIBTASKN DS  PL4
ZC_LK_LOC_137 EQU *-DFHEIBLK CHECK &SYM_NAME(&I) LK LOC
EIBTRMID DS  CL4
ZC_LK_LOC_138 EQU *-DFHEIBLK CHECK &SYM_NAME(&I) LK LOC
         DS  CL2
ZC_LK_LOC_139 EQU *-DFHEIBLK CHECK &SYM_NAME(&I) LK LOC
EIBCPOSN DS  HL2
ZC_LK_LOC_140 EQU *-DFHEIBLK CHECK &SYM_NAME(&I) LK LOC
EIBCALEN DS  HL2
ZC_LK_LOC_141 EQU *-DFHEIBLK CHECK &SYM_NAME(&I) LK LOC
EIBAID   DS  CL1
ZC_LK_LOC_142 EQU *-DFHEIBLK CHECK &SYM_NAME(&I) LK LOC
EIBFN    DS  HL2
ZC_LK_LOC_143 EQU *-DFHEIBLK CHECK &SYM_NAME(&I) LK LOC
EIBRCODE DS  CL6
ZC_LK_LOC_144 EQU *-DFHEIBLK CHECK &SYM_NAME(&I) LK LOC
EIBREQID DS  CL8
ZC_LK_LOC_145 EQU *-DFHEIBLK CHECK &SYM_NAME(&I) LK LOC
EIBDS    DS  CL8
ZC_LK_LOC_146 EQU *-DFHEIBLK CHECK &SYM_NAME(&I) LK LOC
EIBRSRCE DS  CL8
ZC_LK_LOC_147 EQU *-DFHEIBLK CHECK &SYM_NAME(&I) LK LOC
EIBRESP  DS  FL4
ZC_LK_LOC_148 EQU *-DFHEIBLK CHECK &SYM_NAME(&I) LK LOC
EIBRESP2 DS  FL4
ZC_LK_LOC_149 EQU *-DFHEIBLK CHECK &SYM_NAME(&I) LK LOC
EIBPROG  DS  CL8
ZC_LK_LOC_150 EQU *-DFHEIBLK CHECK &SYM_NAME(&I) LK LOC
EIBDTFRM DS  CL1
ZC_LK_END_DSECT DSECT 
ZC_LK_LOC_151 EQU *-ZC_LK_END CHECK &SYM_NAME(&I) LK LOC
ZC_LK_END DS CL1
DFHEISTG DSECT 
ZC_WS_DIFF EQU  *-ZC_WS-732  DIFF BETWEEN ALLOC AND CALC WS
ZC_WS_END DS   0D
         MNOTE *,'ZCOBOL TOTAL SYMBOLS                 = 170'
         MNOTE *,'ZCOBOL TOTAL SYMBOL DUPLICATES       = 0'
         MNOTE *,'ZCOBOL TOTAL SYMBOL MAX DUP CHAIN    = 0'
         MNOTE *,'ZCOBOL TOTAL SYMBOL LEVEL 88         = 0'
         MNOTE *,'ZCOBOL TOTAL SYMBOL SET INDEXES      = 0'
         MNOTE *,'ZCOBOL TOTAL SYMBOL LINKAGE SECTIONS = 4'
         MNOTE *,'ZCOBOL TOTAL PROCEDURE SECTIONS      = 0'
         MNOTE *,'ZCOBOL TOTAL PROCEDURE PARAGRAPHS    = 9'
         MNOTE *,'ZCOBOL TOTAL PROCEDURE PARAGRAPH DUP = 0'
DFHEISTG DSECT 
         ORG 
DFHEIEND EQU   *
         END 
