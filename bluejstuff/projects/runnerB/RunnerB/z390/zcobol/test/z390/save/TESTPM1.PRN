TESTPM1   MZ390 START
AZ390I Copyright 2011 Automated Software Tools Corporation
AZ390I z390 is licensed under GNU General Public License
AZ390I program = zcobol\test\TESTPM1
AZ390I options = W:\work\z390\z390.OPT=(time(60)) @zcobol\z390\ZC390CLG=(
  sysmac(+zcobol+zcobol\z390+mac+cics) syscpy(+zcobol+zcobol\z390+mac+cics) 
  BAL NOLISTCALL MAXGBL(1500000)) notiming stats
External Symbol Definitions
 ESD=0001 LOC=00000000 LEN=00000AC0 TYPE=CST NAME=TESTPM1
Assembler Listing
000000                                       (6/15)1+*    ZCOBOL PGM='zcobol\test\TESTPM1' VER=V1.5.06 MM/DD/YY  
000000                                       (6/15)2+*    ZCOBOL OPTIONS=() 
000000                                        (1/4)3          COPY  TESTPM1_ZC_LABELS.CPY
000000                                        (1/5)4 *        IDENTIFICATION DIVISION.
000000                                        (1/7)5 *        PROGRAM-ID.    TESTPM1.
000000                                      (11/34)6+         PRINT NOLIST,NOGEN,NOLISTUSE    SET LIST OPTION FOR INTERNAL CODE
000000                                      (11/59)8+TESTPM1  CSECT ,                CSECT WITH PROCEDURE CODE AND WS
000000                                      (11/60)9+         USING *,ZC_R15
LISTUSE TESTPM1  ESD=0001 LOC=00000000 LEN=01000 REG=F OFF=00000 LAB=
000000 90ECD00C                            (16/51)10+         STM   14,12,12+4*(14-14)(13)
000004                                     (11/93)11+         CNOP  4,8             FORCE ZC390PVT TO DOUBLEWORD BOUNDARY
000004 A785001A                000038      (11/94)12+         BRAS  ZC_R8,ZC_LOAD
000008                                     (11/95)13+         USING *,ZC_R8            BASE FOR LOAD AND CICS V5 USE
LISTUSE TESTPM1  ESD=0001 LOC=00000000 LEN=01000 REG=F OFF=00000 LAB=
LISTUSE TESTPM1  ESD=0001 LOC=00000008 LEN=01000 REG=8 OFF=00000 LAB=
000008                                     (11/96)14+*
000008                                     (11/97)15+*  THESE FIELDS MUST BE KEPT IN SYNC WITH zcobol\ZC390PVT.CPY
000008                                     (11/98)16+*
000008 E3C5E2E3D7D4F140                    (11/99)17+         DC    CL8'TESTPM1'    PVTPGM   ZCOBOL PGM NAME
000010 F0F161F0F261F0F5                   (11/100)18+         DC    CL8'01/02/05'   PVTDATE  ZCOBOL COMPILE DATE
000018 F2F24BF3F3404040                   (11/101)19+         DC    CL8'22.33'   PVTTIME  ZCOBOL COMPILE TIME
000020 E5F14BF54BF0F640                   (11/102)20+         DC    CL8'V1.5.06'    PVTVER   ZCOBOL COMPILER VERSION
000028 F0                                 (11/103)21+         DC    C'0'     PVTCICS  ZCOBOL EXEC CICS PGM
000029 F1                                 (11/104)22+         DC    C'1'   PVTEXTND ZCOBOL EXTENDED PRECISION
00002A F0                                 (11/105)23+         DC    C'0'    PVTTRUNC ZCOBOL TRUNCATE TO PICTURE
00002B F1                                 (11/106)24+         DC    C'1'      PVTR64   ZCOBOL USE 64 BIT REGISTERS
00002C 0050                               (11/107)25+         DC    H'80' MAX DISPLAY LINE LEN  RPI 1118
00002E                                    (11/108)26+         DS    XL10            RESERVED
000038                                    (11/109)27+ZC_LOAD  DS    0H
000038 410080B0                0000B8      (17/74)28+         LA    0,=CL8'ZC390LIB'
00003C 1BFF                                (17/95)29+         SR    15,15 USE DEFAULT SYS390 SEARCH
00003E 0A08                               (17/125)30+         SVC   8 LOAD R0=A(NAME) R15=DDNAME/DSNAME ADDR OR 0
000040 12FF                               (11/111)31+         LTR   ZC_R15,ZC_R15
000042 A7840013                000068     (11/112)32+         JZ    ZC_LOAD_OK
000046 A715000D                000060      (18/49)33+         BRAS  1,*+(WTO#0019_EOT-*+1)/2*2
00004A 00160000E9C3F3F9                    (18/50)34+         DC    AL2(WTO#0019_EOT-*,0),C'ZC390LIB NOT FOUND'
000060                  00000060           (18/51)35+WTO#0019_EOT     EQU *
000060 0A23                                (18/52)36+         SVC   35
000062 41F00010                           (11/114)37+         LA  ZC_R15,16
000066 0A03                               (11/115)38+         SVC 3      EXIT TO CALLER WITH RC=16
000068                                    (11/116)39+ZC_LOAD_OK DS  0H
000068 1890                               (11/117)40+         LR    ZC_R9,ZC_R0
00006A                                    (11/118)41+         USING ZC390CVT,ZC_R9    R9=CVT
LISTUSE TESTPM1  ESD=0001 LOC=00000000 LEN=01000 REG=F OFF=00000 LAB=
LISTUSE TESTPM1  ESD=0001 LOC=00000008 LEN=01000 REG=8 OFF=00000 LAB=
LISTUSE ZC390CVT ESD=0003 LOC=00000000 LEN=01000 REG=9 OFF=00000 LAB=
00006A D503900080B8     000000 0000C0     (11/119)42+         CLC   ZCVT_ID,=C'ZCVT'              CHECK ZCVT ID AND LENGTH
000070 A774000C                000088     (11/120)43+         JNE   ZC_VER_ERR                    IN ZC390LIB.390 MATCH
000074 D503900480BC     000004 0000C4     (11/121)44+         CLC   ZCVT_LEN,=A(ZCVT_END-ZCVT_ID) ZCOBOL PGM COMPILED ID/LEN
00007A 47708080                000088     (11/122)45+         BNE   ZC_VER_ERR
00007E 58F09010                000010     (11/123)46+         L     ZC_R15,ZCVT_ZC390NUC
000082 0DEF                               (11/124)47+         BASR  ZC_R14,ZC_R15 CALL ZC390NUC TO VERIFY VER, OPTIONS
000084 A7F40022                0000C8     (11/125)48+         J     ZC_VER_OK
000088                                    (11/126)49+ZC_VER_ERR DS 0H
000088 A7150011                0000AA      (18/49)50+         BRAS  1,*+(WTO#0020_EOT-*+1)/2*2
00008C 001E0000E9C3F3F9                    (18/50)51+         DC    AL2(WTO#0020_EOT-*,0),C'ZC390LIB ZCVT VERIFY ERROR'
0000AA                  000000AA           (18/51)52+WTO#0020_EOT     EQU *
0000AA 0A23                                (18/52)53+         SVC   35
0000AC 41F00010                           (11/128)54+         LA  ZC_R15,16
0000B0 0A03                               (11/129)55+         SVC 3      EXIT TO CALLER WITH RC=16
0000B2                                    (11/130)56+         LTORG 
0000B8 E9C3F3F9F0D3C9C2 =CL8'ZC390LIB'
0000C0 E9C3E5E3         =C'ZCVT'
0000C4 000001F8         =A(ZCVT_END-ZCVT_ID)
0000C8                  00000080          (15/10)111=PFPO_TEST    EQU  X'80' PFPO TEST IF VALID OPCODE (NOT SUPPORTED YET)
0000C8                  00000001          (15/11)112=PFPO_RADIX   EQU  1 PFPO OPCODE - CONVERT FROM ONE RADIX TO ANOTHER
0000C8                  00000000          (15/12)113=PFPO_RND     EQU  0 PFOP ROUNDING OPTION (ONLY DEFAULT ALLOWED)
0000C8                  00000000          (15/13)114=PFPO_TYPE_EH EQU  0 EH HFP SHORT     32 BITS 7  DIGITS
0000C8                  00000001          (15/14)115=PFPO_TYPE_DH EQU  1 ED HFP LONG      64 BITS 15 DIGITS
0000C8                  00000002          (15/15)116=PFPO_TYPE_LH EQU  2 EL HFP EXTENDED 128 BITS 30 DIGITS
0000C8                  00000005          (15/16)117=PFPO_TYPE_EB EQU  5 EB BFP SHORT     32 BITS 7  DIGITS
0000C8                  00000006          (15/17)118=PFPO_TYPE_DB EQU  6 DB BFP LONG      64 BITS 16 DIGITS
0000C8                  00000007          (15/18)119=PFPO_TYPE_LB EQU  7 LB BFP EXTENDED 128 BITS 34 DIGITS
0000C8                  00000008          (15/19)120=PFPO_TYPE_ED EQU  8 ED DFP SHORT     32 BITS 7  DIGITS
0000C8                  00000009          (15/20)121=PFPO_TYPE_DD EQU  9 DD DFP LONG      64 BITS 16 DIGITS
0000C8                  0000000A          (15/21)122=PFPO_TYPE_LD EQU 10 LD DFP EXTENDED 128 BITS 34 DIGITS
0000C8                                   (11/133)123+ZC_VER_OK DS   0H
0000C8 582D0018                           (11/63)124+         L     ZC_R2,24(ZC_R13) SET ZC_R2=PARMLIST ADDRESS AFTER LOAD
0000CC C01000000496            0009F8     (11/64)125+         LARL  ZC_R1,ZC_WS     ZC_R2=A(WORKING STORAGE WITH SAVEAREA)
0000D2 501D0008                           (11/65)126+         ST    ZC_R1,8(ZC_R13) FORWARD  SAVE CHAIN
0000D6 50D10004                           (11/66)127+         ST    ZC_R13,4(ZC_R1) BACKWARD SAVE CHAIN
0000DA 18D1                               (11/67)128+         LR    ZC_R13,ZC_R1    LINK SAVE AREA IN ZC390CVT
0000DC                                    (11/68)129+         USING ZC_WS,ZC_R13    BASE FOR ZCOBOL WS (SEE GEN_SYM_RX.MAC)
LISTUSE TESTPM1  ESD=0001 LOC=00000000 LEN=01000 REG=F OFF=00000 LAB=
LISTUSE TESTPM1  ESD=0001 LOC=00000008 LEN=01000 REG=8 OFF=00000 LAB=
LISTUSE ZC390CVT ESD=0003 LOC=00000000 LEN=01000 REG=9 OFF=00000 LAB=
LISTUSE TESTPM1  ESD=0001 LOC=000009F8 LEN=01000 REG=D OFF=00000 LAB=
0000DC 50D0D050                000A48     (11/69)130+         ST    ZC_R13,ZC_WS_START  SAVE ADDR WS IN WS PREFIX
0000E0 C000000004F0            000AC0     (11/70)131+         LARL  ZC_R0,ZC_WS_END
0000E6 1B0D                               (11/71)132+         SR    ZC_R0,ZC_R13
0000E8 5000D054                000A4C     (11/72)133+         ST    ZC_R0,ZC_WS_LEN     SAVE LENGTH OF WS IN WS PREFIX
0000EC                                    (11/73)134+         DROP  ZC_R15              RPI 1042
LISTUSE TESTPM1  ESD=0001 LOC=000009F8 LEN=01000 REG=D OFF=00000 LAB=
LISTUSE TESTPM1  ESD=0001 LOC=00000008 LEN=01000 REG=8 OFF=00000 LAB=
LISTUSE ZC390CVT ESD=0003 LOC=00000000 LEN=01000 REG=9 OFF=00000 LAB=
0009F8                                    (11/74)135+ZC_WSLOC LOCTR 
0009F8                                    (11/75)136+ZC_WS    DS    0D           START WORKING STORAGE
000000                                    (11/81)137+ZC390CVT DSECT 
000000                                    (12/31)138=ZCVT_ID            DC    C'ZCVT'             ZCVT ID  VERIFIED BY ZCOB
000004                                    (12/32)139=ZCVT_LEN           DC    A(ZCVT_END-ZCVT_ID) ZCVT LEN VERIFIED BY ZCOB
000008                                    (12/33)140=ZCVT_VER           DC    CL8'V1.5.06'    ZCVT VER VERIFIED BY ZC390NUC
000010                                    (12/34)141=ZCVT_ZC390NUC  DC V(ZC390NUC)      MODULE  SYSTEM ROUTINE MODULE INIT
000014                                    (12/35)142=ZCVT_CALL           DC V(CALL)       ENTRY R0=A(PGM),R1=A(PARMLIST)
000018                                    (12/36)143=ZCVT_CMP64R32       DC V(CMP64R32)   ENTRY COMPARE R0-1=FLD1 R2-3=FLD2
00001C                                    (12/37)144=ZCVT_CVTLBTQ        DC V(CVTLBTQ)    ENTRY CVT LB IN F4-6 TO Q IN R0-1
000020                                    (12/38)145=ZCVT_CVTLDTP        DC V(CVTLDTP)    ENTRY CVT LD IN F0-2 TO PL31 R0-1
000024                                    (12/39)146=ZCVT_CVTQTLB        DC V(CVTQTLB)    ENTRY CVT Q IN R0-1 TO LB IN F4-6
000028                                    (12/40)147=ZCVT_DIV64R32       DC V(DIV64R32)   ENTRY DIVIDE R0-1=N64, R2-3=MAX64
00002C                                    (12/41)148=ZCVT_DIVQ128        DC V(DIVQ128)    ENTRY DIVIDE Q128 R0-R1 BY R2-R3
000030                                    (12/42)149=ZCVT_GOBACK         DC V(GOBACK)     ENTRY R1=RC
000034                                    (12/43)150=ZCVT_MPYQ128        DC V(MPYQ128)    ENTRY MULTIPLY Q128 R0-R1 BY R2-R3
000038                                    (12/44)151=ZCVT_OSE64R32       DC V(OSE64R32)   ENTRY ON SIZE ERR R0-1=N, R2-3=MAX
00003C                                    (12/45)152=ZCVT_PERFORM        DC V(PERFORM)    ENTRY R14=PGTAR,R0=PGEXT,R1=PMRET
000040                                    (12/46)153=ZCVT_PMCHECK        DC V(PMCHECK)    ENTRY R14=RETURN TO NEXT INSTR.
000044                                    (12/47)154=ZCVT_ROUNDF         DC V(ROUNDF)     ENTRY R0=REM,R1=QUO,R2=DIVISOR
000048                                    (12/48)155=ZCVT_STACKORG       DC V(STACKORG)   ENTRY PERFORM STACK ORIGIN
00004C                                    (12/49)156=ZCVT_STACKPTR       DC V(STACKPTR)   ENTRY CUR ENTRY A(PG_END+4,RET)
000050                                    (12/50)157=ZCVT_STACKEND       DC V(STACKEND)   ENTRY PERFORM STACK END
000054                                    (12/51)158=ZCVT_STOPRUN        DC V(STOPRUN)    ENTRY R1=RC
000058                                    (12/52)159=ZCVT_TALPHAX        DC V(TALPHAX)    ENTRY TEST ALPHABETIC X
00005C                                    (12/53)160=ZCVT_TNUMP          DC V(TNUMP)      ENTRY TEST NUMERIC P
000060                                    (12/54)161=ZCVT_TNUMX          DC V(TNUMX)      ENTRY TEST NUMERIC X
000064                                    (12/55)162=ZCVT_TNUMZ          DC V(TNUMZ)      ENTRY TEST NUMERIC Z
000068                                    (12/56)163=*
000068                                    (12/57)164=* ADDITIONAL SEPARATE MODULES LINKED WITH Z390NUC IN ZC390LIB.390
000068                                    (12/58)165=*
000068                                    (12/59)166=ZCVT_ABORT     DC V(ABORT)         MODULE  R1=ABORT ERROR MSG #
00006C                  00000001          (12/60)167=ZCVT_ABORT_ALTER   EQU    1 ABORT ALTER DUE TO BRC NOT FOUND AT TARGET
00006C                  00000002          (12/61)168=ZCVT_ABORT_CALL    EQU    2 ABORT DYNAMIC CALL - PGM NOT FOUND
00006C                  00000003          (12/62)169=ZCVT_ABORT_DISPLAY EQU    3 ABORT DISPLAY DUE TO BUFFER EXCEEDED
00006C                  00000004          (12/63)170=ZCVT_ABORT_OPEN    EQU    4 ABORT OPEN  INVALID DCB
00006C                  00000006          (12/64)171=ZCVT_ABORT_STACK   EQU    6 ABORT PEROFRM STACK OVERFLOW
00006C                  00000007          (12/65)172=ZCVT_ABORT_VERSION EQU    7 ABORT ZC390NUC INIT ZCOBOL VERSION ERROR
00006C                  00000008          (12/66)173=ZCVT_ABORT_INT128  EQU    8 ABORT INTEGER 128 CONVERSION OVERFLO
00006C                  00000009          (12/67)174=ZCVT_ABORT_DIVQ    EQU    9 ABORT DIVIDE Q IF DIVISOR 0 OR > 2**63
00006C                  0000000A          (12/68)175=ZCVT_ABORT_CICS    EQU   10 ABORT THIS PGM REQUIRES EXEC CICS TRANS MGR
00006C                  0000000B          (12/69)176=ZCVT_ABORT_ACCEPT  EQU   11 ABORT ACCEPT EOF
00006C                  0000000B          (12/70)177=ZCVT_ABORT_MAXERR  EQU   11 ABORT MAX ERROR CODE
00006C                                    (12/71)178=ZCVT_ACCEPT    DC V(ACCEPT)        MODULE  R1=A(TYPE,FLD_ADD,FLD_LEN)
000070                  00000001          (12/72)179=ZCVT_ACCEPT_DEFAULT EQU   1 INPUT DEFAULT DDNAME=SYSIN
000070                  00000002          (12/73)180=ZCVT_ACCEPT_CONSOLE EQU   2 INPUT VIA WTOR FROM CONSOLE
000070                  00000003          (12/74)181=ZCVT_ACCEPT_DDNAME  EQU   3 INPUT FROM DDNAME WITH DDNAME ADDR IN R3
000070                  00000004          (12/75)182=ZCVT_ACCEPT_DATE    EQU   4 RETURN DAY OF WEEK PIC 9(8) MMDDYYYY
000070                  00000005          (12/76)183=ZCVT_ACCEPT_TIME    EQU   5 RETURN DAY OF WEEK PIC 9(8) HHMMSSTH
000070                  00000006          (12/77)184=ZCVT_ACCEPT_DOW     EQU   6 RETURN DAY OF WEEK PIC 9 1-7
000070                                    (12/78)185=ZCVT_DISPLAY   DC V(DISPLAY)       MODULE  R1=A(ADDR,LEN,TYPE)
000074                                    (12/79)186=ZCVT_INSPECT   DC V(INSPECT)       MODULE  R0=TYPE,R1=PARMLIST
000078                  00000000          (12/80)187=ZCVT_TALLYING      EQU   0 INSPECT TALLYING
000078                  00000004          (12/81)188=ZCVT_REPLACING     EQU   4 INSPECT REPLACING
000078                  00000008          (12/82)189=ZCVT_CONVERTING    EQU   8 INSPECT CONVERTING
000078                                    (12/83)190=*
000078                                    (12/84)191=* SHARED DATA AREAS
000078                                    (12/85)192=*
000078                                    (12/86)193=ZCVT_PVTMAXDL  DS H          MAXIMUM DISPLAY LINE LENGTH  RPI 1118
000080                                    (12/87)194=               DS 0D
000080                                    (12/88)195=ZCVT_ZERO      DC XL16'00'   BINARY ZEROS
000090                                    (12/89)196=ZCVT_HIGH_VALUES DC 0XL16,16X'FF' BINARY FF'S     RPI 1181
0000A0                                    (12/90)197=ZCVT_PWORK     DS PL8        CVD/CVB WORK
0000A8                                    (12/91)198=ZCVT_PWORK1    DS PL16       DIV DIVIDEND, CVDG/CVBG WORK
0000B8                                    (12/92)199=ZCVT_PWORK2    DS PL16       DIV DIVISOR
0000C8                                    (12/93)200=ZCVT_PWORK3    DS PL16       DIV QUOTIENT
0000D8                                    (12/94)201=ZCVT_PWORK4    DS PL16       DIV REMAINDER
0000E8                                    (12/95)202=ZCVT_NDDX      DS XL16       DIV DIVIDEND HOLD AREA
0000F8                                    (12/96)203=ZCVT_WORKAREA  DS XL256      GEN_INSPECT PARMS, GEN_EDIT WORK, ETC.
0001F8                                    (12/97)204=*
0001F8                                    (12/98)205=* END OF ZC390CVT
0001F8                                    (12/99)206=*
0001F8                  000001F8         (12/100)207=ZCVT_END   EQU   *
000000                                    (11/83)208+ZC390PVT DSECT 
000000                                    (13/11)209=PVTPGM   DS    CL8  ZCOBOL PGM NAME
000008                                    (13/12)210=PVTDATE  DS    CL8  ZCOBOL COMPILE DATE
000010                                    (13/13)211=PVTTIME  DS    CL8  ZCOBOL COMPILE TIME
000018                                    (13/14)212=PVTVER   DS    CL8  ZCOBOL COMPILER VERSION
000020                                    (13/15)213=PVTCICS  DS    C    ZCOBOL EXEC CICS PGM
000021                                    (13/16)214=PVTEXTND DS    C    ZCOBOL EXTENDED PRECISION
000022                                    (13/17)215=PVTTRUNC DS    C    ZCOBOL TRUNCATE TO PICTURE
000023                                    (13/18)216=PVTR64   DS    C    ZCOBOL USE 64 BIT REGISTERS
000024                                    (13/19)217=PVTMAXDL DS    H    ZCOBOL MAX DISPLAY LINE LENGTH
000026                                    (13/20)218=         DS    XL10 RESERVED
0009F8                                    (11/85)219+ZC_WSLOC LOCTR              CONTINUE WS FOR FD AND DATA
0009F8                                      (1/9)220 *        AUTHOR.        DON HIGGINS.
0009F8                                     (1/11)221 *        DATE-WRITTEN.  10/13/08.
0009F8                                     (1/12)222 *      * TEST IF ELSE END-IF
0009F8                                     (1/14)223 *        ENVIRONMENT DIVISION.
0009F8                                     (1/16)224 *        DATA DIVISION.
0009F8                                    (28/23)225+         PRINT DATA
0009F8                                     (1/18)226 *        WORKING-STORAGE SECTION.
0009F8                                     (1/20)227 *        77 I       COMP PIC S9(4).
0009F8                                     (1/22)228 *        77 COUNT   COMP PIC 9(4) VALUE 0.
0009F8                                     (1/24)229 *        77 ERRORS  COMP PIC 9(4) VALUE 0.
0009F8                                     (1/26)230 *        77 GOOD    COMP-3 PIC S9(4) VALUE 0.
0009F8                                     (1/29)231 *        PROCEDURE DIVISION.
0009F8                                     (1/30)232 *ZC   PROCEDURE DIVISION
0009F8                                    (31/18)233+         PRINT LIST,GEN,LISTUSE TURN PRINT LISTING ON FOR USER CODE GEN
0000EC                                    (31/19)234+TESTPM1  CSECT                SWITCH TO PROCEDURE CODE AHEAD OF WS
0000EC                                     (1/32)235 *        MAINLINE.
0000EC                                     (8/96)236+PG_MAINLINE DS 0H
0000EC                                     (1/34)237 *            DISPLAY 'TESTPM1 STARTING'
0000EC                                     (1/35)238 *      * FORMAT 1A
0000EC                                     (1/36)239 *ZC     15         DISPLAY 'TESTPM1 STARTING'
0000EC A715000C                000104     (18/49)240+         BRAS  1,*+(WTO#0097_EOT-*+1)/2*2
0000F0 00140000E3C5E2E3                   (18/50)241+         DC    AL2(WTO#0097_EOT-*,0),C'TESTPM1 STARTING'
0000F8 D7D4F140E2E3C1D9
000100 E3C9D5C7
000104                  00000104          (18/51)242+WTO#0097_EOT     EQU *
000104 0A23                               (18/52)243+         SVC   35
000106                                     (1/38)244 *            MOVE 0 TO COUNT.
000106                                     (1/39)245 *ZC     17         MOVE  0,TO,COUNT
000106 E544D05A0000            000A52    (41/361)246+          MVHHI COUNT,0
00010C                                     (1/42)247 *            DISPLAY 'TEST PERFIRN FORNATM 1A'
00010C                                     (1/43)248 *ZC     18         DISPLAY 'TEST PERFIRN FORNATM 1A'
00010C A7150010                00012C     (18/49)249+         BRAS  1,*+(WTO#0105_EOT-*+1)/2*2
000110 001B0000E3C5E2E3                   (18/50)250+         DC    AL2(WTO#0105_EOT-*,0),C'TEST PERFIRN FORNATM 1A'
000118 40D7C5D9C6C9D9D5
000120 40C6D6D9D5C1E3D4
000128 40F1C1
00012B                  0000012B          (18/51)251+WTO#0105_EOT     EQU *
00012C 0A23                               (18/52)252+         SVC   35
00012E                                     (1/45)253 *            PERFORM TEST1
00012E                                     (1/46)254 *ZC     19         PERFORM TEST1
00012E C0E0000003CF            0008CC     (43/44)255+         LARL  ZC_R14,PG_TEST1
000134 C000000003EE            000910     (43/45)256+         LARL  ZC_R0,PG_TEST1_END+6
00013A 58F0903C                00003C     (43/46)257+         L     ZC_R15,ZCVT_PERFORM
00013E 0D1F                               (43/47)258+         BASR  ZC_R1,ZC_R15
000140                                     (1/48)259 *            ADD 1 TO GOOD
000140                                     (1/49)260 *ZC     20         ADD   1,TO,GOOD
000140 A7E50003                          (45/279)261+         BRAS  ZC_R14,3 SET ZC_R1 TO A(INLINE LIT) AND SKIP OVER IT
000144 001C                              (45/280)262+         DC    PL2'1'
000146 FA21D05EE000     000A56           (45/287)263+         AP    GOOD,0(2,ZC_R14)
00014C                                     (1/51)264 *            IF COUNT NOT = 1 PERFORM ERROR END-IF
00014C                                     (1/52)265 *ZC     21         IF    COUNT,NOT,=,1
00014C 4800D05A                000A52    (48/312)266+         LH    0,COUNT
000150 A70E0001                          (48/313)267+         CHI   0,1
000154 A784000B                00016A     (49/15)268+         BRC   15-ZC_NE,PG_IF_1_1
000158                                     (1/54)269 *ZC     22         PERFORM ERROR
000158 C0E000000398            000888     (43/44)270+         LARL  ZC_R14,PG_ERROR
00015E C000000003B7            0008CC     (43/45)271+         LARL  ZC_R0,PG_ERROR_END+6
000164 58F0903C                00003C     (43/46)272+         L     ZC_R15,ZCVT_PERFORM
000168 0D1F                               (43/47)273+         BASR  ZC_R1,ZC_R15
00016A                                     (1/56)274 *ZC     22         END_IF
00016A                                     (8/41)275+PG_IF_1_1    DS    0H  &TYPE
00016A                                     (1/58)276 *            MOVE 0 TO COUNT
00016A                                     (1/59)277 *ZC     22         MOVE  0,TO,COUNT
00016A E544D05A0000            000A52    (41/361)278+          MVHHI COUNT,0
000170                                     (1/61)279 *            PERFORM TEST1 THRU TEST2
000170                                     (1/62)280 *ZC     23         PERFORM TEST1,THRU,TEST2
000170 C0E0000003AE            0008CC     (43/44)281+         LARL  ZC_R14,PG_TEST1
000176 C000000003E2            00093A     (43/45)282+         LARL  ZC_R0,PG_TEST2_END+6
00017C 58F0903C                00003C     (43/46)283+         L     ZC_R15,ZCVT_PERFORM
000180 0D1F                               (43/47)284+         BASR  ZC_R1,ZC_R15
000182                                     (1/64)285 *            ADD 1 TO GOOD
000182                                     (1/65)286 *ZC     24         ADD   1,TO,GOOD
000182 A7E50003                          (45/279)287+         BRAS  ZC_R14,3 SET ZC_R1 TO A(INLINE LIT) AND SKIP OVER IT
000186 001C                              (45/280)288+         DC    PL2'1'
000188 FA21D05EE000     000A56           (45/287)289+         AP    GOOD,0(2,ZC_R14)
00018E                                     (1/67)290 *            IF COUNT NOT = 3 PERFORM ERROR END-IF
00018E                                     (1/68)291 *ZC     25         IF    COUNT,NOT,=,3
00018E 4800D05A                000A52    (48/312)292+         LH    0,COUNT
000192 A70E0003                          (48/313)293+         CHI   0,3
000196 A784000B                0001AC     (49/15)294+         BRC   15-ZC_NE,PG_IF_2_1
00019A                                     (1/70)295 *      * FORMAT 1B
00019A                                     (1/71)296 *ZC     27         PERFORM ERROR
00019A C0E000000377            000888     (43/44)297+         LARL  ZC_R14,PG_ERROR
0001A0 C00000000396            0008CC     (43/45)298+         LARL  ZC_R0,PG_ERROR_END+6
0001A6 58F0903C                00003C     (43/46)299+         L     ZC_R15,ZCVT_PERFORM
0001AA 0D1F                               (43/47)300+         BASR  ZC_R1,ZC_R15
0001AC                                     (1/73)301 *ZC     27         END_IF
0001AC                                     (8/41)302+PG_IF_2_1    DS    0H  &TYPE
0001AC                                     (1/75)303 *            MOVE 0 TO COUNT.
0001AC                                     (1/76)304 *ZC     27         MOVE  0,TO,COUNT
0001AC E544D05A0000            000A52    (41/361)305+          MVHHI COUNT,0
0001B2                                     (1/79)306 *            DISPLAY 'TEST PERFORM FORMAT 1B'
0001B2                                     (1/80)307 *ZC     28         DISPLAY 'TEST PERFORM FORMAT 1B'
0001B2 A715000F                0001D0     (18/49)308+         BRAS  1,*+(WTO#0159_EOT-*+1)/2*2
0001B6 001A0000E3C5E2E3                   (18/50)309+         DC    AL2(WTO#0159_EOT-*,0),C'TEST PERFORM FORMAT 1B'
0001BE 40D7C5D9C6D6D9D4
0001C6 40C6D6D9D4C1E340
0001CE F1C2
0001D0                  000001D0          (18/51)310+WTO#0159_EOT     EQU *
0001D0 0A23                               (18/52)311+         SVC   35
0001D2                                     (1/82)312 *            PERFORM ADD 1 TO COUNT END-PERFORM
0001D2                                     (1/83)313 *ZC     29         PERFORM
0001D2                                     (1/85)314 *ZC     30         ADD   1,TO,COUNT
0001D2 4800D05A                000A52    (45/269)315+         LH    ZC_R0,COUNT
0001D6 A70A0001                          (45/270)316+         AHI   ZC_R0,1
0001DA 4000D05A                000A52    (45/271)317+         STH   ZC_R0,COUNT
0001DE                                     (1/87)318 *ZC     30         END_PERFORM
0001DE                                     (1/89)319 *            ADD 1 TO GOOD
0001DE                                     (1/90)320 *ZC     30         ADD   1,TO,GOOD
0001DE A7E50003                          (45/279)321+         BRAS  ZC_R14,3 SET ZC_R1 TO A(INLINE LIT) AND SKIP OVER IT
0001E2 001C                              (45/280)322+         DC    PL2'1'
0001E4 FA21D05EE000     000A56           (45/287)323+         AP    GOOD,0(2,ZC_R14)
0001EA                                     (1/92)324 *            IF COUNT NOT = 1 PERFORM ERROR END-IF
0001EA                                     (1/93)325 *ZC     31         IF    COUNT,NOT,=,1
0001EA 4800D05A                000A52    (48/312)326+         LH    0,COUNT
0001EE A70E0001                          (48/313)327+         CHI   0,1
0001F2 A784000B                000208     (49/15)328+         BRC   15-ZC_NE,PG_IF_3_1
0001F6                                     (1/95)329 *      * FORMAT 2A
0001F6                                     (1/96)330 *ZC     33         PERFORM ERROR
0001F6 C0E000000349            000888     (43/44)331+         LARL  ZC_R14,PG_ERROR
0001FC C00000000368            0008CC     (43/45)332+         LARL  ZC_R0,PG_ERROR_END+6
000202 58F0903C                00003C     (43/46)333+         L     ZC_R15,ZCVT_PERFORM
000206 0D1F                               (43/47)334+         BASR  ZC_R1,ZC_R15
000208                                     (1/98)335 *ZC     33         END_IF
000208                                     (8/41)336+PG_IF_3_1    DS    0H  &TYPE
000208                                    (1/100)337 *            MOVE 0 TO COUNT.
000208                                    (1/101)338 *ZC     33         MOVE  0,TO,COUNT
000208 E544D05A0000            000A52    (41/361)339+          MVHHI COUNT,0
00020E                                    (1/104)340 *            DISPLAY 'TEST PERFORM FORMAT 2A'
00020E                                    (1/105)341 *ZC     34         DISPLAY 'TEST PERFORM FORMAT 2A'
00020E A715000F                00022C     (18/49)342+         BRAS  1,*+(WTO#0192_EOT-*+1)/2*2
000212 001A0000E3C5E2E3                   (18/50)343+         DC    AL2(WTO#0192_EOT-*,0),C'TEST PERFORM FORMAT 2A'
00021A 40D7C5D9C6D6D9D4
000222 40C6D6D9D4C1E340
00022A F2C1
00022C                  0000022C          (18/51)344+WTO#0192_EOT     EQU *
00022C 0A23                               (18/52)345+         SVC   35
00022E                                    (1/107)346 *            PERFORM TEST1 3 TIMES
00022E                                    (1/108)347 *ZC     35         PERFORM TEST1,3,TIMES
00022E E54CD0BD0003            000AB5    (41/342)348+          MVHI  ZC_PM_NTIME_0,3
000234 A7F4000B                00024A     (54/15)349+         J     PG_PM_7_P
000238                                     (8/41)350+PG_PM_7_T    DS    0H  &TYPE
000238 5800D0BD                000AB5    (48/289)351+         L     0,ZC_PM_NTIME_0
00023C C20D00000000            000000    (48/290)352+         CFI   0,0
000242 A7740004                00024A     (49/15)353+         BRC   15-ZC_EQ,PG_IF_4_1
000246 A7F40010                000266     (54/15)354+         J     PG_PM_7_E
00024A                                     (8/41)355+PG_IF_4_1    DS    0H  &TYPE
00024A                                     (8/41)356+PG_PM_7_P    DS    0H  &TYPE
00024A C0E000000341            0008CC     (43/44)357+         LARL  ZC_R14,PG_TEST1
000250 C00000000360            000910     (43/45)358+         LARL  ZC_R0,PG_TEST1_END+6
000256 58F0903C                00003C     (43/46)359+         L     ZC_R15,ZCVT_PERFORM
00025A 0D1F                               (43/47)360+         BASR  ZC_R1,ZC_R15
00025C EBFFD0BD006A            000AB5    (56/182)361+         ASI   ZC_PM_NTIME_0,-1
000262 A7F4FFEB                000238     (54/15)362+         J     PG_PM_7_T
000266                                     (8/41)363+PG_PM_7_E    DS    0H  &TYPE
000266                                    (1/110)364 *            ADD 1 TO GOOD
000266                                    (1/111)365 *ZC     36         ADD   1,TO,GOOD
000266 A7E50003                          (45/279)366+         BRAS  ZC_R14,3 SET ZC_R1 TO A(INLINE LIT) AND SKIP OVER IT
00026A 001C                              (45/280)367+         DC    PL2'1'
00026C FA21D05EE000     000A56           (45/287)368+         AP    GOOD,0(2,ZC_R14)
000272                                    (1/113)369 *            IF COUNT NOT = 3 PERFORM ERROR END-IF
000272                                    (1/114)370 *ZC     37         IF    COUNT,NOT,=,3
000272 4800D05A                000A52    (48/312)371+         LH    0,COUNT
000276 A70E0003                          (48/313)372+         CHI   0,3
00027A A784000B                000290     (49/15)373+         BRC   15-ZC_NE,PG_IF_5_1
00027E                                    (1/116)374 *      * FORMAT 2B
00027E                                    (1/117)375 *ZC     39         PERFORM ERROR
00027E C0E000000305            000888     (43/44)376+         LARL  ZC_R14,PG_ERROR
000284 C00000000324            0008CC     (43/45)377+         LARL  ZC_R0,PG_ERROR_END+6
00028A 58F0903C                00003C     (43/46)378+         L     ZC_R15,ZCVT_PERFORM
00028E 0D1F                               (43/47)379+         BASR  ZC_R1,ZC_R15
000290                                    (1/119)380 *ZC     39         END_IF
000290                                     (8/41)381+PG_IF_5_1    DS    0H  &TYPE
000290                                    (1/121)382 *            MOVE 0 TO COUNT.
000290                                    (1/122)383 *ZC     39         MOVE  0,TO,COUNT
000290 E544D05A0000            000A52    (41/361)384+          MVHHI COUNT,0
000296                                    (1/125)385 *            DISPLAY 'TEST PERFORM FORMAT 2B'
000296                                    (1/126)386 *ZC     40         DISPLAY 'TEST PERFORM FORMAT 2B'
000296 A715000F                0002B4     (18/49)387+         BRAS  1,*+(WTO#0252_EOT-*+1)/2*2
00029A 001A0000E3C5E2E3                   (18/50)388+         DC    AL2(WTO#0252_EOT-*,0),C'TEST PERFORM FORMAT 2B'
0002A2 40D7C5D9C6D6D9D4
0002AA 40C6D6D9D4C1E340
0002B2 F2C2
0002B4                  000002B4          (18/51)389+WTO#0252_EOT     EQU *
0002B4 0A23                               (18/52)390+         SVC   35
0002B6                                    (1/128)391 *            PERFORM 3 TIMES ADD 1 TO COUNT END-PERFORM
0002B6                                    (1/129)392 *ZC     41         PERFORM 3,TIMES
0002B6 E54CD0C10003            000AB9    (41/342)393+          MVHI  ZC_PM_VARY_1,3
0002BC A7F40005                0002C6     (54/15)394+         J     PG_PM_9_T
0002C0                                     (8/41)395+PG_PM_9_D    DS    0H  &TYPE
0002C0 EBFFD0C1006A            000AB9    (56/182)396+         ASI   ZC_PM_VARY_1,-1
0002C6                                     (8/41)397+PG_PM_9_T    DS    0H  &TYPE
0002C6 5800D0C1                000AB9    (48/289)398+         L     0,ZC_PM_VARY_1
0002CA C20D00000000            000000    (48/290)399+         CFI   0,0
0002D0 A7740004                0002D8     (49/15)400+         BRC   15-ZC_EQ,PG_IF_6_1
0002D4 A7F4000A                0002E8     (54/15)401+         J     PG_PM_9_E
0002D8                                     (8/41)402+PG_IF_6_1    DS    0H  &TYPE
0002D8                                    (1/131)403 *ZC     42         ADD   1,TO,COUNT
0002D8 4800D05A                000A52    (45/269)404+         LH    ZC_R0,COUNT
0002DC A70A0001                          (45/270)405+         AHI   ZC_R0,1
0002E0 4000D05A                000A52    (45/271)406+         STH   ZC_R0,COUNT
0002E4                                    (1/133)407 *ZC     42         END_PERFORM
0002E4 A7F4FFEE                0002C0     (54/15)408+         J     PG_PM_9_D
0002E8                                     (8/41)409+PG_PM_9_E    DS    0H  &TYPE
0002E8                                    (1/135)410 *            ADD 1 TO GOOD
0002E8                                    (1/136)411 *ZC     42         ADD   1,TO,GOOD
0002E8 A7E50003                          (45/279)412+         BRAS  ZC_R14,3 SET ZC_R1 TO A(INLINE LIT) AND SKIP OVER IT
0002EC 001C                              (45/280)413+         DC    PL2'1'
0002EE FA21D05EE000     000A56           (45/287)414+         AP    GOOD,0(2,ZC_R14)
0002F4                                    (1/138)415 *            IF COUNT NOT = 3 PERFORM ERROR END-IF
0002F4                                    (1/139)416 *ZC     43         IF    COUNT,NOT,=,3
0002F4 4800D05A                000A52    (48/312)417+         LH    0,COUNT
0002F8 A70E0003                          (48/313)418+         CHI   0,3
0002FC A784000B                000312     (49/15)419+         BRC   15-ZC_NE,PG_IF_7_1
000300                                    (1/141)420 *      * FORMAT 3A
000300                                    (1/142)421 *ZC     45         PERFORM ERROR
000300 C0E0000002C4            000888     (43/44)422+         LARL  ZC_R14,PG_ERROR
000306 C000000002E3            0008CC     (43/45)423+         LARL  ZC_R0,PG_ERROR_END+6
00030C 58F0903C                00003C     (43/46)424+         L     ZC_R15,ZCVT_PERFORM
000310 0D1F                               (43/47)425+         BASR  ZC_R1,ZC_R15
000312                                    (1/144)426 *ZC     45         END_IF
000312                                     (8/41)427+PG_IF_7_1    DS    0H  &TYPE
000312                                    (1/146)428 *            MOVE 0 TO COUNT.
000312                                    (1/147)429 *ZC     45         MOVE  0,TO,COUNT
000312 E544D05A0000            000A52    (41/361)430+          MVHHI COUNT,0
000318                                    (1/150)431 *            DISPLAY 'TEST PERFORM FORMAT 3A WITH TEST BEFORE'
000318                                    (1/151)432 *ZC     46         DISPLAY 'TEST PERFORM FORMAT 3A WITH TEST BEFORE'
000318 A7150018                000348     (18/49)433+         BRAS  1,*+(WTO#0317_EOT-*+1)/2*2
00031C 002B0000E3C5E2E3                   (18/50)434+         DC    AL2(WTO#0317_EOT-*,0),C'TEST PERFORM FORMAT 3A WITH TEST BEFORE'
000324 40D7C5D9C6D6D9D4
00032C 40C6D6D9D4C1E340
000334 F3C140E6C9E3C840
00033C E3C5E2E340C2C5C6
000344 D6D9C5
000347                  00000347          (18/51)436+WTO#0317_EOT     EQU *
000348 0A23                               (18/52)437+         SVC   35
00034A                                    (1/153)438 *            MOVE 1 TO I
00034A                                    (1/154)439 *ZC     47         MOVE  1,TO,I
00034A E544D0580001            000A50    (41/361)440+          MVHHI I,1
000350                                    (1/156)441 *            PERFORM TEST1I UNTIL I>3
000350                                    (1/157)442 *ZC     48         PERFORM TEST1I,UNTIL,I,>,3
000350                                     (8/41)443+PG_PM_11_T   DS    0H  &TYPE
000350 4800D058                000A50    (48/312)444+         LH    0,I
000354 A70E0003                          (48/313)445+         CHI   0,3
000358 A7D40004                000360     (49/15)446+         BRC   15-ZC_H,PG_IF_8_1
00035C A7F4000D                000376     (54/15)447+         J     PG_PM_11_E
000360                                     (8/41)448+PG_IF_8_1    DS    0H  &TYPE
000360 C0E0000002ED            00093A     (43/44)449+         LARL  ZC_R14,PG_TEST1I
000366 C00000000312            00098A     (43/45)450+         LARL  ZC_R0,PG_TEST1I_END+6
00036C 58F0903C                00003C     (43/46)451+         L     ZC_R15,ZCVT_PERFORM
000370 0D1F                               (43/47)452+         BASR  ZC_R1,ZC_R15
000372 A7F4FFEF                000350     (54/15)453+         J     PG_PM_11_T
000376                                     (8/41)454+PG_PM_11_E   DS    0H  &TYPE
000376                                    (1/159)455 *            ADD 1 TO GOOD
000376                                    (1/160)456 *ZC     49         ADD   1,TO,GOOD
000376 A7E50003                          (45/279)457+         BRAS  ZC_R14,3 SET ZC_R1 TO A(INLINE LIT) AND SKIP OVER IT
00037A 001C                              (45/280)458+         DC    PL2'1'
00037C FA21D05EE000     000A56           (45/287)459+         AP    GOOD,0(2,ZC_R14)
000382                                    (1/162)460 *            IF COUNT NOT = 3 PERFORM ERROR END-IF
000382                                    (1/163)461 *ZC     50         IF    COUNT,NOT,=,3
000382 4800D05A                000A52    (48/312)462+         LH    0,COUNT
000386 A70E0003                          (48/313)463+         CHI   0,3
00038A A784000B                0003A0     (49/15)464+         BRC   15-ZC_NE,PG_IF_9_1
00038E                                    (1/165)465 *ZC     51         PERFORM ERROR
00038E C0E00000027D            000888     (43/44)466+         LARL  ZC_R14,PG_ERROR
000394 C0000000029C            0008CC     (43/45)467+         LARL  ZC_R0,PG_ERROR_END+6
00039A 58F0903C                00003C     (43/46)468+         L     ZC_R15,ZCVT_PERFORM
00039E 0D1F                               (43/47)469+         BASR  ZC_R1,ZC_R15
0003A0                                    (1/167)470 *ZC     51         END_IF
0003A0                                     (8/41)471+PG_IF_9_1    DS    0H  &TYPE
0003A0                                    (1/169)472 *            MOVE 0 TO COUNT.
0003A0                                    (1/170)473 *ZC     51         MOVE  0,TO,COUNT
0003A0 E544D05A0000            000A52    (41/361)474+          MVHHI COUNT,0
0003A6                                    (1/173)475 *            DISPLAY 'TEST PERFORM FORMAT 3A WITH TEST AFTER'
0003A6                                    (1/174)476 *ZC     52         DISPLAY 'TEST PERFORM FORMAT 3A WITH TEST AFTER'
0003A6 A7150017                0003D4     (18/49)477+         BRAS  1,*+(WTO#0365_EOT-*+1)/2*2
0003AA 002A0000E3C5E2E3                   (18/50)478+         DC    AL2(WTO#0365_EOT-*,0),C'TEST PERFORM FORMAT 3A WITH TEST AFTER'
0003B2 40D7C5D9C6D6D9D4
0003BA 40C6D6D9D4C1E340
0003C2 F3C140E6C9E3C840
0003CA E3C5E2E340C1C6E3
0003D2 C5D9
0003D4                  000003D4          (18/51)480+WTO#0365_EOT     EQU *
0003D4 0A23                               (18/52)481+         SVC   35
0003D6                                    (1/176)482 *            MOVE 1 TO I
0003D6                                    (1/177)483 *ZC     53         MOVE  1,TO,I
0003D6 E544D0580001            000A50    (41/361)484+          MVHHI I,1
0003DC                                    (1/179)485 *            PERFORM TEST1I WITH TEST AFTER UNTIL I>3
0003DC                                    (1/180)486 *ZC     54         PERFORM TEST1I,WITH,TEST,AFTER,UNTIL,I,>,3
0003DC                                     (8/41)487+PG_PM_13_T   DS    0H  &TYPE
0003DC 4800D058                000A50    (48/312)488+         LH    0,I
0003E0 A70E0003                          (48/313)489+         CHI   0,3
0003E4 A7D40004                0003EC     (49/15)490+         BRC   15-ZC_H,PG_IF_10_1
0003E8 A7F4000D                000402     (54/15)491+         J     PG_PM_13_E
0003EC                                     (8/41)492+PG_IF_10_1   DS    0H  &TYPE
0003EC C0E0000002A7            00093A     (43/44)493+         LARL  ZC_R14,PG_TEST1I
0003F2 C000000002CC            00098A     (43/45)494+         LARL  ZC_R0,PG_TEST1I_END+6
0003F8 58F0903C                00003C     (43/46)495+         L     ZC_R15,ZCVT_PERFORM
0003FC 0D1F                               (43/47)496+         BASR  ZC_R1,ZC_R15
0003FE A7F4FFEF                0003DC     (54/15)497+         J     PG_PM_13_T
000402                                     (8/41)498+PG_PM_13_E   DS    0H  &TYPE
000402                                    (1/182)499 *            ADD 1 TO GOOD
000402                                    (1/183)500 *ZC     55         ADD   1,TO,GOOD
000402 A7E50003                          (45/279)501+         BRAS  ZC_R14,3 SET ZC_R1 TO A(INLINE LIT) AND SKIP OVER IT
000406 001C                              (45/280)502+         DC    PL2'1'
000408 FA21D05EE000     000A56           (45/287)503+         AP    GOOD,0(2,ZC_R14)
00040E                                    (1/185)504 *            IF COUNT NOT = 3 PERFORM ERROR END-IF
00040E                                    (1/186)505 *ZC     56         IF    COUNT,NOT,=,3
00040E 4800D05A                000A52    (48/312)506+         LH    0,COUNT
000412 A70E0003                          (48/313)507+         CHI   0,3
000416 A784000B                00042C     (49/15)508+         BRC   15-ZC_NE,PG_IF_11_1
00041A                                    (1/188)509 *      * FORMAT 3B
00041A                                    (1/189)510 *ZC     58         PERFORM ERROR
00041A C0E000000237            000888     (43/44)511+         LARL  ZC_R14,PG_ERROR
000420 C00000000256            0008CC     (43/45)512+         LARL  ZC_R0,PG_ERROR_END+6
000426 58F0903C                00003C     (43/46)513+         L     ZC_R15,ZCVT_PERFORM
00042A 0D1F                               (43/47)514+         BASR  ZC_R1,ZC_R15
00042C                                    (1/191)515 *ZC     58         END_IF
00042C                                     (8/41)516+PG_IF_11_1   DS    0H  &TYPE
00042C                                    (1/193)517 *            MOVE 0 TO COUNT.
00042C                                    (1/194)518 *ZC     58         MOVE  0,TO,COUNT
00042C E544D05A0000            000A52    (41/361)519+          MVHHI COUNT,0
000432                                    (1/197)520 *            DISPLAY 'TEST PERFORM FORMAT 3B WITH TEST BEFORE'
000432                                    (1/198)521 *ZC     59         DISPLAY 'TEST PERFORM FORMAT 3B WITH TEST BEFORE'
000432 A7150018                000462     (18/49)522+         BRAS  1,*+(WTO#0413_EOT-*+1)/2*2
000436 002B0000E3C5E2E3                   (18/50)523+         DC    AL2(WTO#0413_EOT-*,0),C'TEST PERFORM FORMAT 3B WITH TEST BEFORE'
00043E 40D7C5D9C6D6D9D4
000446 40C6D6D9D4C1E340
00044E F3C240E6C9E3C840
000456 E3C5E2E340C2C5C6
00045E D6D9C5
000461                  00000461          (18/51)525+WTO#0413_EOT     EQU *
000462 0A23                               (18/52)526+         SVC   35
000464                                    (1/200)527 *            MOVE 1 TO I.
000464                                    (1/201)528 *ZC     60         MOVE  1,TO,I
000464 E544D0580001            000A50    (41/361)529+          MVHHI I,1
00046A                                    (1/204)530 *            PERFORM UNTIL I>3 ADD 1 TO COUNT ADD 1 TO I END-PERFORM
00046A                                    (1/205)531 *ZC     61         PERFORM UNTIL,I,>,3
00046A                                     (8/41)532+PG_PM_15_T   DS    0H  &TYPE
00046A 4800D058                000A50    (48/312)533+         LH    0,I
00046E A70E0003                          (48/313)534+         CHI   0,3
000472 A7D40004                00047A     (49/15)535+         BRC   15-ZC_H,PG_IF_12_1
000476 A7F40010                000496     (54/15)536+         J     PG_PM_15_E
00047A                                     (8/41)537+PG_IF_12_1   DS    0H  &TYPE
00047A                                    (1/207)538 *ZC     61         ADD   1,TO,COUNT
00047A 4800D05A                000A52    (45/269)539+         LH    ZC_R0,COUNT
00047E A70A0001                          (45/270)540+         AHI   ZC_R0,1
000482 4000D05A                000A52    (45/271)541+         STH   ZC_R0,COUNT
000486                                    (1/209)542 *ZC     62         ADD   1,TO,I
000486 4800D058                000A50    (45/269)543+         LH    ZC_R0,I
00048A A70A0001                          (45/270)544+         AHI   ZC_R0,1
00048E 4000D058                000A50    (45/271)545+         STH   ZC_R0,I
000492                                    (1/211)546 *ZC     62         END_PERFORM
000492 A7F4FFEC                00046A     (54/15)547+         J     PG_PM_15_T
000496                                     (8/41)548+PG_PM_15_E   DS    0H  &TYPE
000496                                    (1/213)549 *            ADD 1 TO GOOD
000496                                    (1/214)550 *ZC     62         ADD   1,TO,GOOD
000496 A7E50003                          (45/279)551+         BRAS  ZC_R14,3 SET ZC_R1 TO A(INLINE LIT) AND SKIP OVER IT
00049A 001C                              (45/280)552+         DC    PL2'1'
00049C FA21D05EE000     000A56           (45/287)553+         AP    GOOD,0(2,ZC_R14)
0004A2                                    (1/216)554 *            IF COUNT NOT = 3 PERFORM ERROR END-IF
0004A2                                    (1/217)555 *ZC     63         IF    COUNT,NOT,=,3
0004A2 4800D05A                000A52    (48/312)556+         LH    0,COUNT
0004A6 A70E0003                          (48/313)557+         CHI   0,3
0004AA A784000B                0004C0     (49/15)558+         BRC   15-ZC_NE,PG_IF_13_1
0004AE                                    (1/219)559 *ZC     64         PERFORM ERROR
0004AE C0E0000001ED            000888     (43/44)560+         LARL  ZC_R14,PG_ERROR
0004B4 C0000000020C            0008CC     (43/45)561+         LARL  ZC_R0,PG_ERROR_END+6
0004BA 58F0903C                00003C     (43/46)562+         L     ZC_R15,ZCVT_PERFORM
0004BE 0D1F                               (43/47)563+         BASR  ZC_R1,ZC_R15
0004C0                                    (1/221)564 *ZC     64         END_IF
0004C0                                     (8/41)565+PG_IF_13_1   DS    0H  &TYPE
0004C0                                    (1/223)566 *            MOVE 0 TO COUNT.
0004C0                                    (1/224)567 *ZC     64         MOVE  0,TO,COUNT
0004C0 E544D05A0000            000A52    (41/361)568+          MVHHI COUNT,0
0004C6                                    (1/227)569 *            DISPLAY 'TEST PERFORM FORMAT 3B WITH TEST AFTER'
0004C6                                    (1/228)570 *ZC     65         DISPLAY 'TEST PERFORM FORMAT 3B WITH TEST AFTER'
0004C6 A7150017                0004F4     (18/49)571+         BRAS  1,*+(WTO#0472_EOT-*+1)/2*2
0004CA 002A0000E3C5E2E3                   (18/50)572+         DC    AL2(WTO#0472_EOT-*,0),C'TEST PERFORM FORMAT 3B WITH TEST AFTER'
0004D2 40D7C5D9C6D6D9D4
0004DA 40C6D6D9D4C1E340
0004E2 F3C240E6C9E3C840
0004EA E3C5E2E340C1C6E3
0004F2 C5D9
0004F4                  000004F4          (18/51)574+WTO#0472_EOT     EQU *
0004F4 0A23                               (18/52)575+         SVC   35
0004F6                                    (1/230)576 *            MOVE 1 TO I.
0004F6                                    (1/231)577 *ZC     66         MOVE  1,TO,I
0004F6 E544D0580001            000A50    (41/361)578+          MVHHI I,1
0004FC                                    (1/234)579 *            PERFORM WITH TEST AFTER UNTIL I>3
0004FC                                    (1/235)580 *ZC     67         PERFORM WITH,TEST,AFTER,UNTIL,I,>,3
0004FC                                     (8/41)581+PG_PM_17_T   DS    0H  &TYPE
0004FC 4800D058                000A50    (48/312)582+         LH    0,I
000500 A70E0003                          (48/313)583+         CHI   0,3
000504 A7D40004                00050C     (49/15)584+         BRC   15-ZC_H,PG_IF_14_1
000508 A7F40010                000528     (54/15)585+         J     PG_PM_17_E
00050C                                     (8/41)586+PG_IF_14_1   DS    0H  &TYPE
00050C                                    (1/237)587 *              ADD 1 TO COUNT ADD 1 TO I END-PERFORM
00050C                                    (1/238)588 *ZC     68         ADD   1,TO,COUNT
00050C 4800D05A                000A52    (45/269)589+         LH    ZC_R0,COUNT
000510 A70A0001                          (45/270)590+         AHI   ZC_R0,1
000514 4000D05A                000A52    (45/271)591+         STH   ZC_R0,COUNT
000518                                    (1/240)592 *ZC     69         ADD   1,TO,I
000518 4800D058                000A50    (45/269)593+         LH    ZC_R0,I
00051C A70A0001                          (45/270)594+         AHI   ZC_R0,1
000520 4000D058                000A50    (45/271)595+         STH   ZC_R0,I
000524                                    (1/242)596 *ZC     69         END_PERFORM
000524 A7F4FFEC                0004FC     (54/15)597+         J     PG_PM_17_T
000528                                     (8/41)598+PG_PM_17_E   DS    0H  &TYPE
000528                                    (1/244)599 *            ADD 1 TO GOOD
000528                                    (1/245)600 *ZC     69         ADD   1,TO,GOOD
000528 A7E50003                          (45/279)601+         BRAS  ZC_R14,3 SET ZC_R1 TO A(INLINE LIT) AND SKIP OVER IT
00052C 001C                              (45/280)602+         DC    PL2'1'
00052E FA21D05EE000     000A56           (45/287)603+         AP    GOOD,0(2,ZC_R14)
000534                                    (1/247)604 *            IF COUNT NOT = 3 PERFORM ERROR END-IF
000534                                    (1/248)605 *ZC     70         IF    COUNT,NOT,=,3
000534 4800D05A                000A52    (48/312)606+         LH    0,COUNT
000538 A70E0003                          (48/313)607+         CHI   0,3
00053C A784000B                000552     (49/15)608+         BRC   15-ZC_NE,PG_IF_15_1
000540                                    (1/250)609 *      * FORMAT 4A
000540                                    (1/251)610 *ZC     72         PERFORM ERROR
000540 C0E0000001A4            000888     (43/44)611+         LARL  ZC_R14,PG_ERROR
000546 C000000001C3            0008CC     (43/45)612+         LARL  ZC_R0,PG_ERROR_END+6
00054C 58F0903C                00003C     (43/46)613+         L     ZC_R15,ZCVT_PERFORM
000550 0D1F                               (43/47)614+         BASR  ZC_R1,ZC_R15
000552                                    (1/253)615 *ZC     72         END_IF
000552                                     (8/41)616+PG_IF_15_1   DS    0H  &TYPE
000552                                    (1/255)617 *            MOVE 0 TO COUNT.
000552                                    (1/256)618 *ZC     72         MOVE  0,TO,COUNT
000552 E544D05A0000            000A52    (41/361)619+          MVHHI COUNT,0
000558                                    (1/259)620 *            DISPLAY 'TEST PERFORM FORMAT 4A WITH TEST BEFORE'
000558                                    (1/260)621 *ZC     73         DISPLAY 'TEST PERFORM FORMAT 4A WITH TEST BEFORE'
000558 A7150018                000588     (18/49)622+         BRAS  1,*+(WTO#0531_EOT-*+1)/2*2
00055C 002B0000E3C5E2E3                   (18/50)623+         DC    AL2(WTO#0531_EOT-*,0),C'TEST PERFORM FORMAT 4A WITH TEST BEFORE'
000564 40D7C5D9C6D6D9D4
00056C 40C6D6D9D4C1E340
000574 F4C140E6C9E3C840
00057C E3C5E2E340C2C5C6
000584 D6D9C5
000587                  00000587          (18/51)625+WTO#0531_EOT     EQU *
000588 0A23                               (18/52)626+         SVC   35
00058A                                    (1/262)627 *            PERFORM TEST1 VARYING I FROM 1 BY 1 UNTIL I > 3
00058A                                    (1/263)628 *ZC     74         PERFORM TEST1,VARYING,I,FROM,1,BY,1,UNTIL,I,>,3
00058A E544D0580001            000A50    (41/361)629+          MVHHI I,1
000590                                     (8/41)630+PG_PM_19_T   DS    0H  &TYPE
000590 4800D058                000A50    (48/312)631+         LH    0,I
000594 A70E0003                          (48/313)632+         CHI   0,3
000598 A7D40004                0005A0     (49/15)633+         BRC   15-ZC_H,PG_IF_16_1
00059C A7F40013                0005C2     (54/15)634+         J     PG_PM_19_E
0005A0                                     (8/41)635+PG_IF_16_1   DS    0H  &TYPE
0005A0 C0E000000196            0008CC     (43/44)636+         LARL  ZC_R14,PG_TEST1
0005A6 C000000001B5            000910     (43/45)637+         LARL  ZC_R0,PG_TEST1_END+6
0005AC 58F0903C                00003C     (43/46)638+         L     ZC_R15,ZCVT_PERFORM
0005B0 0D1F                               (43/47)639+         BASR  ZC_R1,ZC_R15
0005B2 4800D058                000A50    (45/269)640+         LH    ZC_R0,I
0005B6 A70A0001                          (45/270)641+         AHI   ZC_R0,1
0005BA 4000D058                000A50    (45/271)642+         STH   ZC_R0,I
0005BE A7F4FFE9                000590     (54/15)643+         J     PG_PM_19_T
0005C2                                     (8/41)644+PG_PM_19_E   DS    0H  &TYPE
0005C2                                    (1/265)645 *            ADD 1 TO GOOD
0005C2                                    (1/266)646 *ZC     75         ADD   1,TO,GOOD
0005C2 A7E50003                          (45/279)647+         BRAS  ZC_R14,3 SET ZC_R1 TO A(INLINE LIT) AND SKIP OVER IT
0005C6 001C                              (45/280)648+         DC    PL2'1'
0005C8 FA21D05EE000     000A56           (45/287)649+         AP    GOOD,0(2,ZC_R14)
0005CE                                    (1/268)650 *            IF I NOT = 4 OR COUNT NOT = 3 PERFORM ERROR END-IF
0005CE                                    (1/269)651 *ZC     76         IF    I,NOT,=,4,OR,COUNT,NOT,=,3
0005CE 4800D058                000A50    (48/312)652+         LH    0,I
0005D2 A70E0004                          (48/313)653+         CHI   0,4
0005D6 A7740008                0005E6     (49/15)654+         BRC   ZC_NE,PG_IF_17_IOP1_T
0005DA 4800D05A                000A52    (48/312)655+         LH    0,COUNT
0005DE A70E0003                          (48/313)656+         CHI   0,3
0005E2 A784000B                0005F8     (49/15)657+         BRC   15-ZC_NE,PG_IF_17_1
0005E6                                     (8/41)658+PG_IF_17_IOP1_T DS 0H  &TYPE
0005E6                                    (1/271)659 *ZC     77         PERFORM ERROR
0005E6 C0E000000151            000888     (43/44)660+         LARL  ZC_R14,PG_ERROR
0005EC C00000000170            0008CC     (43/45)661+         LARL  ZC_R0,PG_ERROR_END+6
0005F2 58F0903C                00003C     (43/46)662+         L     ZC_R15,ZCVT_PERFORM
0005F6 0D1F                               (43/47)663+         BASR  ZC_R1,ZC_R15
0005F8                                    (1/273)664 *ZC     77         END_IF
0005F8                                     (8/41)665+PG_IF_17_1   DS    0H  &TYPE
0005F8                                    (1/275)666 *            MOVE 0 TO COUNT.
0005F8                                    (1/276)667 *ZC     77         MOVE  0,TO,COUNT
0005F8 E544D05A0000            000A52    (41/361)668+          MVHHI COUNT,0
0005FE                                    (1/279)669 *            DISPLAY 'TEST PERFORM FORMAT 4A WITH TEST AFTER'
0005FE                                    (1/280)670 *ZC     78         DISPLAY 'TEST PERFORM FORMAT 4A WITH TEST AFTER'
0005FE A7150017                00062C     (18/49)671+         BRAS  1,*+(WTO#0592_EOT-*+1)/2*2
000602 002A0000E3C5E2E3                   (18/50)672+         DC    AL2(WTO#0592_EOT-*,0),C'TEST PERFORM FORMAT 4A WITH TEST AFTER'
00060A 40D7C5D9C6D6D9D4
000612 40C6D6D9D4C1E340
00061A F4C140E6C9E3C840
000622 E3C5E2E340C1C6E3
00062A C5D9
00062C                  0000062C          (18/51)674+WTO#0592_EOT     EQU *
00062C 0A23                               (18/52)675+         SVC   35
00062E                                    (1/282)676 *            PERFORM TEST1 WITH TEST AFTER VARYING I FROM 1 BY 1
00062E                                    (1/283)677 *                UNTIL I > 3
00062E                                    (1/285)678 *ZC     79         PERFORM TEST1,WITH,TEST,AFTER,VARYING,I,FROM,1,BY,1,UNTIL,I,>,3
00062E E544D0580001            000A50    (41/361)680+          MVHHI I,1
000634                                     (8/41)681+PG_PM_21_P   DS    0H  &TYPE
000634 C0E00000014C            0008CC     (43/44)682+         LARL  ZC_R14,PG_TEST1
00063A C0000000016B            000910     (43/45)683+         LARL  ZC_R0,PG_TEST1_END+6
000640 58F0903C                00003C     (43/46)684+         L     ZC_R15,ZCVT_PERFORM
000644 0D1F                               (43/47)685+         BASR  ZC_R1,ZC_R15
000646 4800D058                000A50    (48/312)686+         LH    0,I
00064A A70E0003                          (48/313)687+         CHI   0,3
00064E A7D40004                000656     (49/15)688+         BRC   15-ZC_H,PG_IF_18_1
000652 A7F4000A                000666     (54/15)689+         J     PG_PM_21_E
000656                                     (8/41)690+PG_IF_18_1   DS    0H  &TYPE
000656 4800D058                000A50    (45/269)691+         LH    ZC_R0,I
00065A A70A0001                          (45/270)692+         AHI   ZC_R0,1
00065E 4000D058                000A50    (45/271)693+         STH   ZC_R0,I
000662 A7F4FFE9                000634     (54/15)694+         J     PG_PM_21_P
000666                                     (8/41)695+PG_PM_21_E   DS    0H  &TYPE
000666                                    (1/288)696 *            ADD 1 TO GOOD
000666                                    (1/289)697 *ZC     81         ADD   1,TO,GOOD
000666 A7E50003                          (45/279)698+         BRAS  ZC_R14,3 SET ZC_R1 TO A(INLINE LIT) AND SKIP OVER IT
00066A 001C                              (45/280)699+         DC    PL2'1'
00066C FA21D05EE000     000A56           (45/287)700+         AP    GOOD,0(2,ZC_R14)
000672                                    (1/291)701 *            IF I NOT = 4 OR COUNT NOT = 4 PERFORM ERROR END-IF
000672                                    (1/292)702 *ZC     82         IF    I,NOT,=,4,OR,COUNT,NOT,=,4
000672 4800D058                000A50    (48/312)703+         LH    0,I
000676 A70E0004                          (48/313)704+         CHI   0,4
00067A A7740008                00068A     (49/15)705+         BRC   ZC_NE,PG_IF_19_IOP1_T
00067E 4800D05A                000A52    (48/312)706+         LH    0,COUNT
000682 A70E0004                          (48/313)707+         CHI   0,4
000686 A784000B                00069C     (49/15)708+         BRC   15-ZC_NE,PG_IF_19_1
00068A                                     (8/41)709+PG_IF_19_IOP1_T DS 0H  &TYPE
00068A                                    (1/294)710 *      * FORMAT 4B
00068A                                    (1/295)711 *ZC     84         PERFORM ERROR
00068A C0E0000000FF            000888     (43/44)712+         LARL  ZC_R14,PG_ERROR
000690 C0000000011E            0008CC     (43/45)713+         LARL  ZC_R0,PG_ERROR_END+6
000696 58F0903C                00003C     (43/46)714+         L     ZC_R15,ZCVT_PERFORM
00069A 0D1F                               (43/47)715+         BASR  ZC_R1,ZC_R15
00069C                                    (1/297)716 *ZC     84         END_IF
00069C                                     (8/41)717+PG_IF_19_1   DS    0H  &TYPE
00069C                                    (1/299)718 *            MOVE 0 TO COUNT.
00069C                                    (1/300)719 *ZC     84         MOVE  0,TO,COUNT
00069C E544D05A0000            000A52    (41/361)720+          MVHHI COUNT,0
0006A2                                    (1/303)721 *            DISPLAY 'TEST PERFORM FORMAT 4B WITH TEST BEFORE'
0006A2                                    (1/304)722 *ZC     85         DISPLAY 'TEST PERFORM FORMAT 4B WITH TEST BEFORE'
0006A2 A7150018                0006D2     (18/49)723+         BRAS  1,*+(WTO#0653_EOT-*+1)/2*2
0006A6 002B0000E3C5E2E3                   (18/50)724+         DC    AL2(WTO#0653_EOT-*,0),C'TEST PERFORM FORMAT 4B WITH TEST BEFORE'
0006AE 40D7C5D9C6D6D9D4
0006B6 40C6D6D9D4C1E340
0006BE F4C240E6C9E3C840
0006C6 E3C5E2E340C2C5C6
0006CE D6D9C5
0006D1                  000006D1          (18/51)726+WTO#0653_EOT     EQU *
0006D2 0A23                               (18/52)727+         SVC   35
0006D4                                    (1/306)728 *            PERFORM VARYING I FROM 1 BY 1 UNTIL I>3
0006D4                                    (1/307)729 *ZC     86         PERFORM VARYING,I,FROM,1,BY,1,UNTIL,I,>,3
0006D4 E544D0580001            000A50    (41/361)730+          MVHHI I,1
0006DA A7F40008                0006EA     (54/15)731+         J     PG_PM_23_T
0006DE                                     (8/41)732+PG_PM_23_A   DS    0H  &TYPE
0006DE 4800D058                000A50    (45/269)733+         LH    ZC_R0,I
0006E2 A70A0001                          (45/270)734+         AHI   ZC_R0,1
0006E6 4000D058                000A50    (45/271)735+         STH   ZC_R0,I
0006EA                                     (8/41)736+PG_PM_23_T   DS    0H  &TYPE
0006EA 4800D058                000A50    (48/312)737+         LH    0,I
0006EE A70E0003                          (48/313)738+         CHI   0,3
0006F2 A7D40004                0006FA     (49/15)739+         BRC   15-ZC_H,PG_IF_20_1
0006F6 A7F40023                00073C     (54/15)740+         J     PG_PM_23_E
0006FA                                     (8/41)741+PG_IF_20_1   DS    0H  &TYPE
0006FA                                    (1/309)742 *                ADD 1 TO COUNT
0006FA                                    (1/310)743 *ZC     87         ADD   1,TO,COUNT
0006FA 4800D05A                000A52    (45/269)744+         LH    ZC_R0,COUNT
0006FE A70A0001                          (45/270)745+         AHI   ZC_R0,1
000702 4000D05A                000A52    (45/271)746+         STH   ZC_R0,COUNT
000706                                    (1/312)747 *                DISPLAY 'ADD 1 TO COUNT =' COUNT
000706                                    (1/313)748 *            END-PERFORM
000706                                    (1/314)749 *ZC     88         DISPLAY 'ADD 1 TO COUNT =',COUNT
000706 413090F8                0000F8     (35/28)750+         LA    ZC_R3,ZCVT_WORKAREA  ZC_R3=CVT LIST WORK AREA
00070A C00000000147            000998     (35/68)751+         LARL  ZC_R0,=CL16'ADD 1 TO COUNT =' PAD TO EVEN LEN LIT
000710 41100010                           (35/69)752+         LA    ZC_R1,16
000714 412000E7                           (35/70)753+         LA    ZC_R2,C'X'
000718 90023000                           (35/71)754+         STM   ZC_R0,ZC_R2,0(ZC_R3)  SET DISPLAY LIST ENTRY
00071C 4100D05A                000A52     (35/82)755+         LA    ZC_R0,COUNT
000720 41100002                           (35/83)756+         LA    ZC_R1,2  RPI 1182 WAS &SYM_LEN(&FIELD_IX)
000724 412000C8                           (35/88)757+         LA    ZC_R2,C'H'
000728 9002300C                           (35/90)758+         STM   ZC_R0,ZC_R2,12(ZC_R3)  SET DISPLAY LIST ENTRY
00072C 96803014                           (35/94)759+         OI    24-4(ZC_R3),X'80' SET VL BIT IN LAST WORD OF PARM LIST
000730 1813                               (35/95)760+         LR    ZC_R1,ZC_R3
000732 58F09070                000070     (35/96)761+         L     ZC_R15,ZCVT_DISPLAY
000736 0DEF                               (35/97)762+         BASR  ZC_R14,ZC_R15
000738                                    (1/316)763 *            ADD 1 TO GOOD
000738                                    (1/317)764 *ZC     90         END_PERFORM
000738 A7F4FFD3                0006DE     (54/15)765+         J     PG_PM_23_A
00073C                                     (8/41)766+PG_PM_23_E   DS    0H  &TYPE
00073C                                    (1/319)767 *ZC     90         ADD   1,TO,GOOD
00073C A7E50003                          (45/279)768+         BRAS  ZC_R14,3 SET ZC_R1 TO A(INLINE LIT) AND SKIP OVER IT
000740 001C                              (45/280)769+         DC    PL2'1'
000742 FA21D05EE000     000A56           (45/287)770+         AP    GOOD,0(2,ZC_R14)
000748                                    (1/321)771 *            IF I NOT = 4 OR COUNT NOT = 3 PERFORM ERROR END-IF
000748                                    (1/322)772 *ZC     91         IF    I,NOT,=,4,OR,COUNT,NOT,=,3
000748 4800D058                000A50    (48/312)773+         LH    0,I
00074C A70E0004                          (48/313)774+         CHI   0,4
000750 A7740008                000760     (49/15)775+         BRC   ZC_NE,PG_IF_21_IOP1_T
000754 4800D05A                000A52    (48/312)776+         LH    0,COUNT
000758 A70E0003                          (48/313)777+         CHI   0,3
00075C A784000B                000772     (49/15)778+         BRC   15-ZC_NE,PG_IF_21_1
000760                                     (8/41)779+PG_IF_21_IOP1_T DS 0H  &TYPE
000760                                    (1/324)780 *ZC     92         PERFORM ERROR
000760 C0E000000094            000888     (43/44)781+         LARL  ZC_R14,PG_ERROR
000766 C000000000B3            0008CC     (43/45)782+         LARL  ZC_R0,PG_ERROR_END+6
00076C 58F0903C                00003C     (43/46)783+         L     ZC_R15,ZCVT_PERFORM
000770 0D1F                               (43/47)784+         BASR  ZC_R1,ZC_R15
000772                                    (1/326)785 *ZC     92         END_IF
000772                                     (8/41)786+PG_IF_21_1   DS    0H  &TYPE
000772                                    (1/328)787 *            MOVE 0 TO COUNT.
000772                                    (1/329)788 *ZC     92         MOVE  0,TO,COUNT
000772 E544D05A0000            000A52    (41/361)789+          MVHHI COUNT,0
000778                                    (1/332)790 *            DISPLAY 'TEST PERFORM FORMAT 4B WITH TEST AFTER'
000778                                    (1/333)791 *ZC     93         DISPLAY 'TEST PERFORM FORMAT 4B WITH TEST AFTER'
000778 A7150017                0007A6     (18/49)792+         BRAS  1,*+(WTO#0726_EOT-*+1)/2*2
00077C 002A0000E3C5E2E3                   (18/50)793+         DC    AL2(WTO#0726_EOT-*,0),C'TEST PERFORM FORMAT 4B WITH TEST AFTER'
000784 40D7C5D9C6D6D9D4
00078C 40C6D6D9D4C1E340
000794 F4C240E6C9E3C840
00079C E3C5E2E340C1C6E3
0007A4 C5D9
0007A6                  000007A6          (18/51)795+WTO#0726_EOT     EQU *
0007A6 0A23                               (18/52)796+         SVC   35
0007A8                                    (1/335)797 *            PERFORM WITH TEST AFTER VARYING I FROM 1 BY 1 UNTIL I>3
0007A8                                    (1/337)798 *ZC     94         PERFORM WITH,TEST,AFTER,VARYING,I,FROM,1,BY,1,UNTIL,I,>,3
0007A8 E544D0580001            000A50    (41/361)800+          MVHHI I,1
0007AE A7F40010                0007CE     (54/15)801+         J     PG_PM_25_P
0007B2                                     (8/41)802+PG_PM_25_A   DS    0H  &TYPE
0007B2 4800D058                000A50    (45/269)803+         LH    ZC_R0,I
0007B6 A70A0001                          (45/270)804+         AHI   ZC_R0,1
0007BA 4000D058                000A50    (45/271)805+         STH   ZC_R0,I
0007BE 4800D058                000A50    (48/312)806+         LH    0,I
0007C2 A70E0003                          (48/313)807+         CHI   0,3
0007C6 A7D40004                0007CE     (49/15)808+         BRC   15-ZC_H,PG_IF_22_1
0007CA A7F40023                000810     (54/15)809+         J     PG_PM_25_E
0007CE                                     (8/41)810+PG_IF_22_1   DS    0H  &TYPE
0007CE                                     (8/41)811+PG_PM_25_P   DS    0H  &TYPE
0007CE                                    (1/339)812 *                ADD 1 TO COUNT
0007CE                                    (1/340)813 *ZC     95         ADD   1,TO,COUNT
0007CE 4800D05A                000A52    (45/269)814+         LH    ZC_R0,COUNT
0007D2 A70A0001                          (45/270)815+         AHI   ZC_R0,1
0007D6 4000D05A                000A52    (45/271)816+         STH   ZC_R0,COUNT
0007DA                                    (1/342)817 *                DISPLAY 'ADD 1 TO COUNT =' COUNT
0007DA                                    (1/343)818 *            END-PERFORM
0007DA                                    (1/344)819 *ZC     96         DISPLAY 'ADD 1 TO COUNT =',COUNT
0007DA 413090F8                0000F8     (35/28)820+         LA    ZC_R3,ZCVT_WORKAREA  ZC_R3=CVT LIST WORK AREA
0007DE C000000000DD            000998     (35/68)821+         LARL  ZC_R0,=CL16'ADD 1 TO COUNT =' PAD TO EVEN LEN LIT
0007E4 41100010                           (35/69)822+         LA    ZC_R1,16
0007E8 412000E7                           (35/70)823+         LA    ZC_R2,C'X'
0007EC 90023000                           (35/71)824+         STM   ZC_R0,ZC_R2,0(ZC_R3)  SET DISPLAY LIST ENTRY
0007F0 4100D05A                000A52     (35/82)825+         LA    ZC_R0,COUNT
0007F4 41100002                           (35/83)826+         LA    ZC_R1,2  RPI 1182 WAS &SYM_LEN(&FIELD_IX)
0007F8 412000C8                           (35/88)827+         LA    ZC_R2,C'H'
0007FC 9002300C                           (35/90)828+         STM   ZC_R0,ZC_R2,12(ZC_R3)  SET DISPLAY LIST ENTRY
000800 96803014                           (35/94)829+         OI    24-4(ZC_R3),X'80' SET VL BIT IN LAST WORD OF PARM LIST
000804 1813                               (35/95)830+         LR    ZC_R1,ZC_R3
000806 58F09070                000070     (35/96)831+         L     ZC_R15,ZCVT_DISPLAY
00080A 0DEF                               (35/97)832+         BASR  ZC_R14,ZC_R15
00080C                                    (1/346)833 *            ADD 1 TO GOOD
00080C                                    (1/347)834 *ZC     98         END_PERFORM
00080C A7F4FFD3                0007B2     (54/15)835+         J     PG_PM_25_A
000810                                     (8/41)836+PG_PM_25_E   DS    0H  &TYPE
000810                                    (1/349)837 *ZC     98         ADD   1,TO,GOOD
000810 A7E50003                          (45/279)838+         BRAS  ZC_R14,3 SET ZC_R1 TO A(INLINE LIT) AND SKIP OVER IT
000814 001C                              (45/280)839+         DC    PL2'1'
000816 FA21D05EE000     000A56           (45/287)840+         AP    GOOD,0(2,ZC_R14)
00081C                                    (1/351)841 *            IF I NOT = 4 OR COUNT NOT = 3 PERFORM ERROR END-IF
00081C                                    (1/352)842 *ZC     99         IF    I,NOT,=,4,OR,COUNT,NOT,=,3
00081C 4800D058                000A50    (48/312)843+         LH    0,I
000820 A70E0004                          (48/313)844+         CHI   0,4
000824 A7740008                000834     (49/15)845+         BRC   ZC_NE,PG_IF_23_IOP1_T
000828 4800D05A                000A52    (48/312)846+         LH    0,COUNT
00082C A70E0003                          (48/313)847+         CHI   0,3
000830 A784000B                000846     (49/15)848+         BRC   15-ZC_NE,PG_IF_23_1
000834                                     (8/41)849+PG_IF_23_IOP1_T DS 0H  &TYPE
000834                                    (1/354)850 *      * DISPLAY TOTALS
000834                                    (1/355)851 *ZC    101         PERFORM ERROR
000834 C0E00000002A            000888     (43/44)852+         LARL  ZC_R14,PG_ERROR
00083A C00000000049            0008CC     (43/45)853+         LARL  ZC_R0,PG_ERROR_END+6
000840 58F0903C                00003C     (43/46)854+         L     ZC_R15,ZCVT_PERFORM
000844 0D1F                               (43/47)855+         BASR  ZC_R1,ZC_R15
000846                                    (1/357)856 *ZC    101         END_IF
000846                                     (8/41)857+PG_IF_23_1   DS    0H  &TYPE
000846                                    (1/359)858 *            DISPLAY 'TESTPM1 GOOD TESTS =' GOOD
000846                                    (1/360)859 *ZC    101         DISPLAY 'TESTPM1 GOOD TESTS =',GOOD
000846 413090F8                0000F8     (35/28)860+         LA    ZC_R3,ZCVT_WORKAREA  ZC_R3=CVT LIST WORK AREA
00084A C000000000BB            0009C0     (35/68)861+         LARL  ZC_R0,=CL20'TESTPM1 GOOD TESTS =' PAD TO EVEN LEN LIT
000850 41100014                           (35/69)862+         LA    ZC_R1,20
000854 412000E7                           (35/70)863+         LA    ZC_R2,C'X'
000858 90023000                           (35/71)864+         STM   ZC_R0,ZC_R2,0(ZC_R3)  SET DISPLAY LIST ENTRY
00085C 4100D05E                000A56     (35/82)865+         LA    ZC_R0,GOOD
000860 41100003                           (35/83)866+         LA    ZC_R1,3  RPI 1182 WAS &SYM_LEN(&FIELD_IX)
000864 412000D7                           (35/88)867+         LA    ZC_R2,C'P'
000868 9002300C                           (35/90)868+         STM   ZC_R0,ZC_R2,12(ZC_R3)  SET DISPLAY LIST ENTRY
00086C 96803014                           (35/94)869+         OI    24-4(ZC_R3),X'80' SET VL BIT IN LAST WORD OF PARM LIST
000870 1813                               (35/95)870+         LR    ZC_R1,ZC_R3
000872 58F09070                000070     (35/96)871+         L     ZC_R15,ZCVT_DISPLAY
000876 0DEF                               (35/97)872+         BASR  ZC_R14,ZC_R15
000878                                    (1/362)873 *            STOP RUN.
000878                                    (1/363)874 *ZC    102         STOP  RUN
000878 4810D0BB                000AB3     (59/18)875+         LH    ZC_R1,RETURN_CODE      PASS RETURN CODE IN R1
00087C 58F09030                000030     (59/23)876+         L     ZC_R15,ZCVT_GOBACK
000880 07FF                               (59/24)877+         BR    ZC_R15
000882                                    (1/366)878 *        ERROR.
000882 58F09040                000040      (8/64)879+PG_MAINLINE_END L ZC_R15,ZCVT_PMCHECK
000886 0DEF                                (8/65)880+         BASR  ZC_R14,ZC_R15 CHECK FOR END OF CURRENT PERFORM
000888                                     (8/96)881+PG_ERROR DS    0H
000888                                    (1/368)882 *            ADD 1 TO ERRORS
000888                                    (1/369)883 *ZC    104         ADD   1,TO,ERRORS
000888 4800D05C                000A54    (45/269)884+         LH    ZC_R0,ERRORS
00088C A70A0001                          (45/270)885+         AHI   ZC_R0,1
000890 4000D05C                000A54    (45/271)886+         STH   ZC_R0,ERRORS
000894                                    (1/371)887 *            DISPLAY 'ERROR TOTAL =' ERRORS.
000894                                    (1/372)888 *ZC    105         DISPLAY 'ERROR TOTAL =',ERRORS
000894 413090F8                0000F8     (35/28)889+         LA    ZC_R3,ZCVT_WORKAREA  ZC_R3=CVT LIST WORK AREA
000898 C0000000009E            0009D4     (35/68)890+         LARL  ZC_R0,=CL14'ERROR TOTAL =' PAD TO EVEN LEN LIT
00089E 4110000D                           (35/69)891+         LA    ZC_R1,13
0008A2 412000E7                           (35/70)892+         LA    ZC_R2,C'X'
0008A6 90023000                           (35/71)893+         STM   ZC_R0,ZC_R2,0(ZC_R3)  SET DISPLAY LIST ENTRY
0008AA 4100D05C                000A54     (35/82)894+         LA    ZC_R0,ERRORS
0008AE 41100002                           (35/83)895+         LA    ZC_R1,2  RPI 1182 WAS &SYM_LEN(&FIELD_IX)
0008B2 412000C8                           (35/88)896+         LA    ZC_R2,C'H'
0008B6 9002300C                           (35/90)897+         STM   ZC_R0,ZC_R2,12(ZC_R3)  SET DISPLAY LIST ENTRY
0008BA 96803014                           (35/94)898+         OI    24-4(ZC_R3),X'80' SET VL BIT IN LAST WORD OF PARM LIST
0008BE 1813                               (35/95)899+         LR    ZC_R1,ZC_R3
0008C0 58F09070                000070     (35/96)900+         L     ZC_R15,ZCVT_DISPLAY
0008C4 0DEF                               (35/97)901+         BASR  ZC_R14,ZC_R15
0008C6                                    (1/375)902 *        TEST1.
0008C6 58F09040                000040      (8/64)903+PG_ERROR_END L ZC_R15,ZCVT_PMCHECK
0008CA 0DEF                                (8/65)904+         BASR  ZC_R14,ZC_R15 CHECK FOR END OF CURRENT PERFORM
0008CC                                     (8/96)905+PG_TEST1 DS    0H
0008CC                                    (1/377)906 *            ADD 1 TO COUNT.
0008CC                                    (1/378)907 *ZC    107         ADD   1,TO,COUNT
0008CC 4800D05A                000A52    (45/269)908+         LH    ZC_R0,COUNT
0008D0 A70A0001                          (45/270)909+         AHI   ZC_R0,1
0008D4 4000D05A                000A52    (45/271)910+         STH   ZC_R0,COUNT
0008D8                                    (1/381)911 *            DISPLAY 'TEST1 ADD 1 TO COUNT =' COUNT
0008D8                                    (1/382)912 *ZC    108         DISPLAY 'TEST1 ADD 1 TO COUNT =',COUNT
0008D8 413090F8                0000F8     (35/28)913+         LA    ZC_R3,ZCVT_WORKAREA  ZC_R3=CVT LIST WORK AREA
0008DC C00000000083            0009E2     (35/68)914+         LARL  ZC_R0,=CL22'TEST1 ADD 1 TO COUNT =' PAD TO EVEN LEN LIT
0008E2 41100016                           (35/69)915+         LA    ZC_R1,22
0008E6 412000E7                           (35/70)916+         LA    ZC_R2,C'X'
0008EA 90023000                           (35/71)917+         STM   ZC_R0,ZC_R2,0(ZC_R3)  SET DISPLAY LIST ENTRY
0008EE 4100D05A                000A52     (35/82)918+         LA    ZC_R0,COUNT
0008F2 41100002                           (35/83)919+         LA    ZC_R1,2  RPI 1182 WAS &SYM_LEN(&FIELD_IX)
0008F6 412000C8                           (35/88)920+         LA    ZC_R2,C'H'
0008FA 9002300C                           (35/90)921+         STM   ZC_R0,ZC_R2,12(ZC_R3)  SET DISPLAY LIST ENTRY
0008FE 96803014                           (35/94)922+         OI    24-4(ZC_R3),X'80' SET VL BIT IN LAST WORD OF PARM LIST
000902 1813                               (35/95)923+         LR    ZC_R1,ZC_R3
000904 58F09070                000070     (35/96)924+         L     ZC_R15,ZCVT_DISPLAY
000908 0DEF                               (35/97)925+         BASR  ZC_R14,ZC_R15
00090A                                    (1/384)926 *        TEST2.
00090A 58F09040                000040      (8/64)927+PG_TEST1_END L ZC_R15,ZCVT_PMCHECK
00090E 0DEF                                (8/65)928+         BASR  ZC_R14,ZC_R15 CHECK FOR END OF CURRENT PERFORM
000910                                     (8/96)929+PG_TEST2 DS    0H
000910                                    (1/386)930 *            PERFORM TEST1
000910                                    (1/387)931 *ZC    110         PERFORM TEST1
000910 C0E0FFFFFFDE            0008CC     (43/44)932+         LARL  ZC_R14,PG_TEST1
000916 C000FFFFFFFD            000910     (43/45)933+         LARL  ZC_R0,PG_TEST1_END+6
00091C 58F0903C                00003C     (43/46)934+         L     ZC_R15,ZCVT_PERFORM
000920 0D1F                               (43/47)935+         BASR  ZC_R1,ZC_R15
000922                                    (1/389)936 *            PERFORM TEST1.
000922                                    (1/390)937 *ZC    111         PERFORM TEST1
000922 C0E0FFFFFFD5            0008CC     (43/44)938+         LARL  ZC_R14,PG_TEST1
000928 C000FFFFFFF4            000910     (43/45)939+         LARL  ZC_R0,PG_TEST1_END+6
00092E 58F0903C                00003C     (43/46)940+         L     ZC_R15,ZCVT_PERFORM
000932 0D1F                               (43/47)941+         BASR  ZC_R1,ZC_R15
000934                                    (1/393)942 *        TEST1I.
000934 58F09040                000040      (8/64)943+PG_TEST2_END L ZC_R15,ZCVT_PMCHECK
000938 0DEF                                (8/65)944+         BASR  ZC_R14,ZC_R15 CHECK FOR END OF CURRENT PERFORM
00093A                                     (8/96)945+PG_TEST1I DS   0H
00093A                                    (1/395)946 *            ADD 1 TO COUNT
00093A                                    (1/396)947 *ZC    113         ADD   1,TO,COUNT
00093A 4800D05A                000A52    (45/269)948+         LH    ZC_R0,COUNT
00093E A70A0001                          (45/270)949+         AHI   ZC_R0,1
000942 4000D05A                000A52    (45/271)950+         STH   ZC_R0,COUNT
000946                                    (1/398)951 *            ADD 1 TO I.
000946                                    (1/399)952 *ZC    114         ADD   1,TO,I
000946 4800D058                000A50    (45/269)953+         LH    ZC_R0,I
00094A A70A0001                          (45/270)954+         AHI   ZC_R0,1
00094E 4000D058                000A50    (45/271)955+         STH   ZC_R0,I
000952                                    (1/402)956 *            DISPLAY 'TEST1I ADD 1 TO COUNT =' COUNT
000952                                    (1/403)957 *ZC    115         DISPLAY 'TEST1I ADD 1 TO COUNT =',COUNT
000952 413090F8                0000F8     (35/28)958+         LA    ZC_R3,ZCVT_WORKAREA  ZC_R3=CVT LIST WORK AREA
000956 C00000000029            0009A8     (35/68)959+         LARL  ZC_R0,=CL24'TEST1I ADD 1 TO COUNT =' PAD TO EVEN LEN LIT
00095C 41100017                           (35/69)960+         LA    ZC_R1,23
000960 412000E7                           (35/70)961+         LA    ZC_R2,C'X'
000964 90023000                           (35/71)962+         STM   ZC_R0,ZC_R2,0(ZC_R3)  SET DISPLAY LIST ENTRY
000968 4100D05A                000A52     (35/82)963+         LA    ZC_R0,COUNT
00096C 41100002                           (35/83)964+         LA    ZC_R1,2  RPI 1182 WAS &SYM_LEN(&FIELD_IX)
000970 412000C8                           (35/88)965+         LA    ZC_R2,C'H'
000974 9002300C                           (35/90)966+         STM   ZC_R0,ZC_R2,12(ZC_R3)  SET DISPLAY LIST ENTRY
000978 96803014                           (35/94)967+         OI    24-4(ZC_R3),X'80' SET VL BIT IN LAST WORD OF PARM LIST
00097C 1813                               (35/95)968+         LR    ZC_R1,ZC_R3
00097E 58F09070                000070     (35/96)969+         L     ZC_R15,ZCVT_DISPLAY
000982 0DEF                               (35/97)970+         BASR  ZC_R14,ZC_R15
000984 58F09040                000040      (8/64)971+PG_TEST1I_END L ZC_R15,ZCVT_PMCHECK
000988 0DEF                                (8/65)972+         BASR  ZC_R14,ZC_R15 CHECK FOR END OF CURRENT PERFORM
00098A                                    (8/108)973+SN_END_PROCEDURE DS 0H SECTION
00098A                                    (60/18)974+*        PROCEDURE END
00098A 4810D0BB                000AB3     (60/24)975+         LH    ZC_R1,RETURN_CODE
00098E 58F09030                000030     (60/25)976+         L     ZC_R15,ZCVT_GOBACK
000992 0DEF                               (60/26)977+         BASR  ZC_R14,ZC_R15
000994                                    (60/32)978+         LTORG 
000998 C1C4C440F140E3D6 =CL16'ADD 1 TO COUNT ='
0009A0 40C3D6E4D5E3407E
0009A8 E3C5E2E3F1C940C1 =CL24'TEST1I ADD 1 TO COUNT ='
0009B0 C4C440F140E3D640
0009B8 C3D6E4D5E3407E40
0009C0 E3C5E2E3D7D4F140 =CL20'TESTPM1 GOOD TESTS ='
0009C8 C7D6D6C440E3C5E2
0009D0 E3E2407E
0009D4 C5D9D9D6D940E3D6 =CL14'ERROR TOTAL ='
0009DC E3C1D3407E40
0009E2 E3C5E2E3F140C1C4 =CL22'TEST1 ADD 1 TO COUNT ='
0009EA C440F140E3D640C3
0009F2 D6E4D5E3407E
0009F8                                     (6/15)979+*    ZCOBOL WORKING STORAGE SECTION DATA ITEMS 
0009F8                                     (6/15)980+*    LVL DATA NAME                      ADDR     LEN      DUP TYP PIC        VALUE 
0009F8                                     (6/15)982+*    01  ZC_SAVEAREA                    00000000 00000048 1   X   X(72)       
0009F8                                     (6/15)984+*    01  ZC_WS_ID                       00000048 00000008 1   X   X(8)       ''WS*WS*WS'' 
0009F8                                     (6/15)986+*    01  ZC_WS_START                    00000050 00000004 1   A               
0009F8                                     (6/15)988+*    01  ZC_WS_LEN                      00000054 00000004 1   F   9(9)        
0009F8                                     (6/15)990+*    01  FILLER                         00000058 00000000 1   X               
0009F8                                     (6/15)992+*    01  I                              00000058 00000002 1   H   9(4)        
0009F8                                     (6/15)994+*    01  COUNT                          0000005A 00000002 1   H   9(4)       0 
0009F8                                     (6/15)996+*    01  ERRORS                         0000005C 00000002 1   H   9(4)       0 
0009F8                                     (6/15)998+*    01  GOOD                           0000005E 00000003 1   P   9(4)       0 
0009F8                                    (6/15)1000+*    01  DEBUG_ITEM                     00000061 00000058 1   X               
0009F8                                    (6/15)1002+*    02  DEBUG_LINE                     00000061 00000006 1   X   X(6)        
0009F8                                    (6/15)1004+*    02  FILLER                         00000067 00000001 1   X   X          SPACE 
0009F8                                    (6/15)1006+*    02  DEBUG_NAME                     00000068 0000001E 1   X   X(30)       
0009F8                                    (6/15)1008+*    02  FILLER                         00000086 00000001 1   X   X          SPACE 
0009F8                                    (6/15)1010+*    02  DEBUG_SUB_1                    00000087 00000004 1   Z   9999        
0009F8                                    (6/15)1012+*    02  FILLER                         0000008B 00000001 1   X   X          SPACE 
0009F8                                    (6/15)1014+*    02  DEBUG_SUB_2                    0000008C 00000004 1   Z   9999        
0009F8                                    (6/15)1016+*    02  FILLER                         00000090 00000001 1   X   X          SPACE 
0009F8                                    (6/15)1018+*    02  DEBUG_SUB_3                    00000091 00000004 1   Z   9999        
0009F8                                    (6/15)1020+*    02  FILLER                         00000095 00000001 1   X   X          SPACE 
0009F8                                    (6/15)1022+*    02  DEBUG_CONTENTS                 00000096 00000023 1   X   X(35)       
0009F8                                    (6/15)1024+*    01  TRUE                           000000B9 00000001 1   Z   9          1 
0009F8                                    (6/15)1026+*    01  FALSE                          000000BA 00000001 1   Z   9          0 
0009F8                                    (6/15)1028+*    01  RETURN_CODE                    000000BB 00000002 1   H   9(4)       0 
0009F8                                    (6/15)1030+*    01  ZC_PM_NTIME_0                  000000BD 00000004 1   F   9(9)        
0009F8                                    (6/15)1032+*    01  ZC_PM_VARY_1                   000000C1 00000004 1   F   9(9)        
0009F8                                   (62/39)1034+ZC_WSLOC LOCTR 
0009F8                  00000000        (62/131)1035+ZC_WS_LOC_1  EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
0009F8                                  (62/336)1036+ZC_SAVEAREA DS CL72
000A40                  00000048        (62/131)1037+ZC_WS_LOC_2  EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000A40 E6E25CE6E25CE6E2                 (62/220)1038+ZC_WS_ID DC CL8'WS*WS*WS'
000A48                  00000050        (62/131)1039+ZC_WS_LOC_3  EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000A48                                  (62/322)1040+ZC_WS_START DS AL4
000A4C                  00000054        (62/131)1041+ZC_WS_LOC_4  EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000A4C                                  (62/324)1042+ZC_WS_LEN DS FL4
000A50                  00000058        (62/131)1043+ZC_WS_LOC_5  EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000A50                                  (62/336)1044+         DS  0CL0
000A50                  00000058        (62/131)1045+ZC_WS_LOC_6  EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000A50                                  (62/328)1046+I        DS  HL2
000A52                  0000005A        (62/131)1047+ZC_WS_LOC_7  EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000A52 0000                             (62/199)1048+COUNT    DC AL2(0)                  RPI 1065
000A54                  0000005C        (62/131)1049+ZC_WS_LOC_8  EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000A54 0000                             (62/199)1050+ERRORS   DC AL2(0)                  RPI 1065
000A56                  0000005E        (62/131)1051+ZC_WS_LOC_9  EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000A56 00000C                           (62/204)1052+GOOD     DC PL3'0'
000A59                  00000061        (62/131)1053+ZC_WS_LOC_10 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000A59                                  (62/336)1054+DEBUG_ITEM DS 0CL88
000A59                  00000061        (62/131)1055+ZC_WS_LOC_11 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000A59                                  (62/336)1056+DEBUG_LINE DS CL6
000A5F                  00000067        (62/131)1057+ZC_WS_LOC_12 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000A5F 40                               (62/227)1058+         DC CL1' '
000A60                  00000068        (62/131)1059+ZC_WS_LOC_13 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000A60                                  (62/336)1060+DEBUG_NAME DS CL30
000A7E                  00000086        (62/131)1061+ZC_WS_LOC_14 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000A7E 40                               (62/227)1062+         DC CL1' '
000A7F                  00000087        (62/131)1063+ZC_WS_LOC_15 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000A7F                                  (62/338)1064+DEBUG_SUB_1 DS ZL4
000A83                  0000008B        (62/131)1065+ZC_WS_LOC_16 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000A83 40                               (62/227)1066+         DC CL1' '
000A84                  0000008C        (62/131)1067+ZC_WS_LOC_17 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000A84                                  (62/338)1068+DEBUG_SUB_2 DS ZL4
000A88                  00000090        (62/131)1069+ZC_WS_LOC_18 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000A88 40                               (62/227)1070+         DC CL1' '
000A89                  00000091        (62/131)1071+ZC_WS_LOC_19 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000A89                                  (62/338)1072+DEBUG_SUB_3 DS ZL4
000A8D                  00000095        (62/131)1073+ZC_WS_LOC_20 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000A8D 40                               (62/227)1074+         DC CL1' '
000A8E                  00000096        (62/131)1075+ZC_WS_LOC_21 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000A8E                                  (62/336)1076+DEBUG_CONTENTS DS CL35
000AB1                  000000B9        (62/131)1077+ZC_WS_LOC_22 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000AB1 F1                               (62/251)1078+TRUE     DC CL1'1'
000AB2                  000000BA        (62/131)1079+ZC_WS_LOC_23 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000AB2 F0                               (62/251)1080+FALSE    DC CL1'0'
000AB3                  000000BB        (62/131)1081+ZC_WS_LOC_24 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000AB3 0000                             (62/199)1082+RETURN_CODE DC AL2(0)                  RPI 1065
000AB5                  000000BD        (62/131)1083+ZC_WS_LOC_25 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000AB5                                  (62/324)1084+ZC_PM_NTIME_0 DS FL4
000AB9                  000000C1        (62/131)1085+ZC_WS_LOC_26 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000AB9                                  (62/324)1086+ZC_PM_VARY_1 DS FL4
000ABD                                    (6/15)1087+*    ZCOBOL LINKAGE SECTION DATA ITEMS 
000ABD                                    (6/15)1088+*    LVL DATA NAME                      ADDR     LEN      DUP TYP PIC        VALUE 
000ABD                                   (62/39)1090+ZC_WSLOC LOCTR 
000ABD                                   (60/58)1091+ZC_WSLOC LOCTR 
000ABD                  00000000         (60/60)1092+ZC_WS_DIFF EQU  *-ZC_WS-197  DIFF BETWEEN ALLOC AND CALC WS
000AC0                                   (60/65)1093+ZC_WS_END DS   0D
000AC0                                   (63/14)1094+         MNOTE *,'ZCOBOL TOTAL SYMBOLS                 = 26'
000AC0                                   (63/15)1095+         MNOTE *,'ZCOBOL TOTAL SYMBOL DUPLICATES       = 0'
000AC0                                   (63/16)1096+         MNOTE *,'ZCOBOL TOTAL SYMBOL MAX DUP CHAIN    = 0'
000AC0                                   (63/17)1097+         MNOTE *,'ZCOBOL TOTAL SYMBOL LEVEL 88         = 0'
000AC0                                   (63/18)1098+         MNOTE *,'ZCOBOL TOTAL SYMBOL SET INDEXES      = 0'
000AC0                                   (63/19)1099+         MNOTE *,'ZCOBOL TOTAL SYMBOL LINKAGE SECTIONS = 0'
000AC0                                   (63/20)1100+         MNOTE *,'ZCOBOL TOTAL PROCEDURE SECTIONS      = 0'
000AC0                                   (63/21)1101+         MNOTE *,'ZCOBOL TOTAL PROCEDURE PARAGRAPHS    = 5'
000AC0                                   (63/22)1102+         MNOTE *,'ZCOBOL TOTAL PROCEDURE PARAGRAPH DUP = 0'
000AC0                                   (1/406)1103          END 

Symbol Table Listing

 SYM=COUNT    LOC=00000A52 LEN=00000002 ESD=0001 TYPE=REL  XREF=1048 246 266 278 
  292 305 315 317 326 339 371 384 404 406 417 430 462 474 506 519 539 541 556 568 
  589 591 606 619 655 668 706 720 744 746 755 776 789 814 816 825 846 908 910 918 
  948 950 963 
 SYM=DEBUG_CONTENTS LOC=00000A8E LEN=00000023 ESD=0001 TYPE=REL  XREF=1076 
 SYM=DEBUG_ITEM LOC=00000A59 LEN=00000058 ESD=0001 TYPE=REL  XREF=1054 
 SYM=DEBUG_LINE LOC=00000A59 LEN=00000006 ESD=0001 TYPE=REL  XREF=1056 
 SYM=DEBUG_NAME LOC=00000A60 LEN=0000001E ESD=0001 TYPE=REL  XREF=1060 
 SYM=DEBUG_SUB_1 LOC=00000A7F LEN=00000004 ESD=0001 TYPE=REL  XREF=1064 
 SYM=DEBUG_SUB_2 LOC=00000A84 LEN=00000004 ESD=0001 TYPE=REL  XREF=1068 
 SYM=DEBUG_SUB_3 LOC=00000A89 LEN=00000004 ESD=0001 TYPE=REL  XREF=1072 
 SYM=ERRORS   LOC=00000A54 LEN=00000002 ESD=0001 TYPE=REL  XREF=1050 884 886 894 
 SYM=FALSE    LOC=00000AB2 LEN=00000001 ESD=0001 TYPE=REL  XREF=1080 
 SYM=GOOD     LOC=00000A56 LEN=00000003 ESD=0001 TYPE=REL  XREF=1052 263 289 323 
  368 414 459 503 553 603 649 700 770 840 865 
 SYM=I        LOC=00000A50 LEN=00000002 ESD=0001 TYPE=REL  XREF=1046 440 444 484 
  488 529 533 543 545 578 582 593 595 629 631 640 642 652 680 686 691 693 703 730 
  733 735 737 773 800 803 805 806 843 953 955 
 SYM=PFPO_RADIX LOC=00000001 LEN=00000001 ESD=0000 TYPE=ABS  XREF=112 
 SYM=PFPO_RND LOC=00000000 LEN=00000001 ESD=0000 TYPE=ABS  XREF=113 
 SYM=PFPO_TEST LOC=00000080 LEN=00000001 ESD=0000 TYPE=ABS  XREF=111 
 SYM=PFPO_TYPE_DB LOC=00000006 LEN=00000001 ESD=0000 TYPE=ABS  XREF=118 
 SYM=PFPO_TYPE_DD LOC=00000009 LEN=00000001 ESD=0000 TYPE=ABS  XREF=121 
 SYM=PFPO_TYPE_DH LOC=00000001 LEN=00000001 ESD=0000 TYPE=ABS  XREF=115 
 SYM=PFPO_TYPE_EB LOC=00000005 LEN=00000001 ESD=0000 TYPE=ABS  XREF=117 
 SYM=PFPO_TYPE_ED LOC=00000008 LEN=00000001 ESD=0000 TYPE=ABS  XREF=120 
 SYM=PFPO_TYPE_EH LOC=00000000 LEN=00000001 ESD=0000 TYPE=ABS  XREF=114 
 SYM=PFPO_TYPE_LB LOC=00000007 LEN=00000001 ESD=0000 TYPE=ABS  XREF=119 
 SYM=PFPO_TYPE_LD LOC=0000000A LEN=00000001 ESD=0000 TYPE=ABS  XREF=122 
 SYM=PFPO_TYPE_LH LOC=00000002 LEN=00000001 ESD=0000 TYPE=ABS  XREF=116 
 SYM=PG_ERROR LOC=00000888 LEN=00000002 ESD=0001 TYPE=REL  XREF=881 270 297 331 376 
  422 466 511 560 611 660 712 781 852 
 SYM=PG_ERROR_END LOC=000008C6 LEN=00000004 ESD=0001 TYPE=REL  XREF=903 271 298 332 
  377 423 467 512 561 612 661 713 782 853 
 SYM=PG_IF_10_1 LOC=000003EC LEN=00000002 ESD=0001 TYPE=REL  XREF=492 490 
 SYM=PG_IF_11_1 LOC=0000042C LEN=00000002 ESD=0001 TYPE=REL  XREF=516 508 
 SYM=PG_IF_12_1 LOC=0000047A LEN=00000002 ESD=0001 TYPE=REL  XREF=537 535 
 SYM=PG_IF_13_1 LOC=000004C0 LEN=00000002 ESD=0001 TYPE=REL  XREF=565 558 
 SYM=PG_IF_14_1 LOC=0000050C LEN=00000002 ESD=0001 TYPE=REL  XREF=586 584 
 SYM=PG_IF_15_1 LOC=00000552 LEN=00000002 ESD=0001 TYPE=REL  XREF=616 608 
 SYM=PG_IF_16_1 LOC=000005A0 LEN=00000002 ESD=0001 TYPE=REL  XREF=635 633 
 SYM=PG_IF_17_1 LOC=000005F8 LEN=00000002 ESD=0001 TYPE=REL  XREF=665 657 
 SYM=PG_IF_17_IOP1_T LOC=000005E6 LEN=00000002 ESD=0001 TYPE=REL  XREF=658 654 
 SYM=PG_IF_18_1 LOC=00000656 LEN=00000002 ESD=0001 TYPE=REL  XREF=690 688 
 SYM=PG_IF_19_1 LOC=0000069C LEN=00000002 ESD=0001 TYPE=REL  XREF=717 708 
 SYM=PG_IF_19_IOP1_T LOC=0000068A LEN=00000002 ESD=0001 TYPE=REL  XREF=709 705 
 SYM=PG_IF_1_1 LOC=0000016A LEN=00000002 ESD=0001 TYPE=REL  XREF=275 268 
 SYM=PG_IF_20_1 LOC=000006FA LEN=00000002 ESD=0001 TYPE=REL  XREF=741 739 
 SYM=PG_IF_21_1 LOC=00000772 LEN=00000002 ESD=0001 TYPE=REL  XREF=786 778 
 SYM=PG_IF_21_IOP1_T LOC=00000760 LEN=00000002 ESD=0001 TYPE=REL  XREF=779 775 
 SYM=PG_IF_22_1 LOC=000007CE LEN=00000002 ESD=0001 TYPE=REL  XREF=810 808 
 SYM=PG_IF_23_1 LOC=00000846 LEN=00000002 ESD=0001 TYPE=REL  XREF=857 848 
 SYM=PG_IF_23_IOP1_T LOC=00000834 LEN=00000002 ESD=0001 TYPE=REL  XREF=849 845 
 SYM=PG_IF_2_1 LOC=000001AC LEN=00000002 ESD=0001 TYPE=REL  XREF=302 294 
 SYM=PG_IF_3_1 LOC=00000208 LEN=00000002 ESD=0001 TYPE=REL  XREF=336 328 
 SYM=PG_IF_4_1 LOC=0000024A LEN=00000002 ESD=0001 TYPE=REL  XREF=355 353 
 SYM=PG_IF_5_1 LOC=00000290 LEN=00000002 ESD=0001 TYPE=REL  XREF=381 373 
 SYM=PG_IF_6_1 LOC=000002D8 LEN=00000002 ESD=0001 TYPE=REL  XREF=402 400 
 SYM=PG_IF_7_1 LOC=00000312 LEN=00000002 ESD=0001 TYPE=REL  XREF=427 419 
 SYM=PG_IF_8_1 LOC=00000360 LEN=00000002 ESD=0001 TYPE=REL  XREF=448 446 
 SYM=PG_IF_9_1 LOC=000003A0 LEN=00000002 ESD=0001 TYPE=REL  XREF=471 464 
 SYM=PG_MAINLINE LOC=000000EC LEN=00000002 ESD=0001 TYPE=REL  XREF=236 
 SYM=PG_MAINLINE_END LOC=00000882 LEN=00000004 ESD=0001 TYPE=REL  XREF=879 
 SYM=PG_PM_11_E LOC=00000376 LEN=00000002 ESD=0001 TYPE=REL  XREF=454 447 
 SYM=PG_PM_11_T LOC=00000350 LEN=00000002 ESD=0001 TYPE=REL  XREF=443 453 
 SYM=PG_PM_13_E LOC=00000402 LEN=00000002 ESD=0001 TYPE=REL  XREF=498 491 
 SYM=PG_PM_13_T LOC=000003DC LEN=00000002 ESD=0001 TYPE=REL  XREF=487 497 
 SYM=PG_PM_15_E LOC=00000496 LEN=00000002 ESD=0001 TYPE=REL  XREF=548 536 
 SYM=PG_PM_15_T LOC=0000046A LEN=00000002 ESD=0001 TYPE=REL  XREF=532 547 
 SYM=PG_PM_17_E LOC=00000528 LEN=00000002 ESD=0001 TYPE=REL  XREF=598 585 
 SYM=PG_PM_17_T LOC=000004FC LEN=00000002 ESD=0001 TYPE=REL  XREF=581 597 
 SYM=PG_PM_19_E LOC=000005C2 LEN=00000002 ESD=0001 TYPE=REL  XREF=644 634 
 SYM=PG_PM_19_T LOC=00000590 LEN=00000002 ESD=0001 TYPE=REL  XREF=630 643 
 SYM=PG_PM_21_E LOC=00000666 LEN=00000002 ESD=0001 TYPE=REL  XREF=695 689 
 SYM=PG_PM_21_P LOC=00000634 LEN=00000002 ESD=0001 TYPE=REL  XREF=681 694 
 SYM=PG_PM_23_A LOC=000006DE LEN=00000002 ESD=0001 TYPE=REL  XREF=732 765 
 SYM=PG_PM_23_E LOC=0000073C LEN=00000002 ESD=0001 TYPE=REL  XREF=766 740 
 SYM=PG_PM_23_T LOC=000006EA LEN=00000002 ESD=0001 TYPE=REL  XREF=736 731 
 SYM=PG_PM_25_A LOC=000007B2 LEN=00000002 ESD=0001 TYPE=REL  XREF=802 835 
 SYM=PG_PM_25_E LOC=00000810 LEN=00000002 ESD=0001 TYPE=REL  XREF=836 809 
 SYM=PG_PM_25_P LOC=000007CE LEN=00000002 ESD=0001 TYPE=REL  XREF=811 801 
 SYM=PG_PM_7_E LOC=00000266 LEN=00000002 ESD=0001 TYPE=REL  XREF=363 354 
 SYM=PG_PM_7_P LOC=0000024A LEN=00000002 ESD=0001 TYPE=REL  XREF=356 349 
 SYM=PG_PM_7_T LOC=00000238 LEN=00000002 ESD=0001 TYPE=REL  XREF=350 362 
 SYM=PG_PM_9_D LOC=000002C0 LEN=00000002 ESD=0001 TYPE=REL  XREF=395 408 
 SYM=PG_PM_9_E LOC=000002E8 LEN=00000002 ESD=0001 TYPE=REL  XREF=409 401 
 SYM=PG_PM_9_T LOC=000002C6 LEN=00000002 ESD=0001 TYPE=REL  XREF=397 394 
 SYM=PG_TEST1 LOC=000008CC LEN=00000002 ESD=0001 TYPE=REL  XREF=905 255 281 357 636 
  682 932 938 
 SYM=PG_TEST1I LOC=0000093A LEN=00000002 ESD=0001 TYPE=REL  XREF=945 449 493 
 SYM=PG_TEST1I_END LOC=00000984 LEN=00000004 ESD=0001 TYPE=REL  XREF=971 450 494 
 SYM=PG_TEST1_END LOC=0000090A LEN=00000004 ESD=0001 TYPE=REL  XREF=927 256 358 637 
  683 933 939 
 SYM=PG_TEST2 LOC=00000910 LEN=00000002 ESD=0001 TYPE=REL  XREF=929 
 SYM=PG_TEST2_END LOC=00000934 LEN=00000004 ESD=0001 TYPE=REL  XREF=943 282 
 SYM=PVTCICS  LOC=00000020 LEN=00000001 ESD=0004 TYPE=REL  XREF=213 
 SYM=PVTDATE  LOC=00000008 LEN=00000008 ESD=0004 TYPE=REL  XREF=210 
 SYM=PVTEXTND LOC=00000021 LEN=00000001 ESD=0004 TYPE=REL  XREF=214 
 SYM=PVTMAXDL LOC=00000024 LEN=00000002 ESD=0004 TYPE=REL  XREF=217 
 SYM=PVTPGM   LOC=00000000 LEN=00000008 ESD=0004 TYPE=REL  XREF=209 
 SYM=PVTR64   LOC=00000023 LEN=00000001 ESD=0004 TYPE=REL  XREF=216 
 SYM=PVTTIME  LOC=00000010 LEN=00000008 ESD=0004 TYPE=REL  XREF=211 
 SYM=PVTTRUNC LOC=00000022 LEN=00000001 ESD=0004 TYPE=REL  XREF=215 
 SYM=PVTVER   LOC=00000018 LEN=00000008 ESD=0004 TYPE=REL  XREF=212 
 SYM=RETURN_CODE LOC=00000AB3 LEN=00000002 ESD=0001 TYPE=REL  XREF=1082 875 975 
 SYM=SN_END_PROCEDURE LOC=0000098A LEN=00000002 ESD=0001 TYPE=REL  XREF=973 
 SYM=TESTPM1  LOC=00000000 LEN=00000AC0 ESD=0001 TYPE=CST  XREF=8 234 
 SYM=TRUE     LOC=00000AB1 LEN=00000001 ESD=0001 TYPE=REL  XREF=1078 
 SYM=WTO#0019_EOT LOC=00000060 LEN=00000001 ESD=0001 TYPE=REL  XREF=35 33 34 
 SYM=WTO#0020_EOT LOC=000000AA LEN=00000001 ESD=0001 TYPE=REL  XREF=52 50 51 
 SYM=WTO#0097_EOT LOC=00000104 LEN=00000001 ESD=0001 TYPE=REL  XREF=242 240 241 
 SYM=WTO#0105_EOT LOC=0000012B LEN=00000001 ESD=0001 TYPE=REL  XREF=251 249 250 
 SYM=WTO#0159_EOT LOC=000001D0 LEN=00000001 ESD=0001 TYPE=REL  XREF=310 308 309 
 SYM=WTO#0192_EOT LOC=0000022C LEN=00000001 ESD=0001 TYPE=REL  XREF=344 342 343 
 SYM=WTO#0252_EOT LOC=000002B4 LEN=00000001 ESD=0001 TYPE=REL  XREF=389 387 388 
 SYM=WTO#0317_EOT LOC=00000347 LEN=00000001 ESD=0001 TYPE=REL  XREF=436 433 434 
 SYM=WTO#0365_EOT LOC=000003D4 LEN=00000001 ESD=0001 TYPE=REL  XREF=480 477 478 
 SYM=WTO#0413_EOT LOC=00000461 LEN=00000001 ESD=0001 TYPE=REL  XREF=525 522 523 
 SYM=WTO#0472_EOT LOC=000004F4 LEN=00000001 ESD=0001 TYPE=REL  XREF=574 571 572 
 SYM=WTO#0531_EOT LOC=00000587 LEN=00000001 ESD=0001 TYPE=REL  XREF=625 622 623 
 SYM=WTO#0592_EOT LOC=0000062C LEN=00000001 ESD=0001 TYPE=REL  XREF=674 671 672 
 SYM=WTO#0653_EOT LOC=000006D1 LEN=00000001 ESD=0001 TYPE=REL  XREF=726 723 724 
 SYM=WTO#0726_EOT LOC=000007A6 LEN=00000001 ESD=0001 TYPE=REL  XREF=795 792 793 
 SYM=ZC390CVT LOC=00000000 LEN=000001F8 ESD=0003 TYPE=DST  XREF=137 41 
 SYM=ZC390PVT LOC=00000000 LEN=00000030 ESD=0004 TYPE=DST  XREF=208 
 SYM=ZCVT_ABORT LOC=00000068 LEN=00000004 ESD=0003 TYPE=REL  XREF=166 
 SYM=ZCVT_ABORT_ACCEPT LOC=0000000B LEN=00000001 ESD=0000 TYPE=ABS  XREF=176 
 SYM=ZCVT_ABORT_ALTER LOC=00000001 LEN=00000001 ESD=0000 TYPE=ABS  XREF=167 
 SYM=ZCVT_ABORT_CALL LOC=00000002 LEN=00000001 ESD=0000 TYPE=ABS  XREF=168 
 SYM=ZCVT_ABORT_CICS LOC=0000000A LEN=00000001 ESD=0000 TYPE=ABS  XREF=175 
 SYM=ZCVT_ABORT_DISPLAY LOC=00000003 LEN=00000001 ESD=0000 TYPE=ABS  XREF=169 
 SYM=ZCVT_ABORT_DIVQ LOC=00000009 LEN=00000001 ESD=0000 TYPE=ABS  XREF=174 
 SYM=ZCVT_ABORT_INT128 LOC=00000008 LEN=00000001 ESD=0000 TYPE=ABS  XREF=173 
 SYM=ZCVT_ABORT_MAXERR LOC=0000000B LEN=00000001 ESD=0000 TYPE=ABS  XREF=177 
 SYM=ZCVT_ABORT_OPEN LOC=00000004 LEN=00000001 ESD=0000 TYPE=ABS  XREF=170 
 SYM=ZCVT_ABORT_STACK LOC=00000006 LEN=00000001 ESD=0000 TYPE=ABS  XREF=171 
 SYM=ZCVT_ABORT_VERSION LOC=00000007 LEN=00000001 ESD=0000 TYPE=ABS  XREF=172 
 SYM=ZCVT_ACCEPT LOC=0000006C LEN=00000004 ESD=0003 TYPE=REL  XREF=178 
 SYM=ZCVT_ACCEPT_CONSOLE LOC=00000002 LEN=00000001 ESD=0000 TYPE=ABS  XREF=180 
 SYM=ZCVT_ACCEPT_DATE LOC=00000004 LEN=00000001 ESD=0000 TYPE=ABS  XREF=182 
 SYM=ZCVT_ACCEPT_DDNAME LOC=00000003 LEN=00000001 ESD=0000 TYPE=ABS  XREF=181 
 SYM=ZCVT_ACCEPT_DEFAULT LOC=00000001 LEN=00000001 ESD=0000 TYPE=ABS  XREF=179 
 SYM=ZCVT_ACCEPT_DOW LOC=00000006 LEN=00000001 ESD=0000 TYPE=ABS  XREF=184 
 SYM=ZCVT_ACCEPT_TIME LOC=00000005 LEN=00000001 ESD=0000 TYPE=ABS  XREF=183 
 SYM=ZCVT_CALL LOC=00000014 LEN=00000004 ESD=0003 TYPE=REL  XREF=142 
 SYM=ZCVT_CMP64R32 LOC=00000018 LEN=00000004 ESD=0003 TYPE=REL  XREF=143 
 SYM=ZCVT_CONVERTING LOC=00000008 LEN=00000001 ESD=0000 TYPE=ABS  XREF=189 
 SYM=ZCVT_CVTLBTQ LOC=0000001C LEN=00000004 ESD=0003 TYPE=REL  XREF=144 
 SYM=ZCVT_CVTLDTP LOC=00000020 LEN=00000004 ESD=0003 TYPE=REL  XREF=145 
 SYM=ZCVT_CVTQTLB LOC=00000024 LEN=00000004 ESD=0003 TYPE=REL  XREF=146 
 SYM=ZCVT_DISPLAY LOC=00000070 LEN=00000004 ESD=0003 TYPE=REL  XREF=185 761 831 871 
  900 924 969 
 SYM=ZCVT_DIV64R32 LOC=00000028 LEN=00000004 ESD=0003 TYPE=REL  XREF=147 
 SYM=ZCVT_DIVQ128 LOC=0000002C LEN=00000004 ESD=0003 TYPE=REL  XREF=148 
 SYM=ZCVT_END LOC=000001F8 LEN=00000001 ESD=0003 TYPE=REL  XREF=207 44 56 139 
 SYM=ZCVT_GOBACK LOC=00000030 LEN=00000004 ESD=0003 TYPE=REL  XREF=149 876 976 
 SYM=ZCVT_HIGH_VALUES LOC=00000090 LEN=00000010 ESD=0003 TYPE=REL  XREF=196 
 SYM=ZCVT_ID  LOC=00000000 LEN=00000004 ESD=0003 TYPE=REL  XREF=138 42 44 56 139 
 SYM=ZCVT_INSPECT LOC=00000074 LEN=00000004 ESD=0003 TYPE=REL  XREF=186 
 SYM=ZCVT_LEN LOC=00000004 LEN=00000004 ESD=0003 TYPE=REL  XREF=139 44 
 SYM=ZCVT_MPYQ128 LOC=00000034 LEN=00000004 ESD=0003 TYPE=REL  XREF=150 
 SYM=ZCVT_NDDX LOC=000000E8 LEN=00000010 ESD=0003 TYPE=REL  XREF=202 
 SYM=ZCVT_OSE64R32 LOC=00000038 LEN=00000004 ESD=0003 TYPE=REL  XREF=151 
 SYM=ZCVT_PERFORM LOC=0000003C LEN=00000004 ESD=0003 TYPE=REL  XREF=152 257 272 283 
  299 333 359 378 424 451 468 495 513 562 613 638 662 684 714 783 854 934 940 
 SYM=ZCVT_PMCHECK LOC=00000040 LEN=00000004 ESD=0003 TYPE=REL  XREF=153 879 903 927 
  943 971 
 SYM=ZCVT_PVTMAXDL LOC=00000078 LEN=00000002 ESD=0003 TYPE=REL  XREF=193 
 SYM=ZCVT_PWORK LOC=000000A0 LEN=00000008 ESD=0003 TYPE=REL  XREF=197 
 SYM=ZCVT_PWORK1 LOC=000000A8 LEN=00000010 ESD=0003 TYPE=REL  XREF=198 
 SYM=ZCVT_PWORK2 LOC=000000B8 LEN=00000010 ESD=0003 TYPE=REL  XREF=199 
 SYM=ZCVT_PWORK3 LOC=000000C8 LEN=00000010 ESD=0003 TYPE=REL  XREF=200 
 SYM=ZCVT_PWORK4 LOC=000000D8 LEN=00000010 ESD=0003 TYPE=REL  XREF=201 
 SYM=ZCVT_REPLACING LOC=00000004 LEN=00000001 ESD=0000 TYPE=ABS  XREF=188 
 SYM=ZCVT_ROUNDF LOC=00000044 LEN=00000004 ESD=0003 TYPE=REL  XREF=154 
 SYM=ZCVT_STACKEND LOC=00000050 LEN=00000004 ESD=0003 TYPE=REL  XREF=157 
 SYM=ZCVT_STACKORG LOC=00000048 LEN=00000004 ESD=0003 TYPE=REL  XREF=155 
 SYM=ZCVT_STACKPTR LOC=0000004C LEN=00000004 ESD=0003 TYPE=REL  XREF=156 
 SYM=ZCVT_STOPRUN LOC=00000054 LEN=00000004 ESD=0003 TYPE=REL  XREF=158 
 SYM=ZCVT_TALLYING LOC=00000000 LEN=00000001 ESD=0000 TYPE=ABS  XREF=187 
 SYM=ZCVT_TALPHAX LOC=00000058 LEN=00000004 ESD=0003 TYPE=REL  XREF=159 
 SYM=ZCVT_TNUMP LOC=0000005C LEN=00000004 ESD=0003 TYPE=REL  XREF=160 
 SYM=ZCVT_TNUMX LOC=00000060 LEN=00000004 ESD=0003 TYPE=REL  XREF=161 
 SYM=ZCVT_TNUMZ LOC=00000064 LEN=00000004 ESD=0003 TYPE=REL  XREF=162 
 SYM=ZCVT_VER LOC=00000008 LEN=00000008 ESD=0003 TYPE=REL  XREF=140 
 SYM=ZCVT_WORKAREA LOC=000000F8 LEN=00000100 ESD=0003 TYPE=REL  XREF=203 750 820 
  860 889 913 958 
 SYM=ZCVT_ZC390NUC LOC=00000010 LEN=00000004 ESD=0003 TYPE=REL  XREF=141 46 
 SYM=ZCVT_ZERO LOC=00000080 LEN=00000010 ESD=0003 TYPE=REL  XREF=195 
 SYM=ZC_E     LOC=00000008 LEN=00000001 ESD=0000 TYPE=ABS  XREF=93 
 SYM=ZC_EQ    LOC=00000008 LEN=00000001 ESD=0000 TYPE=ABS  XREF=105 353 400 
 SYM=ZC_F0    LOC=00000000 LEN=00000001 ESD=0000 TYPE=ABS  XREF=75 
 SYM=ZC_F10   LOC=0000000A LEN=00000001 ESD=0000 TYPE=ABS  XREF=85 
 SYM=ZC_F1    LOC=00000001 LEN=00000001 ESD=0000 TYPE=ABS  XREF=76 
 SYM=ZC_F11   LOC=0000000B LEN=00000001 ESD=0000 TYPE=ABS  XREF=86 
 SYM=ZC_F12   LOC=0000000C LEN=00000001 ESD=0000 TYPE=ABS  XREF=87 
 SYM=ZC_F13   LOC=0000000D LEN=00000001 ESD=0000 TYPE=ABS  XREF=88 
 SYM=ZC_F14   LOC=0000000E LEN=00000001 ESD=0000 TYPE=ABS  XREF=89 
 SYM=ZC_F15   LOC=0000000F LEN=00000001 ESD=0000 TYPE=ABS  XREF=90 
 SYM=ZC_F2    LOC=00000002 LEN=00000001 ESD=0000 TYPE=ABS  XREF=77 
 SYM=ZC_F3    LOC=00000003 LEN=00000001 ESD=0000 TYPE=ABS  XREF=78 
 SYM=ZC_F4    LOC=00000004 LEN=00000001 ESD=0000 TYPE=ABS  XREF=79 
 SYM=ZC_F5    LOC=00000005 LEN=00000001 ESD=0000 TYPE=ABS  XREF=80 
 SYM=ZC_F6    LOC=00000006 LEN=00000001 ESD=0000 TYPE=ABS  XREF=81 
 SYM=ZC_F7    LOC=00000007 LEN=00000001 ESD=0000 TYPE=ABS  XREF=82 
 SYM=ZC_F8    LOC=00000008 LEN=00000001 ESD=0000 TYPE=ABS  XREF=83 
 SYM=ZC_F9    LOC=00000009 LEN=00000001 ESD=0000 TYPE=ABS  XREF=84 
 SYM=ZC_GE    LOC=0000000B LEN=00000001 ESD=0000 TYPE=ABS  XREF=108 
 SYM=ZC_GT    LOC=00000002 LEN=00000001 ESD=0000 TYPE=ABS  XREF=106 
 SYM=ZC_H     LOC=00000002 LEN=00000001 ESD=0000 TYPE=ABS  XREF=91 446 490 535 584 
  633 688 739 808 
 SYM=ZC_L     LOC=00000004 LEN=00000001 ESD=0000 TYPE=ABS  XREF=92 
 SYM=ZC_LE    LOC=0000000D LEN=00000001 ESD=0000 TYPE=ABS  XREF=109 
 SYM=ZC_LOAD  LOC=00000038 LEN=00000002 ESD=0001 TYPE=REL  XREF=27 12 
 SYM=ZC_LOAD_OK LOC=00000068 LEN=00000002 ESD=0001 TYPE=REL  XREF=39 32 
 SYM=ZC_LT    LOC=00000004 LEN=00000001 ESD=0000 TYPE=ABS  XREF=107 
 SYM=ZC_M     LOC=00000004 LEN=00000001 ESD=0000 TYPE=ABS  XREF=99 
 SYM=ZC_NE    LOC=00000007 LEN=00000001 ESD=0000 TYPE=ABS  XREF=96 268 294 328 373 
  419 464 508 558 608 654 657 705 708 775 778 845 848 
 SYM=ZC_NH    LOC=0000000D LEN=00000001 ESD=0000 TYPE=ABS  XREF=94 
 SYM=ZC_NL    LOC=0000000B LEN=00000001 ESD=0000 TYPE=ABS  XREF=95 
 SYM=ZC_NM    LOC=0000000B LEN=00000001 ESD=0000 TYPE=ABS  XREF=102 
 SYM=ZC_NO    LOC=0000000E LEN=00000001 ESD=0000 TYPE=ABS  XREF=104 
 SYM=ZC_NP    LOC=0000000D LEN=00000001 ESD=0000 TYPE=ABS  XREF=101 
 SYM=ZC_NZ    LOC=00000007 LEN=00000001 ESD=0000 TYPE=ABS  XREF=103 
 SYM=ZC_O     LOC=00000001 LEN=00000001 ESD=0000 TYPE=ABS  XREF=97 
 SYM=ZC_P     LOC=00000002 LEN=00000001 ESD=0000 TYPE=ABS  XREF=98 
 SYM=ZC_PM_NTIME_0 LOC=00000AB5 LEN=00000004 ESD=0001 TYPE=REL  XREF=1084 348 351 
  361 
 SYM=ZC_PM_VARY_1 LOC=00000AB9 LEN=00000004 ESD=0001 TYPE=REL  XREF=1086 393 396 
  398 
 SYM=ZC_R0    LOC=00000000 LEN=00000001 ESD=0000 TYPE=ABS  XREF=59 40 131 132 133 
  256 271 282 298 315 316 317 332 358 377 404 405 406 423 450 467 494 512 539 540 
  541 543 544 545 561 589 590 591 593 594 595 612 637 640 641 642 661 683 691 692 
  693 713 733 734 735 744 745 746 751 754 755 758 782 803 804 805 814 815 816 821 
  824 825 828 853 861 864 865 868 884 885 886 890 893 894 897 908 909 910 914 917 
  918 921 933 939 948 949 950 953 954 955 959 962 963 966 
 SYM=ZC_R10   LOC=0000000A LEN=00000001 ESD=0000 TYPE=ABS  XREF=69 
 SYM=ZC_R1    LOC=00000001 LEN=00000001 ESD=0000 TYPE=ABS  XREF=60 125 126 127 128 
  258 273 284 300 334 360 379 425 452 469 496 514 563 614 639 663 685 715 752 756 
  760 784 822 826 830 855 862 866 870 875 891 895 899 915 919 923 935 941 960 964 
  968 975 
 SYM=ZC_R11   LOC=0000000B LEN=00000001 ESD=0000 TYPE=ABS  XREF=70 
 SYM=ZC_R12   LOC=0000000C LEN=00000001 ESD=0000 TYPE=ABS  XREF=71 
 SYM=ZC_R13   LOC=0000000D LEN=00000001 ESD=0000 TYPE=ABS  XREF=72 124 126 127 128 
  129 130 132 
 SYM=ZC_R14   LOC=0000000E LEN=00000001 ESD=0000 TYPE=ABS  XREF=73 47 255 261 263 
  270 281 287 289 297 321 323 331 357 366 368 376 412 414 422 449 457 459 466 493 
  501 503 511 551 553 560 601 603 611 636 647 649 660 682 698 700 712 762 768 770 
  781 832 838 840 852 872 880 901 904 925 928 932 938 944 970 972 977 
 SYM=ZC_R15   LOC=0000000F LEN=00000001 ESD=0000 TYPE=ABS  XREF=74 9 31 37 46 47 
  54 134 257 258 272 273 283 284 299 300 333 334 359 360 378 379 424 425 451 452 
  468 469 495 496 513 514 562 563 613 614 638 639 662 663 684 685 714 715 761 762 
  783 784 831 832 854 855 871 872 876 877 879 880 900 901 903 904 924 925 927 928 
  934 935 940 941 943 944 969 970 971 972 976 977 
 SYM=ZC_R2    LOC=00000002 LEN=00000001 ESD=0000 TYPE=ABS  XREF=61 124 753 754 757 
  758 823 824 827 828 863 864 867 868 892 893 896 897 916 917 920 921 961 962 965 
  966 
 SYM=ZC_R3    LOC=00000003 LEN=00000001 ESD=0000 TYPE=ABS  XREF=62 750 754 758 759 
  760 820 824 828 829 830 860 864 868 869 870 889 893 897 898 899 913 917 921 922 
  923 958 962 966 967 968 
 SYM=ZC_R4    LOC=00000004 LEN=00000001 ESD=0000 TYPE=ABS  XREF=63 
 SYM=ZC_R5    LOC=00000005 LEN=00000001 ESD=0000 TYPE=ABS  XREF=64 
 SYM=ZC_R6    LOC=00000006 LEN=00000001 ESD=0000 TYPE=ABS  XREF=65 
 SYM=ZC_R7    LOC=00000007 LEN=00000001 ESD=0000 TYPE=ABS  XREF=66 
 SYM=ZC_R8    LOC=00000008 LEN=00000001 ESD=0000 TYPE=ABS  XREF=67 12 13 
 SYM=ZC_R9    LOC=00000009 LEN=00000001 ESD=0000 TYPE=ABS  XREF=68 40 41 
 SYM=ZC_SAVEAREA LOC=000009F8 LEN=00000048 ESD=0001 TYPE=REL  XREF=1036 
 SYM=ZC_VER_ERR LOC=00000088 LEN=00000002 ESD=0001 TYPE=REL  XREF=49 43 45 
 SYM=ZC_VER_OK LOC=000000C8 LEN=00000002 ESD=0001 TYPE=REL  XREF=123 48 
 SYM=ZC_WS    LOC=000009F8 LEN=00000008 ESD=0001 TYPE=REL  XREF=136 125 129 1035 
  1037 1039 1041 1043 1045 1047 1049 1051 1053 1055 1057 1059 1061 1063 1065 1067 
  1069 1071 1073 1075 1077 1079 1081 1083 1085 1092 
 SYM=ZC_WSLOC LOC=000009F8 LEN=000000C8 ESD=0001 TYPE=CST  XREF=135 219 1034 1090 
  1091 
 SYM=ZC_WS_DIFF LOC=00000000 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1092 
 SYM=ZC_WS_END LOC=00000AC0 LEN=00000008 ESD=0001 TYPE=REL  XREF=1093 131 
 SYM=ZC_WS_ID LOC=00000A40 LEN=00000008 ESD=0001 TYPE=REL  XREF=1038 
 SYM=ZC_WS_LEN LOC=00000A4C LEN=00000004 ESD=0001 TYPE=REL  XREF=1042 133 
 SYM=ZC_WS_LOC_10 LOC=00000061 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1053 
 SYM=ZC_WS_LOC_1 LOC=00000000 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1035 
 SYM=ZC_WS_LOC_11 LOC=00000061 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1055 
 SYM=ZC_WS_LOC_12 LOC=00000067 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1057 
 SYM=ZC_WS_LOC_13 LOC=00000068 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1059 
 SYM=ZC_WS_LOC_14 LOC=00000086 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1061 
 SYM=ZC_WS_LOC_15 LOC=00000087 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1063 
 SYM=ZC_WS_LOC_16 LOC=0000008B LEN=00000001 ESD=0000 TYPE=ABS  XREF=1065 
 SYM=ZC_WS_LOC_17 LOC=0000008C LEN=00000001 ESD=0000 TYPE=ABS  XREF=1067 
 SYM=ZC_WS_LOC_18 LOC=00000090 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1069 
 SYM=ZC_WS_LOC_19 LOC=00000091 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1071 
 SYM=ZC_WS_LOC_20 LOC=00000095 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1073 
 SYM=ZC_WS_LOC_2 LOC=00000048 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1037 
 SYM=ZC_WS_LOC_21 LOC=00000096 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1075 
 SYM=ZC_WS_LOC_22 LOC=000000B9 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1077 
 SYM=ZC_WS_LOC_23 LOC=000000BA LEN=00000001 ESD=0000 TYPE=ABS  XREF=1079 
 SYM=ZC_WS_LOC_24 LOC=000000BB LEN=00000001 ESD=0000 TYPE=ABS  XREF=1081 
 SYM=ZC_WS_LOC_25 LOC=000000BD LEN=00000001 ESD=0000 TYPE=ABS  XREF=1083 
 SYM=ZC_WS_LOC_26 LOC=000000C1 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1085 
 SYM=ZC_WS_LOC_3 LOC=00000050 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1039 
 SYM=ZC_WS_LOC_4 LOC=00000054 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1041 
 SYM=ZC_WS_LOC_5 LOC=00000058 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1043 
 SYM=ZC_WS_LOC_6 LOC=00000058 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1045 
 SYM=ZC_WS_LOC_7 LOC=0000005A LEN=00000001 ESD=0000 TYPE=ABS  XREF=1047 
 SYM=ZC_WS_LOC_8 LOC=0000005C LEN=00000001 ESD=0000 TYPE=ABS  XREF=1049 
 SYM=ZC_WS_LOC_9 LOC=0000005E LEN=00000001 ESD=0000 TYPE=ABS  XREF=1051 
 SYM=ZC_WS_START LOC=00000A48 LEN=00000004 ESD=0001 TYPE=REL  XREF=1040 130 
 SYM=ZC_Z     LOC=00000008 LEN=00000001 ESD=0000 TYPE=ABS  XREF=100 

Literal Table Listing

 LIT=A(ZCVT_END-ZCVT_ID) LOC=000000C4 LEN=00000004 ESD=0001 POOL=0001 XREF=44 
 LIT=C'ZCVT'  LOC=000000C0 LEN=00000004 ESD=0001 POOL=0001 XREF=42 
 LIT=CL14'ERROR TOTAL =' LOC=000009D4 LEN=0000000E ESD=0001 POOL=0002 XREF=890 
 LIT=CL16'ADD 1 TO COUNT =' LOC=00000998 LEN=00000010 ESD=0001 POOL=0002 XREF=751 
  821 
 LIT=CL20'TESTPM1 GOOD TESTS =' LOC=000009C0 LEN=00000014 ESD=0001 POOL=0002 XREF=861 
 LIT=CL22'TEST1 ADD 1 TO COUNT =' LOC=000009E2 LEN=00000016 ESD=0001 POOL=0002 XREF=914 
 LIT=CL24'TEST1I ADD 1 TO COUNT =' LOC=000009A8 LEN=00000018 ESD=0001 POOL=0002 XREF=959 
 LIT=CL8'ZC390LIB' LOC=000000B8 LEN=00000008 ESD=0001 POOL=0001 XREF=28 
 
AZ390I total mnote warnings = 0
AZ390I total mnote errors   = 0
AZ390I max   mnote level    = 0
AZ390I total mz390 errors   = 0
AZ390I total az390 errors   = 0
TESTPM1   MZ390 ENDED   RC= 0 MEM(MB)= MB IO=28740
