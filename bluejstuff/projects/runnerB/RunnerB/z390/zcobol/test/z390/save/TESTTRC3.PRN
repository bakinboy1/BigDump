TESTTRC3  MZ390 START
AZ390I Copyright 2011 Automated Software Tools Corporation
AZ390I z390 is licensed under GNU General Public License
AZ390I program = zcobol\test\TESTTRC3
AZ390I options = W:\work\z390\z390.OPT=(time(60)) @zcobol\z390\ZC390CLG=(
  sysmac(+zcobol+zcobol\z390+mac+cics) syscpy(+zcobol+zcobol\z390+mac+cics) 
  BAL NOLISTCALL MAXGBL(1500000)) notiming stats TRUNC NOR64
External Symbol Definitions
 ESD=0001 LOC=00000000 LEN=00000518 TYPE=CST NAME=TESTTRC3
Assembler Listing
000000                                       (6/15)1+*    ZCOBOL PGM='zcobol\test\TESTTRC3' VER=V1.5.06 MM/DD/YY  
000000                                       (6/15)2+*    ZCOBOL OPTIONS=(TRUNC,NOR64) 
000000                                        (1/4)3          COPY  TESTTRC3_ZC_LABELS.CPY
000000                                        (1/5)4 *        IDENTIFICATION DIVISION.
000000                                        (1/7)5 *        PROGRAM-ID.    TESTTRC3.
000000                                      (11/34)6+         PRINT NOLIST,NOGEN,NOLISTUSE    SET LIST OPTION FOR INTERNAL CODE
000000                                      (11/59)8+TESTTRC3 CSECT ,                CSECT WITH PROCEDURE CODE AND WS
000000                                      (11/60)9+         USING *,ZC_R15
LISTUSE TESTTRC3 ESD=0001 LOC=00000000 LEN=01000 REG=F OFF=00000 LAB=
000000 90ECD00C                            (16/51)10+         STM   14,12,12+4*(14-14)(13)
000004                                     (11/93)11+         CNOP  4,8             FORCE ZC390PVT TO DOUBLEWORD BOUNDARY
000004 A785001A                000038      (11/94)12+         BRAS  ZC_R8,ZC_LOAD
000008                                     (11/95)13+         USING *,ZC_R8            BASE FOR LOAD AND CICS V5 USE
LISTUSE TESTTRC3 ESD=0001 LOC=00000000 LEN=01000 REG=F OFF=00000 LAB=
LISTUSE TESTTRC3 ESD=0001 LOC=00000008 LEN=01000 REG=8 OFF=00000 LAB=
000008                                     (11/96)14+*
000008                                     (11/97)15+*  THESE FIELDS MUST BE KEPT IN SYNC WITH zcobol\ZC390PVT.CPY
000008                                     (11/98)16+*
000008 E3C5E2E3E3D9C3F3                    (11/99)17+         DC    CL8'TESTTRC3'    PVTPGM   ZCOBOL PGM NAME
000010 F0F161F0F261F0F5                   (11/100)18+         DC    CL8'01/02/05'   PVTDATE  ZCOBOL COMPILE DATE
000018 F2F24BF3F3404040                   (11/101)19+         DC    CL8'22.33'   PVTTIME  ZCOBOL COMPILE TIME
000020 E5F14BF54BF0F640                   (11/102)20+         DC    CL8'V1.5.06'    PVTVER   ZCOBOL COMPILER VERSION
000028 F0                                 (11/103)21+         DC    C'0'     PVTCICS  ZCOBOL EXEC CICS PGM
000029 F1                                 (11/104)22+         DC    C'1'   PVTEXTND ZCOBOL EXTENDED PRECISION
00002A F1                                 (11/105)23+         DC    C'1'    PVTTRUNC ZCOBOL TRUNCATE TO PICTURE
00002B F0                                 (11/106)24+         DC    C'0'      PVTR64   ZCOBOL USE 64 BIT REGISTERS
00002C 0050                               (11/107)25+         DC    H'80' MAX DISPLAY LINE LEN  RPI 1118
00002E                                    (11/108)26+         DS    XL10            RESERVED
000038                                    (11/109)27+ZC_LOAD  DS    0H
000038 410080B0                0000B8      (17/74)28+         LA    0,=CL8'ZC390LIB'
00003C 1BFF                                (17/95)29+         SR    15,15 USE DEFAULT SYS390 SEARCH
00003E 0A08                               (17/125)30+         SVC   8 LOAD R0=A(NAME) R15=DDNAME/DSNAME ADDR OR 0
000040 12FF                               (11/111)31+         LTR   ZC_R15,ZC_R15
000042 A7840013                000068     (11/112)32+         JZ    ZC_LOAD_OK
000046 A715000D                000060      (18/49)33+         BRAS  1,*+(WTO#0015_EOT-*+1)/2*2
00004A 00160000E9C3F3F9                    (18/50)34+         DC    AL2(WTO#0015_EOT-*,0),C'ZC390LIB NOT FOUND'
000060                  00000060           (18/51)35+WTO#0015_EOT     EQU *
000060 0A23                                (18/52)36+         SVC   35
000062 41F00010                           (11/114)37+         LA  ZC_R15,16
000066 0A03                               (11/115)38+         SVC 3      EXIT TO CALLER WITH RC=16
000068                                    (11/116)39+ZC_LOAD_OK DS  0H
000068 1890                               (11/117)40+         LR    ZC_R9,ZC_R0
00006A                                    (11/118)41+         USING ZC390CVT,ZC_R9    R9=CVT
LISTUSE TESTTRC3 ESD=0001 LOC=00000000 LEN=01000 REG=F OFF=00000 LAB=
LISTUSE TESTTRC3 ESD=0001 LOC=00000008 LEN=01000 REG=8 OFF=00000 LAB=
LISTUSE ZC390CVT ESD=0003 LOC=00000000 LEN=01000 REG=9 OFF=00000 LAB=
00006A D503900080B8     000000 0000C0     (11/119)42+         CLC   ZCVT_ID,=C'ZCVT'              CHECK ZCVT ID AND LENGTH
000070 A774000C                000088     (11/120)43+         JNE   ZC_VER_ERR                    IN ZC390LIB.390 MATCH
000074 D503900480BC     000004 0000C4     (11/121)44+         CLC   ZCVT_LEN,=A(ZCVT_END-ZCVT_ID) ZCOBOL PGM COMPILED ID/LEN
00007A 47708080                000088     (11/122)45+         BNE   ZC_VER_ERR
00007E 58F09010                000010     (11/123)46+         L     ZC_R15,ZCVT_ZC390NUC
000082 0DEF                               (11/124)47+         BASR  ZC_R14,ZC_R15 CALL ZC390NUC TO VERIFY VER, OPTIONS
000084 A7F40022                0000C8     (11/125)48+         J     ZC_VER_OK
000088                                    (11/126)49+ZC_VER_ERR DS 0H
000088 A7150011                0000AA      (18/49)50+         BRAS  1,*+(WTO#0016_EOT-*+1)/2*2
00008C 001E0000E9C3F3F9                    (18/50)51+         DC    AL2(WTO#0016_EOT-*,0),C'ZC390LIB ZCVT VERIFY ERROR'
0000AA                  000000AA           (18/51)52+WTO#0016_EOT     EQU *
0000AA 0A23                                (18/52)53+         SVC   35
0000AC 41F00010                           (11/128)54+         LA  ZC_R15,16
0000B0 0A03                               (11/129)55+         SVC 3      EXIT TO CALLER WITH RC=16
0000B2                                    (11/130)56+         LTORG 
0000B8 E9C3F3F9F0D3C9C2 =CL8'ZC390LIB'
0000C0 E9C3E5E3         =C'ZCVT'
0000C4 000001F8         =A(ZCVT_END-ZCVT_ID)
0000C8                  00000080          (15/10)111=PFPO_TEST    EQU  X'80' PFPO TEST IF VALID OPCODE (NOT SUPPORTED YET)
0000C8                  00000001          (15/11)112=PFPO_RADIX   EQU  1 PFPO OPCODE - CONVERT FROM ONE RADIX TO ANOTHER
0000C8                  00000000          (15/12)113=PFPO_RND     EQU  0 PFOP ROUNDING OPTION (ONLY DEFAULT ALLOWED)
0000C8                  00000000          (15/13)114=PFPO_TYPE_EH EQU  0 EH HFP SHORT     32 BITS 7  DIGITS
0000C8                  00000001          (15/14)115=PFPO_TYPE_DH EQU  1 ED HFP LONG      64 BITS 15 DIGITS
0000C8                  00000002          (15/15)116=PFPO_TYPE_LH EQU  2 EL HFP EXTENDED 128 BITS 30 DIGITS
0000C8                  00000005          (15/16)117=PFPO_TYPE_EB EQU  5 EB BFP SHORT     32 BITS 7  DIGITS
0000C8                  00000006          (15/17)118=PFPO_TYPE_DB EQU  6 DB BFP LONG      64 BITS 16 DIGITS
0000C8                  00000007          (15/18)119=PFPO_TYPE_LB EQU  7 LB BFP EXTENDED 128 BITS 34 DIGITS
0000C8                  00000008          (15/19)120=PFPO_TYPE_ED EQU  8 ED DFP SHORT     32 BITS 7  DIGITS
0000C8                  00000009          (15/20)121=PFPO_TYPE_DD EQU  9 DD DFP LONG      64 BITS 16 DIGITS
0000C8                  0000000A          (15/21)122=PFPO_TYPE_LD EQU 10 LD DFP EXTENDED 128 BITS 34 DIGITS
0000C8                                   (11/133)123+ZC_VER_OK DS   0H
0000C8 582D0018                           (11/63)124+         L     ZC_R2,24(ZC_R13) SET ZC_R2=PARMLIST ADDRESS AFTER LOAD
0000CC C010000001C2            000450     (11/64)125+         LARL  ZC_R1,ZC_WS     ZC_R2=A(WORKING STORAGE WITH SAVEAREA)
0000D2 501D0008                           (11/65)126+         ST    ZC_R1,8(ZC_R13) FORWARD  SAVE CHAIN
0000D6 50D10004                           (11/66)127+         ST    ZC_R13,4(ZC_R1) BACKWARD SAVE CHAIN
0000DA 18D1                               (11/67)128+         LR    ZC_R13,ZC_R1    LINK SAVE AREA IN ZC390CVT
0000DC                                    (11/68)129+         USING ZC_WS,ZC_R13    BASE FOR ZCOBOL WS (SEE GEN_SYM_RX.MAC)
LISTUSE TESTTRC3 ESD=0001 LOC=00000000 LEN=01000 REG=F OFF=00000 LAB=
LISTUSE TESTTRC3 ESD=0001 LOC=00000008 LEN=01000 REG=8 OFF=00000 LAB=
LISTUSE ZC390CVT ESD=0003 LOC=00000000 LEN=01000 REG=9 OFF=00000 LAB=
LISTUSE TESTTRC3 ESD=0001 LOC=00000450 LEN=01000 REG=D OFF=00000 LAB=
0000DC 50D0D050                0004A0     (11/69)130+         ST    ZC_R13,ZC_WS_START  SAVE ADDR WS IN WS PREFIX
0000E0 C0000000021C            000518     (11/70)131+         LARL  ZC_R0,ZC_WS_END
0000E6 1B0D                               (11/71)132+         SR    ZC_R0,ZC_R13
0000E8 5000D054                0004A4     (11/72)133+         ST    ZC_R0,ZC_WS_LEN     SAVE LENGTH OF WS IN WS PREFIX
0000EC                                    (11/73)134+         DROP  ZC_R15              RPI 1042
LISTUSE TESTTRC3 ESD=0001 LOC=00000450 LEN=01000 REG=D OFF=00000 LAB=
LISTUSE TESTTRC3 ESD=0001 LOC=00000008 LEN=01000 REG=8 OFF=00000 LAB=
LISTUSE ZC390CVT ESD=0003 LOC=00000000 LEN=01000 REG=9 OFF=00000 LAB=
00044A                                    (11/74)135+ZC_WSLOC LOCTR 
000450                                    (11/75)136+ZC_WS    DS    0D           START WORKING STORAGE
000000                                    (11/81)137+ZC390CVT DSECT 
000000                                    (12/31)138=ZCVT_ID            DC    C'ZCVT'             ZCVT ID  VERIFIED BY ZCOB
000004                                    (12/32)139=ZCVT_LEN           DC    A(ZCVT_END-ZCVT_ID) ZCVT LEN VERIFIED BY ZCOB
000008                                    (12/33)140=ZCVT_VER           DC    CL8'V1.5.06'    ZCVT VER VERIFIED BY ZC390NUC
000010                                    (12/34)141=ZCVT_ZC390NUC  DC V(ZC390NUC)      MODULE  SYSTEM ROUTINE MODULE INIT
000014                                    (12/35)142=ZCVT_CALL           DC V(CALL)       ENTRY R0=A(PGM),R1=A(PARMLIST)
000018                                    (12/36)143=ZCVT_CMP64R32       DC V(CMP64R32)   ENTRY COMPARE R0-1=FLD1 R2-3=FLD2
00001C                                    (12/37)144=ZCVT_CVTLBTQ        DC V(CVTLBTQ)    ENTRY CVT LB IN F4-6 TO Q IN R0-1
000020                                    (12/38)145=ZCVT_CVTLDTP        DC V(CVTLDTP)    ENTRY CVT LD IN F0-2 TO PL31 R0-1
000024                                    (12/39)146=ZCVT_CVTQTLB        DC V(CVTQTLB)    ENTRY CVT Q IN R0-1 TO LB IN F4-6
000028                                    (12/40)147=ZCVT_DIV64R32       DC V(DIV64R32)   ENTRY DIVIDE R0-1=N64, R2-3=MAX64
00002C                                    (12/41)148=ZCVT_DIVQ128        DC V(DIVQ128)    ENTRY DIVIDE Q128 R0-R1 BY R2-R3
000030                                    (12/42)149=ZCVT_GOBACK         DC V(GOBACK)     ENTRY R1=RC
000034                                    (12/43)150=ZCVT_MPYQ128        DC V(MPYQ128)    ENTRY MULTIPLY Q128 R0-R1 BY R2-R3
000038                                    (12/44)151=ZCVT_OSE64R32       DC V(OSE64R32)   ENTRY ON SIZE ERR R0-1=N, R2-3=MAX
00003C                                    (12/45)152=ZCVT_PERFORM        DC V(PERFORM)    ENTRY R14=PGTAR,R0=PGEXT,R1=PMRET
000040                                    (12/46)153=ZCVT_PMCHECK        DC V(PMCHECK)    ENTRY R14=RETURN TO NEXT INSTR.
000044                                    (12/47)154=ZCVT_ROUNDF         DC V(ROUNDF)     ENTRY R0=REM,R1=QUO,R2=DIVISOR
000048                                    (12/48)155=ZCVT_STACKORG       DC V(STACKORG)   ENTRY PERFORM STACK ORIGIN
00004C                                    (12/49)156=ZCVT_STACKPTR       DC V(STACKPTR)   ENTRY CUR ENTRY A(PG_END+4,RET)
000050                                    (12/50)157=ZCVT_STACKEND       DC V(STACKEND)   ENTRY PERFORM STACK END
000054                                    (12/51)158=ZCVT_STOPRUN        DC V(STOPRUN)    ENTRY R1=RC
000058                                    (12/52)159=ZCVT_TALPHAX        DC V(TALPHAX)    ENTRY TEST ALPHABETIC X
00005C                                    (12/53)160=ZCVT_TNUMP          DC V(TNUMP)      ENTRY TEST NUMERIC P
000060                                    (12/54)161=ZCVT_TNUMX          DC V(TNUMX)      ENTRY TEST NUMERIC X
000064                                    (12/55)162=ZCVT_TNUMZ          DC V(TNUMZ)      ENTRY TEST NUMERIC Z
000068                                    (12/56)163=*
000068                                    (12/57)164=* ADDITIONAL SEPARATE MODULES LINKED WITH Z390NUC IN ZC390LIB.390
000068                                    (12/58)165=*
000068                                    (12/59)166=ZCVT_ABORT     DC V(ABORT)         MODULE  R1=ABORT ERROR MSG #
00006C                  00000001          (12/60)167=ZCVT_ABORT_ALTER   EQU    1 ABORT ALTER DUE TO BRC NOT FOUND AT TARGET
00006C                  00000002          (12/61)168=ZCVT_ABORT_CALL    EQU    2 ABORT DYNAMIC CALL - PGM NOT FOUND
00006C                  00000003          (12/62)169=ZCVT_ABORT_DISPLAY EQU    3 ABORT DISPLAY DUE TO BUFFER EXCEEDED
00006C                  00000004          (12/63)170=ZCVT_ABORT_OPEN    EQU    4 ABORT OPEN  INVALID DCB
00006C                  00000006          (12/64)171=ZCVT_ABORT_STACK   EQU    6 ABORT PEROFRM STACK OVERFLOW
00006C                  00000007          (12/65)172=ZCVT_ABORT_VERSION EQU    7 ABORT ZC390NUC INIT ZCOBOL VERSION ERROR
00006C                  00000008          (12/66)173=ZCVT_ABORT_INT128  EQU    8 ABORT INTEGER 128 CONVERSION OVERFLO
00006C                  00000009          (12/67)174=ZCVT_ABORT_DIVQ    EQU    9 ABORT DIVIDE Q IF DIVISOR 0 OR > 2**63
00006C                  0000000A          (12/68)175=ZCVT_ABORT_CICS    EQU   10 ABORT THIS PGM REQUIRES EXEC CICS TRANS MGR
00006C                  0000000B          (12/69)176=ZCVT_ABORT_ACCEPT  EQU   11 ABORT ACCEPT EOF
00006C                  0000000B          (12/70)177=ZCVT_ABORT_MAXERR  EQU   11 ABORT MAX ERROR CODE
00006C                                    (12/71)178=ZCVT_ACCEPT    DC V(ACCEPT)        MODULE  R1=A(TYPE,FLD_ADD,FLD_LEN)
000070                  00000001          (12/72)179=ZCVT_ACCEPT_DEFAULT EQU   1 INPUT DEFAULT DDNAME=SYSIN
000070                  00000002          (12/73)180=ZCVT_ACCEPT_CONSOLE EQU   2 INPUT VIA WTOR FROM CONSOLE
000070                  00000003          (12/74)181=ZCVT_ACCEPT_DDNAME  EQU   3 INPUT FROM DDNAME WITH DDNAME ADDR IN R3
000070                  00000004          (12/75)182=ZCVT_ACCEPT_DATE    EQU   4 RETURN DAY OF WEEK PIC 9(8) MMDDYYYY
000070                  00000005          (12/76)183=ZCVT_ACCEPT_TIME    EQU   5 RETURN DAY OF WEEK PIC 9(8) HHMMSSTH
000070                  00000006          (12/77)184=ZCVT_ACCEPT_DOW     EQU   6 RETURN DAY OF WEEK PIC 9 1-7
000070                                    (12/78)185=ZCVT_DISPLAY   DC V(DISPLAY)       MODULE  R1=A(ADDR,LEN,TYPE)
000074                                    (12/79)186=ZCVT_INSPECT   DC V(INSPECT)       MODULE  R0=TYPE,R1=PARMLIST
000078                  00000000          (12/80)187=ZCVT_TALLYING      EQU   0 INSPECT TALLYING
000078                  00000004          (12/81)188=ZCVT_REPLACING     EQU   4 INSPECT REPLACING
000078                  00000008          (12/82)189=ZCVT_CONVERTING    EQU   8 INSPECT CONVERTING
000078                                    (12/83)190=*
000078                                    (12/84)191=* SHARED DATA AREAS
000078                                    (12/85)192=*
000078                                    (12/86)193=ZCVT_PVTMAXDL  DS H          MAXIMUM DISPLAY LINE LENGTH  RPI 1118
000080                                    (12/87)194=               DS 0D
000080                                    (12/88)195=ZCVT_ZERO      DC XL16'00'   BINARY ZEROS
000090                                    (12/89)196=ZCVT_HIGH_VALUES DC 0XL16,16X'FF' BINARY FF'S     RPI 1181
0000A0                                    (12/90)197=ZCVT_PWORK     DS PL8        CVD/CVB WORK
0000A8                                    (12/91)198=ZCVT_PWORK1    DS PL16       DIV DIVIDEND, CVDG/CVBG WORK
0000B8                                    (12/92)199=ZCVT_PWORK2    DS PL16       DIV DIVISOR
0000C8                                    (12/93)200=ZCVT_PWORK3    DS PL16       DIV QUOTIENT
0000D8                                    (12/94)201=ZCVT_PWORK4    DS PL16       DIV REMAINDER
0000E8                                    (12/95)202=ZCVT_NDDX      DS XL16       DIV DIVIDEND HOLD AREA
0000F8                                    (12/96)203=ZCVT_WORKAREA  DS XL256      GEN_INSPECT PARMS, GEN_EDIT WORK, ETC.
0001F8                                    (12/97)204=*
0001F8                                    (12/98)205=* END OF ZC390CVT
0001F8                                    (12/99)206=*
0001F8                  000001F8         (12/100)207=ZCVT_END   EQU   *
000000                                    (11/83)208+ZC390PVT DSECT 
000000                                    (13/11)209=PVTPGM   DS    CL8  ZCOBOL PGM NAME
000008                                    (13/12)210=PVTDATE  DS    CL8  ZCOBOL COMPILE DATE
000010                                    (13/13)211=PVTTIME  DS    CL8  ZCOBOL COMPILE TIME
000018                                    (13/14)212=PVTVER   DS    CL8  ZCOBOL COMPILER VERSION
000020                                    (13/15)213=PVTCICS  DS    C    ZCOBOL EXEC CICS PGM
000021                                    (13/16)214=PVTEXTND DS    C    ZCOBOL EXTENDED PRECISION
000022                                    (13/17)215=PVTTRUNC DS    C    ZCOBOL TRUNCATE TO PICTURE
000023                                    (13/18)216=PVTR64   DS    C    ZCOBOL USE 64 BIT REGISTERS
000024                                    (13/19)217=PVTMAXDL DS    H    ZCOBOL MAX DISPLAY LINE LENGTH
000026                                    (13/20)218=         DS    XL10 RESERVED
000450                                    (11/85)219+ZC_WSLOC LOCTR              CONTINUE WS FOR FD AND DATA
000450                                      (1/9)220 *        AUTHOR.        DON HIGGINS.
000450                                     (1/10)221 *      * TEST ON SIZE ERROR WITH TRUNC AND NOR64.
000450                                     (1/12)222 *        ENVIRONMENT DIVISION.
000450                                     (1/14)223 *        DATA DIVISION.
000450                                    (27/23)224+         PRINT DATA
000450                                     (1/16)225 *        WORKING-STORAGE SECTION.
000450                                     (1/18)226 *         77  HW1     COMP PIC S9(4).
000450                                     (1/20)227 *         77  FW1     COMP PIC S9(9).
000450                                     (1/22)228 *         77  GW1     COMP PIC S9(18).
000450                                     (1/24)229 *         77  GOOD   COMP PIC S9(9) VALUE 0.
000450                                     (1/27)230 *        PROCEDURE DIVISION.
000450                                     (1/28)231 *ZC   PROCEDURE DIVISION
000450                                    (30/18)232+         PRINT LIST,GEN,LISTUSE TURN PRINT LISTING ON FOR USER CODE GEN
0000EC                                    (30/19)233+TESTTRC3 CSECT                SWITCH TO PROCEDURE CODE AHEAD OF WS
0000EC                                     (1/30)234 *        MAINLINE.
0000EC                                     (8/96)235+PG_MAINLINE DS 0H
0000EC                                     (1/32)236 *            MOVE 9998 TO HW1
0000EC                                     (1/33)237 *ZC     14         MOVE  9998,TO,HW1
0000EC E544D058270E            0004A8    (38/361)238+          MVHHI HW1,9998
0000F2                                     (1/35)239 *            ADD  1    TO HW1 ON SIZE ERROR MOVE 1 TO HW1 END-ADD
0000F2                                     (1/36)240 *ZC     15         ADD   1,TO,HW1,ON,SIZE,ERROR
0000F2 1B00                              (40/255)241+         SR    ZC_R0,ZC_R0
0000F4 4810D058                0004A8    (40/256)242+         LH    ZC_R1,HW1
0000F8 C0E000000198            000428    (40/259)243+         LARL  ZC_R14,=F'10000'
0000FE C21900000001            000001    (40/260)244+         AFI   ZC_R1,1
000104 A714000B                00011A   (40/1621)245+         JO    PG_ADD_1_ON_SIZE    ERROR IF OVERFLOW
000108 10F1                             (40/1622)246+         LPR   ZC_R15,ZC_R1
00010A 59FE0000                         (40/1623)247+         C     ZC_R15,0(ZC_R14)           COMPARE ABS RESULT TO MAX
00010E A7B40006                00011A   (40/1624)248+         JNL   PG_ADD_1_ON_SIZE   ERROR IF TOO BIG
000112 4010D058                0004A8   (40/1625)249+         STH   ZC_R1,HW1            STORE RESULT
000116 A7F40005                000120     (43/14)250+         J     PG_ADD_1             SKIP ON SIZE ERROR
00011A                                     (8/41)251+PG_ADD_1_ON_SIZE DS 0H  &TYPE
00011A                                     (1/38)252 *ZC     16      1  MOVE  1,TO,HW1
00011A E544D0580001            0004A8    (38/361)253+          MVHHI HW1,1
000120                                     (1/40)254 *ZC     16      1  END_ADD
000120                                     (8/41)255+PG_ADD_1     DS    0H  &TYPE
000120                                     (1/42)256 *      1     IF HW1 NOT = 9999 PERFORM BAD ELSE PERFORM GOOD.
000120                                     (1/43)257 *ZC     16      1  IF    HW1,NOT,=,9999
000120 4800D058                0004A8    (46/312)258+         LH    0,HW1
000124 A70E270F                          (46/313)259+         CHI   0,9999
000128 A784000D                000142     (47/15)260+         BRC   15-ZC_NE,PG_IF_1_1
00012C                                     (1/45)261 *ZC     16      1  PERFORM BAD
00012C C0E00000015C            0003E4     (50/44)262+         LARL  ZC_R14,PG_BAD
000132 C00000000164            0003FA     (50/45)263+         LARL  ZC_R0,PG_BAD_END+6
000138 58F0903C                00003C     (50/46)264+         L     ZC_R15,ZCVT_PERFORM
00013C 0D1F                               (50/47)265+         BASR  ZC_R1,ZC_R15
00013E                                     (1/47)266 *ZC     16      1  ELSE
00013E A7F4000B                000154     (52/15)267+         J     PG_IF_1_E
000142                                     (8/41)268+PG_IF_1_1    DS    0H  &TYPE
000142                                     (1/49)269 *ZC     16      1  PERFORM GOOD
000142 C0E000000141            0003C4     (50/44)270+         LARL  ZC_R14,PG_GOOD
000148 C0000000014E            0003E4     (50/45)271+         LARL  ZC_R0,PG_GOOD_END+6
00014E 58F0903C                00003C     (50/46)272+         L     ZC_R15,ZCVT_PERFORM
000152 0D1F                               (50/47)273+         BASR  ZC_R1,ZC_R15
000154                                     (8/41)274+PG_IF_1_E    DS    0H  &TYPE
000154                                     (1/52)275 *            ADD  1    TO HW1 ON SIZE ERROR MOVE 1 TO HW1 END-ADD
000154                                     (1/53)276 *ZC     17         ADD   1,TO,HW1,ON,SIZE,ERROR
000154 1B00                              (40/255)277+         SR    ZC_R0,ZC_R0
000156 4810D058                0004A8    (40/256)278+         LH    ZC_R1,HW1
00015A C0E000000167            000428    (40/259)279+         LARL  ZC_R14,=F'10000'
000160 C21900000001            000001    (40/260)280+         AFI   ZC_R1,1
000166 A714000B                00017C   (40/1621)281+         JO    PG_ADD_2_ON_SIZE    ERROR IF OVERFLOW
00016A 10F1                             (40/1622)282+         LPR   ZC_R15,ZC_R1
00016C 59FE0000                         (40/1623)283+         C     ZC_R15,0(ZC_R14)           COMPARE ABS RESULT TO MAX
000170 A7B40006                00017C   (40/1624)284+         JNL   PG_ADD_2_ON_SIZE   ERROR IF TOO BIG
000174 4010D058                0004A8   (40/1625)285+         STH   ZC_R1,HW1            STORE RESULT
000178 A7F40005                000182     (43/14)286+         J     PG_ADD_2             SKIP ON SIZE ERROR
00017C                                     (8/41)287+PG_ADD_2_ON_SIZE DS 0H  &TYPE
00017C                                     (1/55)288 *ZC     18      2  MOVE  1,TO,HW1
00017C E544D0580001            0004A8    (38/361)289+          MVHHI HW1,1
000182                                     (1/57)290 *ZC     18      2  END_ADD
000182                                     (8/41)291+PG_ADD_2     DS    0H  &TYPE
000182                                     (1/59)292 *      2     IF HW1 NOT = 1    PERFORM BAD ELSE PERFORM GOOD.
000182                                     (1/60)293 *ZC     18      2  IF    HW1,NOT,=,1
000182 4800D058                0004A8    (46/312)294+         LH    0,HW1
000186 A70E0001                          (46/313)295+         CHI   0,1
00018A A784000D                0001A4     (47/15)296+         BRC   15-ZC_NE,PG_IF_2_1
00018E                                     (1/62)297 *ZC     18      2  PERFORM BAD
00018E C0E00000012B            0003E4     (50/44)298+         LARL  ZC_R14,PG_BAD
000194 C00000000133            0003FA     (50/45)299+         LARL  ZC_R0,PG_BAD_END+6
00019A 58F0903C                00003C     (50/46)300+         L     ZC_R15,ZCVT_PERFORM
00019E 0D1F                               (50/47)301+         BASR  ZC_R1,ZC_R15
0001A0                                     (1/64)302 *ZC     18      2  ELSE
0001A0 A7F4000B                0001B6     (52/15)303+         J     PG_IF_2_E
0001A4                                     (8/41)304+PG_IF_2_1    DS    0H  &TYPE
0001A4                                     (1/66)305 *ZC     18      2  PERFORM GOOD
0001A4 C0E000000110            0003C4     (50/44)306+         LARL  ZC_R14,PG_GOOD
0001AA C0000000011D            0003E4     (50/45)307+         LARL  ZC_R0,PG_GOOD_END+6
0001B0 58F0903C                00003C     (50/46)308+         L     ZC_R15,ZCVT_PERFORM
0001B4 0D1F                               (50/47)309+         BASR  ZC_R1,ZC_R15
0001B6                                     (8/41)310+PG_IF_2_E    DS    0H  &TYPE
0001B6                                     (1/69)311 *            MOVE 999999998 TO FW1
0001B6                                     (1/70)312 *ZC     19         MOVE  999999998,TO,FW1
0001B6 C0100000013B            00042C    (38/344)313+          LARL  ZC_R1,=F'999999998'
0001BC D203D05A1000     0004AA           (38/345)314+          MVC   FW1,0(ZC_R1)
0001C2                                     (1/72)315 *            ADD  1    TO FW1 ON SIZE ERROR MOVE 1 TO FW1 END-ADD
0001C2                                     (1/73)316 *ZC     20         ADD   1,TO,FW1,ON,SIZE,ERROR
0001C2 1B00                              (40/175)317+         SR    ZC_R0,ZC_R0
0001C4 5810D05A                0004AA    (40/176)318+         L     ZC_R1,FW1
0001C8 C0E000000134            000430    (40/179)319+         LARL  ZC_R14,=F'1000000000'
0001CE C21900000001            000001    (40/180)320+         AFI   ZC_R1,1
0001D4 A714000B                0001EA   (40/1621)321+         JO    PG_ADD_3_ON_SIZE    ERROR IF OVERFLOW
0001D8 10F1                             (40/1622)322+         LPR   ZC_R15,ZC_R1
0001DA 59FE0000                         (40/1623)323+         C     ZC_R15,0(ZC_R14)           COMPARE ABS RESULT TO MAX
0001DE A7B40006                0001EA   (40/1624)324+         JNL   PG_ADD_3_ON_SIZE   ERROR IF TOO BIG
0001E2 5010D05A                0004AA   (40/1625)325+         ST    ZC_R1,FW1            STORE RESULT
0001E6 A7F40005                0001F0     (43/14)326+         J     PG_ADD_3             SKIP ON SIZE ERROR
0001EA                                     (8/41)327+PG_ADD_3_ON_SIZE DS 0H  &TYPE
0001EA                                     (1/75)328 *ZC     21      3  MOVE  1,TO,FW1
0001EA E54CD05A0001            0004AA    (38/342)329+          MVHI  FW1,1
0001F0                                     (1/77)330 *ZC     21      3  END_ADD
0001F0                                     (8/41)331+PG_ADD_3     DS    0H  &TYPE
0001F0                                     (1/79)332 *      3     IF FW1 NOT = 999999999 PERFORM BAD ELSE PERFORM GOOD.
0001F0                                     (1/80)333 *ZC     21      3  IF    FW1,NOT,=,999999999
0001F0 5800D05A                0004AA    (46/289)334+         L     0,FW1
0001F4 C20D3B9AC9FF            9AC9FF    (46/290)335+         CFI   0,999999999
0001FA A784000D                000214     (47/15)336+         BRC   15-ZC_NE,PG_IF_3_1
0001FE                                     (1/82)337 *ZC     21      3  PERFORM BAD
0001FE C0E0000000F3            0003E4     (50/44)338+         LARL  ZC_R14,PG_BAD
000204 C000000000FB            0003FA     (50/45)339+         LARL  ZC_R0,PG_BAD_END+6
00020A 58F0903C                00003C     (50/46)340+         L     ZC_R15,ZCVT_PERFORM
00020E 0D1F                               (50/47)341+         BASR  ZC_R1,ZC_R15
000210                                     (1/84)342 *ZC     21      3  ELSE
000210 A7F4000B                000226     (52/15)343+         J     PG_IF_3_E
000214                                     (8/41)344+PG_IF_3_1    DS    0H  &TYPE
000214                                     (1/86)345 *ZC     21      3  PERFORM GOOD
000214 C0E0000000D8            0003C4     (50/44)346+         LARL  ZC_R14,PG_GOOD
00021A C000000000E5            0003E4     (50/45)347+         LARL  ZC_R0,PG_GOOD_END+6
000220 58F0903C                00003C     (50/46)348+         L     ZC_R15,ZCVT_PERFORM
000224 0D1F                               (50/47)349+         BASR  ZC_R1,ZC_R15
000226                                     (8/41)350+PG_IF_3_E    DS    0H  &TYPE
000226                                     (1/89)351 *            ADD  1    TO FW1 ON SIZE ERROR MOVE 1 TO FW1 END-ADD
000226                                     (1/90)352 *ZC     22         ADD   1,TO,FW1,ON,SIZE,ERROR
000226 1B00                              (40/175)353+         SR    ZC_R0,ZC_R0
000228 5810D05A                0004AA    (40/176)354+         L     ZC_R1,FW1
00022C C0E000000102            000430    (40/179)355+         LARL  ZC_R14,=F'1000000000'
000232 C21900000001            000001    (40/180)356+         AFI   ZC_R1,1
000238 A714000B                00024E   (40/1621)357+         JO    PG_ADD_4_ON_SIZE    ERROR IF OVERFLOW
00023C 10F1                             (40/1622)358+         LPR   ZC_R15,ZC_R1
00023E 59FE0000                         (40/1623)359+         C     ZC_R15,0(ZC_R14)           COMPARE ABS RESULT TO MAX
000242 A7B40006                00024E   (40/1624)360+         JNL   PG_ADD_4_ON_SIZE   ERROR IF TOO BIG
000246 5010D05A                0004AA   (40/1625)361+         ST    ZC_R1,FW1            STORE RESULT
00024A A7F40005                000254     (43/14)362+         J     PG_ADD_4             SKIP ON SIZE ERROR
00024E                                     (8/41)363+PG_ADD_4_ON_SIZE DS 0H  &TYPE
00024E                                     (1/92)364 *ZC     23      4  MOVE  1,TO,FW1
00024E E54CD05A0001            0004AA    (38/342)365+          MVHI  FW1,1
000254                                     (1/94)366 *ZC     23      4  END_ADD
000254                                     (8/41)367+PG_ADD_4     DS    0H  &TYPE
000254                                     (1/96)368 *      4     IF FW1 NOT = 1    PERFORM BAD ELSE PERFORM GOOD.
000254                                     (1/97)369 *ZC     23      4  IF    FW1,NOT,=,1
000254 5800D05A                0004AA    (46/289)370+         L     0,FW1
000258 C20D00000001            000001    (46/290)371+         CFI   0,1
00025E A784000D                000278     (47/15)372+         BRC   15-ZC_NE,PG_IF_4_1
000262                                     (1/99)373 *ZC     23      4  PERFORM BAD
000262 C0E0000000C1            0003E4     (50/44)374+         LARL  ZC_R14,PG_BAD
000268 C000000000C9            0003FA     (50/45)375+         LARL  ZC_R0,PG_BAD_END+6
00026E 58F0903C                00003C     (50/46)376+         L     ZC_R15,ZCVT_PERFORM
000272 0D1F                               (50/47)377+         BASR  ZC_R1,ZC_R15
000274                                    (1/101)378 *ZC     23      4  ELSE
000274 A7F4000B                00028A     (52/15)379+         J     PG_IF_4_E
000278                                     (8/41)380+PG_IF_4_1    DS    0H  &TYPE
000278                                    (1/103)381 *ZC     23      4  PERFORM GOOD
000278 C0E0000000A6            0003C4     (50/44)382+         LARL  ZC_R14,PG_GOOD
00027E C000000000B3            0003E4     (50/45)383+         LARL  ZC_R0,PG_GOOD_END+6
000284 58F0903C                00003C     (50/46)384+         L     ZC_R15,ZCVT_PERFORM
000288 0D1F                               (50/47)385+         BASR  ZC_R1,ZC_R15
00028A                                     (8/41)386+PG_IF_4_E    DS    0H  &TYPE
00028A                                    (1/106)387 *            MOVE 999999999999999998 TO GW1
00028A                                    (1/107)388 *ZC     24         MOVE  999999999999999998,TO,GW1
00028A C010000000BF            000408    (38/354)389+          LARL  ZC_R1,=FL8'999999999999999998'
000290 D207D05E1000     0004AE           (38/355)390+          MVC   GW1,0(ZC_R1)
000296                                    (1/109)391 *            ADD  1    TO GW1 ON SIZE ERROR MOVE 1 TO GW1 END-ADD
000296                                    (1/110)392 *ZC     25         ADD   1,TO,GW1,ON,SIZE,ERROR
000296 9801D05E                0004AE    (40/216)393+         LM    ZC_R0,ZC_R1,GW1
00029A C0E0000000BB            000410    (40/217)394+         LARL  ZC_R14,=FL8'1'
0002A0 5A1E0004                          (40/218)395+         A     ZC_R1,4(ZC_R14)
0002A4 E30E00000098                      (40/219)396+         ALC   ZC_R0,0(ZC_R14)
0002AA C0E0000000B7            000418    (40/220)397+         LARL  ZC_R14,=FL8'1000000000000000000'
0002B0 9823E000                          (40/221)398+         LM    ZC_R2,ZC_R3,0(ZC_R14)
0002B4 58F09038                000038    (40/223)399+         L     ZC_R15,ZCVT_OSE64R32
0002B8 0DEF                              (40/224)400+         BASR  ZC_R14,ZC_R15
0002BA A7140006                0002C6   (40/1631)401+         JO    PG_ADD_5_ON_SIZE    ERROR IF OVERFLOW SET
0002BE 9001D05E                0004AE   (40/1632)402+         STM   ZC_R0,ZC_R1,GW1
0002C2 A7F40005                0002CC     (43/14)403+         J     PG_ADD_5             SKIP ON SIZE ERROR
0002C6                                     (8/41)404+PG_ADD_5_ON_SIZE DS 0H  &TYPE
0002C6                                    (1/112)405 *ZC     26      5  MOVE  1,TO,GW1
0002C6 E548D05E0001            0004AE    (38/352)406+          MVGHI GW1,1
0002CC                                    (1/114)407 *ZC     26      5  END_ADD
0002CC                                     (8/41)408+PG_ADD_5     DS    0H  &TYPE
0002CC                                    (1/116)409 *      5     IF GW1 NOT = 999999999999999999
0002CC                                    (1/117)410 *ZC     26      5  IF    GW1,NOT,=,999999999999999999
0002CC 9801D05E                0004AE    (46/301)411+         LM     ZC_R0,ZC_R1,GW1
0002D0 C020000000A8            000420    (46/302)412+         LARL   ZC_R2,=FL8'999999999999999999'
0002D6 98232000                          (46/303)413+         LM     ZC_R2,ZC_R3,0(ZC_R2)
0002DA 58F09018                000018    (46/304)414+         L      ZC_R15,ZCVT_CMP64R32
0002DE 0DEF                              (46/305)415+         BASR   ZC_R14,ZC_R15
0002E0 A784000D                0002FA     (47/15)416+         BRC   15-ZC_NE,PG_IF_5_1
0002E4                                    (1/119)417 *                              PERFORM BAD ELSE PERFORM GOOD.
0002E4                                    (1/120)418 *ZC     27         PERFORM BAD
0002E4 C0E000000080            0003E4     (50/44)419+         LARL  ZC_R14,PG_BAD
0002EA C00000000088            0003FA     (50/45)420+         LARL  ZC_R0,PG_BAD_END+6
0002F0 58F0903C                00003C     (50/46)421+         L     ZC_R15,ZCVT_PERFORM
0002F4 0D1F                               (50/47)422+         BASR  ZC_R1,ZC_R15
0002F6                                    (1/122)423 *ZC     27         ELSE
0002F6 A7F4000B                00030C     (52/15)424+         J     PG_IF_5_E
0002FA                                     (8/41)425+PG_IF_5_1    DS    0H  &TYPE
0002FA                                    (1/124)426 *ZC     27         PERFORM GOOD
0002FA C0E000000065            0003C4     (50/44)427+         LARL  ZC_R14,PG_GOOD
000300 C00000000072            0003E4     (50/45)428+         LARL  ZC_R0,PG_GOOD_END+6
000306 58F0903C                00003C     (50/46)429+         L     ZC_R15,ZCVT_PERFORM
00030A 0D1F                               (50/47)430+         BASR  ZC_R1,ZC_R15
00030C                                     (8/41)431+PG_IF_5_E    DS    0H  &TYPE
00030C                                    (1/127)432 *            ADD  1    TO GW1 ON SIZE ERROR MOVE 1 TO GW1 END-ADD
00030C                                    (1/128)433 *ZC     28         ADD   1,TO,GW1,ON,SIZE,ERROR
00030C 9801D05E                0004AE    (40/216)434+         LM    ZC_R0,ZC_R1,GW1
000310 C0E000000080            000410    (40/217)435+         LARL  ZC_R14,=FL8'1'
000316 5A1E0004                          (40/218)436+         A     ZC_R1,4(ZC_R14)
00031A E30E00000098                      (40/219)437+         ALC   ZC_R0,0(ZC_R14)
000320 C0E00000007C            000418    (40/220)438+         LARL  ZC_R14,=FL8'1000000000000000000'
000326 9823E000                          (40/221)439+         LM    ZC_R2,ZC_R3,0(ZC_R14)
00032A 58F09038                000038    (40/223)440+         L     ZC_R15,ZCVT_OSE64R32
00032E 0DEF                              (40/224)441+         BASR  ZC_R14,ZC_R15
000330 A7140006                00033C   (40/1631)442+         JO    PG_ADD_6_ON_SIZE    ERROR IF OVERFLOW SET
000334 9001D05E                0004AE   (40/1632)443+         STM   ZC_R0,ZC_R1,GW1
000338 A7F40005                000342     (43/14)444+         J     PG_ADD_6             SKIP ON SIZE ERROR
00033C                                     (8/41)445+PG_ADD_6_ON_SIZE DS 0H  &TYPE
00033C                                    (1/130)446 *ZC     29      6  MOVE  1,TO,GW1
00033C E548D05E0001            0004AE    (38/352)447+          MVGHI GW1,1
000342                                    (1/132)448 *ZC     29      6  END_ADD
000342                                     (8/41)449+PG_ADD_6     DS    0H  &TYPE
000342                                    (1/134)450 *      6     IF GW1 NOT = 1    PERFORM BAD ELSE PERFORM GOOD.
000342                                    (1/135)451 *ZC     29      6  IF    GW1,NOT,=,1
000342 9801D05E                0004AE    (46/301)452+         LM     ZC_R0,ZC_R1,GW1
000346 C02000000065            000410    (46/302)453+         LARL   ZC_R2,=FL8'1'
00034C 98232000                          (46/303)454+         LM     ZC_R2,ZC_R3,0(ZC_R2)
000350 58F09018                000018    (46/304)455+         L      ZC_R15,ZCVT_CMP64R32
000354 0DEF                              (46/305)456+         BASR   ZC_R14,ZC_R15
000356 A784000D                000370     (47/15)457+         BRC   15-ZC_NE,PG_IF_6_1
00035A                                    (1/137)458 *ZC     29      6  PERFORM BAD
00035A C0E000000045            0003E4     (50/44)459+         LARL  ZC_R14,PG_BAD
000360 C0000000004D            0003FA     (50/45)460+         LARL  ZC_R0,PG_BAD_END+6
000366 58F0903C                00003C     (50/46)461+         L     ZC_R15,ZCVT_PERFORM
00036A 0D1F                               (50/47)462+         BASR  ZC_R1,ZC_R15
00036C                                    (1/139)463 *ZC     29      6  ELSE
00036C A7F4000B                000382     (52/15)464+         J     PG_IF_6_E
000370                                     (8/41)465+PG_IF_6_1    DS    0H  &TYPE
000370                                    (1/141)466 *ZC     29      6  PERFORM GOOD
000370 C0E00000002A            0003C4     (50/44)467+         LARL  ZC_R14,PG_GOOD
000376 C00000000037            0003E4     (50/45)468+         LARL  ZC_R0,PG_GOOD_END+6
00037C 58F0903C                00003C     (50/46)469+         L     ZC_R15,ZCVT_PERFORM
000380 0D1F                               (50/47)470+         BASR  ZC_R1,ZC_R15
000382                                     (8/41)471+PG_IF_6_E    DS    0H  &TYPE
000382                                    (1/144)472 *            DISPLAY 'TESTTRC3 GOOD TESTS =' GOOD
000382                                    (1/145)473 *ZC     30         DISPLAY 'TESTTRC3 GOOD TESTS =',GOOD
000382 413090F8                0000F8     (55/28)474+         LA    ZC_R3,ZCVT_WORKAREA  ZC_R3=CVT LIST WORK AREA
000386 C00000000057            000434     (55/68)475+         LARL  ZC_R0,=CL22'TESTTRC3 GOOD TESTS =' PAD TO EVEN LEN LIT
00038C 41100015                           (55/69)476+         LA    ZC_R1,21
000390 412000E7                           (55/70)477+         LA    ZC_R2,C'X'
000394 90023000                           (55/71)478+         STM   ZC_R0,ZC_R2,0(ZC_R3)  SET DISPLAY LIST ENTRY
000398 4100D066                0004B6     (55/82)479+         LA    ZC_R0,GOOD
00039C 41100004                           (55/83)480+         LA    ZC_R1,4  RPI 1182 WAS &SYM_LEN(&FIELD_IX)
0003A0 412000C6                           (55/88)481+         LA    ZC_R2,C'F'
0003A4 9002300C                           (55/90)482+         STM   ZC_R0,ZC_R2,12(ZC_R3)  SET DISPLAY LIST ENTRY
0003A8 96803014                           (55/94)483+         OI    24-4(ZC_R3),X'80' SET VL BIT IN LAST WORD OF PARM LIST
0003AC 1813                               (55/95)484+         LR    ZC_R1,ZC_R3
0003AE 58F09070                000070     (55/96)485+         L     ZC_R15,ZCVT_DISPLAY
0003B2 0DEF                               (55/97)486+         BASR  ZC_R14,ZC_R15
0003B4                                    (1/147)487 *            STOP RUN.
0003B4                                    (1/148)488 *ZC     31         STOP  RUN
0003B4 4810D0C4                000514     (57/18)489+         LH    ZC_R1,RETURN_CODE      PASS RETURN CODE IN R1
0003B8 58F09030                000030     (57/23)490+         L     ZC_R15,ZCVT_GOBACK
0003BC 07FF                               (57/24)491+         BR    ZC_R15
0003BE                                    (1/151)492 *        GOOD.
0003BE 58F09040                000040      (8/64)493+PG_MAINLINE_END L ZC_R15,ZCVT_PMCHECK
0003C2 0DEF                                (8/65)494+         BASR  ZC_R14,ZC_R15 CHECK FOR END OF CURRENT PERFORM
0003C4                                     (8/96)495+PG_GOOD  DS    0H
0003C4                                    (1/153)496 *            ADD 1 TO GOOD
0003C4                                    (1/154)497 *ZC     33         ADD   1,TO,GOOD
0003C4 1B00                              (40/175)498+         SR    ZC_R0,ZC_R0
0003C6 5810D066                0004B6    (40/176)499+         L     ZC_R1,GOOD
0003CA C0E000000033            000430    (40/179)500+         LARL  ZC_R14,=F'1000000000'
0003D0 C21900000001            000001    (40/180)501+         AFI   ZC_R1,1
0003D6 5D0E0000                          (40/185)502+         D     ZC_R0,0(ZC_R14)
0003DA 5000D066                0004B6    (40/186)503+         ST    ZC_R0,GOOD
0003DE                                    (1/156)504 *        BAD.
0003DE 58F09040                000040      (8/64)505+PG_GOOD_END L  ZC_R15,ZCVT_PMCHECK
0003E2 0DEF                                (8/65)506+         BASR  ZC_R14,ZC_R15 CHECK FOR END OF CURRENT PERFORM
0003E4                                     (8/96)507+PG_BAD   DS    0H
0003E4                                    (1/158)508 *            MOVE 16 TO RETURN-CODE
0003E4                                    (1/159)509 *ZC     35         MOVE  16,TO,RETURN_CODE
0003E4 E544D0C40010            000514    (38/361)510+          MVHHI RETURN_CODE,16
0003EA                                    (1/161)511 *            STOP RUN.
0003EA                                    (1/162)512 *ZC     36         STOP  RUN
0003EA 4810D0C4                000514     (57/18)513+         LH    ZC_R1,RETURN_CODE      PASS RETURN CODE IN R1
0003EE 58F09030                000030     (57/23)514+         L     ZC_R15,ZCVT_GOBACK
0003F2 07FF                               (57/24)515+         BR    ZC_R15
0003F4 58F09040                000040      (8/64)516+PG_BAD_END L   ZC_R15,ZCVT_PMCHECK
0003F8 0DEF                                (8/65)517+         BASR  ZC_R14,ZC_R15 CHECK FOR END OF CURRENT PERFORM
0003FA                                    (8/108)518+SN_END_PROCEDURE DS 0H SECTION
0003FA                                    (58/18)519+*        PROCEDURE END
0003FA 4810D0C4                000514     (58/24)520+         LH    ZC_R1,RETURN_CODE
0003FE 58F09030                000030     (58/25)521+         L     ZC_R15,ZCVT_GOBACK
000402 0DEF                               (58/26)522+         BASR  ZC_R14,ZC_R15
000404                                    (58/32)523+         LTORG 
000408 0DE0B6B3A763FFFE =FL8'999999999999999998'
000410 0000000000000001 =FL8'1'
000418 0DE0B6B3A7640000 =FL8'1000000000000000000'
000420 0DE0B6B3A763FFFF =FL8'999999999999999999'
000428 00002710         =F'10000'
00042C 3B9AC9FE         =F'999999998'
000430 3B9ACA00         =F'1000000000'
000434 E3C5E2E3E3D9C3F3 =CL22'TESTTRC3 GOOD TESTS ='
00043C 40C7D6D6C440E3C5
000444 E2E3E2407E40
00044A                                     (6/15)524+*    ZCOBOL WORKING STORAGE SECTION DATA ITEMS 
00044A                                     (6/15)525+*    LVL DATA NAME                      ADDR     LEN      DUP TYP PIC        VALUE 
00044A                                     (6/15)527+*    01  ZC_SAVEAREA                    00000000 00000048 1   X   X(72)       
00044A                                     (6/15)529+*    01  ZC_WS_ID                       00000048 00000008 1   X   X(8)       ''WS*WS*WS'' 
00044A                                     (6/15)531+*    01  ZC_WS_START                    00000050 00000004 1   A               
00044A                                     (6/15)533+*    01  ZC_WS_LEN                      00000054 00000004 1   F   9(9)        
00044A                                     (6/15)535+*    01  FILLER                         00000058 00000000 1   X               
00044A                                     (6/15)537+*    01  HW1                            00000058 00000002 1   H   9(4)        
00044A                                     (6/15)539+*    01  FW1                            0000005A 00000004 1   F   9(9)        
00044A                                     (6/15)541+*    01  GW1                            0000005E 00000008 1   G   9(18)       
00044A                                     (6/15)543+*    01  GOOD                           00000066 00000004 1   F   9(9)       0 
00044A                                     (6/15)545+*    01  DEBUG_ITEM                     0000006A 00000058 1   X               
00044A                                     (6/15)547+*    02  DEBUG_LINE                     0000006A 00000006 1   X   X(6)        
00044A                                     (6/15)549+*    02  FILLER                         00000070 00000001 1   X   X          SPACE 
00044A                                     (6/15)551+*    02  DEBUG_NAME                     00000071 0000001E 1   X   X(30)       
00044A                                     (6/15)553+*    02  FILLER                         0000008F 00000001 1   X   X          SPACE 
00044A                                     (6/15)555+*    02  DEBUG_SUB_1                    00000090 00000004 1   Z   9999        
00044A                                     (6/15)557+*    02  FILLER                         00000094 00000001 1   X   X          SPACE 
00044A                                     (6/15)559+*    02  DEBUG_SUB_2                    00000095 00000004 1   Z   9999        
00044A                                     (6/15)561+*    02  FILLER                         00000099 00000001 1   X   X          SPACE 
00044A                                     (6/15)563+*    02  DEBUG_SUB_3                    0000009A 00000004 1   Z   9999        
00044A                                     (6/15)565+*    02  FILLER                         0000009E 00000001 1   X   X          SPACE 
00044A                                     (6/15)567+*    02  DEBUG_CONTENTS                 0000009F 00000023 1   X   X(35)       
00044A                                     (6/15)569+*    01  TRUE                           000000C2 00000001 1   Z   9          1 
00044A                                     (6/15)571+*    01  FALSE                          000000C3 00000001 1   Z   9          0 
00044A                                     (6/15)573+*    01  RETURN_CODE                    000000C4 00000002 1   H   9(4)       0 
000450                                    (60/39)575+ZC_WSLOC LOCTR 
000450                  00000000         (60/131)576+ZC_WS_LOC_1  EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000450                                   (60/336)577+ZC_SAVEAREA DS CL72
000498                  00000048         (60/131)578+ZC_WS_LOC_2  EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000498 E6E25CE6E25CE6E2                  (60/220)579+ZC_WS_ID DC CL8'WS*WS*WS'
0004A0                  00000050         (60/131)580+ZC_WS_LOC_3  EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
0004A0                                   (60/322)581+ZC_WS_START DS AL4
0004A4                  00000054         (60/131)582+ZC_WS_LOC_4  EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
0004A4                                   (60/324)583+ZC_WS_LEN DS FL4
0004A8                  00000058         (60/131)584+ZC_WS_LOC_5  EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
0004A8                                   (60/336)585+         DS  0CL0
0004A8                  00000058         (60/131)586+ZC_WS_LOC_6  EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
0004A8                                   (60/328)587+HW1      DS  HL2
0004AA                  0000005A         (60/131)588+ZC_WS_LOC_7  EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
0004AA                                   (60/324)589+FW1      DS  FL4
0004AE                  0000005E         (60/131)590+ZC_WS_LOC_8  EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
0004AE                                   (60/326)591+GW1      DS  FL8
0004B6                  00000066         (60/131)592+ZC_WS_LOC_9  EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
0004B6 00000000                          (60/188)593+GOOD     DC AL4(0)                  RPI 1065
0004BA                  0000006A         (60/131)594+ZC_WS_LOC_10 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
0004BA                                   (60/336)595+DEBUG_ITEM DS 0CL88
0004BA                  0000006A         (60/131)596+ZC_WS_LOC_11 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
0004BA                                   (60/336)597+DEBUG_LINE DS CL6
0004C0                  00000070         (60/131)598+ZC_WS_LOC_12 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
0004C0 40                                (60/227)599+         DC CL1' '
0004C1                  00000071         (60/131)600+ZC_WS_LOC_13 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
0004C1                                   (60/336)601+DEBUG_NAME DS CL30
0004DF                  0000008F         (60/131)602+ZC_WS_LOC_14 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
0004DF 40                                (60/227)603+         DC CL1' '
0004E0                  00000090         (60/131)604+ZC_WS_LOC_15 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
0004E0                                   (60/338)605+DEBUG_SUB_1 DS ZL4
0004E4                  00000094         (60/131)606+ZC_WS_LOC_16 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
0004E4 40                                (60/227)607+         DC CL1' '
0004E5                  00000095         (60/131)608+ZC_WS_LOC_17 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
0004E5                                   (60/338)609+DEBUG_SUB_2 DS ZL4
0004E9                  00000099         (60/131)610+ZC_WS_LOC_18 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
0004E9 40                                (60/227)611+         DC CL1' '
0004EA                  0000009A         (60/131)612+ZC_WS_LOC_19 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
0004EA                                   (60/338)613+DEBUG_SUB_3 DS ZL4
0004EE                  0000009E         (60/131)614+ZC_WS_LOC_20 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
0004EE 40                                (60/227)615+         DC CL1' '
0004EF                  0000009F         (60/131)616+ZC_WS_LOC_21 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
0004EF                                   (60/336)617+DEBUG_CONTENTS DS CL35
000512                  000000C2         (60/131)618+ZC_WS_LOC_22 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000512 F1                                (60/251)619+TRUE     DC CL1'1'
000513                  000000C3         (60/131)620+ZC_WS_LOC_23 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000513 F0                                (60/251)621+FALSE    DC CL1'0'
000514                  000000C4         (60/131)622+ZC_WS_LOC_24 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000514 0000                              (60/199)623+RETURN_CODE DC AL2(0)                  RPI 1065
000516                                     (6/15)624+*    ZCOBOL LINKAGE SECTION DATA ITEMS 
000516                                     (6/15)625+*    LVL DATA NAME                      ADDR     LEN      DUP TYP PIC        VALUE 
000516                                    (60/39)627+ZC_WSLOC LOCTR 
000516                                    (58/58)628+ZC_WSLOC LOCTR 
000516                  00000000          (58/60)629+ZC_WS_DIFF EQU  *-ZC_WS-198  DIFF BETWEEN ALLOC AND CALC WS
000518                                    (58/65)630+ZC_WS_END DS   0D
000518                                    (61/14)631+         MNOTE *,'ZCOBOL TOTAL SYMBOLS                 = 24'
000518                                    (61/15)632+         MNOTE *,'ZCOBOL TOTAL SYMBOL DUPLICATES       = 0'
000518                                    (61/16)633+         MNOTE *,'ZCOBOL TOTAL SYMBOL MAX DUP CHAIN    = 0'
000518                                    (61/17)634+         MNOTE *,'ZCOBOL TOTAL SYMBOL LEVEL 88         = 0'
000518                                    (61/18)635+         MNOTE *,'ZCOBOL TOTAL SYMBOL SET INDEXES      = 0'
000518                                    (61/19)636+         MNOTE *,'ZCOBOL TOTAL SYMBOL LINKAGE SECTIONS = 0'
000518                                    (61/20)637+         MNOTE *,'ZCOBOL TOTAL PROCEDURE SECTIONS      = 0'
000518                                    (61/21)638+         MNOTE *,'ZCOBOL TOTAL PROCEDURE PARAGRAPHS    = 3'
000518                                    (61/22)639+         MNOTE *,'ZCOBOL TOTAL PROCEDURE PARAGRAPH DUP = 0'
000518                                    (1/166)640          END 

Symbol Table Listing

 SYM=DEBUG_CONTENTS LOC=000004EF LEN=00000023 ESD=0001 TYPE=REL  XREF=617 
 SYM=DEBUG_ITEM LOC=000004BA LEN=00000058 ESD=0001 TYPE=REL  XREF=595 
 SYM=DEBUG_LINE LOC=000004BA LEN=00000006 ESD=0001 TYPE=REL  XREF=597 
 SYM=DEBUG_NAME LOC=000004C1 LEN=0000001E ESD=0001 TYPE=REL  XREF=601 
 SYM=DEBUG_SUB_1 LOC=000004E0 LEN=00000004 ESD=0001 TYPE=REL  XREF=605 
 SYM=DEBUG_SUB_2 LOC=000004E5 LEN=00000004 ESD=0001 TYPE=REL  XREF=609 
 SYM=DEBUG_SUB_3 LOC=000004EA LEN=00000004 ESD=0001 TYPE=REL  XREF=613 
 SYM=FALSE    LOC=00000513 LEN=00000001 ESD=0001 TYPE=REL  XREF=621 
 SYM=FW1      LOC=000004AA LEN=00000004 ESD=0001 TYPE=REL  XREF=589 314 318 325 329 
  334 354 361 365 370 
 SYM=GOOD     LOC=000004B6 LEN=00000004 ESD=0001 TYPE=REL  XREF=593 479 499 503 
 SYM=GW1      LOC=000004AE LEN=00000008 ESD=0001 TYPE=REL  XREF=591 390 393 402 406 
  411 434 443 447 452 
 SYM=HW1      LOC=000004A8 LEN=00000002 ESD=0001 TYPE=REL  XREF=587 238 242 249 253 
  258 278 285 289 294 
 SYM=PFPO_RADIX LOC=00000001 LEN=00000001 ESD=0000 TYPE=ABS  XREF=112 
 SYM=PFPO_RND LOC=00000000 LEN=00000001 ESD=0000 TYPE=ABS  XREF=113 
 SYM=PFPO_TEST LOC=00000080 LEN=00000001 ESD=0000 TYPE=ABS  XREF=111 
 SYM=PFPO_TYPE_DB LOC=00000006 LEN=00000001 ESD=0000 TYPE=ABS  XREF=118 
 SYM=PFPO_TYPE_DD LOC=00000009 LEN=00000001 ESD=0000 TYPE=ABS  XREF=121 
 SYM=PFPO_TYPE_DH LOC=00000001 LEN=00000001 ESD=0000 TYPE=ABS  XREF=115 
 SYM=PFPO_TYPE_EB LOC=00000005 LEN=00000001 ESD=0000 TYPE=ABS  XREF=117 
 SYM=PFPO_TYPE_ED LOC=00000008 LEN=00000001 ESD=0000 TYPE=ABS  XREF=120 
 SYM=PFPO_TYPE_EH LOC=00000000 LEN=00000001 ESD=0000 TYPE=ABS  XREF=114 
 SYM=PFPO_TYPE_LB LOC=00000007 LEN=00000001 ESD=0000 TYPE=ABS  XREF=119 
 SYM=PFPO_TYPE_LD LOC=0000000A LEN=00000001 ESD=0000 TYPE=ABS  XREF=122 
 SYM=PFPO_TYPE_LH LOC=00000002 LEN=00000001 ESD=0000 TYPE=ABS  XREF=116 
 SYM=PG_ADD_1 LOC=00000120 LEN=00000002 ESD=0001 TYPE=REL  XREF=255 250 
 SYM=PG_ADD_1_ON_SIZE LOC=0000011A LEN=00000002 ESD=0001 TYPE=REL  XREF=251 245 248 
 SYM=PG_ADD_2 LOC=00000182 LEN=00000002 ESD=0001 TYPE=REL  XREF=291 286 
 SYM=PG_ADD_2_ON_SIZE LOC=0000017C LEN=00000002 ESD=0001 TYPE=REL  XREF=287 281 284 
 SYM=PG_ADD_3 LOC=000001F0 LEN=00000002 ESD=0001 TYPE=REL  XREF=331 326 
 SYM=PG_ADD_3_ON_SIZE LOC=000001EA LEN=00000002 ESD=0001 TYPE=REL  XREF=327 321 324 
 SYM=PG_ADD_4 LOC=00000254 LEN=00000002 ESD=0001 TYPE=REL  XREF=367 362 
 SYM=PG_ADD_4_ON_SIZE LOC=0000024E LEN=00000002 ESD=0001 TYPE=REL  XREF=363 357 360 
 SYM=PG_ADD_5 LOC=000002CC LEN=00000002 ESD=0001 TYPE=REL  XREF=408 403 
 SYM=PG_ADD_5_ON_SIZE LOC=000002C6 LEN=00000002 ESD=0001 TYPE=REL  XREF=404 401 
 SYM=PG_ADD_6 LOC=00000342 LEN=00000002 ESD=0001 TYPE=REL  XREF=449 444 
 SYM=PG_ADD_6_ON_SIZE LOC=0000033C LEN=00000002 ESD=0001 TYPE=REL  XREF=445 442 
 SYM=PG_BAD   LOC=000003E4 LEN=00000002 ESD=0001 TYPE=REL  XREF=507 262 298 338 374 
  419 459 
 SYM=PG_BAD_END LOC=000003F4 LEN=00000004 ESD=0001 TYPE=REL  XREF=516 263 299 339 
  375 420 460 
 SYM=PG_GOOD  LOC=000003C4 LEN=00000002 ESD=0001 TYPE=REL  XREF=495 270 306 346 382 
  427 467 
 SYM=PG_GOOD_END LOC=000003DE LEN=00000004 ESD=0001 TYPE=REL  XREF=505 271 307 347 
  383 428 468 
 SYM=PG_IF_1_1 LOC=00000142 LEN=00000002 ESD=0001 TYPE=REL  XREF=268 260 
 SYM=PG_IF_1_E LOC=00000154 LEN=00000002 ESD=0001 TYPE=REL  XREF=274 267 
 SYM=PG_IF_2_1 LOC=000001A4 LEN=00000002 ESD=0001 TYPE=REL  XREF=304 296 
 SYM=PG_IF_2_E LOC=000001B6 LEN=00000002 ESD=0001 TYPE=REL  XREF=310 303 
 SYM=PG_IF_3_1 LOC=00000214 LEN=00000002 ESD=0001 TYPE=REL  XREF=344 336 
 SYM=PG_IF_3_E LOC=00000226 LEN=00000002 ESD=0001 TYPE=REL  XREF=350 343 
 SYM=PG_IF_4_1 LOC=00000278 LEN=00000002 ESD=0001 TYPE=REL  XREF=380 372 
 SYM=PG_IF_4_E LOC=0000028A LEN=00000002 ESD=0001 TYPE=REL  XREF=386 379 
 SYM=PG_IF_5_1 LOC=000002FA LEN=00000002 ESD=0001 TYPE=REL  XREF=425 416 
 SYM=PG_IF_5_E LOC=0000030C LEN=00000002 ESD=0001 TYPE=REL  XREF=431 424 
 SYM=PG_IF_6_1 LOC=00000370 LEN=00000002 ESD=0001 TYPE=REL  XREF=465 457 
 SYM=PG_IF_6_E LOC=00000382 LEN=00000002 ESD=0001 TYPE=REL  XREF=471 464 
 SYM=PG_MAINLINE LOC=000000EC LEN=00000002 ESD=0001 TYPE=REL  XREF=235 
 SYM=PG_MAINLINE_END LOC=000003BE LEN=00000004 ESD=0001 TYPE=REL  XREF=493 
 SYM=PVTCICS  LOC=00000020 LEN=00000001 ESD=0004 TYPE=REL  XREF=213 
 SYM=PVTDATE  LOC=00000008 LEN=00000008 ESD=0004 TYPE=REL  XREF=210 
 SYM=PVTEXTND LOC=00000021 LEN=00000001 ESD=0004 TYPE=REL  XREF=214 
 SYM=PVTMAXDL LOC=00000024 LEN=00000002 ESD=0004 TYPE=REL  XREF=217 
 SYM=PVTPGM   LOC=00000000 LEN=00000008 ESD=0004 TYPE=REL  XREF=209 
 SYM=PVTR64   LOC=00000023 LEN=00000001 ESD=0004 TYPE=REL  XREF=216 
 SYM=PVTTIME  LOC=00000010 LEN=00000008 ESD=0004 TYPE=REL  XREF=211 
 SYM=PVTTRUNC LOC=00000022 LEN=00000001 ESD=0004 TYPE=REL  XREF=215 
 SYM=PVTVER   LOC=00000018 LEN=00000008 ESD=0004 TYPE=REL  XREF=212 
 SYM=RETURN_CODE LOC=00000514 LEN=00000002 ESD=0001 TYPE=REL  XREF=623 489 510 513 
  520 
 SYM=SN_END_PROCEDURE LOC=000003FA LEN=00000002 ESD=0001 TYPE=REL  XREF=518 
 SYM=TESTTRC3 LOC=00000000 LEN=00000518 ESD=0001 TYPE=CST  XREF=8 233 
 SYM=TRUE     LOC=00000512 LEN=00000001 ESD=0001 TYPE=REL  XREF=619 
 SYM=WTO#0015_EOT LOC=00000060 LEN=00000001 ESD=0001 TYPE=REL  XREF=35 33 34 
 SYM=WTO#0016_EOT LOC=000000AA LEN=00000001 ESD=0001 TYPE=REL  XREF=52 50 51 
 SYM=ZC390CVT LOC=00000000 LEN=000001F8 ESD=0003 TYPE=DST  XREF=137 41 
 SYM=ZC390PVT LOC=00000000 LEN=00000030 ESD=0004 TYPE=DST  XREF=208 
 SYM=ZCVT_ABORT LOC=00000068 LEN=00000004 ESD=0003 TYPE=REL  XREF=166 
 SYM=ZCVT_ABORT_ACCEPT LOC=0000000B LEN=00000001 ESD=0000 TYPE=ABS  XREF=176 
 SYM=ZCVT_ABORT_ALTER LOC=00000001 LEN=00000001 ESD=0000 TYPE=ABS  XREF=167 
 SYM=ZCVT_ABORT_CALL LOC=00000002 LEN=00000001 ESD=0000 TYPE=ABS  XREF=168 
 SYM=ZCVT_ABORT_CICS LOC=0000000A LEN=00000001 ESD=0000 TYPE=ABS  XREF=175 
 SYM=ZCVT_ABORT_DISPLAY LOC=00000003 LEN=00000001 ESD=0000 TYPE=ABS  XREF=169 
 SYM=ZCVT_ABORT_DIVQ LOC=00000009 LEN=00000001 ESD=0000 TYPE=ABS  XREF=174 
 SYM=ZCVT_ABORT_INT128 LOC=00000008 LEN=00000001 ESD=0000 TYPE=ABS  XREF=173 
 SYM=ZCVT_ABORT_MAXERR LOC=0000000B LEN=00000001 ESD=0000 TYPE=ABS  XREF=177 
 SYM=ZCVT_ABORT_OPEN LOC=00000004 LEN=00000001 ESD=0000 TYPE=ABS  XREF=170 
 SYM=ZCVT_ABORT_STACK LOC=00000006 LEN=00000001 ESD=0000 TYPE=ABS  XREF=171 
 SYM=ZCVT_ABORT_VERSION LOC=00000007 LEN=00000001 ESD=0000 TYPE=ABS  XREF=172 
 SYM=ZCVT_ACCEPT LOC=0000006C LEN=00000004 ESD=0003 TYPE=REL  XREF=178 
 SYM=ZCVT_ACCEPT_CONSOLE LOC=00000002 LEN=00000001 ESD=0000 TYPE=ABS  XREF=180 
 SYM=ZCVT_ACCEPT_DATE LOC=00000004 LEN=00000001 ESD=0000 TYPE=ABS  XREF=182 
 SYM=ZCVT_ACCEPT_DDNAME LOC=00000003 LEN=00000001 ESD=0000 TYPE=ABS  XREF=181 
 SYM=ZCVT_ACCEPT_DEFAULT LOC=00000001 LEN=00000001 ESD=0000 TYPE=ABS  XREF=179 
 SYM=ZCVT_ACCEPT_DOW LOC=00000006 LEN=00000001 ESD=0000 TYPE=ABS  XREF=184 
 SYM=ZCVT_ACCEPT_TIME LOC=00000005 LEN=00000001 ESD=0000 TYPE=ABS  XREF=183 
 SYM=ZCVT_CALL LOC=00000014 LEN=00000004 ESD=0003 TYPE=REL  XREF=142 
 SYM=ZCVT_CMP64R32 LOC=00000018 LEN=00000004 ESD=0003 TYPE=REL  XREF=143 414 455 
 SYM=ZCVT_CONVERTING LOC=00000008 LEN=00000001 ESD=0000 TYPE=ABS  XREF=189 
 SYM=ZCVT_CVTLBTQ LOC=0000001C LEN=00000004 ESD=0003 TYPE=REL  XREF=144 
 SYM=ZCVT_CVTLDTP LOC=00000020 LEN=00000004 ESD=0003 TYPE=REL  XREF=145 
 SYM=ZCVT_CVTQTLB LOC=00000024 LEN=00000004 ESD=0003 TYPE=REL  XREF=146 
 SYM=ZCVT_DISPLAY LOC=00000070 LEN=00000004 ESD=0003 TYPE=REL  XREF=185 485 
 SYM=ZCVT_DIV64R32 LOC=00000028 LEN=00000004 ESD=0003 TYPE=REL  XREF=147 
 SYM=ZCVT_DIVQ128 LOC=0000002C LEN=00000004 ESD=0003 TYPE=REL  XREF=148 
 SYM=ZCVT_END LOC=000001F8 LEN=00000001 ESD=0003 TYPE=REL  XREF=207 44 56 139 
 SYM=ZCVT_GOBACK LOC=00000030 LEN=00000004 ESD=0003 TYPE=REL  XREF=149 490 514 521 
 SYM=ZCVT_HIGH_VALUES LOC=00000090 LEN=00000010 ESD=0003 TYPE=REL  XREF=196 
 SYM=ZCVT_ID  LOC=00000000 LEN=00000004 ESD=0003 TYPE=REL  XREF=138 42 44 56 139 
 SYM=ZCVT_INSPECT LOC=00000074 LEN=00000004 ESD=0003 TYPE=REL  XREF=186 
 SYM=ZCVT_LEN LOC=00000004 LEN=00000004 ESD=0003 TYPE=REL  XREF=139 44 
 SYM=ZCVT_MPYQ128 LOC=00000034 LEN=00000004 ESD=0003 TYPE=REL  XREF=150 
 SYM=ZCVT_NDDX LOC=000000E8 LEN=00000010 ESD=0003 TYPE=REL  XREF=202 
 SYM=ZCVT_OSE64R32 LOC=00000038 LEN=00000004 ESD=0003 TYPE=REL  XREF=151 399 440 
 SYM=ZCVT_PERFORM LOC=0000003C LEN=00000004 ESD=0003 TYPE=REL  XREF=152 264 272 300 
  308 340 348 376 384 421 429 461 469 
 SYM=ZCVT_PMCHECK LOC=00000040 LEN=00000004 ESD=0003 TYPE=REL  XREF=153 493 505 516 
 SYM=ZCVT_PVTMAXDL LOC=00000078 LEN=00000002 ESD=0003 TYPE=REL  XREF=193 
 SYM=ZCVT_PWORK LOC=000000A0 LEN=00000008 ESD=0003 TYPE=REL  XREF=197 
 SYM=ZCVT_PWORK1 LOC=000000A8 LEN=00000010 ESD=0003 TYPE=REL  XREF=198 
 SYM=ZCVT_PWORK2 LOC=000000B8 LEN=00000010 ESD=0003 TYPE=REL  XREF=199 
 SYM=ZCVT_PWORK3 LOC=000000C8 LEN=00000010 ESD=0003 TYPE=REL  XREF=200 
 SYM=ZCVT_PWORK4 LOC=000000D8 LEN=00000010 ESD=0003 TYPE=REL  XREF=201 
 SYM=ZCVT_REPLACING LOC=00000004 LEN=00000001 ESD=0000 TYPE=ABS  XREF=188 
 SYM=ZCVT_ROUNDF LOC=00000044 LEN=00000004 ESD=0003 TYPE=REL  XREF=154 
 SYM=ZCVT_STACKEND LOC=00000050 LEN=00000004 ESD=0003 TYPE=REL  XREF=157 
 SYM=ZCVT_STACKORG LOC=00000048 LEN=00000004 ESD=0003 TYPE=REL  XREF=155 
 SYM=ZCVT_STACKPTR LOC=0000004C LEN=00000004 ESD=0003 TYPE=REL  XREF=156 
 SYM=ZCVT_STOPRUN LOC=00000054 LEN=00000004 ESD=0003 TYPE=REL  XREF=158 
 SYM=ZCVT_TALLYING LOC=00000000 LEN=00000001 ESD=0000 TYPE=ABS  XREF=187 
 SYM=ZCVT_TALPHAX LOC=00000058 LEN=00000004 ESD=0003 TYPE=REL  XREF=159 
 SYM=ZCVT_TNUMP LOC=0000005C LEN=00000004 ESD=0003 TYPE=REL  XREF=160 
 SYM=ZCVT_TNUMX LOC=00000060 LEN=00000004 ESD=0003 TYPE=REL  XREF=161 
 SYM=ZCVT_TNUMZ LOC=00000064 LEN=00000004 ESD=0003 TYPE=REL  XREF=162 
 SYM=ZCVT_VER LOC=00000008 LEN=00000008 ESD=0003 TYPE=REL  XREF=140 
 SYM=ZCVT_WORKAREA LOC=000000F8 LEN=00000100 ESD=0003 TYPE=REL  XREF=203 474 
 SYM=ZCVT_ZC390NUC LOC=00000010 LEN=00000004 ESD=0003 TYPE=REL  XREF=141 46 
 SYM=ZCVT_ZERO LOC=00000080 LEN=00000010 ESD=0003 TYPE=REL  XREF=195 
 SYM=ZC_E     LOC=00000008 LEN=00000001 ESD=0000 TYPE=ABS  XREF=93 
 SYM=ZC_EQ    LOC=00000008 LEN=00000001 ESD=0000 TYPE=ABS  XREF=105 
 SYM=ZC_F0    LOC=00000000 LEN=00000001 ESD=0000 TYPE=ABS  XREF=75 
 SYM=ZC_F10   LOC=0000000A LEN=00000001 ESD=0000 TYPE=ABS  XREF=85 
 SYM=ZC_F1    LOC=00000001 LEN=00000001 ESD=0000 TYPE=ABS  XREF=76 
 SYM=ZC_F11   LOC=0000000B LEN=00000001 ESD=0000 TYPE=ABS  XREF=86 
 SYM=ZC_F12   LOC=0000000C LEN=00000001 ESD=0000 TYPE=ABS  XREF=87 
 SYM=ZC_F13   LOC=0000000D LEN=00000001 ESD=0000 TYPE=ABS  XREF=88 
 SYM=ZC_F14   LOC=0000000E LEN=00000001 ESD=0000 TYPE=ABS  XREF=89 
 SYM=ZC_F15   LOC=0000000F LEN=00000001 ESD=0000 TYPE=ABS  XREF=90 
 SYM=ZC_F2    LOC=00000002 LEN=00000001 ESD=0000 TYPE=ABS  XREF=77 
 SYM=ZC_F3    LOC=00000003 LEN=00000001 ESD=0000 TYPE=ABS  XREF=78 
 SYM=ZC_F4    LOC=00000004 LEN=00000001 ESD=0000 TYPE=ABS  XREF=79 
 SYM=ZC_F5    LOC=00000005 LEN=00000001 ESD=0000 TYPE=ABS  XREF=80 
 SYM=ZC_F6    LOC=00000006 LEN=00000001 ESD=0000 TYPE=ABS  XREF=81 
 SYM=ZC_F7    LOC=00000007 LEN=00000001 ESD=0000 TYPE=ABS  XREF=82 
 SYM=ZC_F8    LOC=00000008 LEN=00000001 ESD=0000 TYPE=ABS  XREF=83 
 SYM=ZC_F9    LOC=00000009 LEN=00000001 ESD=0000 TYPE=ABS  XREF=84 
 SYM=ZC_GE    LOC=0000000B LEN=00000001 ESD=0000 TYPE=ABS  XREF=108 
 SYM=ZC_GT    LOC=00000002 LEN=00000001 ESD=0000 TYPE=ABS  XREF=106 
 SYM=ZC_H     LOC=00000002 LEN=00000001 ESD=0000 TYPE=ABS  XREF=91 
 SYM=ZC_L     LOC=00000004 LEN=00000001 ESD=0000 TYPE=ABS  XREF=92 
 SYM=ZC_LE    LOC=0000000D LEN=00000001 ESD=0000 TYPE=ABS  XREF=109 
 SYM=ZC_LOAD  LOC=00000038 LEN=00000002 ESD=0001 TYPE=REL  XREF=27 12 
 SYM=ZC_LOAD_OK LOC=00000068 LEN=00000002 ESD=0001 TYPE=REL  XREF=39 32 
 SYM=ZC_LT    LOC=00000004 LEN=00000001 ESD=0000 TYPE=ABS  XREF=107 
 SYM=ZC_M     LOC=00000004 LEN=00000001 ESD=0000 TYPE=ABS  XREF=99 
 SYM=ZC_NE    LOC=00000007 LEN=00000001 ESD=0000 TYPE=ABS  XREF=96 260 296 336 372 
  416 457 
 SYM=ZC_NH    LOC=0000000D LEN=00000001 ESD=0000 TYPE=ABS  XREF=94 
 SYM=ZC_NL    LOC=0000000B LEN=00000001 ESD=0000 TYPE=ABS  XREF=95 
 SYM=ZC_NM    LOC=0000000B LEN=00000001 ESD=0000 TYPE=ABS  XREF=102 
 SYM=ZC_NO    LOC=0000000E LEN=00000001 ESD=0000 TYPE=ABS  XREF=104 
 SYM=ZC_NP    LOC=0000000D LEN=00000001 ESD=0000 TYPE=ABS  XREF=101 
 SYM=ZC_NZ    LOC=00000007 LEN=00000001 ESD=0000 TYPE=ABS  XREF=103 
 SYM=ZC_O     LOC=00000001 LEN=00000001 ESD=0000 TYPE=ABS  XREF=97 
 SYM=ZC_P     LOC=00000002 LEN=00000001 ESD=0000 TYPE=ABS  XREF=98 
 SYM=ZC_R0    LOC=00000000 LEN=00000001 ESD=0000 TYPE=ABS  XREF=59 40 131 132 133 
  241 263 271 277 299 307 317 339 347 353 375 383 393 396 402 411 420 428 434 437 
  443 452 460 468 475 478 479 482 498 502 503 
 SYM=ZC_R10   LOC=0000000A LEN=00000001 ESD=0000 TYPE=ABS  XREF=69 
 SYM=ZC_R1    LOC=00000001 LEN=00000001 ESD=0000 TYPE=ABS  XREF=60 125 126 127 128 
  242 244 246 249 265 273 278 280 282 285 301 309 313 314 318 320 322 325 341 349 
  354 356 358 361 377 385 389 390 393 395 402 411 422 430 434 436 443 452 462 470 
  476 480 484 489 499 501 513 520 
 SYM=ZC_R11   LOC=0000000B LEN=00000001 ESD=0000 TYPE=ABS  XREF=70 
 SYM=ZC_R12   LOC=0000000C LEN=00000001 ESD=0000 TYPE=ABS  XREF=71 
 SYM=ZC_R13   LOC=0000000D LEN=00000001 ESD=0000 TYPE=ABS  XREF=72 124 126 127 128 
  129 130 132 
 SYM=ZC_R14   LOC=0000000E LEN=00000001 ESD=0000 TYPE=ABS  XREF=73 47 243 247 262 
  270 279 283 298 306 319 323 338 346 355 359 374 382 394 395 396 397 398 400 415 
  419 427 435 436 437 438 439 441 456 459 467 486 494 500 502 506 517 522 
 SYM=ZC_R15   LOC=0000000F LEN=00000001 ESD=0000 TYPE=ABS  XREF=74 9 31 37 46 47 
  54 134 246 247 264 265 272 273 282 283 300 301 308 309 322 323 340 341 348 349 
  358 359 376 377 384 385 399 400 414 415 421 422 429 430 440 441 455 456 461 462 
  469 470 485 486 490 491 493 494 505 506 514 515 516 517 521 522 
 SYM=ZC_R2    LOC=00000002 LEN=00000001 ESD=0000 TYPE=ABS  XREF=61 124 398 412 413 
  439 453 454 477 478 481 482 
 SYM=ZC_R3    LOC=00000003 LEN=00000001 ESD=0000 TYPE=ABS  XREF=62 398 413 439 454 
  474 478 482 483 484 
 SYM=ZC_R4    LOC=00000004 LEN=00000001 ESD=0000 TYPE=ABS  XREF=63 
 SYM=ZC_R5    LOC=00000005 LEN=00000001 ESD=0000 TYPE=ABS  XREF=64 
 SYM=ZC_R6    LOC=00000006 LEN=00000001 ESD=0000 TYPE=ABS  XREF=65 
 SYM=ZC_R7    LOC=00000007 LEN=00000001 ESD=0000 TYPE=ABS  XREF=66 
 SYM=ZC_R8    LOC=00000008 LEN=00000001 ESD=0000 TYPE=ABS  XREF=67 12 13 
 SYM=ZC_R9    LOC=00000009 LEN=00000001 ESD=0000 TYPE=ABS  XREF=68 40 41 
 SYM=ZC_SAVEAREA LOC=00000450 LEN=00000048 ESD=0001 TYPE=REL  XREF=577 
 SYM=ZC_VER_ERR LOC=00000088 LEN=00000002 ESD=0001 TYPE=REL  XREF=49 43 45 
 SYM=ZC_VER_OK LOC=000000C8 LEN=00000002 ESD=0001 TYPE=REL  XREF=123 48 
 SYM=ZC_WS    LOC=00000450 LEN=00000008 ESD=0001 TYPE=REL  XREF=136 125 129 576 578 
  580 582 584 586 588 590 592 594 596 598 600 602 604 606 608 610 612 614 616 618 
  620 622 629 
 SYM=ZC_WSLOC LOC=0000044A LEN=000000CE ESD=0001 TYPE=CST  XREF=135 219 575 627 628 
 SYM=ZC_WS_DIFF LOC=00000000 LEN=00000001 ESD=0000 TYPE=ABS  XREF=629 
 SYM=ZC_WS_END LOC=00000518 LEN=00000008 ESD=0001 TYPE=REL  XREF=630 131 
 SYM=ZC_WS_ID LOC=00000498 LEN=00000008 ESD=0001 TYPE=REL  XREF=579 
 SYM=ZC_WS_LEN LOC=000004A4 LEN=00000004 ESD=0001 TYPE=REL  XREF=583 133 
 SYM=ZC_WS_LOC_10 LOC=0000006A LEN=00000001 ESD=0000 TYPE=ABS  XREF=594 
 SYM=ZC_WS_LOC_1 LOC=00000000 LEN=00000001 ESD=0000 TYPE=ABS  XREF=576 
 SYM=ZC_WS_LOC_11 LOC=0000006A LEN=00000001 ESD=0000 TYPE=ABS  XREF=596 
 SYM=ZC_WS_LOC_12 LOC=00000070 LEN=00000001 ESD=0000 TYPE=ABS  XREF=598 
 SYM=ZC_WS_LOC_13 LOC=00000071 LEN=00000001 ESD=0000 TYPE=ABS  XREF=600 
 SYM=ZC_WS_LOC_14 LOC=0000008F LEN=00000001 ESD=0000 TYPE=ABS  XREF=602 
 SYM=ZC_WS_LOC_15 LOC=00000090 LEN=00000001 ESD=0000 TYPE=ABS  XREF=604 
 SYM=ZC_WS_LOC_16 LOC=00000094 LEN=00000001 ESD=0000 TYPE=ABS  XREF=606 
 SYM=ZC_WS_LOC_17 LOC=00000095 LEN=00000001 ESD=0000 TYPE=ABS  XREF=608 
 SYM=ZC_WS_LOC_18 LOC=00000099 LEN=00000001 ESD=0000 TYPE=ABS  XREF=610 
 SYM=ZC_WS_LOC_19 LOC=0000009A LEN=00000001 ESD=0000 TYPE=ABS  XREF=612 
 SYM=ZC_WS_LOC_20 LOC=0000009E LEN=00000001 ESD=0000 TYPE=ABS  XREF=614 
 SYM=ZC_WS_LOC_2 LOC=00000048 LEN=00000001 ESD=0000 TYPE=ABS  XREF=578 
 SYM=ZC_WS_LOC_21 LOC=0000009F LEN=00000001 ESD=0000 TYPE=ABS  XREF=616 
 SYM=ZC_WS_LOC_22 LOC=000000C2 LEN=00000001 ESD=0000 TYPE=ABS  XREF=618 
 SYM=ZC_WS_LOC_23 LOC=000000C3 LEN=00000001 ESD=0000 TYPE=ABS  XREF=620 
 SYM=ZC_WS_LOC_24 LOC=000000C4 LEN=00000001 ESD=0000 TYPE=ABS  XREF=622 
 SYM=ZC_WS_LOC_3 LOC=00000050 LEN=00000001 ESD=0000 TYPE=ABS  XREF=580 
 SYM=ZC_WS_LOC_4 LOC=00000054 LEN=00000001 ESD=0000 TYPE=ABS  XREF=582 
 SYM=ZC_WS_LOC_5 LOC=00000058 LEN=00000001 ESD=0000 TYPE=ABS  XREF=584 
 SYM=ZC_WS_LOC_6 LOC=00000058 LEN=00000001 ESD=0000 TYPE=ABS  XREF=586 
 SYM=ZC_WS_LOC_7 LOC=0000005A LEN=00000001 ESD=0000 TYPE=ABS  XREF=588 
 SYM=ZC_WS_LOC_8 LOC=0000005E LEN=00000001 ESD=0000 TYPE=ABS  XREF=590 
 SYM=ZC_WS_LOC_9 LOC=00000066 LEN=00000001 ESD=0000 TYPE=ABS  XREF=592 
 SYM=ZC_WS_START LOC=000004A0 LEN=00000004 ESD=0001 TYPE=REL  XREF=581 130 
 SYM=ZC_Z     LOC=00000008 LEN=00000001 ESD=0000 TYPE=ABS  XREF=100 

Literal Table Listing

 LIT=A(ZCVT_END-ZCVT_ID) LOC=000000C4 LEN=00000004 ESD=0001 POOL=0001 XREF=44 
 LIT=C'ZCVT'  LOC=000000C0 LEN=00000004 ESD=0001 POOL=0001 XREF=42 
 LIT=CL22'TESTTRC3 GOOD TESTS =' LOC=00000434 LEN=00000016 ESD=0001 POOL=0002 XREF=475 
 LIT=CL8'ZC390LIB' LOC=000000B8 LEN=00000008 ESD=0001 POOL=0001 XREF=28 
 LIT=F'10000' LOC=00000428 LEN=00000004 ESD=0001 POOL=0002 XREF=243 279 
 LIT=F'1000000000' LOC=00000430 LEN=00000004 ESD=0001 POOL=0002 XREF=319 355 500 
 LIT=F'999999998' LOC=0000042C LEN=00000004 ESD=0001 POOL=0002 XREF=313 
 LIT=FL8'1'   LOC=00000410 LEN=00000008 ESD=0001 POOL=0002 XREF=394 435 453 
 LIT=FL8'1000000000000000000' LOC=00000418 LEN=00000008 ESD=0001 POOL=0002 XREF=397 
  438 
 LIT=FL8'999999999999999998' LOC=00000408 LEN=00000008 ESD=0001 POOL=0002 XREF=389 
 LIT=FL8'999999999999999999' LOC=00000420 LEN=00000008 ESD=0001 POOL=0002 XREF=412 
 
AZ390I total mnote warnings = 0
AZ390I total mnote errors   = 0
AZ390I max   mnote level    = 0
AZ390I total mz390 errors   = 0
AZ390I total az390 errors   = 0
TESTTRC3  MZ390 ENDED   RC= 0 MEM(MB)= MB IO=24984
