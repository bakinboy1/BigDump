TESTMOV1  MZ390 START
AZ390I Copyright 2011 Automated Software Tools Corporation
AZ390I z390 is licensed under GNU General Public License
AZ390I program = zcobol\test\TESTMOV1
AZ390I options = W:\work\z390\z390.OPT=(time(60)) @zcobol\z390\ZC390CLG=(
  sysmac(+zcobol+zcobol\z390+mac+cics) syscpy(+zcobol+zcobol\z390+mac+cics) 
  BAL NOLISTCALL MAXGBL(1500000)) notiming stats
External Symbol Definitions
 ESD=0001 LOC=00000000 LEN=00000CB8 TYPE=CST NAME=TESTMOV1
Assembler Listing
000000                                       (6/15)1+*    ZCOBOL PGM='zcobol\test\TESTMOV1' VER=V1.5.06 MM/DD/YY  
000000                                       (6/15)2+*    ZCOBOL OPTIONS=() 
000000                                        (1/4)3          COPY  TESTMOV1_ZC_LABELS.CPY
000000                                        (1/5)4 *        IDENTIFICATION DIVISION.
000000                                        (1/7)5 *        PROGRAM-ID.    TESTMOV1.
000000                                      (11/34)6+         PRINT NOLIST,NOGEN,NOLISTUSE    SET LIST OPTION FOR INTERNAL CODE
000000                                      (11/59)8+TESTMOV1 CSECT ,                CSECT WITH PROCEDURE CODE AND WS
000000                                      (11/60)9+         USING *,ZC_R15
LISTUSE TESTMOV1 ESD=0001 LOC=00000000 LEN=01000 REG=F OFF=00000 LAB=
000000 90ECD00C                            (16/51)10+         STM   14,12,12+4*(14-14)(13)
000004                                     (11/93)11+         CNOP  4,8             FORCE ZC390PVT TO DOUBLEWORD BOUNDARY
000004 A785001A                000038      (11/94)12+         BRAS  ZC_R8,ZC_LOAD
000008                                     (11/95)13+         USING *,ZC_R8            BASE FOR LOAD AND CICS V5 USE
LISTUSE TESTMOV1 ESD=0001 LOC=00000000 LEN=01000 REG=F OFF=00000 LAB=
LISTUSE TESTMOV1 ESD=0001 LOC=00000008 LEN=01000 REG=8 OFF=00000 LAB=
000008                                     (11/96)14+*
000008                                     (11/97)15+*  THESE FIELDS MUST BE KEPT IN SYNC WITH zcobol\ZC390PVT.CPY
000008                                     (11/98)16+*
000008 E3C5E2E3D4D6E5F1                    (11/99)17+         DC    CL8'TESTMOV1'    PVTPGM   ZCOBOL PGM NAME
000010 F0F161F0F261F0F5                   (11/100)18+         DC    CL8'01/02/05'   PVTDATE  ZCOBOL COMPILE DATE
000018 F2F24BF3F3404040                   (11/101)19+         DC    CL8'22.33'   PVTTIME  ZCOBOL COMPILE TIME
000020 E5F14BF54BF0F640                   (11/102)20+         DC    CL8'V1.5.06'    PVTVER   ZCOBOL COMPILER VERSION
000028 F0                                 (11/103)21+         DC    C'0'     PVTCICS  ZCOBOL EXEC CICS PGM
000029 F1                                 (11/104)22+         DC    C'1'   PVTEXTND ZCOBOL EXTENDED PRECISION
00002A F0                                 (11/105)23+         DC    C'0'    PVTTRUNC ZCOBOL TRUNCATE TO PICTURE
00002B F1                                 (11/106)24+         DC    C'1'      PVTR64   ZCOBOL USE 64 BIT REGISTERS
00002C 0050                               (11/107)25+         DC    H'80' MAX DISPLAY LINE LEN  RPI 1118
00002E                                    (11/108)26+         DS    XL10            RESERVED
000038                                    (11/109)27+ZC_LOAD  DS    0H
000038 410080B0                0000B8      (17/74)28+         LA    0,=CL8'ZC390LIB'
00003C 1BFF                                (17/95)29+         SR    15,15 USE DEFAULT SYS390 SEARCH
00003E 0A08                               (17/125)30+         SVC   8 LOAD R0=A(NAME) R15=DDNAME/DSNAME ADDR OR 0
000040 12FF                               (11/111)31+         LTR   ZC_R15,ZC_R15
000042 A7840013                000068     (11/112)32+         JZ    ZC_LOAD_OK
000046 A715000D                000060      (18/49)33+         BRAS  1,*+(WTO#0017_EOT-*+1)/2*2
00004A 00160000E9C3F3F9                    (18/50)34+         DC    AL2(WTO#0017_EOT-*,0),C'ZC390LIB NOT FOUND'
000060                  00000060           (18/51)35+WTO#0017_EOT     EQU *
000060 0A23                                (18/52)36+         SVC   35
000062 41F00010                           (11/114)37+         LA  ZC_R15,16
000066 0A03                               (11/115)38+         SVC 3      EXIT TO CALLER WITH RC=16
000068                                    (11/116)39+ZC_LOAD_OK DS  0H
000068 1890                               (11/117)40+         LR    ZC_R9,ZC_R0
00006A                                    (11/118)41+         USING ZC390CVT,ZC_R9    R9=CVT
LISTUSE TESTMOV1 ESD=0001 LOC=00000000 LEN=01000 REG=F OFF=00000 LAB=
LISTUSE TESTMOV1 ESD=0001 LOC=00000008 LEN=01000 REG=8 OFF=00000 LAB=
LISTUSE ZC390CVT ESD=0003 LOC=00000000 LEN=01000 REG=9 OFF=00000 LAB=
00006A D503900080B8     000000 0000C0     (11/119)42+         CLC   ZCVT_ID,=C'ZCVT'              CHECK ZCVT ID AND LENGTH
000070 A774000C                000088     (11/120)43+         JNE   ZC_VER_ERR                    IN ZC390LIB.390 MATCH
000074 D503900480BC     000004 0000C4     (11/121)44+         CLC   ZCVT_LEN,=A(ZCVT_END-ZCVT_ID) ZCOBOL PGM COMPILED ID/LEN
00007A 47708080                000088     (11/122)45+         BNE   ZC_VER_ERR
00007E 58F09010                000010     (11/123)46+         L     ZC_R15,ZCVT_ZC390NUC
000082 0DEF                               (11/124)47+         BASR  ZC_R14,ZC_R15 CALL ZC390NUC TO VERIFY VER, OPTIONS
000084 A7F40022                0000C8     (11/125)48+         J     ZC_VER_OK
000088                                    (11/126)49+ZC_VER_ERR DS 0H
000088 A7150011                0000AA      (18/49)50+         BRAS  1,*+(WTO#0018_EOT-*+1)/2*2
00008C 001E0000E9C3F3F9                    (18/50)51+         DC    AL2(WTO#0018_EOT-*,0),C'ZC390LIB ZCVT VERIFY ERROR'
0000AA                  000000AA           (18/51)52+WTO#0018_EOT     EQU *
0000AA 0A23                                (18/52)53+         SVC   35
0000AC 41F00010                           (11/128)54+         LA  ZC_R15,16
0000B0 0A03                               (11/129)55+         SVC 3      EXIT TO CALLER WITH RC=16
0000B2                                    (11/130)56+         LTORG 
0000B8 E9C3F3F9F0D3C9C2 =CL8'ZC390LIB'
0000C0 E9C3E5E3         =C'ZCVT'
0000C4 000001F8         =A(ZCVT_END-ZCVT_ID)
0000C8                  00000080          (15/10)111=PFPO_TEST    EQU  X'80' PFPO TEST IF VALID OPCODE (NOT SUPPORTED YET)
0000C8                  00000001          (15/11)112=PFPO_RADIX   EQU  1 PFPO OPCODE - CONVERT FROM ONE RADIX TO ANOTHER
0000C8                  00000000          (15/12)113=PFPO_RND     EQU  0 PFOP ROUNDING OPTION (ONLY DEFAULT ALLOWED)
0000C8                  00000000          (15/13)114=PFPO_TYPE_EH EQU  0 EH HFP SHORT     32 BITS 7  DIGITS
0000C8                  00000001          (15/14)115=PFPO_TYPE_DH EQU  1 ED HFP LONG      64 BITS 15 DIGITS
0000C8                  00000002          (15/15)116=PFPO_TYPE_LH EQU  2 EL HFP EXTENDED 128 BITS 30 DIGITS
0000C8                  00000005          (15/16)117=PFPO_TYPE_EB EQU  5 EB BFP SHORT     32 BITS 7  DIGITS
0000C8                  00000006          (15/17)118=PFPO_TYPE_DB EQU  6 DB BFP LONG      64 BITS 16 DIGITS
0000C8                  00000007          (15/18)119=PFPO_TYPE_LB EQU  7 LB BFP EXTENDED 128 BITS 34 DIGITS
0000C8                  00000008          (15/19)120=PFPO_TYPE_ED EQU  8 ED DFP SHORT     32 BITS 7  DIGITS
0000C8                  00000009          (15/20)121=PFPO_TYPE_DD EQU  9 DD DFP LONG      64 BITS 16 DIGITS
0000C8                  0000000A          (15/21)122=PFPO_TYPE_LD EQU 10 LD DFP EXTENDED 128 BITS 34 DIGITS
0000C8                                   (11/133)123+ZC_VER_OK DS   0H
0000C8 582D0018                           (11/63)124+         L     ZC_R2,24(ZC_R13) SET ZC_R2=PARMLIST ADDRESS AFTER LOAD
0000CC C01000000576            000BB8     (11/64)125+         LARL  ZC_R1,ZC_WS     ZC_R2=A(WORKING STORAGE WITH SAVEAREA)
0000D2 501D0008                           (11/65)126+         ST    ZC_R1,8(ZC_R13) FORWARD  SAVE CHAIN
0000D6 50D10004                           (11/66)127+         ST    ZC_R13,4(ZC_R1) BACKWARD SAVE CHAIN
0000DA 18D1                               (11/67)128+         LR    ZC_R13,ZC_R1    LINK SAVE AREA IN ZC390CVT
0000DC                                    (11/68)129+         USING ZC_WS,ZC_R13    BASE FOR ZCOBOL WS (SEE GEN_SYM_RX.MAC)
LISTUSE TESTMOV1 ESD=0001 LOC=00000000 LEN=01000 REG=F OFF=00000 LAB=
LISTUSE TESTMOV1 ESD=0001 LOC=00000008 LEN=01000 REG=8 OFF=00000 LAB=
LISTUSE ZC390CVT ESD=0003 LOC=00000000 LEN=01000 REG=9 OFF=00000 LAB=
LISTUSE TESTMOV1 ESD=0001 LOC=00000BB8 LEN=01000 REG=D OFF=00000 LAB=
0000DC 50D0D050                000C08     (11/69)130+         ST    ZC_R13,ZC_WS_START  SAVE ADDR WS IN WS PREFIX
0000E0 C000000005EC            000CB8     (11/70)131+         LARL  ZC_R0,ZC_WS_END
0000E6 1B0D                               (11/71)132+         SR    ZC_R0,ZC_R13
0000E8 5000D054                000C0C     (11/72)133+         ST    ZC_R0,ZC_WS_LEN     SAVE LENGTH OF WS IN WS PREFIX
0000EC                                    (11/73)134+         DROP  ZC_R15              RPI 1042
LISTUSE TESTMOV1 ESD=0001 LOC=00000BB8 LEN=01000 REG=D OFF=00000 LAB=
LISTUSE TESTMOV1 ESD=0001 LOC=00000008 LEN=01000 REG=8 OFF=00000 LAB=
LISTUSE ZC390CVT ESD=0003 LOC=00000000 LEN=01000 REG=9 OFF=00000 LAB=
000BB4                                    (11/74)135+ZC_WSLOC LOCTR 
000BB8                                    (11/75)136+ZC_WS    DS    0D           START WORKING STORAGE
000000                                    (11/81)137+ZC390CVT DSECT 
000000                                    (12/31)138=ZCVT_ID            DC    C'ZCVT'             ZCVT ID  VERIFIED BY ZCOB
000004                                    (12/32)139=ZCVT_LEN           DC    A(ZCVT_END-ZCVT_ID) ZCVT LEN VERIFIED BY ZCOB
000008                                    (12/33)140=ZCVT_VER           DC    CL8'V1.5.06'    ZCVT VER VERIFIED BY ZC390NUC
000010                                    (12/34)141=ZCVT_ZC390NUC  DC V(ZC390NUC)      MODULE  SYSTEM ROUTINE MODULE INIT
000014                                    (12/35)142=ZCVT_CALL           DC V(CALL)       ENTRY R0=A(PGM),R1=A(PARMLIST)
000018                                    (12/36)143=ZCVT_CMP64R32       DC V(CMP64R32)   ENTRY COMPARE R0-1=FLD1 R2-3=FLD2
00001C                                    (12/37)144=ZCVT_CVTLBTQ        DC V(CVTLBTQ)    ENTRY CVT LB IN F4-6 TO Q IN R0-1
000020                                    (12/38)145=ZCVT_CVTLDTP        DC V(CVTLDTP)    ENTRY CVT LD IN F0-2 TO PL31 R0-1
000024                                    (12/39)146=ZCVT_CVTQTLB        DC V(CVTQTLB)    ENTRY CVT Q IN R0-1 TO LB IN F4-6
000028                                    (12/40)147=ZCVT_DIV64R32       DC V(DIV64R32)   ENTRY DIVIDE R0-1=N64, R2-3=MAX64
00002C                                    (12/41)148=ZCVT_DIVQ128        DC V(DIVQ128)    ENTRY DIVIDE Q128 R0-R1 BY R2-R3
000030                                    (12/42)149=ZCVT_GOBACK         DC V(GOBACK)     ENTRY R1=RC
000034                                    (12/43)150=ZCVT_MPYQ128        DC V(MPYQ128)    ENTRY MULTIPLY Q128 R0-R1 BY R2-R3
000038                                    (12/44)151=ZCVT_OSE64R32       DC V(OSE64R32)   ENTRY ON SIZE ERR R0-1=N, R2-3=MAX
00003C                                    (12/45)152=ZCVT_PERFORM        DC V(PERFORM)    ENTRY R14=PGTAR,R0=PGEXT,R1=PMRET
000040                                    (12/46)153=ZCVT_PMCHECK        DC V(PMCHECK)    ENTRY R14=RETURN TO NEXT INSTR.
000044                                    (12/47)154=ZCVT_ROUNDF         DC V(ROUNDF)     ENTRY R0=REM,R1=QUO,R2=DIVISOR
000048                                    (12/48)155=ZCVT_STACKORG       DC V(STACKORG)   ENTRY PERFORM STACK ORIGIN
00004C                                    (12/49)156=ZCVT_STACKPTR       DC V(STACKPTR)   ENTRY CUR ENTRY A(PG_END+4,RET)
000050                                    (12/50)157=ZCVT_STACKEND       DC V(STACKEND)   ENTRY PERFORM STACK END
000054                                    (12/51)158=ZCVT_STOPRUN        DC V(STOPRUN)    ENTRY R1=RC
000058                                    (12/52)159=ZCVT_TALPHAX        DC V(TALPHAX)    ENTRY TEST ALPHABETIC X
00005C                                    (12/53)160=ZCVT_TNUMP          DC V(TNUMP)      ENTRY TEST NUMERIC P
000060                                    (12/54)161=ZCVT_TNUMX          DC V(TNUMX)      ENTRY TEST NUMERIC X
000064                                    (12/55)162=ZCVT_TNUMZ          DC V(TNUMZ)      ENTRY TEST NUMERIC Z
000068                                    (12/56)163=*
000068                                    (12/57)164=* ADDITIONAL SEPARATE MODULES LINKED WITH Z390NUC IN ZC390LIB.390
000068                                    (12/58)165=*
000068                                    (12/59)166=ZCVT_ABORT     DC V(ABORT)         MODULE  R1=ABORT ERROR MSG #
00006C                  00000001          (12/60)167=ZCVT_ABORT_ALTER   EQU    1 ABORT ALTER DUE TO BRC NOT FOUND AT TARGET
00006C                  00000002          (12/61)168=ZCVT_ABORT_CALL    EQU    2 ABORT DYNAMIC CALL - PGM NOT FOUND
00006C                  00000003          (12/62)169=ZCVT_ABORT_DISPLAY EQU    3 ABORT DISPLAY DUE TO BUFFER EXCEEDED
00006C                  00000004          (12/63)170=ZCVT_ABORT_OPEN    EQU    4 ABORT OPEN  INVALID DCB
00006C                  00000006          (12/64)171=ZCVT_ABORT_STACK   EQU    6 ABORT PEROFRM STACK OVERFLOW
00006C                  00000007          (12/65)172=ZCVT_ABORT_VERSION EQU    7 ABORT ZC390NUC INIT ZCOBOL VERSION ERROR
00006C                  00000008          (12/66)173=ZCVT_ABORT_INT128  EQU    8 ABORT INTEGER 128 CONVERSION OVERFLO
00006C                  00000009          (12/67)174=ZCVT_ABORT_DIVQ    EQU    9 ABORT DIVIDE Q IF DIVISOR 0 OR > 2**63
00006C                  0000000A          (12/68)175=ZCVT_ABORT_CICS    EQU   10 ABORT THIS PGM REQUIRES EXEC CICS TRANS MGR
00006C                  0000000B          (12/69)176=ZCVT_ABORT_ACCEPT  EQU   11 ABORT ACCEPT EOF
00006C                  0000000B          (12/70)177=ZCVT_ABORT_MAXERR  EQU   11 ABORT MAX ERROR CODE
00006C                                    (12/71)178=ZCVT_ACCEPT    DC V(ACCEPT)        MODULE  R1=A(TYPE,FLD_ADD,FLD_LEN)
000070                  00000001          (12/72)179=ZCVT_ACCEPT_DEFAULT EQU   1 INPUT DEFAULT DDNAME=SYSIN
000070                  00000002          (12/73)180=ZCVT_ACCEPT_CONSOLE EQU   2 INPUT VIA WTOR FROM CONSOLE
000070                  00000003          (12/74)181=ZCVT_ACCEPT_DDNAME  EQU   3 INPUT FROM DDNAME WITH DDNAME ADDR IN R3
000070                  00000004          (12/75)182=ZCVT_ACCEPT_DATE    EQU   4 RETURN DAY OF WEEK PIC 9(8) MMDDYYYY
000070                  00000005          (12/76)183=ZCVT_ACCEPT_TIME    EQU   5 RETURN DAY OF WEEK PIC 9(8) HHMMSSTH
000070                  00000006          (12/77)184=ZCVT_ACCEPT_DOW     EQU   6 RETURN DAY OF WEEK PIC 9 1-7
000070                                    (12/78)185=ZCVT_DISPLAY   DC V(DISPLAY)       MODULE  R1=A(ADDR,LEN,TYPE)
000074                                    (12/79)186=ZCVT_INSPECT   DC V(INSPECT)       MODULE  R0=TYPE,R1=PARMLIST
000078                  00000000          (12/80)187=ZCVT_TALLYING      EQU   0 INSPECT TALLYING
000078                  00000004          (12/81)188=ZCVT_REPLACING     EQU   4 INSPECT REPLACING
000078                  00000008          (12/82)189=ZCVT_CONVERTING    EQU   8 INSPECT CONVERTING
000078                                    (12/83)190=*
000078                                    (12/84)191=* SHARED DATA AREAS
000078                                    (12/85)192=*
000078                                    (12/86)193=ZCVT_PVTMAXDL  DS H          MAXIMUM DISPLAY LINE LENGTH  RPI 1118
000080                                    (12/87)194=               DS 0D
000080                                    (12/88)195=ZCVT_ZERO      DC XL16'00'   BINARY ZEROS
000090                                    (12/89)196=ZCVT_HIGH_VALUES DC 0XL16,16X'FF' BINARY FF'S     RPI 1181
0000A0                                    (12/90)197=ZCVT_PWORK     DS PL8        CVD/CVB WORK
0000A8                                    (12/91)198=ZCVT_PWORK1    DS PL16       DIV DIVIDEND, CVDG/CVBG WORK
0000B8                                    (12/92)199=ZCVT_PWORK2    DS PL16       DIV DIVISOR
0000C8                                    (12/93)200=ZCVT_PWORK3    DS PL16       DIV QUOTIENT
0000D8                                    (12/94)201=ZCVT_PWORK4    DS PL16       DIV REMAINDER
0000E8                                    (12/95)202=ZCVT_NDDX      DS XL16       DIV DIVIDEND HOLD AREA
0000F8                                    (12/96)203=ZCVT_WORKAREA  DS XL256      GEN_INSPECT PARMS, GEN_EDIT WORK, ETC.
0001F8                                    (12/97)204=*
0001F8                                    (12/98)205=* END OF ZC390CVT
0001F8                                    (12/99)206=*
0001F8                  000001F8         (12/100)207=ZCVT_END   EQU   *
000000                                    (11/83)208+ZC390PVT DSECT 
000000                                    (13/11)209=PVTPGM   DS    CL8  ZCOBOL PGM NAME
000008                                    (13/12)210=PVTDATE  DS    CL8  ZCOBOL COMPILE DATE
000010                                    (13/13)211=PVTTIME  DS    CL8  ZCOBOL COMPILE TIME
000018                                    (13/14)212=PVTVER   DS    CL8  ZCOBOL COMPILER VERSION
000020                                    (13/15)213=PVTCICS  DS    C    ZCOBOL EXEC CICS PGM
000021                                    (13/16)214=PVTEXTND DS    C    ZCOBOL EXTENDED PRECISION
000022                                    (13/17)215=PVTTRUNC DS    C    ZCOBOL TRUNCATE TO PICTURE
000023                                    (13/18)216=PVTR64   DS    C    ZCOBOL USE 64 BIT REGISTERS
000024                                    (13/19)217=PVTMAXDL DS    H    ZCOBOL MAX DISPLAY LINE LENGTH
000026                                    (13/20)218=         DS    XL10 RESERVED
000BB8                                    (11/85)219+ZC_WSLOC LOCTR              CONTINUE WS FOR FD AND DATA
000BB8                                      (1/9)220 *        AUTHOR.        DON HIGGINS.
000BB8                                     (1/10)221 *      * TEST MOVE.
000BB8                                     (1/11)222 *      ***************************************************************
000BB8                                     (1/12)223 *      * 01/26/12 DSH RPI 1181 ADD TEST 21
000BB8                                     (1/13)224 *      ***************************************************************
000BB8                                     (1/15)225 *        ENVIRONMENT DIVISION.
000BB8                                     (1/17)226 *        DATA DIVISION.
000BB8                                    (27/23)227+         PRINT DATA
000BB8                                     (1/19)228 *        WORKING-STORAGE SECTION.
000BB8                                     (1/21)229 *        01  ABCDEF PIC X(6) VALUE 'ABCDEF'.
000BB8                                     (1/23)230 *        01  ABC    PIC X(3) REDEFINES ABCDEF OCCURS 2.
000BB8                                     (1/25)231 *         77  NF1    COMP PIC S9(9).
000BB8                                     (1/27)232 *         77  DF1    PIC Z(9).
000BB8                                     (1/29)233 *         77  DF2    PIC Z(8)9.
000BB8                                     (1/31)234 *         77  DF3    PIC ZZZ,ZZZ,ZZ9.
000BB8                                     (1/33)235 *         77  NH1    COMP PIC S9(4).
000BB8                                     (1/35)236 *         77  DH1    PIC Z(4).
000BB8                                     (1/37)237 *         77  DH2    PIC Z(3)9.
000BB8                                     (1/39)238 *         77  NP1    COMP-3 PIC S9.
000BB8                                     (1/41)239 *         77  NP2    COMP-3 PIC S9(4).
000BB8                                     (1/43)240 *         77  DP1    PIC Z.
000BB8                                     (1/45)241 *         77  DP2    PIC Z(3)9.
000BB8                                     (1/47)242 *         77  DP3    PIC ZZ-99.
000BB8                                     (1/49)243 *         77  FLD1   PIC XX VALUE  'XY'.
000BB8                                     (1/51)244 *         77  FLD2   PIC XXX VALUE 'ABC'.
000BB8                                     (1/54)245 *         77  GOOD   COMP PIC S9(9) VALUE 0..
000BB8                                     (1/55)246 *        77 SUB1 PIC 9.
000BB8                                     (1/58)247 *        PROCEDURE DIVISION.
000BB8                                     (1/59)248 *ZC   PROCEDURE DIVISION
000BB8                                    (30/18)249+         PRINT LIST,GEN,LISTUSE TURN PRINT LISTING ON FOR USER CODE GEN
0000EC                                    (30/19)250+TESTMOV1 CSECT                SWITCH TO PROCEDURE CODE AHEAD OF WS
0000EC                                     (1/61)251 *        MAINLINE.
0000EC                                     (8/96)252+PG_MAINLINE DS 0H
0000EC                                     (1/63)253 *            MOVE 0 TO NF1
0000EC                                     (1/64)254 *ZC     31         MOVE  0,TO,NF1
0000EC E54CD05E0000            000C16    (38/342)255+          MVHI  NF1,0
0000F2                                     (1/66)256 *      1     MOVE NF1 TO DF1
0000F2                                     (1/67)257 *ZC     32      1  MOVE  NF1,TO,DF1
0000F2 5800D05E                000C16   (38/1657)258+         L     0,NF1
0000F6 4E0090A0                0000A0   (38/1658)259+         CVD   0,ZCVT_PWORK
0000FA C0100000053E            000B76    (39/127)260+         LARL  ZC_R1,=AL1(C' ',C' ',X'20',X'20',X'20',X'20',X'20',X'20',X'20',X'20',X'20',0)
000100 D20A90F81000     0000F8           (39/128)262+         MVC   ZCVT_WORKAREA(11),0(ZC_R1) MOVE MASK FOR ED
000106 DE0A90F890A3     0000F8 0000A3    (39/143)263+         ED    ZCVT_WORKAREA(11),8-5+ZCVT_PWORK
00010C D208D06290FA     000C1A 0000FA    (39/185)264+         MVC   DF1,ZCVT_WORKAREA+2
000112                                     (1/69)265 *            IF DF1 NOT = '         ' PERFORM BAD ELSE PERFORM GOOD.
000112                                     (1/70)266 *ZC     33         IF    DF1,NOT,=,'         '
000112 C01000000507            000B20    (41/447)267+         LARL  ZC_R1,=CL10'         '
000118 D508D0621000     000C1A           (41/448)268+         CLC   DF1,0(ZC_R1)
00011E A784000D                000138     (42/15)269+         BRC   15-ZC_NE,PG_IF_1_1
000122                                     (1/72)270 *ZC     33         PERFORM BAD
000122 C0E0000004A5            000A6C     (45/44)271+         LARL  ZC_R14,PG_BAD
000128 C000000004CF            000AC6     (45/45)272+         LARL  ZC_R0,PG_BAD_END+6
00012E 58F0903C                00003C     (45/46)273+         L     ZC_R15,ZCVT_PERFORM
000132 0D1F                               (45/47)274+         BASR  ZC_R1,ZC_R15
000134                                     (1/74)275 *ZC     33         ELSE
000134 A7F4000B                00014A     (47/15)276+         J     PG_IF_1_E
000138                                     (8/41)277+PG_IF_1_1    DS    0H  &TYPE
000138                                     (1/76)278 *ZC     33         PERFORM GOOD
000138 C0E000000494            000A60     (45/44)279+         LARL  ZC_R14,PG_GOOD
00013E C00000000497            000A6C     (45/45)280+         LARL  ZC_R0,PG_GOOD_END+6
000144 58F0903C                00003C     (45/46)281+         L     ZC_R15,ZCVT_PERFORM
000148 0D1F                               (45/47)282+         BASR  ZC_R1,ZC_R15
00014A                                     (8/41)283+PG_IF_1_E    DS    0H  &TYPE
00014A                                     (1/79)284 *            MOVE 1 TO NF1
00014A                                     (1/80)285 *ZC     34         MOVE  1,TO,NF1
00014A E54CD05E0001            000C16    (38/342)286+          MVHI  NF1,1
000150                                     (1/83)287 *      2     MOVE NF1 TO DF1                                           
000150                                     (1/84)288 *ZC     35      2  MOVE  NF1,TO,DF1
000150 5800D05E                000C16   (38/1657)289+         L     0,NF1
000154 4E0090A0                0000A0   (38/1658)290+         CVD   0,ZCVT_PWORK
000158 C0100000050F            000B76    (39/127)291+         LARL  ZC_R1,=AL1(C' ',C' ',X'20',X'20',X'20',X'20',X'20',X'20',X'20',X'20',X'20',0)
00015E D20A90F81000     0000F8           (39/128)293+         MVC   ZCVT_WORKAREA(11),0(ZC_R1) MOVE MASK FOR ED
000164 DE0A90F890A3     0000F8 0000A3    (39/143)294+         ED    ZCVT_WORKAREA(11),8-5+ZCVT_PWORK
00016A D208D06290FA     000C1A 0000FA    (39/185)295+         MVC   DF1,ZCVT_WORKAREA+2
000170                                     (1/86)296 *            IF DF1 NOT = '        1' PERFORM BAD ELSE PERFORM GOOD.
000170                                     (1/87)297 *ZC     36         IF    DF1,NOT,=,'        1'
000170 C010000004DD            000B2A    (41/447)298+         LARL  ZC_R1,=CL10'        1'
000176 D508D0621000     000C1A           (41/448)299+         CLC   DF1,0(ZC_R1)
00017C A784000D                000196     (42/15)300+         BRC   15-ZC_NE,PG_IF_2_1
000180                                     (1/89)301 *ZC     36         PERFORM BAD
000180 C0E000000476            000A6C     (45/44)302+         LARL  ZC_R14,PG_BAD
000186 C000000004A0            000AC6     (45/45)303+         LARL  ZC_R0,PG_BAD_END+6
00018C 58F0903C                00003C     (45/46)304+         L     ZC_R15,ZCVT_PERFORM
000190 0D1F                               (45/47)305+         BASR  ZC_R1,ZC_R15
000192                                     (1/91)306 *ZC     36         ELSE
000192 A7F4000B                0001A8     (47/15)307+         J     PG_IF_2_E
000196                                     (8/41)308+PG_IF_2_1    DS    0H  &TYPE
000196                                     (1/93)309 *ZC     36         PERFORM GOOD
000196 C0E000000465            000A60     (45/44)310+         LARL  ZC_R14,PG_GOOD
00019C C00000000468            000A6C     (45/45)311+         LARL  ZC_R0,PG_GOOD_END+6
0001A2 58F0903C                00003C     (45/46)312+         L     ZC_R15,ZCVT_PERFORM
0001A6 0D1F                               (45/47)313+         BASR  ZC_R1,ZC_R15
0001A8                                     (8/41)314+PG_IF_2_E    DS    0H  &TYPE
0001A8                                     (1/96)315 *            MOVE 0 TO NF1
0001A8                                     (1/97)316 *ZC     37         MOVE  0,TO,NF1
0001A8 E54CD05E0000            000C16    (38/342)317+          MVHI  NF1,0
0001AE                                    (1/100)318 *      3     MOVE NF1 TO DF2                                           
0001AE                                    (1/101)319 *ZC     38      3  MOVE  NF1,TO,DF2
0001AE 5800D05E                000C16   (38/1657)320+         L     0,NF1
0001B2 4E0090A0                0000A0   (38/1658)321+         CVD   0,ZCVT_PWORK
0001B6 C010000004E6            000B82    (39/127)322+         LARL  ZC_R1,=AL1(C' ',C' ',X'20',X'20',X'20',X'20',X'20',X'20',X'20',X'21',X'20',0)
0001BC D20A90F81000     0000F8           (39/128)324+         MVC   ZCVT_WORKAREA(11),0(ZC_R1) MOVE MASK FOR ED
0001C2 DE0A90F890A3     0000F8 0000A3    (39/143)325+         ED    ZCVT_WORKAREA(11),8-5+ZCVT_PWORK
0001C8 D208D06B90FA     000C23 0000FA    (39/185)326+         MVC   DF2,ZCVT_WORKAREA+2
0001CE                                    (1/103)327 *            IF DF2 NOT = '        0' PERFORM BAD ELSE PERFORM GOOD.
0001CE                                    (1/104)328 *ZC     39         IF    DF2,NOT,=,'        0'
0001CE C010000004B3            000B34    (41/447)329+         LARL  ZC_R1,=CL10'        0'
0001D4 D508D06B1000     000C23           (41/448)330+         CLC   DF2,0(ZC_R1)
0001DA A784000D                0001F4     (42/15)331+         BRC   15-ZC_NE,PG_IF_3_1
0001DE                                    (1/106)332 *ZC     39         PERFORM BAD
0001DE C0E000000447            000A6C     (45/44)333+         LARL  ZC_R14,PG_BAD
0001E4 C00000000471            000AC6     (45/45)334+         LARL  ZC_R0,PG_BAD_END+6
0001EA 58F0903C                00003C     (45/46)335+         L     ZC_R15,ZCVT_PERFORM
0001EE 0D1F                               (45/47)336+         BASR  ZC_R1,ZC_R15
0001F0                                    (1/108)337 *ZC     39         ELSE
0001F0 A7F4000B                000206     (47/15)338+         J     PG_IF_3_E
0001F4                                     (8/41)339+PG_IF_3_1    DS    0H  &TYPE
0001F4                                    (1/110)340 *ZC     39         PERFORM GOOD
0001F4 C0E000000436            000A60     (45/44)341+         LARL  ZC_R14,PG_GOOD
0001FA C00000000439            000A6C     (45/45)342+         LARL  ZC_R0,PG_GOOD_END+6
000200 58F0903C                00003C     (45/46)343+         L     ZC_R15,ZCVT_PERFORM
000204 0D1F                               (45/47)344+         BASR  ZC_R1,ZC_R15
000206                                     (8/41)345+PG_IF_3_E    DS    0H  &TYPE
000206                                    (1/113)346 *            MOVE 123456789 TO NF1
000206                                    (1/114)347 *ZC     40         MOVE  123456789,TO,NF1
000206 C01000000465            000AD0    (38/344)348+          LARL  ZC_R1,=F'123456789'
00020C D203D05E1000     000C16           (38/345)349+          MVC   NF1,0(ZC_R1)
000212                                    (1/117)350 *      4     MOVE NF1 TO DF2                                           
000212                                    (1/118)351 *ZC     41      4  MOVE  NF1,TO,DF2
000212 5800D05E                000C16   (38/1657)352+         L     0,NF1
000216 4E0090A0                0000A0   (38/1658)353+         CVD   0,ZCVT_PWORK
00021A C010000004B4            000B82    (39/127)354+         LARL  ZC_R1,=AL1(C' ',C' ',X'20',X'20',X'20',X'20',X'20',X'20',X'20',X'21',X'20',0)
000220 D20A90F81000     0000F8           (39/128)356+         MVC   ZCVT_WORKAREA(11),0(ZC_R1) MOVE MASK FOR ED
000226 DE0A90F890A3     0000F8 0000A3    (39/143)357+         ED    ZCVT_WORKAREA(11),8-5+ZCVT_PWORK
00022C D208D06B90FA     000C23 0000FA    (39/185)358+         MVC   DF2,ZCVT_WORKAREA+2
000232                                    (1/120)359 *            IF DF2 NOT = '123456789' PERFORM BAD ELSE PERFORM GOOD.
000232                                    (1/121)360 *ZC     42         IF    DF2,NOT,=,'123456789'
000232 C01000000486            000B3E    (41/447)361+         LARL  ZC_R1,=CL10'123456789'
000238 D508D06B1000     000C23           (41/448)362+         CLC   DF2,0(ZC_R1)
00023E A784000D                000258     (42/15)363+         BRC   15-ZC_NE,PG_IF_4_1
000242                                    (1/123)364 *ZC     42         PERFORM BAD
000242 C0E000000415            000A6C     (45/44)365+         LARL  ZC_R14,PG_BAD
000248 C0000000043F            000AC6     (45/45)366+         LARL  ZC_R0,PG_BAD_END+6
00024E 58F0903C                00003C     (45/46)367+         L     ZC_R15,ZCVT_PERFORM
000252 0D1F                               (45/47)368+         BASR  ZC_R1,ZC_R15
000254                                    (1/125)369 *ZC     42         ELSE
000254 A7F4000B                00026A     (47/15)370+         J     PG_IF_4_E
000258                                     (8/41)371+PG_IF_4_1    DS    0H  &TYPE
000258                                    (1/127)372 *ZC     42         PERFORM GOOD
000258 C0E000000404            000A60     (45/44)373+         LARL  ZC_R14,PG_GOOD
00025E C00000000407            000A6C     (45/45)374+         LARL  ZC_R0,PG_GOOD_END+6
000264 58F0903C                00003C     (45/46)375+         L     ZC_R15,ZCVT_PERFORM
000268 0D1F                               (45/47)376+         BASR  ZC_R1,ZC_R15
00026A                                     (8/41)377+PG_IF_4_E    DS    0H  &TYPE
00026A                                    (1/130)378 *            MOVE 0 TO NF1
00026A                                    (1/131)379 *ZC     43         MOVE  0,TO,NF1
00026A E54CD05E0000            000C16    (38/342)380+          MVHI  NF1,0
000270                                    (1/134)381 *      5     MOVE NF1 TO DF3                                           
000270                                    (1/135)382 *ZC     44      5  MOVE  NF1,TO,DF3
000270 5800D05E                000C16   (38/1657)383+         L     0,NF1
000274 4E0090A0                0000A0   (38/1658)384+         CVD   0,ZCVT_PWORK
000278 C0100000048B            000B8E    (39/127)385+         LARL  ZC_R1,=AL1(C' ',C' ',X'20',X'20',X'20',C',',X'20',X'20',X'20',C',',X'20',X'21',X'20',0)
00027E D20C90F81000     0000F8           (39/128)387+         MVC   ZCVT_WORKAREA(13),0(ZC_R1) MOVE MASK FOR ED
000284 411090FA                0000FA    (39/140)388+         LA    ZC_R1,ZCVT_WORKAREA+1+1
000288 DF0C90F890A3     0000F8 0000A3    (39/141)389+         EDMK  ZCVT_WORKAREA(13),8-5+ZCVT_PWORK
00028E D20AD07490FA     000C2C 0000FA    (39/185)390+         MVC   DF3,ZCVT_WORKAREA+2
000294                                    (1/137)391 *            IF DF3 NOT = '          0' PERFORM BAD ELSE PERFORM GOOD.
000294                                    (1/138)392 *ZC     45         IF    DF3,NOT,=,'          0'
000294 C01000000420            000AD4    (41/447)393+         LARL  ZC_R1,=CL12'          0'
00029A D50AD0741000     000C2C           (41/448)394+         CLC   DF3,0(ZC_R1)
0002A0 A784000D                0002BA     (42/15)395+         BRC   15-ZC_NE,PG_IF_5_1
0002A4                                    (1/140)396 *ZC     45         PERFORM BAD
0002A4 C0E0000003E4            000A6C     (45/44)397+         LARL  ZC_R14,PG_BAD
0002AA C0000000040E            000AC6     (45/45)398+         LARL  ZC_R0,PG_BAD_END+6
0002B0 58F0903C                00003C     (45/46)399+         L     ZC_R15,ZCVT_PERFORM
0002B4 0D1F                               (45/47)400+         BASR  ZC_R1,ZC_R15
0002B6                                    (1/142)401 *ZC     45         ELSE
0002B6 A7F4000B                0002CC     (47/15)402+         J     PG_IF_5_E
0002BA                                     (8/41)403+PG_IF_5_1    DS    0H  &TYPE
0002BA                                    (1/144)404 *ZC     45         PERFORM GOOD
0002BA C0E0000003D3            000A60     (45/44)405+         LARL  ZC_R14,PG_GOOD
0002C0 C000000003D6            000A6C     (45/45)406+         LARL  ZC_R0,PG_GOOD_END+6
0002C6 58F0903C                00003C     (45/46)407+         L     ZC_R15,ZCVT_PERFORM
0002CA 0D1F                               (45/47)408+         BASR  ZC_R1,ZC_R15
0002CC                                     (8/41)409+PG_IF_5_E    DS    0H  &TYPE
0002CC                                    (1/147)410 *            MOVE 123456789 TO NF1
0002CC                                    (1/148)411 *ZC     46         MOVE  123456789,TO,NF1
0002CC C01000000402            000AD0    (38/344)412+          LARL  ZC_R1,=F'123456789'
0002D2 D203D05E1000     000C16           (38/345)413+          MVC   NF1,0(ZC_R1)
0002D8                                    (1/151)414 *      6     MOVE NF1 TO DF3                                           
0002D8                                    (1/152)415 *ZC     47      6  MOVE  NF1,TO,DF3
0002D8 5800D05E                000C16   (38/1657)416+         L     0,NF1
0002DC 4E0090A0                0000A0   (38/1658)417+         CVD   0,ZCVT_PWORK
0002E0 C01000000457            000B8E    (39/127)418+         LARL  ZC_R1,=AL1(C' ',C' ',X'20',X'20',X'20',C',',X'20',X'20',X'20',C',',X'20',X'21',X'20',0)
0002E6 D20C90F81000     0000F8           (39/128)420+         MVC   ZCVT_WORKAREA(13),0(ZC_R1) MOVE MASK FOR ED
0002EC 411090FA                0000FA    (39/140)421+         LA    ZC_R1,ZCVT_WORKAREA+1+1
0002F0 DF0C90F890A3     0000F8 0000A3    (39/141)422+         EDMK  ZCVT_WORKAREA(13),8-5+ZCVT_PWORK
0002F6 D20AD07490FA     000C2C 0000FA    (39/185)423+         MVC   DF3,ZCVT_WORKAREA+2
0002FC                                    (1/154)424 *            IF DF3 NOT = '123,456,789' PERFORM BAD ELSE PERFORM GOOD.
0002FC                                    (1/155)425 *ZC     48         IF    DF3,NOT,=,'123,456,789'
0002FC C010000003F2            000AE0    (41/447)426+         LARL  ZC_R1,=CL12'123,456,789'
000302 D50AD0741000     000C2C           (41/448)427+         CLC   DF3,0(ZC_R1)
000308 A784000D                000322     (42/15)428+         BRC   15-ZC_NE,PG_IF_6_1
00030C                                    (1/157)429 *ZC     48         PERFORM BAD
00030C C0E0000003B0            000A6C     (45/44)430+         LARL  ZC_R14,PG_BAD
000312 C000000003DA            000AC6     (45/45)431+         LARL  ZC_R0,PG_BAD_END+6
000318 58F0903C                00003C     (45/46)432+         L     ZC_R15,ZCVT_PERFORM
00031C 0D1F                               (45/47)433+         BASR  ZC_R1,ZC_R15
00031E                                    (1/159)434 *ZC     48         ELSE
00031E A7F4000B                000334     (47/15)435+         J     PG_IF_6_E
000322                                     (8/41)436+PG_IF_6_1    DS    0H  &TYPE
000322                                    (1/161)437 *ZC     48         PERFORM GOOD
000322 C0E00000039F            000A60     (45/44)438+         LARL  ZC_R14,PG_GOOD
000328 C000000003A2            000A6C     (45/45)439+         LARL  ZC_R0,PG_GOOD_END+6
00032E 58F0903C                00003C     (45/46)440+         L     ZC_R15,ZCVT_PERFORM
000332 0D1F                               (45/47)441+         BASR  ZC_R1,ZC_R15
000334                                     (8/41)442+PG_IF_6_E    DS    0H  &TYPE
000334                                    (1/164)443 *            MOVE 0 TO NH1
000334                                    (1/165)444 *ZC     49         MOVE  0,TO,NH1
000334 E544D07F0000            000C37    (38/361)445+          MVHHI NH1,0
00033A                                    (1/168)446 *      7     MOVE NH1 TO DH1                                           
00033A                                    (1/169)447 *ZC     50      7  MOVE  NH1,TO,DH1
00033A 4800D07F                000C37   (38/1667)448+         LH    0,NH1
00033E 4E0090A0                0000A0   (38/1668)449+         CVD   0,ZCVT_PWORK
000342 C0100000042D            000B9C    (39/127)450+         LARL  ZC_R1,=AL1(C' ',X'20',X'20',X'20',X'20',X'20')
000348 D20590F81000     0000F8           (39/128)451+         MVC   ZCVT_WORKAREA(6),0(ZC_R1) MOVE MASK FOR ED
00034E DE0590F890A5     0000F8 0000A5    (39/143)452+         ED    ZCVT_WORKAREA(6),8-3+ZCVT_PWORK
000354 D203D08190FA     000C39 0000FA    (39/185)453+         MVC   DH1,ZCVT_WORKAREA+2
00035A                                    (1/171)454 *            IF DH1 NOT = '    ' PERFORM BAD ELSE PERFORM GOOD.
00035A                                    (1/172)455 *ZC     51         IF    DH1,NOT,=,'    '
00035A C010000003C9            000AEC    (41/447)456+         LARL  ZC_R1,=CL4'    '
000360 D503D0811000     000C39           (41/448)457+         CLC   DH1,0(ZC_R1)
000366 A784000D                000380     (42/15)458+         BRC   15-ZC_NE,PG_IF_7_1
00036A                                    (1/174)459 *ZC     51         PERFORM BAD
00036A C0E000000381            000A6C     (45/44)460+         LARL  ZC_R14,PG_BAD
000370 C000000003AB            000AC6     (45/45)461+         LARL  ZC_R0,PG_BAD_END+6
000376 58F0903C                00003C     (45/46)462+         L     ZC_R15,ZCVT_PERFORM
00037A 0D1F                               (45/47)463+         BASR  ZC_R1,ZC_R15
00037C                                    (1/176)464 *ZC     51         ELSE
00037C A7F4000B                000392     (47/15)465+         J     PG_IF_7_E
000380                                     (8/41)466+PG_IF_7_1    DS    0H  &TYPE
000380                                    (1/178)467 *ZC     51         PERFORM GOOD
000380 C0E000000370            000A60     (45/44)468+         LARL  ZC_R14,PG_GOOD
000386 C00000000373            000A6C     (45/45)469+         LARL  ZC_R0,PG_GOOD_END+6
00038C 58F0903C                00003C     (45/46)470+         L     ZC_R15,ZCVT_PERFORM
000390 0D1F                               (45/47)471+         BASR  ZC_R1,ZC_R15
000392                                     (8/41)472+PG_IF_7_E    DS    0H  &TYPE
000392                                    (1/181)473 *            MOVE 1 TO NH1
000392                                    (1/182)474 *ZC     52         MOVE  1,TO,NH1
000392 E544D07F0001            000C37    (38/361)475+          MVHHI NH1,1
000398                                    (1/185)476 *      8     MOVE NH1 TO DH1                                           
000398                                    (1/186)477 *ZC     53      8  MOVE  NH1,TO,DH1
000398 4800D07F                000C37   (38/1667)478+         LH    0,NH1
00039C 4E0090A0                0000A0   (38/1668)479+         CVD   0,ZCVT_PWORK
0003A0 C010000003FE            000B9C    (39/127)480+         LARL  ZC_R1,=AL1(C' ',X'20',X'20',X'20',X'20',X'20')
0003A6 D20590F81000     0000F8           (39/128)481+         MVC   ZCVT_WORKAREA(6),0(ZC_R1) MOVE MASK FOR ED
0003AC DE0590F890A5     0000F8 0000A5    (39/143)482+         ED    ZCVT_WORKAREA(6),8-3+ZCVT_PWORK
0003B2 D203D08190FA     000C39 0000FA    (39/185)483+         MVC   DH1,ZCVT_WORKAREA+2
0003B8                                    (1/188)484 *            IF DH1 NOT = '   1' PERFORM BAD ELSE PERFORM GOOD.
0003B8                                    (1/189)485 *ZC     54         IF    DH1,NOT,=,'   1'
0003B8 C0100000039C            000AF0    (41/447)486+         LARL  ZC_R1,=CL4'   1'
0003BE D503D0811000     000C39           (41/448)487+         CLC   DH1,0(ZC_R1)
0003C4 A784000D                0003DE     (42/15)488+         BRC   15-ZC_NE,PG_IF_8_1
0003C8                                    (1/191)489 *ZC     54         PERFORM BAD
0003C8 C0E000000352            000A6C     (45/44)490+         LARL  ZC_R14,PG_BAD
0003CE C0000000037C            000AC6     (45/45)491+         LARL  ZC_R0,PG_BAD_END+6
0003D4 58F0903C                00003C     (45/46)492+         L     ZC_R15,ZCVT_PERFORM
0003D8 0D1F                               (45/47)493+         BASR  ZC_R1,ZC_R15
0003DA                                    (1/193)494 *ZC     54         ELSE
0003DA A7F4000B                0003F0     (47/15)495+         J     PG_IF_8_E
0003DE                                     (8/41)496+PG_IF_8_1    DS    0H  &TYPE
0003DE                                    (1/195)497 *ZC     54         PERFORM GOOD
0003DE C0E000000341            000A60     (45/44)498+         LARL  ZC_R14,PG_GOOD
0003E4 C00000000344            000A6C     (45/45)499+         LARL  ZC_R0,PG_GOOD_END+6
0003EA 58F0903C                00003C     (45/46)500+         L     ZC_R15,ZCVT_PERFORM
0003EE 0D1F                               (45/47)501+         BASR  ZC_R1,ZC_R15
0003F0                                     (8/41)502+PG_IF_8_E    DS    0H  &TYPE
0003F0                                    (1/198)503 *            MOVE 0 TO NH1
0003F0                                    (1/199)504 *ZC     55         MOVE  0,TO,NH1
0003F0 E544D07F0000            000C37    (38/361)505+          MVHHI NH1,0
0003F6                                    (1/202)506 *      9     MOVE NH1 TO DH2                                           
0003F6                                    (1/203)507 *ZC     56      9  MOVE  NH1,TO,DH2
0003F6 4800D07F                000C37   (38/1667)508+         LH    0,NH1
0003FA 4E0090A0                0000A0   (38/1668)509+         CVD   0,ZCVT_PWORK
0003FE C010000003D2            000BA2    (39/127)510+         LARL  ZC_R1,=AL1(C' ',X'20',X'20',X'20',X'21',X'20')
000404 D20590F81000     0000F8           (39/128)511+         MVC   ZCVT_WORKAREA(6),0(ZC_R1) MOVE MASK FOR ED
00040A DE0590F890A5     0000F8 0000A5    (39/143)512+         ED    ZCVT_WORKAREA(6),8-3+ZCVT_PWORK
000410 D203D08590FA     000C3D 0000FA    (39/185)513+         MVC   DH2,ZCVT_WORKAREA+2
000416                                    (1/205)514 *            IF DH2 NOT = '   0' PERFORM BAD ELSE PERFORM GOOD.
000416                                    (1/206)515 *ZC     57         IF    DH2,NOT,=,'   0'
000416 C0100000036F            000AF4    (41/447)516+         LARL  ZC_R1,=CL4'   0'
00041C D503D0851000     000C3D           (41/448)517+         CLC   DH2,0(ZC_R1)
000422 A784000D                00043C     (42/15)518+         BRC   15-ZC_NE,PG_IF_9_1
000426                                    (1/208)519 *ZC     57         PERFORM BAD
000426 C0E000000323            000A6C     (45/44)520+         LARL  ZC_R14,PG_BAD
00042C C0000000034D            000AC6     (45/45)521+         LARL  ZC_R0,PG_BAD_END+6
000432 58F0903C                00003C     (45/46)522+         L     ZC_R15,ZCVT_PERFORM
000436 0D1F                               (45/47)523+         BASR  ZC_R1,ZC_R15
000438                                    (1/210)524 *ZC     57         ELSE
000438 A7F4000B                00044E     (47/15)525+         J     PG_IF_9_E
00043C                                     (8/41)526+PG_IF_9_1    DS    0H  &TYPE
00043C                                    (1/212)527 *ZC     57         PERFORM GOOD
00043C C0E000000312            000A60     (45/44)528+         LARL  ZC_R14,PG_GOOD
000442 C00000000315            000A6C     (45/45)529+         LARL  ZC_R0,PG_GOOD_END+6
000448 58F0903C                00003C     (45/46)530+         L     ZC_R15,ZCVT_PERFORM
00044C 0D1F                               (45/47)531+         BASR  ZC_R1,ZC_R15
00044E                                     (8/41)532+PG_IF_9_E    DS    0H  &TYPE
00044E                                    (1/215)533 *            MOVE 1234 TO NH1
00044E                                    (1/216)534 *ZC     58         MOVE  1234,TO,NH1
00044E E544D07F04D2            000C37    (38/361)535+          MVHHI NH1,1234
000454                                    (1/219)536 *     10     MOVE NH1 TO DH2                                           
000454                                    (1/220)537 *ZC     59     10  MOVE  NH1,TO,DH2
000454 4800D07F                000C37   (38/1667)538+         LH    0,NH1
000458 4E0090A0                0000A0   (38/1668)539+         CVD   0,ZCVT_PWORK
00045C C010000003A3            000BA2    (39/127)540+         LARL  ZC_R1,=AL1(C' ',X'20',X'20',X'20',X'21',X'20')
000462 D20590F81000     0000F8           (39/128)541+         MVC   ZCVT_WORKAREA(6),0(ZC_R1) MOVE MASK FOR ED
000468 DE0590F890A5     0000F8 0000A5    (39/143)542+         ED    ZCVT_WORKAREA(6),8-3+ZCVT_PWORK
00046E D203D08590FA     000C3D 0000FA    (39/185)543+         MVC   DH2,ZCVT_WORKAREA+2
000474                                    (1/222)544 *            IF DH2 NOT = '1234' PERFORM BAD ELSE PERFORM GOOD.
000474                                    (1/223)545 *ZC     60         IF    DH2,NOT,=,'1234'
000474 C01000000342            000AF8    (41/447)546+         LARL  ZC_R1,=CL4'1234'
00047A D503D0851000     000C3D           (41/448)547+         CLC   DH2,0(ZC_R1)
000480 A784000D                00049A     (42/15)548+         BRC   15-ZC_NE,PG_IF_10_1
000484                                    (1/225)549 *ZC     60         PERFORM BAD
000484 C0E0000002F4            000A6C     (45/44)550+         LARL  ZC_R14,PG_BAD
00048A C0000000031E            000AC6     (45/45)551+         LARL  ZC_R0,PG_BAD_END+6
000490 58F0903C                00003C     (45/46)552+         L     ZC_R15,ZCVT_PERFORM
000494 0D1F                               (45/47)553+         BASR  ZC_R1,ZC_R15
000496                                    (1/227)554 *ZC     60         ELSE
000496 A7F4000B                0004AC     (47/15)555+         J     PG_IF_10_E
00049A                                     (8/41)556+PG_IF_10_1   DS    0H  &TYPE
00049A                                    (1/229)557 *ZC     60         PERFORM GOOD
00049A C0E0000002E3            000A60     (45/44)558+         LARL  ZC_R14,PG_GOOD
0004A0 C000000002E6            000A6C     (45/45)559+         LARL  ZC_R0,PG_GOOD_END+6
0004A6 58F0903C                00003C     (45/46)560+         L     ZC_R15,ZCVT_PERFORM
0004AA 0D1F                               (45/47)561+         BASR  ZC_R1,ZC_R15
0004AC                                     (8/41)562+PG_IF_10_E   DS    0H  &TYPE
0004AC                                    (1/232)563 *            MOVE 0 TO NP1
0004AC                                    (1/233)564 *ZC     61         MOVE  0,TO,NP1
0004AC C0100000034E            000B48    (38/366)565+          LARL  ZC_R1,=PL2'0'
0004B2 D200D0891001     000C41           (38/368)566+          MVC   NP1,1(ZC_R1)
0004B8                                    (1/235)567 *     11     MOVE NP1 TO DP1
0004B8                                    (1/236)568 *ZC     62     11  MOVE  NP1,TO,DP1
0004B8 C01000000378            000BA8    (39/127)569+         LARL  ZC_R1,=AL1(C' ',C' ',X'20',0)
0004BE D20290F81000     0000F8           (39/128)570+         MVC   ZCVT_WORKAREA(3),0(ZC_R1) MOVE MASK FOR ED
0004C4 DE0290F8D089     0000F8 000C41    (39/143)571+         ED    ZCVT_WORKAREA(3),1-1+NP1
0004CA D200D08D90FA     000C45 0000FA    (39/185)572+         MVC   DP1,ZCVT_WORKAREA+2
0004D0                                    (1/238)573 *            IF DP1 NOT = ' ' PERFORM BAD ELSE PERFORM GOOD.
0004D0                                    (1/239)574 *ZC     63         IF    DP1,NOT,=,' '
0004D0 9540D08D                000C45    (41/438)575+         CLI   DP1,C' '
0004D4 A784000D                0004EE     (42/15)576+         BRC   15-ZC_NE,PG_IF_11_1
0004D8                                    (1/241)577 *ZC     63         PERFORM BAD
0004D8 C0E0000002CA            000A6C     (45/44)578+         LARL  ZC_R14,PG_BAD
0004DE C000000002F4            000AC6     (45/45)579+         LARL  ZC_R0,PG_BAD_END+6
0004E4 58F0903C                00003C     (45/46)580+         L     ZC_R15,ZCVT_PERFORM
0004E8 0D1F                               (45/47)581+         BASR  ZC_R1,ZC_R15
0004EA                                    (1/243)582 *ZC     63         ELSE
0004EA A7F4000B                000500     (47/15)583+         J     PG_IF_11_E
0004EE                                     (8/41)584+PG_IF_11_1   DS    0H  &TYPE
0004EE                                    (1/245)585 *ZC     63         PERFORM GOOD
0004EE C0E0000002B9            000A60     (45/44)586+         LARL  ZC_R14,PG_GOOD
0004F4 C000000002BC            000A6C     (45/45)587+         LARL  ZC_R0,PG_GOOD_END+6
0004FA 58F0903C                00003C     (45/46)588+         L     ZC_R15,ZCVT_PERFORM
0004FE 0D1F                               (45/47)589+         BASR  ZC_R1,ZC_R15
000500                                     (8/41)590+PG_IF_11_E   DS    0H  &TYPE
000500                                    (1/248)591 *            MOVE 1 TO NP1
000500                                    (1/249)592 *ZC     64         MOVE  1,TO,NP1
000500 C01000000325            000B4A    (38/366)593+          LARL  ZC_R1,=PL2'1'
000506 D200D0891001     000C41           (38/368)594+          MVC   NP1,1(ZC_R1)
00050C                                    (1/252)595 *     12     MOVE NP1 TO DP1                                           
00050C                                    (1/253)596 *ZC     65     12  MOVE  NP1,TO,DP1
00050C C0100000034E            000BA8    (39/127)597+         LARL  ZC_R1,=AL1(C' ',C' ',X'20',0)
000512 D20290F81000     0000F8           (39/128)598+         MVC   ZCVT_WORKAREA(3),0(ZC_R1) MOVE MASK FOR ED
000518 DE0290F8D089     0000F8 000C41    (39/143)599+         ED    ZCVT_WORKAREA(3),1-1+NP1
00051E D200D08D90FA     000C45 0000FA    (39/185)600+         MVC   DP1,ZCVT_WORKAREA+2
000524                                    (1/255)601 *            IF DP1 NOT = '1' PERFORM BAD ELSE PERFORM GOOD.
000524                                    (1/256)602 *ZC     66         IF    DP1,NOT,=,'1'
000524 95F1D08D                000C45    (41/438)603+         CLI   DP1,C'1'
000528 A784000D                000542     (42/15)604+         BRC   15-ZC_NE,PG_IF_12_1
00052C                                    (1/258)605 *ZC     66         PERFORM BAD
00052C C0E0000002A0            000A6C     (45/44)606+         LARL  ZC_R14,PG_BAD
000532 C000000002CA            000AC6     (45/45)607+         LARL  ZC_R0,PG_BAD_END+6
000538 58F0903C                00003C     (45/46)608+         L     ZC_R15,ZCVT_PERFORM
00053C 0D1F                               (45/47)609+         BASR  ZC_R1,ZC_R15
00053E                                    (1/260)610 *ZC     66         ELSE
00053E A7F4000B                000554     (47/15)611+         J     PG_IF_12_E
000542                                     (8/41)612+PG_IF_12_1   DS    0H  &TYPE
000542                                    (1/262)613 *ZC     66         PERFORM GOOD
000542 C0E00000028F            000A60     (45/44)614+         LARL  ZC_R14,PG_GOOD
000548 C00000000292            000A6C     (45/45)615+         LARL  ZC_R0,PG_GOOD_END+6
00054E 58F0903C                00003C     (45/46)616+         L     ZC_R15,ZCVT_PERFORM
000552 0D1F                               (45/47)617+         BASR  ZC_R1,ZC_R15
000554                                     (8/41)618+PG_IF_12_E   DS    0H  &TYPE
000554                                    (1/265)619 *            MOVE 0 TO NP1
000554                                    (1/266)620 *ZC     67         MOVE  0,TO,NP1
000554 C010000002FA            000B48    (38/366)621+          LARL  ZC_R1,=PL2'0'
00055A D200D0891001     000C41           (38/368)622+          MVC   NP1,1(ZC_R1)
000560                                    (1/269)623 *     13     MOVE NP1 TO DP2                                           
000560                                    (1/270)624 *ZC     68     13  MOVE  NP1,TO,DP2
000560 C01000000321            000BA2    (39/127)625+         LARL  ZC_R1,=AL1(C' ',X'20',X'20',X'20',X'21',X'20')
000566 D20590F81000     0000F8           (39/128)626+         MVC   ZCVT_WORKAREA(6),0(ZC_R1) MOVE MASK FOR ED
00056C F82090A8D089     0000A8 000C41    (39/131)627+         ZAP   ZCVT_PWORK1(3),NP1
000572 DE0590F890A8     0000F8 0000A8    (39/136)628+         ED    ZCVT_WORKAREA(6),ZCVT_PWORK1
000578 D203D08E90FA     000C46 0000FA    (39/185)629+         MVC   DP2,ZCVT_WORKAREA+2
00057E                                    (1/272)630 *            IF DP2 NOT = '   0' PERFORM BAD ELSE PERFORM GOOD.
00057E                                    (1/273)631 *ZC     69         IF    DP2,NOT,=,'   0'
00057E C010000002BB            000AF4    (41/447)632+         LARL  ZC_R1,=CL4'   0'
000584 D503D08E1000     000C46           (41/448)633+         CLC   DP2,0(ZC_R1)
00058A A784000D                0005A4     (42/15)634+         BRC   15-ZC_NE,PG_IF_13_1
00058E                                    (1/275)635 *ZC     69         PERFORM BAD
00058E C0E00000026F            000A6C     (45/44)636+         LARL  ZC_R14,PG_BAD
000594 C00000000299            000AC6     (45/45)637+         LARL  ZC_R0,PG_BAD_END+6
00059A 58F0903C                00003C     (45/46)638+         L     ZC_R15,ZCVT_PERFORM
00059E 0D1F                               (45/47)639+         BASR  ZC_R1,ZC_R15
0005A0                                    (1/277)640 *ZC     69         ELSE
0005A0 A7F4000B                0005B6     (47/15)641+         J     PG_IF_13_E
0005A4                                     (8/41)642+PG_IF_13_1   DS    0H  &TYPE
0005A4                                    (1/279)643 *ZC     69         PERFORM GOOD
0005A4 C0E00000025E            000A60     (45/44)644+         LARL  ZC_R14,PG_GOOD
0005AA C00000000261            000A6C     (45/45)645+         LARL  ZC_R0,PG_GOOD_END+6
0005B0 58F0903C                00003C     (45/46)646+         L     ZC_R15,ZCVT_PERFORM
0005B4 0D1F                               (45/47)647+         BASR  ZC_R1,ZC_R15
0005B6                                     (8/41)648+PG_IF_13_E   DS    0H  &TYPE
0005B6                                    (1/282)649 *            MOVE 0 TO NP2
0005B6                                    (1/283)650 *ZC     70         MOVE  0,TO,NP2
0005B6 C010000002A3            000AFC    (38/366)651+          LARL  ZC_R1,=PL4'0'
0005BC D202D08A1001     000C42           (38/368)652+          MVC   NP2,1(ZC_R1)
0005C2                                    (1/286)653 *     14     MOVE NP2 TO DP2                                           
0005C2                                    (1/287)654 *ZC     71     14  MOVE  NP2,TO,DP2
0005C2 C010000002F0            000BA2    (39/127)655+         LARL  ZC_R1,=AL1(C' ',X'20',X'20',X'20',X'21',X'20')
0005C8 D20590F81000     0000F8           (39/128)656+         MVC   ZCVT_WORKAREA(6),0(ZC_R1) MOVE MASK FOR ED
0005CE DE0590F8D08A     0000F8 000C42    (39/143)657+         ED    ZCVT_WORKAREA(6),3-3+NP2
0005D4 D203D08E90FA     000C46 0000FA    (39/185)658+         MVC   DP2,ZCVT_WORKAREA+2
0005DA                                    (1/289)659 *            IF DP2 NOT = '   0' PERFORM BAD ELSE PERFORM GOOD.
0005DA                                    (1/290)660 *ZC     72         IF    DP2,NOT,=,'   0'
0005DA C0100000028D            000AF4    (41/447)661+         LARL  ZC_R1,=CL4'   0'
0005E0 D503D08E1000     000C46           (41/448)662+         CLC   DP2,0(ZC_R1)
0005E6 A784000D                000600     (42/15)663+         BRC   15-ZC_NE,PG_IF_14_1
0005EA                                    (1/292)664 *ZC     72         PERFORM BAD
0005EA C0E000000241            000A6C     (45/44)665+         LARL  ZC_R14,PG_BAD
0005F0 C0000000026B            000AC6     (45/45)666+         LARL  ZC_R0,PG_BAD_END+6
0005F6 58F0903C                00003C     (45/46)667+         L     ZC_R15,ZCVT_PERFORM
0005FA 0D1F                               (45/47)668+         BASR  ZC_R1,ZC_R15
0005FC                                    (1/294)669 *ZC     72         ELSE
0005FC A7F4000B                000612     (47/15)670+         J     PG_IF_14_E
000600                                     (8/41)671+PG_IF_14_1   DS    0H  &TYPE
000600                                    (1/296)672 *ZC     72         PERFORM GOOD
000600 C0E000000230            000A60     (45/44)673+         LARL  ZC_R14,PG_GOOD
000606 C00000000233            000A6C     (45/45)674+         LARL  ZC_R0,PG_GOOD_END+6
00060C 58F0903C                00003C     (45/46)675+         L     ZC_R15,ZCVT_PERFORM
000610 0D1F                               (45/47)676+         BASR  ZC_R1,ZC_R15
000612                                     (8/41)677+PG_IF_14_E   DS    0H  &TYPE
000612                                    (1/299)678 *            MOVE 1234 TO NP2
000612                                    (1/300)679 *ZC     73         MOVE  1234,TO,NP2
000612 C01000000277            000B00    (38/366)680+          LARL  ZC_R1,=PL4'1234'
000618 D202D08A1001     000C42           (38/368)681+          MVC   NP2,1(ZC_R1)
00061E                                    (1/303)682 *     15     MOVE NP2 TO DP2                                           
00061E                                    (1/304)683 *ZC     74     15  MOVE  NP2,TO,DP2
00061E C010000002C2            000BA2    (39/127)684+         LARL  ZC_R1,=AL1(C' ',X'20',X'20',X'20',X'21',X'20')
000624 D20590F81000     0000F8           (39/128)685+         MVC   ZCVT_WORKAREA(6),0(ZC_R1) MOVE MASK FOR ED
00062A DE0590F8D08A     0000F8 000C42    (39/143)686+         ED    ZCVT_WORKAREA(6),3-3+NP2
000630 D203D08E90FA     000C46 0000FA    (39/185)687+         MVC   DP2,ZCVT_WORKAREA+2
000636                                    (1/306)688 *            IF DP2 NOT = '1234' PERFORM BAD ELSE PERFORM GOOD.
000636                                    (1/307)689 *ZC     75         IF    DP2,NOT,=,'1234'
000636 C01000000261            000AF8    (41/447)690+         LARL  ZC_R1,=CL4'1234'
00063C D503D08E1000     000C46           (41/448)691+         CLC   DP2,0(ZC_R1)
000642 A784000D                00065C     (42/15)692+         BRC   15-ZC_NE,PG_IF_15_1
000646                                    (1/309)693 *ZC     75         PERFORM BAD
000646 C0E000000213            000A6C     (45/44)694+         LARL  ZC_R14,PG_BAD
00064C C0000000023D            000AC6     (45/45)695+         LARL  ZC_R0,PG_BAD_END+6
000652 58F0903C                00003C     (45/46)696+         L     ZC_R15,ZCVT_PERFORM
000656 0D1F                               (45/47)697+         BASR  ZC_R1,ZC_R15
000658                                    (1/311)698 *ZC     75         ELSE
000658 A7F4000B                00066E     (47/15)699+         J     PG_IF_15_E
00065C                                     (8/41)700+PG_IF_15_1   DS    0H  &TYPE
00065C                                    (1/313)701 *ZC     75         PERFORM GOOD
00065C C0E000000202            000A60     (45/44)702+         LARL  ZC_R14,PG_GOOD
000662 C00000000205            000A6C     (45/45)703+         LARL  ZC_R0,PG_GOOD_END+6
000668 58F0903C                00003C     (45/46)704+         L     ZC_R15,ZCVT_PERFORM
00066C 0D1F                               (45/47)705+         BASR  ZC_R1,ZC_R15
00066E                                     (8/41)706+PG_IF_15_E   DS    0H  &TYPE
00066E                                    (1/316)707 *            MOVE 12 TO NP2
00066E                                    (1/317)708 *ZC     76         MOVE  12,TO,NP2
00066E C0100000024B            000B04    (38/366)709+          LARL  ZC_R1,=PL4'12'
000674 D202D08A1001     000C42           (38/368)710+          MVC   NP2,1(ZC_R1)
00067A                                    (1/320)711 *     16     MOVE NP2 TO DP3                                           
00067A                                    (1/321)712 *ZC     77     16  MOVE  NP2,TO,DP3
00067A C01000000299            000BAC    (39/127)713+         LARL  ZC_R1,=AL1(C' ',X'20',X'20',X'20',C'-',X'21',X'20',0)
000680 D20690F81000     0000F8           (39/128)714+         MVC   ZCVT_WORKAREA(7),0(ZC_R1) MOVE MASK FOR ED
000686 411090FA                0000FA    (39/140)715+         LA    ZC_R1,ZCVT_WORKAREA+1+1
00068A DF0690F8D08A     0000F8 000C42    (39/141)716+         EDMK  ZCVT_WORKAREA(7),3-3+NP2
000690 D204D09290FA     000C4A 0000FA    (39/185)717+         MVC   DP3,ZCVT_WORKAREA+2
000696 96F0D095                000C4D    (39/187)718+         OI    3+DP3,C'0'
00069A                                    (1/323)719 *            IF DP3 NOT = '   12' PERFORM BAD ELSE PERFORM GOOD.
00069A                                    (1/324)720 *ZC     78         IF    DP3,NOT,=,'   12'
00069A C01000000259            000B4C    (41/447)721+         LARL  ZC_R1,=CL6'   12'
0006A0 D504D0921000     000C4A           (41/448)722+         CLC   DP3,0(ZC_R1)
0006A6 A784000D                0006C0     (42/15)723+         BRC   15-ZC_NE,PG_IF_16_1
0006AA                                    (1/326)724 *ZC     78         PERFORM BAD
0006AA C0E0000001E1            000A6C     (45/44)725+         LARL  ZC_R14,PG_BAD
0006B0 C0000000020B            000AC6     (45/45)726+         LARL  ZC_R0,PG_BAD_END+6
0006B6 58F0903C                00003C     (45/46)727+         L     ZC_R15,ZCVT_PERFORM
0006BA 0D1F                               (45/47)728+         BASR  ZC_R1,ZC_R15
0006BC                                    (1/328)729 *ZC     78         ELSE
0006BC A7F4000B                0006D2     (47/15)730+         J     PG_IF_16_E
0006C0                                     (8/41)731+PG_IF_16_1   DS    0H  &TYPE
0006C0                                    (1/330)732 *ZC     78         PERFORM GOOD
0006C0 C0E0000001D0            000A60     (45/44)733+         LARL  ZC_R14,PG_GOOD
0006C6 C000000001D3            000A6C     (45/45)734+         LARL  ZC_R0,PG_GOOD_END+6
0006CC 58F0903C                00003C     (45/46)735+         L     ZC_R15,ZCVT_PERFORM
0006D0 0D1F                               (45/47)736+         BASR  ZC_R1,ZC_R15
0006D2                                     (8/41)737+PG_IF_16_E   DS    0H  &TYPE
0006D2                                    (1/333)738 *            MOVE 1234 TO NP2
0006D2                                    (1/334)739 *ZC     79         MOVE  1234,TO,NP2
0006D2 C01000000217            000B00    (38/366)740+          LARL  ZC_R1,=PL4'1234'
0006D8 D202D08A1001     000C42           (38/368)741+          MVC   NP2,1(ZC_R1)
0006DE                                    (1/337)742 *     17     MOVE NP2 TO DP3                                           
0006DE                                    (1/338)743 *ZC     80     17  MOVE  NP2,TO,DP3
0006DE C01000000267            000BAC    (39/127)744+         LARL  ZC_R1,=AL1(C' ',X'20',X'20',X'20',C'-',X'21',X'20',0)
0006E4 D20690F81000     0000F8           (39/128)745+         MVC   ZCVT_WORKAREA(7),0(ZC_R1) MOVE MASK FOR ED
0006EA 411090FA                0000FA    (39/140)746+         LA    ZC_R1,ZCVT_WORKAREA+1+1
0006EE DF0690F8D08A     0000F8 000C42    (39/141)747+         EDMK  ZCVT_WORKAREA(7),3-3+NP2
0006F4 D204D09290FA     000C4A 0000FA    (39/185)748+         MVC   DP3,ZCVT_WORKAREA+2
0006FA 96F0D095                000C4D    (39/187)749+         OI    3+DP3,C'0'
0006FE                                    (1/340)750 *            IF DP3 NOT = '12-34' PERFORM BAD ELSE PERFORM GOOD.
0006FE                                    (1/341)751 *ZC     81         IF    DP3,NOT,=,'12-34'
0006FE C0100000022A            000B52    (41/447)752+         LARL  ZC_R1,=CL6'12-34'
000704 D504D0921000     000C4A           (41/448)753+         CLC   DP3,0(ZC_R1)
00070A A784000D                000724     (42/15)754+         BRC   15-ZC_NE,PG_IF_17_1
00070E                                    (1/343)755 *ZC     81         PERFORM BAD
00070E C0E0000001AF            000A6C     (45/44)756+         LARL  ZC_R14,PG_BAD
000714 C000000001D9            000AC6     (45/45)757+         LARL  ZC_R0,PG_BAD_END+6
00071A 58F0903C                00003C     (45/46)758+         L     ZC_R15,ZCVT_PERFORM
00071E 0D1F                               (45/47)759+         BASR  ZC_R1,ZC_R15
000720                                    (1/345)760 *ZC     81         ELSE
000720 A7F4000B                000736     (47/15)761+         J     PG_IF_17_E
000724                                     (8/41)762+PG_IF_17_1   DS    0H  &TYPE
000724                                    (1/347)763 *ZC     81         PERFORM GOOD
000724 C0E00000019E            000A60     (45/44)764+         LARL  ZC_R14,PG_GOOD
00072A C000000001A1            000A6C     (45/45)765+         LARL  ZC_R0,PG_GOOD_END+6
000730 58F0903C                00003C     (45/46)766+         L     ZC_R15,ZCVT_PERFORM
000734 0D1F                               (45/47)767+         BASR  ZC_R1,ZC_R15
000736                                     (8/41)768+PG_IF_17_E   DS    0H  &TYPE
000736                                    (1/350)769 *     18     MOVE ABCDEF(2:1) TO ABCDEF(5:1)
000736                                    (1/351)770 *ZC     82     18  MOVE  ABCDEF,'(',2,:,1,')',TO,ABCDEF,'(',5,:,1,')'
000736 4120D058                000C10     (49/21)771+         LA    ZC_R2,ABCDEF
00073A C0E900000001            000001    (49/154)772+         IILF  ZC_R14,1
000740 0620                              (49/158)773+         BCTR  ZC_R2,0 BACKUP FOR FULL OFFSET+ADJUSTMENT
000742 4130D058                000C10     (49/21)774+         LA    ZC_R3,ABCDEF
000746 C0F900000001            000001    (49/154)775+         IILF  ZC_R15,1
00074C 0630                              (49/158)776+         BCTR  ZC_R3,0 BACKUP FOR FULL OFFSET+ADJUSTMENT
00074E 41030005                          (38/229)777+         LA    ZC_R0,5(ZC_R3)
000752 181F                              (38/231)778+         LR    ZC_R1,ZC_R15     RPI 1182 RMD VLEN TAR REG
000754 41220002                          (38/236)779+         LA    ZC_R2,2(ZC_R2)
000758 183E                              (38/238)780+         LR    ZC_R3,ZC_R14     RPI 1182 RMD VLEN SRC REG
00075A A53A4000                          (38/239)781+         OILH  ZC_R3,X'4000'    RPI 1182 PAD SHORT SRC WITH BLANKS
00075E 0E02                              (38/290)782+         MVCL  ZC_R0,ZC_R2
000760                                    (1/353)783 *            IF ABCDEF NOT = 'ABCDBF' PERFORM BAD ELSE PERFORM GOOD.
000760                                    (1/354)784 *ZC     83         IF    ABCDEF,NOT,=,'ABCDBF'
000760 C010000001FC            000B58    (41/447)785+         LARL  ZC_R1,=CL6'ABCDBF'
000766 D505D0581000     000C10           (41/448)786+         CLC   ABCDEF,0(ZC_R1)
00076C A784000D                000786     (42/15)787+         BRC   15-ZC_NE,PG_IF_18_1
000770                                    (1/356)788 *ZC     83         PERFORM BAD
000770 C0E00000017E            000A6C     (45/44)789+         LARL  ZC_R14,PG_BAD
000776 C000000001A8            000AC6     (45/45)790+         LARL  ZC_R0,PG_BAD_END+6
00077C 58F0903C                00003C     (45/46)791+         L     ZC_R15,ZCVT_PERFORM
000780 0D1F                               (45/47)792+         BASR  ZC_R1,ZC_R15
000782                                    (1/358)793 *ZC     83         ELSE
000782 A7F4000B                000798     (47/15)794+         J     PG_IF_18_E
000786                                     (8/41)795+PG_IF_18_1   DS    0H  &TYPE
000786                                    (1/360)796 *ZC     83         PERFORM GOOD
000786 C0E00000016D            000A60     (45/44)797+         LARL  ZC_R14,PG_GOOD
00078C C00000000170            000A6C     (45/45)798+         LARL  ZC_R0,PG_GOOD_END+6
000792 58F0903C                00003C     (45/46)799+         L     ZC_R15,ZCVT_PERFORM
000796 0D1F                               (45/47)800+         BASR  ZC_R1,ZC_R15
000798                                     (8/41)801+PG_IF_18_E   DS    0H  &TYPE
000798                                    (1/363)802 *     19     IF ABC(1)(2:1) NOT = ABC(2)(2:1)
000798                                    (1/365)803 *ZC     84     19  IF    ABC,'(',1,')','(',2,:,1,')',NOT,=,ABC,'(',2,')','(',2,:,1,')'
000798 4120D058                000C10     (49/21)805+         LA    ZC_R2,ABC
00079C 0620                              (49/158)806+         BCTR  ZC_R2,0 BACKUP FOR FULL OFFSET+ADJUSTMENT
00079E C03900000003            000003     (50/32)807+         IILF  ZC_R3,(2-1)*3 (LIT-1)*LEN
0007A4 4133D058                000C10     (50/33)808+         LA    ZC_R3,ABC(ZC_R3)
0007A8 0630                              (49/158)809+         BCTR  ZC_R3,0 BACKUP FOR FULL OFFSET+ADJUSTMENT
0007AA D50020023002                     (41/2029)810+         CLC   2(1,ZC_R2),2(ZC_R3)
0007B0 A784000D                0007CA     (42/15)811+         BRC   15-ZC_NE,PG_IF_19_1
0007B4                                    (1/368)812 *                PERFORM BAD ELSE PERFORM GOOD.
0007B4                                    (1/369)813 *ZC     85         PERFORM BAD
0007B4 C0E00000015C            000A6C     (45/44)814+         LARL  ZC_R14,PG_BAD
0007BA C00000000186            000AC6     (45/45)815+         LARL  ZC_R0,PG_BAD_END+6
0007C0 58F0903C                00003C     (45/46)816+         L     ZC_R15,ZCVT_PERFORM
0007C4 0D1F                               (45/47)817+         BASR  ZC_R1,ZC_R15
0007C6                                    (1/371)818 *ZC     85         ELSE
0007C6 A7F4000B                0007DC     (47/15)819+         J     PG_IF_19_E
0007CA                                     (8/41)820+PG_IF_19_1   DS    0H  &TYPE
0007CA                                    (1/373)821 *ZC     85         PERFORM GOOD
0007CA C0E00000014B            000A60     (45/44)822+         LARL  ZC_R14,PG_GOOD
0007D0 C0000000014E            000A6C     (45/45)823+         LARL  ZC_R0,PG_GOOD_END+6
0007D6 58F0903C                00003C     (45/46)824+         L     ZC_R15,ZCVT_PERFORM
0007DA 0D1F                               (45/47)825+         BASR  ZC_R1,ZC_R15
0007DC                                     (8/41)826+PG_IF_19_E   DS    0H  &TYPE
0007DC                                    (1/376)827 *     20     MOVE ABC(1)(2:2) TO ABC(2)(2:2)
0007DC                                    (1/378)828 *ZC     86     20  MOVE  ABC,'(',1,')','(',2,:,2,')',TO,ABC,'(',2,')','(',2,:,2,')'
0007DC 4120D058                000C10     (49/21)830+         LA    ZC_R2,ABC
0007E0 C0E900000002            000002    (49/154)831+         IILF  ZC_R14,2
0007E6 0620                              (49/158)832+         BCTR  ZC_R2,0 BACKUP FOR FULL OFFSET+ADJUSTMENT
0007E8 C03900000003            000003     (50/32)833+         IILF  ZC_R3,(2-1)*3 (LIT-1)*LEN
0007EE 4133D058                000C10     (50/33)834+         LA    ZC_R3,ABC(ZC_R3)
0007F2 C0F900000002            000002    (49/154)835+         IILF  ZC_R15,2
0007F8 0630                              (49/158)836+         BCTR  ZC_R3,0 BACKUP FOR FULL OFFSET+ADJUSTMENT
0007FA 41030002                          (38/229)837+         LA    ZC_R0,2(ZC_R3)
0007FE 181F                              (38/231)838+         LR    ZC_R1,ZC_R15     RPI 1182 RMD VLEN TAR REG
000800 41220002                          (38/236)839+         LA    ZC_R2,2(ZC_R2)
000804 183E                              (38/238)840+         LR    ZC_R3,ZC_R14     RPI 1182 RMD VLEN SRC REG
000806 A53A4000                          (38/239)841+         OILH  ZC_R3,X'4000'    RPI 1182 PAD SHORT SRC WITH BLANKS
00080A 0E02                              (38/290)842+         MVCL  ZC_R0,ZC_R2
00080C                                    (1/381)843 *            IF ABC(2) NOT = 'DBC' PERFORM BAD ELSE PERFORM GOOD.
00080C                                    (1/382)844 *ZC     87         IF    ABC,'(',2,')',NOT,=,'DBC'
00080C C02900000003            000003     (50/32)845+         IILF  ZC_R2,(2-1)*3 (LIT-1)*LEN
000812 4122D058                000C10     (50/33)846+         LA    ZC_R2,ABC(ZC_R2)
000816 C01000000179            000B08    (41/447)847+         LARL  ZC_R1,=CL4'DBC'
00081C D50220001000                      (41/448)848+         CLC   0(3,ZC_R2),0(ZC_R1)
000822 A784000D                00083C     (42/15)849+         BRC   15-ZC_NE,PG_IF_20_1
000826                                    (1/384)850 *ZC     87         PERFORM BAD
000826 C0E000000123            000A6C     (45/44)851+         LARL  ZC_R14,PG_BAD
00082C C0000000014D            000AC6     (45/45)852+         LARL  ZC_R0,PG_BAD_END+6
000832 58F0903C                00003C     (45/46)853+         L     ZC_R15,ZCVT_PERFORM
000836 0D1F                               (45/47)854+         BASR  ZC_R1,ZC_R15
000838                                    (1/386)855 *ZC     87         ELSE
000838 A7F4000B                00084E     (47/15)856+         J     PG_IF_20_E
00083C                                     (8/41)857+PG_IF_20_1   DS    0H  &TYPE
00083C                                    (1/388)858 *ZC     87         PERFORM GOOD
00083C C0E000000112            000A60     (45/44)859+         LARL  ZC_R14,PG_GOOD
000842 C00000000115            000A6C     (45/45)860+         LARL  ZC_R0,PG_GOOD_END+6
000848 58F0903C                00003C     (45/46)861+         L     ZC_R15,ZCVT_PERFORM
00084C 0D1F                               (45/47)862+         BASR  ZC_R1,ZC_R15
00084E                                     (8/41)863+PG_IF_20_E   DS    0H  &TYPE
00084E                                    (1/391)864 *     21     MOVE FLD1 TO FLD2(2:2)
00084E                                    (1/392)865 *ZC     88     21  MOVE  FLD1,TO,FLD2,'(',2,:,2,')'
00084E 4130D099                000C51     (49/21)866+         LA    ZC_R3,FLD2
000852 C0F900000002            000002    (49/154)867+         IILF  ZC_R15,2
000858 0630                              (49/158)868+         BCTR  ZC_R3,0 BACKUP FOR FULL OFFSET+ADJUSTMENT
00085A 41030002                          (38/229)869+         LA    ZC_R0,2(ZC_R3)
00085E 181F                              (38/231)870+         LR    ZC_R1,ZC_R15     RPI 1182 RMD VLEN TAR REG
000860 4120D097                000C4F    (38/236)871+         LA    ZC_R2,FLD1
000864 C03900000002            000002    (38/241)872+         IILF  ZC_R3,2  RPI 1182 LHI TO IILH
00086A 0E02                              (38/290)873+         MVCL  ZC_R0,ZC_R2
00086C                                    (1/394)874 *            IF FLD2 NOT = 'AXY' PERFORM BAD ELSE PERFORM GOOD.
00086C                                    (1/395)875 *ZC     89         IF    FLD2,NOT,=,'AXY'
00086C C01000000150            000B0C    (41/447)876+         LARL  ZC_R1,=CL4'AXY'
000872 D502D0991000     000C51           (41/448)877+         CLC   FLD2,0(ZC_R1)
000878 A784000D                000892     (42/15)878+         BRC   15-ZC_NE,PG_IF_21_1
00087C                                    (1/397)879 *ZC     89         PERFORM BAD
00087C C0E0000000F8            000A6C     (45/44)880+         LARL  ZC_R14,PG_BAD
000882 C00000000122            000AC6     (45/45)881+         LARL  ZC_R0,PG_BAD_END+6
000888 58F0903C                00003C     (45/46)882+         L     ZC_R15,ZCVT_PERFORM
00088C 0D1F                               (45/47)883+         BASR  ZC_R1,ZC_R15
00088E                                    (1/399)884 *ZC     89         ELSE
00088E A7F4000B                0008A4     (47/15)885+         J     PG_IF_21_E
000892                                     (8/41)886+PG_IF_21_1   DS    0H  &TYPE
000892                                    (1/401)887 *ZC     89         PERFORM GOOD
000892 C0E0000000E7            000A60     (45/44)888+         LARL  ZC_R14,PG_GOOD
000898 C000000000EA            000A6C     (45/45)889+         LARL  ZC_R0,PG_GOOD_END+6
00089E 58F0903C                00003C     (45/46)890+         L     ZC_R15,ZCVT_PERFORM
0008A2 0D1F                               (45/47)891+         BASR  ZC_R1,ZC_R15
0008A4                                     (8/41)892+PG_IF_21_E   DS    0H  &TYPE
0008A4                                    (1/404)893 *     22     MOVE 2 TO SUB1
0008A4                                    (1/405)894 *ZC     90     22  MOVE  2,TO,SUB1
0008A4 92F2D0A0                000C58    (38/403)895+          MVI   SUB1,C'2'
0008A8                                    (1/407)896 *            MOVE '12' TO FLD2(SUB1:2)
0008A8                                    (1/408)897 *ZC     91         MOVE  '12',TO,FLD2,'(',SUB1,:,2,')'
0008A8 4130D099                000C51     (49/21)898+         LA    ZC_R3,FLD2
0008AC C0F9000000A0            0000A0     (49/49)899+         IILF  ZC_R15,SUB1-ZC_WS
0008B2 1AFD                               (49/50)900+         AR    ZC_R15,ZC_R13
0008B4 F20090A8F000     0000A8            (49/67)901+         PACK  ZCVT_PWORK1(1),0(1,ZC_R15)
0008BA F87090A090A8     0000A0 0000A8     (49/68)902+         ZAP   ZCVT_PWORK,ZCVT_PWORK1(1)
0008C0 4FF090A0                0000A0     (49/69)903+         CVB   ZC_R15,ZCVT_PWORK
0008C4 1A3F                               (49/70)904+         AR    ZC_R3,ZC_R15
0008C6 C0F900000002            000002    (49/154)905+         IILF  ZC_R15,2
0008CC 0630                              (49/158)906+         BCTR  ZC_R3,0 BACKUP FOR FULL OFFSET+ADJUSTMENT
0008CE 41030000                          (38/229)907+         LA    ZC_R0,0(ZC_R3)
0008D2 181F                              (38/231)908+         LR    ZC_R1,ZC_R15     RPI 1182 RMD VLEN TAR REG
0008D4 C02000000145            000B5E    (38/284)909+         LARL  ZC_R2,=CL2'12'
0008DA A5330002                          (38/286)910+         IILL  ZC_R3,2
0008DE A5324000                          (38/287)911+         IILH  ZC_R3,X'4000'
0008E2 0E02                              (38/290)912+         MVCL  ZC_R0,ZC_R2
0008E4                                    (1/410)913 *            IF FLD2 NOT = 'A12' PERFORM BAD ELSE PERFORM GOOD.
0008E4                                    (1/411)914 *ZC     92         IF    FLD2,NOT,=,'A12'
0008E4 C01000000116            000B10    (41/447)915+         LARL  ZC_R1,=CL4'A12'
0008EA D502D0991000     000C51           (41/448)916+         CLC   FLD2,0(ZC_R1)
0008F0 A784000D                00090A     (42/15)917+         BRC   15-ZC_NE,PG_IF_22_1
0008F4                                    (1/413)918 *ZC     92         PERFORM BAD
0008F4 C0E0000000BC            000A6C     (45/44)919+         LARL  ZC_R14,PG_BAD
0008FA C000000000E6            000AC6     (45/45)920+         LARL  ZC_R0,PG_BAD_END+6
000900 58F0903C                00003C     (45/46)921+         L     ZC_R15,ZCVT_PERFORM
000904 0D1F                               (45/47)922+         BASR  ZC_R1,ZC_R15
000906                                    (1/415)923 *ZC     92         ELSE
000906 A7F4000B                00091C     (47/15)924+         J     PG_IF_22_E
00090A                                     (8/41)925+PG_IF_22_1   DS    0H  &TYPE
00090A                                    (1/417)926 *ZC     92         PERFORM GOOD
00090A C0E0000000AB            000A60     (45/44)927+         LARL  ZC_R14,PG_GOOD
000910 C000000000AE            000A6C     (45/45)928+         LARL  ZC_R0,PG_GOOD_END+6
000916 58F0903C                00003C     (45/46)929+         L     ZC_R15,ZCVT_PERFORM
00091A 0D1F                               (45/47)930+         BASR  ZC_R1,ZC_R15
00091C                                     (8/41)931+PG_IF_22_E   DS    0H  &TYPE
00091C                                    (1/420)932 *     23     MOVE 1 TO SUB1
00091C                                    (1/421)933 *ZC     93     23  MOVE  1,TO,SUB1
00091C 92F1D0A0                000C58    (38/403)934+          MVI   SUB1,C'1'
000920                                    (1/423)935 *             MOVE '12' TO FLD2(SUB1+1:2)
000920                                    (1/424)936 *ZC     94         MOVE  '12',TO,FLD2,'(',SUB1,+,1,:,2,')'
000920 4130D099                000C51     (49/21)937+         LA    ZC_R3,FLD2
000924 C0F9000000A0            0000A0     (49/49)938+         IILF  ZC_R15,SUB1-ZC_WS
00092A 1AFD                               (49/50)939+         AR    ZC_R15,ZC_R13
00092C F20090A8F000     0000A8            (49/67)940+         PACK  ZCVT_PWORK1(1),0(1,ZC_R15)
000932 F87090A090A8     0000A0 0000A8     (49/68)941+         ZAP   ZCVT_PWORK,ZCVT_PWORK1(1)
000938 4FF090A0                0000A0     (49/69)942+         CVB   ZC_R15,ZCVT_PWORK
00093C 1A3F                               (49/70)943+         AR    ZC_R3,ZC_R15
00093E C0F900000002            000002    (49/154)944+         IILF  ZC_R15,2
000944 0630                              (49/158)945+         BCTR  ZC_R3,0 BACKUP FOR FULL OFFSET+ADJUSTMENT
000946 C23900000001            000001    (49/160)946+         AFI   ZC_R3,1
00094C 41030000                          (38/229)947+         LA    ZC_R0,0(ZC_R3)
000950 181F                              (38/231)948+         LR    ZC_R1,ZC_R15     RPI 1182 RMD VLEN TAR REG
000952 C02000000106            000B5E    (38/284)949+         LARL  ZC_R2,=CL2'12'
000958 A5330002                          (38/286)950+         IILL  ZC_R3,2
00095C A5324000                          (38/287)951+         IILH  ZC_R3,X'4000'
000960 0E02                              (38/290)952+         MVCL  ZC_R0,ZC_R2
000962                                    (1/426)953 *            IF FLD2 NOT = 'A12' PERFORM BAD ELSE PERFORM GOOD.
000962                                    (1/427)954 *ZC     95         IF    FLD2,NOT,=,'A12'
000962 C010000000D7            000B10    (41/447)955+         LARL  ZC_R1,=CL4'A12'
000968 D502D0991000     000C51           (41/448)956+         CLC   FLD2,0(ZC_R1)
00096E A784000D                000988     (42/15)957+         BRC   15-ZC_NE,PG_IF_23_1
000972                                    (1/429)958 *ZC     95         PERFORM BAD
000972 C0E00000007D            000A6C     (45/44)959+         LARL  ZC_R14,PG_BAD
000978 C000000000A7            000AC6     (45/45)960+         LARL  ZC_R0,PG_BAD_END+6
00097E 58F0903C                00003C     (45/46)961+         L     ZC_R15,ZCVT_PERFORM
000982 0D1F                               (45/47)962+         BASR  ZC_R1,ZC_R15
000984                                    (1/431)963 *ZC     95         ELSE
000984 A7F4000B                00099A     (47/15)964+         J     PG_IF_23_E
000988                                     (8/41)965+PG_IF_23_1   DS    0H  &TYPE
000988                                    (1/433)966 *ZC     95         PERFORM GOOD
000988 C0E00000006C            000A60     (45/44)967+         LARL  ZC_R14,PG_GOOD
00098E C0000000006F            000A6C     (45/45)968+         LARL  ZC_R0,PG_GOOD_END+6
000994 58F0903C                00003C     (45/46)969+         L     ZC_R15,ZCVT_PERFORM
000998 0D1F                               (45/47)970+         BASR  ZC_R1,ZC_R15
00099A                                     (8/41)971+PG_IF_23_E   DS    0H  &TYPE
00099A                                    (1/436)972 *     24     MOVE 3 TO SUB1
00099A                                    (1/437)973 *ZC     96     24  MOVE  3,TO,SUB1
00099A 92F3D0A0                000C58    (38/403)974+          MVI   SUB1,C'3'
00099E                                    (1/439)975 *             MOVE '12' TO FLD2(SUB1 -1:2)
00099E                                    (1/440)976 *ZC     97         MOVE  '12',TO,FLD2,'(',SUB1,-,1,:,2,')'
00099E 4130D099                000C51     (49/21)977+         LA    ZC_R3,FLD2
0009A2 C0F9000000A0            0000A0     (49/49)978+         IILF  ZC_R15,SUB1-ZC_WS
0009A8 1AFD                               (49/50)979+         AR    ZC_R15,ZC_R13
0009AA F20090A8F000     0000A8            (49/67)980+         PACK  ZCVT_PWORK1(1),0(1,ZC_R15)
0009B0 F87090A090A8     0000A0 0000A8     (49/68)981+         ZAP   ZCVT_PWORK,ZCVT_PWORK1(1)
0009B6 4FF090A0                0000A0     (49/69)982+         CVB   ZC_R15,ZCVT_PWORK
0009BA 1A3F                               (49/70)983+         AR    ZC_R3,ZC_R15
0009BC C0F900000002            000002    (49/154)984+         IILF  ZC_R15,2
0009C2 0630                              (49/158)985+         BCTR  ZC_R3,0 BACKUP FOR FULL OFFSET+ADJUSTMENT
0009C4 C239FFFFFFFF            FFFFFF    (49/160)986+         AFI   ZC_R3,-1
0009CA 41030000                          (38/229)987+         LA    ZC_R0,0(ZC_R3)
0009CE 181F                              (38/231)988+         LR    ZC_R1,ZC_R15     RPI 1182 RMD VLEN TAR REG
0009D0 C020000000C7            000B5E    (38/284)989+         LARL  ZC_R2,=CL2'12'
0009D6 A5330002                          (38/286)990+         IILL  ZC_R3,2
0009DA A5324000                          (38/287)991+         IILH  ZC_R3,X'4000'
0009DE 0E02                              (38/290)992+         MVCL  ZC_R0,ZC_R2
0009E0                                    (1/442)993 *            IF FLD2 NOT = 'A12' PERFORM BAD ELSE PERFORM GOOD.
0009E0                                    (1/443)994 *ZC     98         IF    FLD2,NOT,=,'A12'
0009E0 C01000000098            000B10    (41/447)995+         LARL  ZC_R1,=CL4'A12'
0009E6 D502D0991000     000C51           (41/448)996+         CLC   FLD2,0(ZC_R1)
0009EC A784000D                000A06     (42/15)997+         BRC   15-ZC_NE,PG_IF_24_1
0009F0                                    (1/445)998 *ZC     98         PERFORM BAD
0009F0 C0E00000003E            000A6C     (45/44)999+         LARL  ZC_R14,PG_BAD
0009F6 C00000000068            000AC6    (45/45)1000+         LARL  ZC_R0,PG_BAD_END+6
0009FC 58F0903C                00003C    (45/46)1001+         L     ZC_R15,ZCVT_PERFORM
000A00 0D1F                              (45/47)1002+         BASR  ZC_R1,ZC_R15
000A02                                   (1/447)1003 *ZC     98         ELSE
000A02 A7F4000B                000A18    (47/15)1004+         J     PG_IF_24_E
000A06                                    (8/41)1005+PG_IF_24_1   DS    0H  &TYPE
000A06                                   (1/449)1006 *ZC     98         PERFORM GOOD
000A06 C0E00000002D            000A60    (45/44)1007+         LARL  ZC_R14,PG_GOOD
000A0C C00000000030            000A6C    (45/45)1008+         LARL  ZC_R0,PG_GOOD_END+6
000A12 58F0903C                00003C    (45/46)1009+         L     ZC_R15,ZCVT_PERFORM
000A16 0D1F                              (45/47)1010+         BASR  ZC_R1,ZC_R15
000A18                                    (8/41)1011+PG_IF_24_E   DS    0H  &TYPE
000A18                                   (1/452)1012 *        WRAP-UP.
000A18 58F09040                000040     (8/64)1013+PG_MAINLINE_END L ZC_R15,ZCVT_PMCHECK
000A1C 0DEF                               (8/65)1014+         BASR  ZC_R14,ZC_R15 CHECK FOR END OF CURRENT PERFORM
000A1E                                    (8/96)1015+PG_WRAP_UP DS  0H
000A1E                                   (1/454)1016 *            DISPLAY 'TESTMOV1 GOOD TESTS =' GOOD
000A1E                                   (1/455)1017 *ZC    100         DISPLAY 'TESTMOV1 GOOD TESTS =',GOOD
000A1E 413090F8                0000F8    (52/28)1018+         LA    ZC_R3,ZCVT_WORKAREA  ZC_R3=CVT LIST WORK AREA
000A22 C0000000009F            000B60    (52/68)1019+         LARL  ZC_R0,=CL22'TESTMOV1 GOOD TESTS =' PAD TO EVEN LEN LIT
000A28 41100015                          (52/69)1020+         LA    ZC_R1,21
000A2C 412000E7                          (52/70)1021+         LA    ZC_R2,C'X'
000A30 90023000                          (52/71)1022+         STM   ZC_R0,ZC_R2,0(ZC_R3)  SET DISPLAY LIST ENTRY
000A34 4100D09C                000C54    (52/82)1023+         LA    ZC_R0,GOOD
000A38 41100004                          (52/83)1024+         LA    ZC_R1,4  RPI 1182 WAS &SYM_LEN(&FIELD_IX)
000A3C 412000C6                          (52/88)1025+         LA    ZC_R2,C'F'
000A40 9002300C                          (52/90)1026+         STM   ZC_R0,ZC_R2,12(ZC_R3)  SET DISPLAY LIST ENTRY
000A44 96803014                          (52/94)1027+         OI    24-4(ZC_R3),X'80' SET VL BIT IN LAST WORD OF PARM LIST
000A48 1813                              (52/95)1028+         LR    ZC_R1,ZC_R3
000A4A 58F09070                000070    (52/96)1029+         L     ZC_R15,ZCVT_DISPLAY
000A4E 0DEF                              (52/97)1030+         BASR  ZC_R14,ZC_R15
000A50                                   (1/457)1031 *            STOP RUN.
000A50                                   (1/458)1032 *ZC    101         STOP  RUN
000A50 4810D0FB                000CB3    (54/18)1033+         LH    ZC_R1,RETURN_CODE      PASS RETURN CODE IN R1
000A54 58F09030                000030    (54/23)1034+         L     ZC_R15,ZCVT_GOBACK
000A58 07FF                              (54/24)1035+         BR    ZC_R15
000A5A                                   (1/461)1036 *        GOOD.
000A5A 58F09040                000040     (8/64)1037+PG_WRAP_UP_END L ZC_R15,ZCVT_PMCHECK
000A5E 0DEF                               (8/65)1038+         BASR  ZC_R14,ZC_R15 CHECK FOR END OF CURRENT PERFORM
000A60                                    (8/96)1039+PG_GOOD  DS    0H
000A60                                   (1/463)1040 *            ADD 1 TO GOOD
000A60                                   (1/464)1041 *ZC    103         ADD   1,TO,GOOD
000A60 EB01D09C006A            000C54   (56/190)1042+         ASI   GOOD,1
000A66                                   (1/466)1043 *        BAD.
000A66 58F09040                000040     (8/64)1044+PG_GOOD_END L  ZC_R15,ZCVT_PMCHECK
000A6A 0DEF                               (8/65)1045+         BASR  ZC_R14,ZC_R15 CHECK FOR END OF CURRENT PERFORM
000A6C                                    (8/96)1046+PG_BAD   DS    0H
000A6C                                   (1/468)1047 *            DISPLAY 'TESTMOV1 GOOD TESTS =' GOOD 'BAD TESTS=1'.
000A6C                                   (1/469)1048 *ZC    105         DISPLAY 'TESTMOV1 GOOD TESTS =',GOOD,'BAD TESTS=1'
000A6C 413090F8                0000F8    (52/28)1049+         LA    ZC_R3,ZCVT_WORKAREA  ZC_R3=CVT LIST WORK AREA
000A70 C00000000078            000B60    (52/68)1050+         LARL  ZC_R0,=CL22'TESTMOV1 GOOD TESTS =' PAD TO EVEN LEN LIT
000A76 41100015                          (52/69)1051+         LA    ZC_R1,21
000A7A 412000E7                          (52/70)1052+         LA    ZC_R2,C'X'
000A7E 90023000                          (52/71)1053+         STM   ZC_R0,ZC_R2,0(ZC_R3)  SET DISPLAY LIST ENTRY
000A82 4100D09C                000C54    (52/82)1054+         LA    ZC_R0,GOOD
000A86 41100004                          (52/83)1055+         LA    ZC_R1,4  RPI 1182 WAS &SYM_LEN(&FIELD_IX)
000A8A 412000C6                          (52/88)1056+         LA    ZC_R2,C'F'
000A8E 9002300C                          (52/90)1057+         STM   ZC_R0,ZC_R2,12(ZC_R3)  SET DISPLAY LIST ENTRY
000A92 C00000000041            000B14    (52/68)1058+         LARL  ZC_R0,=CL12'BAD TESTS=1' PAD TO EVEN LEN LIT
000A98 4110000B                          (52/69)1059+         LA    ZC_R1,11
000A9C 412000E7                          (52/70)1060+         LA    ZC_R2,C'X'
000AA0 90023018                          (52/71)1061+         STM   ZC_R0,ZC_R2,24(ZC_R3)  SET DISPLAY LIST ENTRY
000AA4 96803020                          (52/94)1062+         OI    36-4(ZC_R3),X'80' SET VL BIT IN LAST WORD OF PARM LIST
000AA8 1813                              (52/95)1063+         LR    ZC_R1,ZC_R3
000AAA 58F09070                000070    (52/96)1064+         L     ZC_R15,ZCVT_DISPLAY
000AAE 0DEF                              (52/97)1065+         BASR  ZC_R14,ZC_R15
000AB0                                   (1/472)1066 *            MOVE 16 TO RETURN-CODE
000AB0                                   (1/473)1067 *ZC    106         MOVE  16,TO,RETURN_CODE
000AB0 E544D0FB0010            000CB3   (38/361)1068+          MVHHI RETURN_CODE,16
000AB6                                   (1/475)1069 *            STOP RUN.
000AB6                                   (1/476)1070 *ZC    107         STOP  RUN
000AB6 4810D0FB                000CB3    (54/18)1071+         LH    ZC_R1,RETURN_CODE      PASS RETURN CODE IN R1
000ABA 58F09030                000030    (54/23)1072+         L     ZC_R15,ZCVT_GOBACK
000ABE 07FF                              (54/24)1073+         BR    ZC_R15
000AC0 58F09040                000040     (8/64)1074+PG_BAD_END L   ZC_R15,ZCVT_PMCHECK
000AC4 0DEF                               (8/65)1075+         BASR  ZC_R14,ZC_R15 CHECK FOR END OF CURRENT PERFORM
000AC6                                   (8/108)1076+SN_END_PROCEDURE DS 0H SECTION
000AC6                                   (58/18)1077+*        PROCEDURE END
000AC6 4810D0FB                000CB3    (58/24)1078+         LH    ZC_R1,RETURN_CODE
000ACA 58F09030                000030    (58/25)1079+         L     ZC_R15,ZCVT_GOBACK
000ACE 0DEF                              (58/26)1080+         BASR  ZC_R14,ZC_R15
000AD0                                   (58/32)1081+         LTORG 
000AD0 075BCD15         =F'123456789'
000AD4 4040404040404040 =CL12'          0'
000ADC 4040F040
000AE0 F1F2F36BF4F5F66B =CL12'123,456,789'
000AE8 F7F8F940
000AEC 40404040         =CL4'    '
000AF0 404040F1         =CL4'   1'
000AF4 404040F0         =CL4'   0'
000AF8 F1F2F3F4         =CL4'1234'
000AFC 0000000C         =PL4'0'
000B00 0001234C         =PL4'1234'
000B04 0000012C         =PL4'12'
000B08 C4C2C340         =CL4'DBC'
000B0C C1E7E840         =CL4'AXY'
000B10 C1F1F240         =CL4'A12'
000B14 C2C1C440E3C5E2E3 =CL12'BAD TESTS=1'
000B1C E27EF140
000B20 4040404040404040 =CL10'         '
000B28 4040
000B2A 4040404040404040 =CL10'        1'
000B32 F140
000B34 4040404040404040 =CL10'        0'
000B3C F040
000B3E F1F2F3F4F5F6F7F8 =CL10'123456789'
000B46 F940
000B48 000C             =PL2'0'
000B4A 001C             =PL2'1'
000B4C 404040F1F240     =CL6'   12'
000B52 F1F260F3F440     =CL6'12-34'
000B58 C1C2C3C4C2C6     =CL6'ABCDBF'
000B5E F1F2             =CL2'12'
000B60 E3C5E2E3D4D6E5F1 =CL22'TESTMOV1 GOOD TESTS ='
000B68 40C7D6D6C440E3C5
000B70 E2E3E2407E40
000B76 4040202020202020 =AL1(C' ',C' ',X'20',X'20',X'20',X'20',X'20',X'20',X'20',X'20',X'20',0)
000B7E 20202000
000B82 4040202020202020 =AL1(C' ',C' ',X'20',X'20',X'20',X'20',X'20',X'20',X'20',X'21',X'20',0)
000B8A 20212000
000B8E 40402020206B2020 =AL1(C' ',C' ',X'20',X'20',X'20',C',',X'20',X'20',X'20',C',',X'20',X'21',X'20',0)
000B96 206B20212000
000B9C 402020202020     =AL1(C' ',X'20',X'20',X'20',X'20',X'20')
000BA2 402020202120     =AL1(C' ',X'20',X'20',X'20',X'21',X'20')
000BA8 40402000         =AL1(C' ',C' ',X'20',0)
000BAC 4020202060212000 =AL1(C' ',X'20',X'20',X'20',C'-',X'21',X'20',0)
000BB4                                    (6/15)1082+*    ZCOBOL WORKING STORAGE SECTION DATA ITEMS 
000BB4                                    (6/15)1083+*    LVL DATA NAME                      ADDR     LEN      DUP TYP PIC        VALUE 
000BB4                                    (6/15)1085+*    01  ZC_SAVEAREA                    00000000 00000048 1   X   X(72)       
000BB4                                    (6/15)1087+*    01  ZC_WS_ID                       00000048 00000008 1   X   X(8)       ''WS*WS*WS'' 
000BB4                                    (6/15)1089+*    01  ZC_WS_START                    00000050 00000004 1   A               
000BB4                                    (6/15)1091+*    01  ZC_WS_LEN                      00000054 00000004 1   F   9(9)        
000BB4                                    (6/15)1093+*    01  FILLER                         00000058 00000000 1   X               
000BB4                                    (6/15)1095+*    01  ABCDEF                         00000058 00000006 1   X   X(6)       ''ABCDEF'' 
000BB4                                    (6/15)1097+*    01  ABC                            00000058 00000003 2   X   X(3)        
000BB4                                    (6/15)1099+*    01  NF1                            0000005E 00000004 1   F   9(9)        
000BB4                                    (6/15)1101+*    01  DF1                            00000062 00000009 1   X   Z(9)        
000BB4                                    (6/15)1103+*    01  DF2                            0000006B 00000009 1   X   Z(8)9       
000BB4                                    (6/15)1105+*    01  DF3                            00000074 0000000B 1   X   ZZZ,ZZZ,ZZ  
000BB4                                    (6/15)1107+*    01  NH1                            0000007F 00000002 1   H   9(4)        
000BB4                                    (6/15)1109+*    01  DH1                            00000081 00000004 1   X   Z(4)        
000BB4                                    (6/15)1111+*    01  DH2                            00000085 00000004 1   X   Z(3)9       
000BB4                                    (6/15)1113+*    01  NP1                            00000089 00000001 1   P   9           
000BB4                                    (6/15)1115+*    01  NP2                            0000008A 00000003 1   P   9(4)        
000BB4                                    (6/15)1117+*    01  DP1                            0000008D 00000001 1   X   Z           
000BB4                                    (6/15)1119+*    01  DP2                            0000008E 00000004 1   X   Z(3)9       
000BB4                                    (6/15)1121+*    01  DP3                            00000092 00000005 1   X   ZZ-99       
000BB4                                    (6/15)1123+*    01  FLD1                           00000097 00000002 1   X   XX         ''XY'' 
000BB4                                    (6/15)1125+*    01  FLD2                           00000099 00000003 1   X   XXX        ''ABC'' 
000BB4                                    (6/15)1127+*    01  GOOD                           0000009C 00000004 1   F   9(9)       0 
000BB4                                    (6/15)1129+*    01  SUB1                           000000A0 00000001 1   Z   9           
000BB4                                    (6/15)1131+*    01  DEBUG_ITEM                     000000A1 00000058 1   X               
000BB4                                    (6/15)1133+*    02  DEBUG_LINE                     000000A1 00000006 1   X   X(6)        
000BB4                                    (6/15)1135+*    02  FILLER                         000000A7 00000001 1   X   X          SPACE 
000BB4                                    (6/15)1137+*    02  DEBUG_NAME                     000000A8 0000001E 1   X   X(30)       
000BB4                                    (6/15)1139+*    02  FILLER                         000000C6 00000001 1   X   X          SPACE 
000BB4                                    (6/15)1141+*    02  DEBUG_SUB_1                    000000C7 00000004 1   Z   9999        
000BB4                                    (6/15)1143+*    02  FILLER                         000000CB 00000001 1   X   X          SPACE 
000BB4                                    (6/15)1145+*    02  DEBUG_SUB_2                    000000CC 00000004 1   Z   9999        
000BB4                                    (6/15)1147+*    02  FILLER                         000000D0 00000001 1   X   X          SPACE 
000BB4                                    (6/15)1149+*    02  DEBUG_SUB_3                    000000D1 00000004 1   Z   9999        
000BB4                                    (6/15)1151+*    02  FILLER                         000000D5 00000001 1   X   X          SPACE 
000BB4                                    (6/15)1153+*    02  DEBUG_CONTENTS                 000000D6 00000023 1   X   X(35)       
000BB4                                    (6/15)1155+*    01  TRUE                           000000F9 00000001 1   Z   9          1 
000BB4                                    (6/15)1157+*    01  FALSE                          000000FA 00000001 1   Z   9          0 
000BB4                                    (6/15)1159+*    01  RETURN_CODE                    000000FB 00000002 1   H   9(4)       0 
000BB8                                   (60/39)1161+ZC_WSLOC LOCTR 
000BB8                  00000000        (60/131)1162+ZC_WS_LOC_1  EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000BB8                                  (60/336)1163+ZC_SAVEAREA DS CL72
000C00                  00000048        (60/131)1164+ZC_WS_LOC_2  EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000C00 E6E25CE6E25CE6E2                 (60/220)1165+ZC_WS_ID DC CL8'WS*WS*WS'
000C08                  00000050        (60/131)1166+ZC_WS_LOC_3  EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000C08                                  (60/322)1167+ZC_WS_START DS AL4
000C0C                  00000054        (60/131)1168+ZC_WS_LOC_4  EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000C0C                                  (60/324)1169+ZC_WS_LEN DS FL4
000C10                  00000058        (60/131)1170+ZC_WS_LOC_5  EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000C10                                  (60/336)1171+         DS  0CL0
000C10                  00000058        (60/131)1172+ZC_WS_LOC_6  EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000C10 C1C2C3C4C5C6                     (60/220)1173+ABCDEF   DC CL6'ABCDEF'
000C16                  000C10          (60/123)1174+         ORG   ABCDEF  START REDEFINE
000C10                  00000058        (60/131)1175+ZC_WS_LOC_7  EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000C10                                  (60/336)1176+ABC      DS  2CL3
000C16                  0000005E        (60/131)1177+ZC_WS_LOC_8  EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000C16                                  (60/324)1178+NF1      DS  FL4
000C1A                  00000062        (60/131)1179+ZC_WS_LOC_9  EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000C1A                                  (60/336)1180+DF1      DS  CL9
000C23                  0000006B        (60/131)1181+ZC_WS_LOC_10 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000C23                                  (60/336)1182+DF2      DS  CL9
000C2C                  00000074        (60/131)1183+ZC_WS_LOC_11 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000C2C                                  (60/336)1184+DF3      DS  CL11
000C37                  0000007F        (60/131)1185+ZC_WS_LOC_12 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000C37                                  (60/328)1186+NH1      DS  HL2
000C39                  00000081        (60/131)1187+ZC_WS_LOC_13 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000C39                                  (60/336)1188+DH1      DS  CL4
000C3D                  00000085        (60/131)1189+ZC_WS_LOC_14 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000C3D                                  (60/336)1190+DH2      DS  CL4
000C41                  00000089        (60/131)1191+ZC_WS_LOC_15 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000C41                                  (60/332)1192+NP1      DS  PL1
000C42                  0000008A        (60/131)1193+ZC_WS_LOC_16 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000C42                                  (60/332)1194+NP2      DS  PL3
000C45                  0000008D        (60/131)1195+ZC_WS_LOC_17 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000C45                                  (60/336)1196+DP1      DS  CL1
000C46                  0000008E        (60/131)1197+ZC_WS_LOC_18 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000C46                                  (60/336)1198+DP2      DS  CL4
000C4A                  00000092        (60/131)1199+ZC_WS_LOC_19 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000C4A                                  (60/336)1200+DP3      DS  CL5
000C4F                  00000097        (60/131)1201+ZC_WS_LOC_20 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000C4F E7E8                             (60/220)1202+FLD1     DC CL2'XY'
000C51                  00000099        (60/131)1203+ZC_WS_LOC_21 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000C51 C1C2C3                           (60/220)1204+FLD2     DC CL3'ABC'
000C54                  0000009C        (60/131)1205+ZC_WS_LOC_22 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000C54 00000000                         (60/188)1206+GOOD     DC AL4(0)                  RPI 1065
000C58                  000000A0        (60/131)1207+ZC_WS_LOC_23 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000C58                                  (60/338)1208+SUB1     DS  ZL1
000C59                  000000A1        (60/131)1209+ZC_WS_LOC_24 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000C59                                  (60/336)1210+DEBUG_ITEM DS 0CL88
000C59                  000000A1        (60/131)1211+ZC_WS_LOC_25 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000C59                                  (60/336)1212+DEBUG_LINE DS CL6
000C5F                  000000A7        (60/131)1213+ZC_WS_LOC_26 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000C5F 40                               (60/227)1214+         DC CL1' '
000C60                  000000A8        (60/131)1215+ZC_WS_LOC_27 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000C60                                  (60/336)1216+DEBUG_NAME DS CL30
000C7E                  000000C6        (60/131)1217+ZC_WS_LOC_28 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000C7E 40                               (60/227)1218+         DC CL1' '
000C7F                  000000C7        (60/131)1219+ZC_WS_LOC_29 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000C7F                                  (60/338)1220+DEBUG_SUB_1 DS ZL4
000C83                  000000CB        (60/131)1221+ZC_WS_LOC_30 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000C83 40                               (60/227)1222+         DC CL1' '
000C84                  000000CC        (60/131)1223+ZC_WS_LOC_31 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000C84                                  (60/338)1224+DEBUG_SUB_2 DS ZL4
000C88                  000000D0        (60/131)1225+ZC_WS_LOC_32 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000C88 40                               (60/227)1226+         DC CL1' '
000C89                  000000D1        (60/131)1227+ZC_WS_LOC_33 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000C89                                  (60/338)1228+DEBUG_SUB_3 DS ZL4
000C8D                  000000D5        (60/131)1229+ZC_WS_LOC_34 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000C8D 40                               (60/227)1230+         DC CL1' '
000C8E                  000000D6        (60/131)1231+ZC_WS_LOC_35 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000C8E                                  (60/336)1232+DEBUG_CONTENTS DS CL35
000CB1                  000000F9        (60/131)1233+ZC_WS_LOC_36 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000CB1 F1                               (60/251)1234+TRUE     DC CL1'1'
000CB2                  000000FA        (60/131)1235+ZC_WS_LOC_37 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000CB2 F0                               (60/251)1236+FALSE    DC CL1'0'
000CB3                  000000FB        (60/131)1237+ZC_WS_LOC_38 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000CB3 0000                             (60/199)1238+RETURN_CODE DC AL2(0)                  RPI 1065
000CB5                                    (6/15)1239+*    ZCOBOL LINKAGE SECTION DATA ITEMS 
000CB5                                    (6/15)1240+*    LVL DATA NAME                      ADDR     LEN      DUP TYP PIC        VALUE 
000CB5                                   (60/39)1242+ZC_WSLOC LOCTR 
000CB5                                   (58/58)1243+ZC_WSLOC LOCTR 
000CB5                  00000000         (58/60)1244+ZC_WS_DIFF EQU  *-ZC_WS-253  DIFF BETWEEN ALLOC AND CALC WS
000CB8                                   (58/65)1245+ZC_WS_END DS   0D
000CB8                                   (61/14)1246+         MNOTE *,'ZCOBOL TOTAL SYMBOLS                 = 38'
000CB8                                   (61/15)1247+         MNOTE *,'ZCOBOL TOTAL SYMBOL DUPLICATES       = 0'
000CB8                                   (61/16)1248+         MNOTE *,'ZCOBOL TOTAL SYMBOL MAX DUP CHAIN    = 0'
000CB8                                   (61/17)1249+         MNOTE *,'ZCOBOL TOTAL SYMBOL LEVEL 88         = 0'
000CB8                                   (61/18)1250+         MNOTE *,'ZCOBOL TOTAL SYMBOL SET INDEXES      = 0'
000CB8                                   (61/19)1251+         MNOTE *,'ZCOBOL TOTAL SYMBOL LINKAGE SECTIONS = 0'
000CB8                                   (61/20)1252+         MNOTE *,'ZCOBOL TOTAL PROCEDURE SECTIONS      = 0'
000CB8                                   (61/21)1253+         MNOTE *,'ZCOBOL TOTAL PROCEDURE PARAGRAPHS    = 4'
000CB8                                   (61/22)1254+         MNOTE *,'ZCOBOL TOTAL PROCEDURE PARAGRAPH DUP = 0'
000CB8                                   (1/480)1255          END 

Symbol Table Listing

 SYM=ABC      LOC=00000C10 LEN=00000003 ESD=0001 TYPE=REL  XREF=1176 805 808 830 
  834 846 
 SYM=ABCDEF   LOC=00000C10 LEN=00000006 ESD=0001 TYPE=REL  XREF=1173 771 774 786 
  1174 
 SYM=DEBUG_CONTENTS LOC=00000C8E LEN=00000023 ESD=0001 TYPE=REL  XREF=1232 
 SYM=DEBUG_ITEM LOC=00000C59 LEN=00000058 ESD=0001 TYPE=REL  XREF=1210 
 SYM=DEBUG_LINE LOC=00000C59 LEN=00000006 ESD=0001 TYPE=REL  XREF=1212 
 SYM=DEBUG_NAME LOC=00000C60 LEN=0000001E ESD=0001 TYPE=REL  XREF=1216 
 SYM=DEBUG_SUB_1 LOC=00000C7F LEN=00000004 ESD=0001 TYPE=REL  XREF=1220 
 SYM=DEBUG_SUB_2 LOC=00000C84 LEN=00000004 ESD=0001 TYPE=REL  XREF=1224 
 SYM=DEBUG_SUB_3 LOC=00000C89 LEN=00000004 ESD=0001 TYPE=REL  XREF=1228 
 SYM=DF1      LOC=00000C1A LEN=00000009 ESD=0001 TYPE=REL  XREF=1180 264 268 295 
  299 
 SYM=DF2      LOC=00000C23 LEN=00000009 ESD=0001 TYPE=REL  XREF=1182 326 330 358 
  362 
 SYM=DF3      LOC=00000C2C LEN=0000000B ESD=0001 TYPE=REL  XREF=1184 390 394 423 
  427 
 SYM=DH1      LOC=00000C39 LEN=00000004 ESD=0001 TYPE=REL  XREF=1188 453 457 483 
  487 
 SYM=DH2      LOC=00000C3D LEN=00000004 ESD=0001 TYPE=REL  XREF=1190 513 517 543 
  547 
 SYM=DP1      LOC=00000C45 LEN=00000001 ESD=0001 TYPE=REL  XREF=1196 572 575 600 
  603 
 SYM=DP2      LOC=00000C46 LEN=00000004 ESD=0001 TYPE=REL  XREF=1198 629 633 658 
  662 687 691 
 SYM=DP3      LOC=00000C4A LEN=00000005 ESD=0001 TYPE=REL  XREF=1200 717 718 722 
  748 749 753 
 SYM=FALSE    LOC=00000CB2 LEN=00000001 ESD=0001 TYPE=REL  XREF=1236 
 SYM=FLD1     LOC=00000C4F LEN=00000002 ESD=0001 TYPE=REL  XREF=1202 871 
 SYM=FLD2     LOC=00000C51 LEN=00000003 ESD=0001 TYPE=REL  XREF=1204 866 877 898 
  916 937 956 977 996 
 SYM=GOOD     LOC=00000C54 LEN=00000004 ESD=0001 TYPE=REL  XREF=1206 1023 1042 1054 
 SYM=NF1      LOC=00000C16 LEN=00000004 ESD=0001 TYPE=REL  XREF=1178 255 258 286 
  289 317 320 349 352 380 383 413 416 
 SYM=NH1      LOC=00000C37 LEN=00000002 ESD=0001 TYPE=REL  XREF=1186 445 448 475 
  478 505 508 535 538 
 SYM=NP1      LOC=00000C41 LEN=00000001 ESD=0001 TYPE=REL  XREF=1192 566 571 594 
  599 622 627 
 SYM=NP2      LOC=00000C42 LEN=00000003 ESD=0001 TYPE=REL  XREF=1194 652 657 681 
  686 710 716 741 747 
 SYM=PFPO_RADIX LOC=00000001 LEN=00000001 ESD=0000 TYPE=ABS  XREF=112 
 SYM=PFPO_RND LOC=00000000 LEN=00000001 ESD=0000 TYPE=ABS  XREF=113 
 SYM=PFPO_TEST LOC=00000080 LEN=00000001 ESD=0000 TYPE=ABS  XREF=111 
 SYM=PFPO_TYPE_DB LOC=00000006 LEN=00000001 ESD=0000 TYPE=ABS  XREF=118 
 SYM=PFPO_TYPE_DD LOC=00000009 LEN=00000001 ESD=0000 TYPE=ABS  XREF=121 
 SYM=PFPO_TYPE_DH LOC=00000001 LEN=00000001 ESD=0000 TYPE=ABS  XREF=115 
 SYM=PFPO_TYPE_EB LOC=00000005 LEN=00000001 ESD=0000 TYPE=ABS  XREF=117 
 SYM=PFPO_TYPE_ED LOC=00000008 LEN=00000001 ESD=0000 TYPE=ABS  XREF=120 
 SYM=PFPO_TYPE_EH LOC=00000000 LEN=00000001 ESD=0000 TYPE=ABS  XREF=114 
 SYM=PFPO_TYPE_LB LOC=00000007 LEN=00000001 ESD=0000 TYPE=ABS  XREF=119 
 SYM=PFPO_TYPE_LD LOC=0000000A LEN=00000001 ESD=0000 TYPE=ABS  XREF=122 
 SYM=PFPO_TYPE_LH LOC=00000002 LEN=00000001 ESD=0000 TYPE=ABS  XREF=116 
 SYM=PG_BAD   LOC=00000A6C LEN=00000002 ESD=0001 TYPE=REL  XREF=1046 271 302 333 
  365 397 430 460 490 520 550 578 606 636 665 694 725 756 789 814 851 880 919 959 
  999 
 SYM=PG_BAD_END LOC=00000AC0 LEN=00000004 ESD=0001 TYPE=REL  XREF=1074 272 303 334 
  366 398 431 461 491 521 551 579 607 637 666 695 726 757 790 815 852 881 920 960 
  1000 
 SYM=PG_GOOD  LOC=00000A60 LEN=00000002 ESD=0001 TYPE=REL  XREF=1039 279 310 341 
  373 405 438 468 498 528 558 586 614 644 673 702 733 764 797 822 859 888 927 967 
  1007 
 SYM=PG_GOOD_END LOC=00000A66 LEN=00000004 ESD=0001 TYPE=REL  XREF=1044 280 311 342 
  374 406 439 469 499 529 559 587 615 645 674 703 734 765 798 823 860 889 928 968 
  1008 
 SYM=PG_IF_10_1 LOC=0000049A LEN=00000002 ESD=0001 TYPE=REL  XREF=556 548 
 SYM=PG_IF_10_E LOC=000004AC LEN=00000002 ESD=0001 TYPE=REL  XREF=562 555 
 SYM=PG_IF_11_1 LOC=000004EE LEN=00000002 ESD=0001 TYPE=REL  XREF=584 576 
 SYM=PG_IF_11_E LOC=00000500 LEN=00000002 ESD=0001 TYPE=REL  XREF=590 583 
 SYM=PG_IF_12_1 LOC=00000542 LEN=00000002 ESD=0001 TYPE=REL  XREF=612 604 
 SYM=PG_IF_12_E LOC=00000554 LEN=00000002 ESD=0001 TYPE=REL  XREF=618 611 
 SYM=PG_IF_13_1 LOC=000005A4 LEN=00000002 ESD=0001 TYPE=REL  XREF=642 634 
 SYM=PG_IF_13_E LOC=000005B6 LEN=00000002 ESD=0001 TYPE=REL  XREF=648 641 
 SYM=PG_IF_14_1 LOC=00000600 LEN=00000002 ESD=0001 TYPE=REL  XREF=671 663 
 SYM=PG_IF_14_E LOC=00000612 LEN=00000002 ESD=0001 TYPE=REL  XREF=677 670 
 SYM=PG_IF_15_1 LOC=0000065C LEN=00000002 ESD=0001 TYPE=REL  XREF=700 692 
 SYM=PG_IF_15_E LOC=0000066E LEN=00000002 ESD=0001 TYPE=REL  XREF=706 699 
 SYM=PG_IF_16_1 LOC=000006C0 LEN=00000002 ESD=0001 TYPE=REL  XREF=731 723 
 SYM=PG_IF_16_E LOC=000006D2 LEN=00000002 ESD=0001 TYPE=REL  XREF=737 730 
 SYM=PG_IF_17_1 LOC=00000724 LEN=00000002 ESD=0001 TYPE=REL  XREF=762 754 
 SYM=PG_IF_17_E LOC=00000736 LEN=00000002 ESD=0001 TYPE=REL  XREF=768 761 
 SYM=PG_IF_18_1 LOC=00000786 LEN=00000002 ESD=0001 TYPE=REL  XREF=795 787 
 SYM=PG_IF_18_E LOC=00000798 LEN=00000002 ESD=0001 TYPE=REL  XREF=801 794 
 SYM=PG_IF_19_1 LOC=000007CA LEN=00000002 ESD=0001 TYPE=REL  XREF=820 811 
 SYM=PG_IF_19_E LOC=000007DC LEN=00000002 ESD=0001 TYPE=REL  XREF=826 819 
 SYM=PG_IF_1_1 LOC=00000138 LEN=00000002 ESD=0001 TYPE=REL  XREF=277 269 
 SYM=PG_IF_1_E LOC=0000014A LEN=00000002 ESD=0001 TYPE=REL  XREF=283 276 
 SYM=PG_IF_20_1 LOC=0000083C LEN=00000002 ESD=0001 TYPE=REL  XREF=857 849 
 SYM=PG_IF_20_E LOC=0000084E LEN=00000002 ESD=0001 TYPE=REL  XREF=863 856 
 SYM=PG_IF_21_1 LOC=00000892 LEN=00000002 ESD=0001 TYPE=REL  XREF=886 878 
 SYM=PG_IF_21_E LOC=000008A4 LEN=00000002 ESD=0001 TYPE=REL  XREF=892 885 
 SYM=PG_IF_22_1 LOC=0000090A LEN=00000002 ESD=0001 TYPE=REL  XREF=925 917 
 SYM=PG_IF_22_E LOC=0000091C LEN=00000002 ESD=0001 TYPE=REL  XREF=931 924 
 SYM=PG_IF_23_1 LOC=00000988 LEN=00000002 ESD=0001 TYPE=REL  XREF=965 957 
 SYM=PG_IF_23_E LOC=0000099A LEN=00000002 ESD=0001 TYPE=REL  XREF=971 964 
 SYM=PG_IF_24_1 LOC=00000A06 LEN=00000002 ESD=0001 TYPE=REL  XREF=1005 997 
 SYM=PG_IF_24_E LOC=00000A18 LEN=00000002 ESD=0001 TYPE=REL  XREF=1011 1004 
 SYM=PG_IF_2_1 LOC=00000196 LEN=00000002 ESD=0001 TYPE=REL  XREF=308 300 
 SYM=PG_IF_2_E LOC=000001A8 LEN=00000002 ESD=0001 TYPE=REL  XREF=314 307 
 SYM=PG_IF_3_1 LOC=000001F4 LEN=00000002 ESD=0001 TYPE=REL  XREF=339 331 
 SYM=PG_IF_3_E LOC=00000206 LEN=00000002 ESD=0001 TYPE=REL  XREF=345 338 
 SYM=PG_IF_4_1 LOC=00000258 LEN=00000002 ESD=0001 TYPE=REL  XREF=371 363 
 SYM=PG_IF_4_E LOC=0000026A LEN=00000002 ESD=0001 TYPE=REL  XREF=377 370 
 SYM=PG_IF_5_1 LOC=000002BA LEN=00000002 ESD=0001 TYPE=REL  XREF=403 395 
 SYM=PG_IF_5_E LOC=000002CC LEN=00000002 ESD=0001 TYPE=REL  XREF=409 402 
 SYM=PG_IF_6_1 LOC=00000322 LEN=00000002 ESD=0001 TYPE=REL  XREF=436 428 
 SYM=PG_IF_6_E LOC=00000334 LEN=00000002 ESD=0001 TYPE=REL  XREF=442 435 
 SYM=PG_IF_7_1 LOC=00000380 LEN=00000002 ESD=0001 TYPE=REL  XREF=466 458 
 SYM=PG_IF_7_E LOC=00000392 LEN=00000002 ESD=0001 TYPE=REL  XREF=472 465 
 SYM=PG_IF_8_1 LOC=000003DE LEN=00000002 ESD=0001 TYPE=REL  XREF=496 488 
 SYM=PG_IF_8_E LOC=000003F0 LEN=00000002 ESD=0001 TYPE=REL  XREF=502 495 
 SYM=PG_IF_9_1 LOC=0000043C LEN=00000002 ESD=0001 TYPE=REL  XREF=526 518 
 SYM=PG_IF_9_E LOC=0000044E LEN=00000002 ESD=0001 TYPE=REL  XREF=532 525 
 SYM=PG_MAINLINE LOC=000000EC LEN=00000002 ESD=0001 TYPE=REL  XREF=252 
 SYM=PG_MAINLINE_END LOC=00000A18 LEN=00000004 ESD=0001 TYPE=REL  XREF=1013 
 SYM=PG_WRAP_UP LOC=00000A1E LEN=00000002 ESD=0001 TYPE=REL  XREF=1015 
 SYM=PG_WRAP_UP_END LOC=00000A5A LEN=00000004 ESD=0001 TYPE=REL  XREF=1037 
 SYM=PVTCICS  LOC=00000020 LEN=00000001 ESD=0004 TYPE=REL  XREF=213 
 SYM=PVTDATE  LOC=00000008 LEN=00000008 ESD=0004 TYPE=REL  XREF=210 
 SYM=PVTEXTND LOC=00000021 LEN=00000001 ESD=0004 TYPE=REL  XREF=214 
 SYM=PVTMAXDL LOC=00000024 LEN=00000002 ESD=0004 TYPE=REL  XREF=217 
 SYM=PVTPGM   LOC=00000000 LEN=00000008 ESD=0004 TYPE=REL  XREF=209 
 SYM=PVTR64   LOC=00000023 LEN=00000001 ESD=0004 TYPE=REL  XREF=216 
 SYM=PVTTIME  LOC=00000010 LEN=00000008 ESD=0004 TYPE=REL  XREF=211 
 SYM=PVTTRUNC LOC=00000022 LEN=00000001 ESD=0004 TYPE=REL  XREF=215 
 SYM=PVTVER   LOC=00000018 LEN=00000008 ESD=0004 TYPE=REL  XREF=212 
 SYM=RETURN_CODE LOC=00000CB3 LEN=00000002 ESD=0001 TYPE=REL  XREF=1238 1033 1068 
  1071 1078 
 SYM=SN_END_PROCEDURE LOC=00000AC6 LEN=00000002 ESD=0001 TYPE=REL  XREF=1076 
 SYM=SUB1     LOC=00000C58 LEN=00000001 ESD=0001 TYPE=REL  XREF=1208 895 899 934 
  938 974 978 
 SYM=TESTMOV1 LOC=00000000 LEN=00000CB8 ESD=0001 TYPE=CST  XREF=8 250 
 SYM=TRUE     LOC=00000CB1 LEN=00000001 ESD=0001 TYPE=REL  XREF=1234 
 SYM=WTO#0017_EOT LOC=00000060 LEN=00000001 ESD=0001 TYPE=REL  XREF=35 33 34 
 SYM=WTO#0018_EOT LOC=000000AA LEN=00000001 ESD=0001 TYPE=REL  XREF=52 50 51 
 SYM=ZC390CVT LOC=00000000 LEN=000001F8 ESD=0003 TYPE=DST  XREF=137 41 
 SYM=ZC390PVT LOC=00000000 LEN=00000030 ESD=0004 TYPE=DST  XREF=208 
 SYM=ZCVT_ABORT LOC=00000068 LEN=00000004 ESD=0003 TYPE=REL  XREF=166 
 SYM=ZCVT_ABORT_ACCEPT LOC=0000000B LEN=00000001 ESD=0000 TYPE=ABS  XREF=176 
 SYM=ZCVT_ABORT_ALTER LOC=00000001 LEN=00000001 ESD=0000 TYPE=ABS  XREF=167 
 SYM=ZCVT_ABORT_CALL LOC=00000002 LEN=00000001 ESD=0000 TYPE=ABS  XREF=168 
 SYM=ZCVT_ABORT_CICS LOC=0000000A LEN=00000001 ESD=0000 TYPE=ABS  XREF=175 
 SYM=ZCVT_ABORT_DISPLAY LOC=00000003 LEN=00000001 ESD=0000 TYPE=ABS  XREF=169 
 SYM=ZCVT_ABORT_DIVQ LOC=00000009 LEN=00000001 ESD=0000 TYPE=ABS  XREF=174 
 SYM=ZCVT_ABORT_INT128 LOC=00000008 LEN=00000001 ESD=0000 TYPE=ABS  XREF=173 
 SYM=ZCVT_ABORT_MAXERR LOC=0000000B LEN=00000001 ESD=0000 TYPE=ABS  XREF=177 
 SYM=ZCVT_ABORT_OPEN LOC=00000004 LEN=00000001 ESD=0000 TYPE=ABS  XREF=170 
 SYM=ZCVT_ABORT_STACK LOC=00000006 LEN=00000001 ESD=0000 TYPE=ABS  XREF=171 
 SYM=ZCVT_ABORT_VERSION LOC=00000007 LEN=00000001 ESD=0000 TYPE=ABS  XREF=172 
 SYM=ZCVT_ACCEPT LOC=0000006C LEN=00000004 ESD=0003 TYPE=REL  XREF=178 
 SYM=ZCVT_ACCEPT_CONSOLE LOC=00000002 LEN=00000001 ESD=0000 TYPE=ABS  XREF=180 
 SYM=ZCVT_ACCEPT_DATE LOC=00000004 LEN=00000001 ESD=0000 TYPE=ABS  XREF=182 
 SYM=ZCVT_ACCEPT_DDNAME LOC=00000003 LEN=00000001 ESD=0000 TYPE=ABS  XREF=181 
 SYM=ZCVT_ACCEPT_DEFAULT LOC=00000001 LEN=00000001 ESD=0000 TYPE=ABS  XREF=179 
 SYM=ZCVT_ACCEPT_DOW LOC=00000006 LEN=00000001 ESD=0000 TYPE=ABS  XREF=184 
 SYM=ZCVT_ACCEPT_TIME LOC=00000005 LEN=00000001 ESD=0000 TYPE=ABS  XREF=183 
 SYM=ZCVT_CALL LOC=00000014 LEN=00000004 ESD=0003 TYPE=REL  XREF=142 
 SYM=ZCVT_CMP64R32 LOC=00000018 LEN=00000004 ESD=0003 TYPE=REL  XREF=143 
 SYM=ZCVT_CONVERTING LOC=00000008 LEN=00000001 ESD=0000 TYPE=ABS  XREF=189 
 SYM=ZCVT_CVTLBTQ LOC=0000001C LEN=00000004 ESD=0003 TYPE=REL  XREF=144 
 SYM=ZCVT_CVTLDTP LOC=00000020 LEN=00000004 ESD=0003 TYPE=REL  XREF=145 
 SYM=ZCVT_CVTQTLB LOC=00000024 LEN=00000004 ESD=0003 TYPE=REL  XREF=146 
 SYM=ZCVT_DISPLAY LOC=00000070 LEN=00000004 ESD=0003 TYPE=REL  XREF=185 1029 1064 
 SYM=ZCVT_DIV64R32 LOC=00000028 LEN=00000004 ESD=0003 TYPE=REL  XREF=147 
 SYM=ZCVT_DIVQ128 LOC=0000002C LEN=00000004 ESD=0003 TYPE=REL  XREF=148 
 SYM=ZCVT_END LOC=000001F8 LEN=00000001 ESD=0003 TYPE=REL  XREF=207 44 56 139 
 SYM=ZCVT_GOBACK LOC=00000030 LEN=00000004 ESD=0003 TYPE=REL  XREF=149 1034 1072 
  1079 
 SYM=ZCVT_HIGH_VALUES LOC=00000090 LEN=00000010 ESD=0003 TYPE=REL  XREF=196 
 SYM=ZCVT_ID  LOC=00000000 LEN=00000004 ESD=0003 TYPE=REL  XREF=138 42 44 56 139 
 SYM=ZCVT_INSPECT LOC=00000074 LEN=00000004 ESD=0003 TYPE=REL  XREF=186 
 SYM=ZCVT_LEN LOC=00000004 LEN=00000004 ESD=0003 TYPE=REL  XREF=139 44 
 SYM=ZCVT_MPYQ128 LOC=00000034 LEN=00000004 ESD=0003 TYPE=REL  XREF=150 
 SYM=ZCVT_NDDX LOC=000000E8 LEN=00000010 ESD=0003 TYPE=REL  XREF=202 
 SYM=ZCVT_OSE64R32 LOC=00000038 LEN=00000004 ESD=0003 TYPE=REL  XREF=151 
 SYM=ZCVT_PERFORM LOC=0000003C LEN=00000004 ESD=0003 TYPE=REL  XREF=152 273 281 304 
  312 335 343 367 375 399 407 432 440 462 470 492 500 522 530 552 560 580 588 608 
  616 638 646 667 675 696 704 727 735 758 766 791 799 816 824 853 861 882 890 921 
  929 961 969 1001 1009 
 SYM=ZCVT_PMCHECK LOC=00000040 LEN=00000004 ESD=0003 TYPE=REL  XREF=153 1013 1037 
  1044 1074 
 SYM=ZCVT_PVTMAXDL LOC=00000078 LEN=00000002 ESD=0003 TYPE=REL  XREF=193 
 SYM=ZCVT_PWORK LOC=000000A0 LEN=00000008 ESD=0003 TYPE=REL  XREF=197 259 263 290 
  294 321 325 353 357 384 389 417 422 449 452 479 482 509 512 539 542 902 903 941 
  942 981 982 
 SYM=ZCVT_PWORK1 LOC=000000A8 LEN=00000010 ESD=0003 TYPE=REL  XREF=198 627 628 901 
  902 940 941 980 981 
 SYM=ZCVT_PWORK2 LOC=000000B8 LEN=00000010 ESD=0003 TYPE=REL  XREF=199 
 SYM=ZCVT_PWORK3 LOC=000000C8 LEN=00000010 ESD=0003 TYPE=REL  XREF=200 
 SYM=ZCVT_PWORK4 LOC=000000D8 LEN=00000010 ESD=0003 TYPE=REL  XREF=201 
 SYM=ZCVT_REPLACING LOC=00000004 LEN=00000001 ESD=0000 TYPE=ABS  XREF=188 
 SYM=ZCVT_ROUNDF LOC=00000044 LEN=00000004 ESD=0003 TYPE=REL  XREF=154 
 SYM=ZCVT_STACKEND LOC=00000050 LEN=00000004 ESD=0003 TYPE=REL  XREF=157 
 SYM=ZCVT_STACKORG LOC=00000048 LEN=00000004 ESD=0003 TYPE=REL  XREF=155 
 SYM=ZCVT_STACKPTR LOC=0000004C LEN=00000004 ESD=0003 TYPE=REL  XREF=156 
 SYM=ZCVT_STOPRUN LOC=00000054 LEN=00000004 ESD=0003 TYPE=REL  XREF=158 
 SYM=ZCVT_TALLYING LOC=00000000 LEN=00000001 ESD=0000 TYPE=ABS  XREF=187 
 SYM=ZCVT_TALPHAX LOC=00000058 LEN=00000004 ESD=0003 TYPE=REL  XREF=159 
 SYM=ZCVT_TNUMP LOC=0000005C LEN=00000004 ESD=0003 TYPE=REL  XREF=160 
 SYM=ZCVT_TNUMX LOC=00000060 LEN=00000004 ESD=0003 TYPE=REL  XREF=161 
 SYM=ZCVT_TNUMZ LOC=00000064 LEN=00000004 ESD=0003 TYPE=REL  XREF=162 
 SYM=ZCVT_VER LOC=00000008 LEN=00000008 ESD=0003 TYPE=REL  XREF=140 
 SYM=ZCVT_WORKAREA LOC=000000F8 LEN=00000100 ESD=0003 TYPE=REL  XREF=203 262 263 
  264 293 294 295 324 325 326 356 357 358 387 388 389 390 420 421 422 423 451 452 
  453 481 482 483 511 512 513 541 542 543 570 571 572 598 599 600 626 628 629 656 
  657 658 685 686 687 714 715 716 717 745 746 747 748 1018 1049 
 SYM=ZCVT_ZC390NUC LOC=00000010 LEN=00000004 ESD=0003 TYPE=REL  XREF=141 46 
 SYM=ZCVT_ZERO LOC=00000080 LEN=00000010 ESD=0003 TYPE=REL  XREF=195 
 SYM=ZC_E     LOC=00000008 LEN=00000001 ESD=0000 TYPE=ABS  XREF=93 
 SYM=ZC_EQ    LOC=00000008 LEN=00000001 ESD=0000 TYPE=ABS  XREF=105 
 SYM=ZC_F0    LOC=00000000 LEN=00000001 ESD=0000 TYPE=ABS  XREF=75 
 SYM=ZC_F10   LOC=0000000A LEN=00000001 ESD=0000 TYPE=ABS  XREF=85 
 SYM=ZC_F1    LOC=00000001 LEN=00000001 ESD=0000 TYPE=ABS  XREF=76 
 SYM=ZC_F11   LOC=0000000B LEN=00000001 ESD=0000 TYPE=ABS  XREF=86 
 SYM=ZC_F12   LOC=0000000C LEN=00000001 ESD=0000 TYPE=ABS  XREF=87 
 SYM=ZC_F13   LOC=0000000D LEN=00000001 ESD=0000 TYPE=ABS  XREF=88 
 SYM=ZC_F14   LOC=0000000E LEN=00000001 ESD=0000 TYPE=ABS  XREF=89 
 SYM=ZC_F15   LOC=0000000F LEN=00000001 ESD=0000 TYPE=ABS  XREF=90 
 SYM=ZC_F2    LOC=00000002 LEN=00000001 ESD=0000 TYPE=ABS  XREF=77 
 SYM=ZC_F3    LOC=00000003 LEN=00000001 ESD=0000 TYPE=ABS  XREF=78 
 SYM=ZC_F4    LOC=00000004 LEN=00000001 ESD=0000 TYPE=ABS  XREF=79 
 SYM=ZC_F5    LOC=00000005 LEN=00000001 ESD=0000 TYPE=ABS  XREF=80 
 SYM=ZC_F6    LOC=00000006 LEN=00000001 ESD=0000 TYPE=ABS  XREF=81 
 SYM=ZC_F7    LOC=00000007 LEN=00000001 ESD=0000 TYPE=ABS  XREF=82 
 SYM=ZC_F8    LOC=00000008 LEN=00000001 ESD=0000 TYPE=ABS  XREF=83 
 SYM=ZC_F9    LOC=00000009 LEN=00000001 ESD=0000 TYPE=ABS  XREF=84 
 SYM=ZC_GE    LOC=0000000B LEN=00000001 ESD=0000 TYPE=ABS  XREF=108 
 SYM=ZC_GT    LOC=00000002 LEN=00000001 ESD=0000 TYPE=ABS  XREF=106 
 SYM=ZC_H     LOC=00000002 LEN=00000001 ESD=0000 TYPE=ABS  XREF=91 
 SYM=ZC_L     LOC=00000004 LEN=00000001 ESD=0000 TYPE=ABS  XREF=92 
 SYM=ZC_LE    LOC=0000000D LEN=00000001 ESD=0000 TYPE=ABS  XREF=109 
 SYM=ZC_LOAD  LOC=00000038 LEN=00000002 ESD=0001 TYPE=REL  XREF=27 12 
 SYM=ZC_LOAD_OK LOC=00000068 LEN=00000002 ESD=0001 TYPE=REL  XREF=39 32 
 SYM=ZC_LT    LOC=00000004 LEN=00000001 ESD=0000 TYPE=ABS  XREF=107 
 SYM=ZC_M     LOC=00000004 LEN=00000001 ESD=0000 TYPE=ABS  XREF=99 
 SYM=ZC_NE    LOC=00000007 LEN=00000001 ESD=0000 TYPE=ABS  XREF=96 269 300 331 363 
  395 428 458 488 518 548 576 604 634 663 692 723 754 787 811 849 878 917 957 997 
 SYM=ZC_NH    LOC=0000000D LEN=00000001 ESD=0000 TYPE=ABS  XREF=94 
 SYM=ZC_NL    LOC=0000000B LEN=00000001 ESD=0000 TYPE=ABS  XREF=95 
 SYM=ZC_NM    LOC=0000000B LEN=00000001 ESD=0000 TYPE=ABS  XREF=102 
 SYM=ZC_NO    LOC=0000000E LEN=00000001 ESD=0000 TYPE=ABS  XREF=104 
 SYM=ZC_NP    LOC=0000000D LEN=00000001 ESD=0000 TYPE=ABS  XREF=101 
 SYM=ZC_NZ    LOC=00000007 LEN=00000001 ESD=0000 TYPE=ABS  XREF=103 
 SYM=ZC_O     LOC=00000001 LEN=00000001 ESD=0000 TYPE=ABS  XREF=97 
 SYM=ZC_P     LOC=00000002 LEN=00000001 ESD=0000 TYPE=ABS  XREF=98 
 SYM=ZC_R0    LOC=00000000 LEN=00000001 ESD=0000 TYPE=ABS  XREF=59 40 131 132 133 
  272 280 303 311 334 342 366 374 398 406 431 439 461 469 491 499 521 529 551 559 
  579 587 607 615 637 645 666 674 695 703 726 734 757 765 777 782 790 798 815 823 
  837 842 852 860 869 873 881 889 907 912 920 928 947 952 960 968 987 992 1000 1008 
  1019 1022 1023 1026 1050 1053 1054 1057 1058 1061 
 SYM=ZC_R10   LOC=0000000A LEN=00000001 ESD=0000 TYPE=ABS  XREF=69 
 SYM=ZC_R1    LOC=00000001 LEN=00000001 ESD=0000 TYPE=ABS  XREF=60 125 126 127 128 
  260 262 267 268 274 282 291 293 298 299 305 313 322 324 329 330 336 344 348 349 
  354 356 361 362 368 376 385 387 388 393 394 400 408 412 413 418 420 421 426 427 
  433 441 450 451 456 457 463 471 480 481 486 487 493 501 510 511 516 517 523 531 
  540 541 546 547 553 561 565 566 569 570 581 589 593 594 597 598 609 617 621 622 
  625 626 632 633 639 647 651 652 655 656 661 662 668 676 680 681 684 685 690 691 
  697 705 709 710 713 714 715 721 722 728 736 740 741 744 745 746 752 753 759 767 
  778 785 786 792 800 817 825 838 847 848 854 862 870 876 877 883 891 908 915 916 
  922 930 948 955 956 962 970 988 995 996 1002 1010 1020 1024 1028 1033 1051 1055 
  1059 1063 1071 1078 
 SYM=ZC_R11   LOC=0000000B LEN=00000001 ESD=0000 TYPE=ABS  XREF=70 
 SYM=ZC_R12   LOC=0000000C LEN=00000001 ESD=0000 TYPE=ABS  XREF=71 
 SYM=ZC_R13   LOC=0000000D LEN=00000001 ESD=0000 TYPE=ABS  XREF=72 124 126 127 128 
  129 130 132 900 939 979 
 SYM=ZC_R14   LOC=0000000E LEN=00000001 ESD=0000 TYPE=ABS  XREF=73 47 271 279 302 
  310 333 341 365 373 397 405 430 438 460 468 490 498 520 528 550 558 578 586 606 
  614 636 644 665 673 694 702 725 733 756 764 772 780 789 797 814 822 831 840 851 
  859 880 888 919 927 959 967 999 1007 1014 1030 1038 1045 1065 1075 1080 
 SYM=ZC_R15   LOC=0000000F LEN=00000001 ESD=0000 TYPE=ABS  XREF=74 9 31 37 46 47 
  54 134 273 274 281 282 304 305 312 313 335 336 343 344 367 368 375 376 399 400 
  407 408 432 433 440 441 462 463 470 471 492 493 500 501 522 523 530 531 552 553 
  560 561 580 581 588 589 608 609 616 617 638 639 646 647 667 668 675 676 696 697 
  704 705 727 728 735 736 758 759 766 767 775 778 791 792 799 800 816 817 824 825 
  835 838 853 854 861 862 867 870 882 883 890 891 899 900 901 903 904 905 908 921 
  922 929 930 938 939 940 942 943 944 948 961 962 969 970 978 979 980 982 983 984 
  988 1001 1002 1009 1010 1013 1014 1029 1030 1034 1035 1037 1038 1044 1045 1064 
  1065 1072 1073 1074 1075 1079 1080 
 SYM=ZC_R2    LOC=00000002 LEN=00000001 ESD=0000 TYPE=ABS  XREF=61 124 771 773 779 
  782 805 806 810 830 832 839 842 845 846 848 871 873 909 912 949 952 989 992 1021 
  1022 1025 1026 1052 1053 1056 1057 1060 1061 
 SYM=ZC_R3    LOC=00000003 LEN=00000001 ESD=0000 TYPE=ABS  XREF=62 774 776 777 780 
  781 807 808 809 810 833 834 836 837 840 841 866 868 869 872 898 904 906 907 910 
  911 937 943 945 946 947 950 951 977 983 985 986 987 990 991 1018 1022 1026 1027 
  1028 1049 1053 1057 1061 1062 1063 
 SYM=ZC_R4    LOC=00000004 LEN=00000001 ESD=0000 TYPE=ABS  XREF=63 
 SYM=ZC_R5    LOC=00000005 LEN=00000001 ESD=0000 TYPE=ABS  XREF=64 
 SYM=ZC_R6    LOC=00000006 LEN=00000001 ESD=0000 TYPE=ABS  XREF=65 
 SYM=ZC_R7    LOC=00000007 LEN=00000001 ESD=0000 TYPE=ABS  XREF=66 
 SYM=ZC_R8    LOC=00000008 LEN=00000001 ESD=0000 TYPE=ABS  XREF=67 12 13 
 SYM=ZC_R9    LOC=00000009 LEN=00000001 ESD=0000 TYPE=ABS  XREF=68 40 41 
 SYM=ZC_SAVEAREA LOC=00000BB8 LEN=00000048 ESD=0001 TYPE=REL  XREF=1163 
 SYM=ZC_VER_ERR LOC=00000088 LEN=00000002 ESD=0001 TYPE=REL  XREF=49 43 45 
 SYM=ZC_VER_OK LOC=000000C8 LEN=00000002 ESD=0001 TYPE=REL  XREF=123 48 
 SYM=ZC_WS    LOC=00000BB8 LEN=00000008 ESD=0001 TYPE=REL  XREF=136 125 129 899 938 
  978 1162 1164 1166 1168 1170 1172 1175 1177 1179 1181 1183 1185 1187 1189 1191 
  1193 1195 1197 1199 1201 1203 1205 1207 1209 1211 1213 1215 1217 1219 1221 1223 
  1225 1227 1229 1231 1233 1235 1237 1244 
 SYM=ZC_WSLOC LOC=00000BB4 LEN=00000104 ESD=0001 TYPE=CST  XREF=135 219 1161 1242 
  1243 
 SYM=ZC_WS_DIFF LOC=00000000 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1244 
 SYM=ZC_WS_END LOC=00000CB8 LEN=00000008 ESD=0001 TYPE=REL  XREF=1245 131 
 SYM=ZC_WS_ID LOC=00000C00 LEN=00000008 ESD=0001 TYPE=REL  XREF=1165 
 SYM=ZC_WS_LEN LOC=00000C0C LEN=00000004 ESD=0001 TYPE=REL  XREF=1169 133 
 SYM=ZC_WS_LOC_10 LOC=0000006B LEN=00000001 ESD=0000 TYPE=ABS  XREF=1181 
 SYM=ZC_WS_LOC_1 LOC=00000000 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1162 
 SYM=ZC_WS_LOC_11 LOC=00000074 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1183 
 SYM=ZC_WS_LOC_12 LOC=0000007F LEN=00000001 ESD=0000 TYPE=ABS  XREF=1185 
 SYM=ZC_WS_LOC_13 LOC=00000081 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1187 
 SYM=ZC_WS_LOC_14 LOC=00000085 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1189 
 SYM=ZC_WS_LOC_15 LOC=00000089 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1191 
 SYM=ZC_WS_LOC_16 LOC=0000008A LEN=00000001 ESD=0000 TYPE=ABS  XREF=1193 
 SYM=ZC_WS_LOC_17 LOC=0000008D LEN=00000001 ESD=0000 TYPE=ABS  XREF=1195 
 SYM=ZC_WS_LOC_18 LOC=0000008E LEN=00000001 ESD=0000 TYPE=ABS  XREF=1197 
 SYM=ZC_WS_LOC_19 LOC=00000092 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1199 
 SYM=ZC_WS_LOC_20 LOC=00000097 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1201 
 SYM=ZC_WS_LOC_2 LOC=00000048 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1164 
 SYM=ZC_WS_LOC_21 LOC=00000099 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1203 
 SYM=ZC_WS_LOC_22 LOC=0000009C LEN=00000001 ESD=0000 TYPE=ABS  XREF=1205 
 SYM=ZC_WS_LOC_23 LOC=000000A0 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1207 
 SYM=ZC_WS_LOC_24 LOC=000000A1 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1209 
 SYM=ZC_WS_LOC_25 LOC=000000A1 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1211 
 SYM=ZC_WS_LOC_26 LOC=000000A7 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1213 
 SYM=ZC_WS_LOC_27 LOC=000000A8 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1215 
 SYM=ZC_WS_LOC_28 LOC=000000C6 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1217 
 SYM=ZC_WS_LOC_29 LOC=000000C7 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1219 
 SYM=ZC_WS_LOC_30 LOC=000000CB LEN=00000001 ESD=0000 TYPE=ABS  XREF=1221 
 SYM=ZC_WS_LOC_3 LOC=00000050 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1166 
 SYM=ZC_WS_LOC_31 LOC=000000CC LEN=00000001 ESD=0000 TYPE=ABS  XREF=1223 
 SYM=ZC_WS_LOC_32 LOC=000000D0 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1225 
 SYM=ZC_WS_LOC_33 LOC=000000D1 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1227 
 SYM=ZC_WS_LOC_34 LOC=000000D5 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1229 
 SYM=ZC_WS_LOC_35 LOC=000000D6 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1231 
 SYM=ZC_WS_LOC_36 LOC=000000F9 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1233 
 SYM=ZC_WS_LOC_37 LOC=000000FA LEN=00000001 ESD=0000 TYPE=ABS  XREF=1235 
 SYM=ZC_WS_LOC_38 LOC=000000FB LEN=00000001 ESD=0000 TYPE=ABS  XREF=1237 
 SYM=ZC_WS_LOC_4 LOC=00000054 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1168 
 SYM=ZC_WS_LOC_5 LOC=00000058 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1170 
 SYM=ZC_WS_LOC_6 LOC=00000058 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1172 
 SYM=ZC_WS_LOC_7 LOC=00000058 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1175 
 SYM=ZC_WS_LOC_8 LOC=0000005E LEN=00000001 ESD=0000 TYPE=ABS  XREF=1177 
 SYM=ZC_WS_LOC_9 LOC=00000062 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1179 
 SYM=ZC_WS_START LOC=00000C08 LEN=00000004 ESD=0001 TYPE=REL  XREF=1167 130 
 SYM=ZC_Z     LOC=00000008 LEN=00000001 ESD=0000 TYPE=ABS  XREF=100 

Literal Table Listing

 LIT=A(ZCVT_END-ZCVT_ID) LOC=000000C4 LEN=00000004 ESD=0001 POOL=0001 XREF=44 
 LIT=AL1(C' ',C' ',X'20',0) LOC=00000BA8 LEN=00000001 ESD=0001 POOL=0002 XREF=569 
  597 
 LIT=AL1(C' ',C' ',X'20',X'20',X'20',C',',X'20',X'20',X'20',C',',X'20',X'21',X'20',0) LOC=00000B8E LEN=00000001 ESD=0001 POOL=0002 XREF=385 
  418 
 LIT=AL1(C' ',C' ',X'20',X'20',X'20',X'20',X'20',X'20',X'20',X'20',X'20',0) LOC=00000B76 LEN=00000001 ESD=0001 POOL=0002 XREF=260 
  291 
 LIT=AL1(C' ',C' ',X'20',X'20',X'20',X'20',X'20',X'20',X'20',X'21',X'20',0) LOC=00000B82 LEN=00000001 ESD=0001 POOL=0002 XREF=322 
  354 
 LIT=AL1(C' ',X'20',X'20',X'20',C'-',X'21',X'20',0) LOC=00000BAC LEN=00000001 ESD=0001 POOL=0002 XREF=713 
  744 
 LIT=AL1(C' ',X'20',X'20',X'20',X'20',X'20') LOC=00000B9C LEN=00000001 ESD=0001 POOL=0002 XREF=450 
  480 
 LIT=AL1(C' ',X'20',X'20',X'20',X'21',X'20') LOC=00000BA2 LEN=00000001 ESD=0001 POOL=0002 XREF=510 
  540 625 655 684 
 LIT=C'ZCVT'  LOC=000000C0 LEN=00000004 ESD=0001 POOL=0001 XREF=42 
 LIT=CL10'         ' LOC=00000B20 LEN=0000000A ESD=0001 POOL=0002 XREF=267 
 LIT=CL10'        0' LOC=00000B34 LEN=0000000A ESD=0001 POOL=0002 XREF=329 
 LIT=CL10'        1' LOC=00000B2A LEN=0000000A ESD=0001 POOL=0002 XREF=298 
 LIT=CL10'123456789' LOC=00000B3E LEN=0000000A ESD=0001 POOL=0002 XREF=361 
 LIT=CL12'          0' LOC=00000AD4 LEN=0000000C ESD=0001 POOL=0002 XREF=393 
 LIT=CL12'123,456,789' LOC=00000AE0 LEN=0000000C ESD=0001 POOL=0002 XREF=426 
 LIT=CL12'BAD TESTS=1' LOC=00000B14 LEN=0000000C ESD=0001 POOL=0002 XREF=1058 
 LIT=CL2'12'  LOC=00000B5E LEN=00000002 ESD=0001 POOL=0002 XREF=909 949 989 
 LIT=CL22'TESTMOV1 GOOD TESTS =' LOC=00000B60 LEN=00000016 ESD=0001 POOL=0002 XREF=1019 
  1050 
 LIT=CL4'    ' LOC=00000AEC LEN=00000004 ESD=0001 POOL=0002 XREF=456 
 LIT=CL4'   0' LOC=00000AF4 LEN=00000004 ESD=0001 POOL=0002 XREF=516 632 661 
 LIT=CL4'   1' LOC=00000AF0 LEN=00000004 ESD=0001 POOL=0002 XREF=486 
 LIT=CL4'1234' LOC=00000AF8 LEN=00000004 ESD=0001 POOL=0002 XREF=546 690 
 LIT=CL4'A12' LOC=00000B10 LEN=00000004 ESD=0001 POOL=0002 XREF=915 955 995 
 LIT=CL4'AXY' LOC=00000B0C LEN=00000004 ESD=0001 POOL=0002 XREF=876 
 LIT=CL4'DBC' LOC=00000B08 LEN=00000004 ESD=0001 POOL=0002 XREF=847 
 LIT=CL6'   12' LOC=00000B4C LEN=00000006 ESD=0001 POOL=0002 XREF=721 
 LIT=CL6'12-34' LOC=00000B52 LEN=00000006 ESD=0001 POOL=0002 XREF=752 
 LIT=CL6'ABCDBF' LOC=00000B58 LEN=00000006 ESD=0001 POOL=0002 XREF=785 
 LIT=CL8'ZC390LIB' LOC=000000B8 LEN=00000008 ESD=0001 POOL=0001 XREF=28 
 LIT=F'123456789' LOC=00000AD0 LEN=00000004 ESD=0001 POOL=0002 XREF=348 412 
 LIT=PL2'0'   LOC=00000B48 LEN=00000002 ESD=0001 POOL=0002 XREF=565 621 
 LIT=PL2'1'   LOC=00000B4A LEN=00000002 ESD=0001 POOL=0002 XREF=593 
 LIT=PL4'0'   LOC=00000AFC LEN=00000004 ESD=0001 POOL=0002 XREF=651 
 LIT=PL4'12'  LOC=00000B04 LEN=00000004 ESD=0001 POOL=0002 XREF=709 
 LIT=PL4'1234' LOC=00000B00 LEN=00000004 ESD=0001 POOL=0002 XREF=680 740 
 
AZ390I total mnote warnings = 0
AZ390I total mnote errors   = 0
AZ390I max   mnote level    = 0
AZ390I total mz390 errors   = 0
AZ390I total az390 errors   = 0
TESTMOV1  MZ390 ENDED   RC= 0 MEM(MB)= MB IO=27211
