TESTPM3   MZ390 START
AZ390I Copyright 2011 Automated Software Tools Corporation
AZ390I z390 is licensed under GNU General Public License
AZ390I program = zcobol\test\TESTPM3
AZ390I options = W:\work\z390\z390.OPT=(time(60)) @zcobol\z390\ZC390CLG=(
  sysmac(+zcobol+zcobol\z390+mac+cics) syscpy(+zcobol+zcobol\z390+mac+cics) 
  BAL NOLISTCALL MAXGBL(1500000)) notiming stats
External Symbol Definitions
 ESD=0001 LOC=00000000 LEN=00000660 TYPE=CST NAME=BYTEFILE
Assembler Listing
000000                                       (6/15)1+*    ZCOBOL PGM='zcobol\test\TESTPM3' VER=V1.5.06 MM/DD/YY  
000000                                       (6/15)2+*    ZCOBOL OPTIONS=() 
000000                                        (1/4)3          COPY  TESTPM3_ZC_LABELS.CPY
000000                                        (1/5)4 *        IDENTIFICATION DIVISION.
000000                                        (1/7)5 *        PROGRAM-ID.  BYTEFILE.
000000                                      (11/34)6+         PRINT NOLIST,NOGEN,NOLISTUSE    SET LIST OPTION FOR INTERNAL CODE
000000                                      (11/59)8+BYTEFILE CSECT ,                CSECT WITH PROCEDURE CODE AND WS
000000                                      (11/60)9+         USING *,ZC_R15
LISTUSE BYTEFILE ESD=0001 LOC=00000000 LEN=01000 REG=F OFF=00000 LAB=
000000 90ECD00C                            (16/51)10+         STM   14,12,12+4*(14-14)(13)
000004                                     (11/93)11+         CNOP  4,8             FORCE ZC390PVT TO DOUBLEWORD BOUNDARY
000004 A785001A                000038      (11/94)12+         BRAS  ZC_R8,ZC_LOAD
000008                                     (11/95)13+         USING *,ZC_R8            BASE FOR LOAD AND CICS V5 USE
LISTUSE BYTEFILE ESD=0001 LOC=00000000 LEN=01000 REG=F OFF=00000 LAB=
LISTUSE BYTEFILE ESD=0001 LOC=00000008 LEN=01000 REG=8 OFF=00000 LAB=
000008                                     (11/96)14+*
000008                                     (11/97)15+*  THESE FIELDS MUST BE KEPT IN SYNC WITH zcobol\ZC390PVT.CPY
000008                                     (11/98)16+*
000008 C2E8E3C5C6C9D3C5                    (11/99)17+         DC    CL8'BYTEFILE'    PVTPGM   ZCOBOL PGM NAME
000010 F0F161F0F261F0F5                   (11/100)18+         DC    CL8'01/02/05'   PVTDATE  ZCOBOL COMPILE DATE
000018 F2F24BF3F3404040                   (11/101)19+         DC    CL8'22.33'   PVTTIME  ZCOBOL COMPILE TIME
000020 E5F14BF54BF0F640                   (11/102)20+         DC    CL8'V1.5.06'    PVTVER   ZCOBOL COMPILER VERSION
000028 F0                                 (11/103)21+         DC    C'0'     PVTCICS  ZCOBOL EXEC CICS PGM
000029 F1                                 (11/104)22+         DC    C'1'   PVTEXTND ZCOBOL EXTENDED PRECISION
00002A F0                                 (11/105)23+         DC    C'0'    PVTTRUNC ZCOBOL TRUNCATE TO PICTURE
00002B F1                                 (11/106)24+         DC    C'1'      PVTR64   ZCOBOL USE 64 BIT REGISTERS
00002C 0050                               (11/107)25+         DC    H'80' MAX DISPLAY LINE LEN  RPI 1118
00002E                                    (11/108)26+         DS    XL10            RESERVED
000038                                    (11/109)27+ZC_LOAD  DS    0H
000038 410080B0                0000B8      (17/74)28+         LA    0,=CL8'ZC390LIB'
00003C 1BFF                                (17/95)29+         SR    15,15 USE DEFAULT SYS390 SEARCH
00003E 0A08                               (17/125)30+         SVC   8 LOAD R0=A(NAME) R15=DDNAME/DSNAME ADDR OR 0
000040 12FF                               (11/111)31+         LTR   ZC_R15,ZC_R15
000042 A7840013                000068     (11/112)32+         JZ    ZC_LOAD_OK
000046 A715000D                000060      (18/49)33+         BRAS  1,*+(WTO#0019_EOT-*+1)/2*2
00004A 00160000E9C3F3F9                    (18/50)34+         DC    AL2(WTO#0019_EOT-*,0),C'ZC390LIB NOT FOUND'
000060                  00000060           (18/51)35+WTO#0019_EOT     EQU *
000060 0A23                                (18/52)36+         SVC   35
000062 41F00010                           (11/114)37+         LA  ZC_R15,16
000066 0A03                               (11/115)38+         SVC 3      EXIT TO CALLER WITH RC=16
000068                                    (11/116)39+ZC_LOAD_OK DS  0H
000068 1890                               (11/117)40+         LR    ZC_R9,ZC_R0
00006A                                    (11/118)41+         USING ZC390CVT,ZC_R9    R9=CVT
LISTUSE BYTEFILE ESD=0001 LOC=00000000 LEN=01000 REG=F OFF=00000 LAB=
LISTUSE BYTEFILE ESD=0001 LOC=00000008 LEN=01000 REG=8 OFF=00000 LAB=
LISTUSE ZC390CVT ESD=0003 LOC=00000000 LEN=01000 REG=9 OFF=00000 LAB=
00006A D503900080B8     000000 0000C0     (11/119)42+         CLC   ZCVT_ID,=C'ZCVT'              CHECK ZCVT ID AND LENGTH
000070 A774000C                000088     (11/120)43+         JNE   ZC_VER_ERR                    IN ZC390LIB.390 MATCH
000074 D503900480BC     000004 0000C4     (11/121)44+         CLC   ZCVT_LEN,=A(ZCVT_END-ZCVT_ID) ZCOBOL PGM COMPILED ID/LEN
00007A 47708080                000088     (11/122)45+         BNE   ZC_VER_ERR
00007E 58F09010                000010     (11/123)46+         L     ZC_R15,ZCVT_ZC390NUC
000082 0DEF                               (11/124)47+         BASR  ZC_R14,ZC_R15 CALL ZC390NUC TO VERIFY VER, OPTIONS
000084 A7F40022                0000C8     (11/125)48+         J     ZC_VER_OK
000088                                    (11/126)49+ZC_VER_ERR DS 0H
000088 A7150011                0000AA      (18/49)50+         BRAS  1,*+(WTO#0020_EOT-*+1)/2*2
00008C 001E0000E9C3F3F9                    (18/50)51+         DC    AL2(WTO#0020_EOT-*,0),C'ZC390LIB ZCVT VERIFY ERROR'
0000AA                  000000AA           (18/51)52+WTO#0020_EOT     EQU *
0000AA 0A23                                (18/52)53+         SVC   35
0000AC 41F00010                           (11/128)54+         LA  ZC_R15,16
0000B0 0A03                               (11/129)55+         SVC 3      EXIT TO CALLER WITH RC=16
0000B2                                    (11/130)56+         LTORG 
0000B8 E9C3F3F9F0D3C9C2 =CL8'ZC390LIB'
0000C0 E9C3E5E3         =C'ZCVT'
0000C4 000001F8         =A(ZCVT_END-ZCVT_ID)
0000C8                  00000080          (15/10)111=PFPO_TEST    EQU  X'80' PFPO TEST IF VALID OPCODE (NOT SUPPORTED YET)
0000C8                  00000001          (15/11)112=PFPO_RADIX   EQU  1 PFPO OPCODE - CONVERT FROM ONE RADIX TO ANOTHER
0000C8                  00000000          (15/12)113=PFPO_RND     EQU  0 PFOP ROUNDING OPTION (ONLY DEFAULT ALLOWED)
0000C8                  00000000          (15/13)114=PFPO_TYPE_EH EQU  0 EH HFP SHORT     32 BITS 7  DIGITS
0000C8                  00000001          (15/14)115=PFPO_TYPE_DH EQU  1 ED HFP LONG      64 BITS 15 DIGITS
0000C8                  00000002          (15/15)116=PFPO_TYPE_LH EQU  2 EL HFP EXTENDED 128 BITS 30 DIGITS
0000C8                  00000005          (15/16)117=PFPO_TYPE_EB EQU  5 EB BFP SHORT     32 BITS 7  DIGITS
0000C8                  00000006          (15/17)118=PFPO_TYPE_DB EQU  6 DB BFP LONG      64 BITS 16 DIGITS
0000C8                  00000007          (15/18)119=PFPO_TYPE_LB EQU  7 LB BFP EXTENDED 128 BITS 34 DIGITS
0000C8                  00000008          (15/19)120=PFPO_TYPE_ED EQU  8 ED DFP SHORT     32 BITS 7  DIGITS
0000C8                  00000009          (15/20)121=PFPO_TYPE_DD EQU  9 DD DFP LONG      64 BITS 16 DIGITS
0000C8                  0000000A          (15/21)122=PFPO_TYPE_LD EQU 10 LD DFP EXTENDED 128 BITS 34 DIGITS
0000C8                                   (11/133)123+ZC_VER_OK DS   0H
0000C8 582D0018                           (11/63)124+         L     ZC_R2,24(ZC_R13) SET ZC_R2=PARMLIST ADDRESS AFTER LOAD
0000CC C01000000186            0003D8     (11/64)125+         LARL  ZC_R1,ZC_WS     ZC_R2=A(WORKING STORAGE WITH SAVEAREA)
0000D2 501D0008                           (11/65)126+         ST    ZC_R1,8(ZC_R13) FORWARD  SAVE CHAIN
0000D6 50D10004                           (11/66)127+         ST    ZC_R13,4(ZC_R1) BACKWARD SAVE CHAIN
0000DA 18D1                               (11/67)128+         LR    ZC_R13,ZC_R1    LINK SAVE AREA IN ZC390CVT
0000DC                                    (11/68)129+         USING ZC_WS,ZC_R13    BASE FOR ZCOBOL WS (SEE GEN_SYM_RX.MAC)
LISTUSE BYTEFILE ESD=0001 LOC=00000000 LEN=01000 REG=F OFF=00000 LAB=
LISTUSE BYTEFILE ESD=0001 LOC=00000008 LEN=01000 REG=8 OFF=00000 LAB=
LISTUSE ZC390CVT ESD=0003 LOC=00000000 LEN=01000 REG=9 OFF=00000 LAB=
LISTUSE BYTEFILE ESD=0001 LOC=000003D8 LEN=01000 REG=D OFF=00000 LAB=
0000DC 50D0D050                000428     (11/69)130+         ST    ZC_R13,ZC_WS_START  SAVE ADDR WS IN WS PREFIX
0000E0 C000000002C0            000660     (11/70)131+         LARL  ZC_R0,ZC_WS_END
0000E6 1B0D                               (11/71)132+         SR    ZC_R0,ZC_R13
0000E8 5000D054                00042C     (11/72)133+         ST    ZC_R0,ZC_WS_LEN     SAVE LENGTH OF WS IN WS PREFIX
0000EC                                    (11/73)134+         DROP  ZC_R15              RPI 1042
LISTUSE BYTEFILE ESD=0001 LOC=000003D8 LEN=01000 REG=D OFF=00000 LAB=
LISTUSE BYTEFILE ESD=0001 LOC=00000008 LEN=01000 REG=8 OFF=00000 LAB=
LISTUSE ZC390CVT ESD=0003 LOC=00000000 LEN=01000 REG=9 OFF=00000 LAB=
0003D6                                    (11/74)135+ZC_WSLOC LOCTR 
0003D8                                    (11/75)136+ZC_WS    DS    0D           START WORKING STORAGE
000000                                    (11/81)137+ZC390CVT DSECT 
000000                                    (12/31)138=ZCVT_ID            DC    C'ZCVT'             ZCVT ID  VERIFIED BY ZCOB
000004                                    (12/32)139=ZCVT_LEN           DC    A(ZCVT_END-ZCVT_ID) ZCVT LEN VERIFIED BY ZCOB
000008                                    (12/33)140=ZCVT_VER           DC    CL8'V1.5.06'    ZCVT VER VERIFIED BY ZC390NUC
000010                                    (12/34)141=ZCVT_ZC390NUC  DC V(ZC390NUC)      MODULE  SYSTEM ROUTINE MODULE INIT
000014                                    (12/35)142=ZCVT_CALL           DC V(CALL)       ENTRY R0=A(PGM),R1=A(PARMLIST)
000018                                    (12/36)143=ZCVT_CMP64R32       DC V(CMP64R32)   ENTRY COMPARE R0-1=FLD1 R2-3=FLD2
00001C                                    (12/37)144=ZCVT_CVTLBTQ        DC V(CVTLBTQ)    ENTRY CVT LB IN F4-6 TO Q IN R0-1
000020                                    (12/38)145=ZCVT_CVTLDTP        DC V(CVTLDTP)    ENTRY CVT LD IN F0-2 TO PL31 R0-1
000024                                    (12/39)146=ZCVT_CVTQTLB        DC V(CVTQTLB)    ENTRY CVT Q IN R0-1 TO LB IN F4-6
000028                                    (12/40)147=ZCVT_DIV64R32       DC V(DIV64R32)   ENTRY DIVIDE R0-1=N64, R2-3=MAX64
00002C                                    (12/41)148=ZCVT_DIVQ128        DC V(DIVQ128)    ENTRY DIVIDE Q128 R0-R1 BY R2-R3
000030                                    (12/42)149=ZCVT_GOBACK         DC V(GOBACK)     ENTRY R1=RC
000034                                    (12/43)150=ZCVT_MPYQ128        DC V(MPYQ128)    ENTRY MULTIPLY Q128 R0-R1 BY R2-R3
000038                                    (12/44)151=ZCVT_OSE64R32       DC V(OSE64R32)   ENTRY ON SIZE ERR R0-1=N, R2-3=MAX
00003C                                    (12/45)152=ZCVT_PERFORM        DC V(PERFORM)    ENTRY R14=PGTAR,R0=PGEXT,R1=PMRET
000040                                    (12/46)153=ZCVT_PMCHECK        DC V(PMCHECK)    ENTRY R14=RETURN TO NEXT INSTR.
000044                                    (12/47)154=ZCVT_ROUNDF         DC V(ROUNDF)     ENTRY R0=REM,R1=QUO,R2=DIVISOR
000048                                    (12/48)155=ZCVT_STACKORG       DC V(STACKORG)   ENTRY PERFORM STACK ORIGIN
00004C                                    (12/49)156=ZCVT_STACKPTR       DC V(STACKPTR)   ENTRY CUR ENTRY A(PG_END+4,RET)
000050                                    (12/50)157=ZCVT_STACKEND       DC V(STACKEND)   ENTRY PERFORM STACK END
000054                                    (12/51)158=ZCVT_STOPRUN        DC V(STOPRUN)    ENTRY R1=RC
000058                                    (12/52)159=ZCVT_TALPHAX        DC V(TALPHAX)    ENTRY TEST ALPHABETIC X
00005C                                    (12/53)160=ZCVT_TNUMP          DC V(TNUMP)      ENTRY TEST NUMERIC P
000060                                    (12/54)161=ZCVT_TNUMX          DC V(TNUMX)      ENTRY TEST NUMERIC X
000064                                    (12/55)162=ZCVT_TNUMZ          DC V(TNUMZ)      ENTRY TEST NUMERIC Z
000068                                    (12/56)163=*
000068                                    (12/57)164=* ADDITIONAL SEPARATE MODULES LINKED WITH Z390NUC IN ZC390LIB.390
000068                                    (12/58)165=*
000068                                    (12/59)166=ZCVT_ABORT     DC V(ABORT)         MODULE  R1=ABORT ERROR MSG #
00006C                  00000001          (12/60)167=ZCVT_ABORT_ALTER   EQU    1 ABORT ALTER DUE TO BRC NOT FOUND AT TARGET
00006C                  00000002          (12/61)168=ZCVT_ABORT_CALL    EQU    2 ABORT DYNAMIC CALL - PGM NOT FOUND
00006C                  00000003          (12/62)169=ZCVT_ABORT_DISPLAY EQU    3 ABORT DISPLAY DUE TO BUFFER EXCEEDED
00006C                  00000004          (12/63)170=ZCVT_ABORT_OPEN    EQU    4 ABORT OPEN  INVALID DCB
00006C                  00000006          (12/64)171=ZCVT_ABORT_STACK   EQU    6 ABORT PEROFRM STACK OVERFLOW
00006C                  00000007          (12/65)172=ZCVT_ABORT_VERSION EQU    7 ABORT ZC390NUC INIT ZCOBOL VERSION ERROR
00006C                  00000008          (12/66)173=ZCVT_ABORT_INT128  EQU    8 ABORT INTEGER 128 CONVERSION OVERFLO
00006C                  00000009          (12/67)174=ZCVT_ABORT_DIVQ    EQU    9 ABORT DIVIDE Q IF DIVISOR 0 OR > 2**63
00006C                  0000000A          (12/68)175=ZCVT_ABORT_CICS    EQU   10 ABORT THIS PGM REQUIRES EXEC CICS TRANS MGR
00006C                  0000000B          (12/69)176=ZCVT_ABORT_ACCEPT  EQU   11 ABORT ACCEPT EOF
00006C                  0000000B          (12/70)177=ZCVT_ABORT_MAXERR  EQU   11 ABORT MAX ERROR CODE
00006C                                    (12/71)178=ZCVT_ACCEPT    DC V(ACCEPT)        MODULE  R1=A(TYPE,FLD_ADD,FLD_LEN)
000070                  00000001          (12/72)179=ZCVT_ACCEPT_DEFAULT EQU   1 INPUT DEFAULT DDNAME=SYSIN
000070                  00000002          (12/73)180=ZCVT_ACCEPT_CONSOLE EQU   2 INPUT VIA WTOR FROM CONSOLE
000070                  00000003          (12/74)181=ZCVT_ACCEPT_DDNAME  EQU   3 INPUT FROM DDNAME WITH DDNAME ADDR IN R3
000070                  00000004          (12/75)182=ZCVT_ACCEPT_DATE    EQU   4 RETURN DAY OF WEEK PIC 9(8) MMDDYYYY
000070                  00000005          (12/76)183=ZCVT_ACCEPT_TIME    EQU   5 RETURN DAY OF WEEK PIC 9(8) HHMMSSTH
000070                  00000006          (12/77)184=ZCVT_ACCEPT_DOW     EQU   6 RETURN DAY OF WEEK PIC 9 1-7
000070                                    (12/78)185=ZCVT_DISPLAY   DC V(DISPLAY)       MODULE  R1=A(ADDR,LEN,TYPE)
000074                                    (12/79)186=ZCVT_INSPECT   DC V(INSPECT)       MODULE  R0=TYPE,R1=PARMLIST
000078                  00000000          (12/80)187=ZCVT_TALLYING      EQU   0 INSPECT TALLYING
000078                  00000004          (12/81)188=ZCVT_REPLACING     EQU   4 INSPECT REPLACING
000078                  00000008          (12/82)189=ZCVT_CONVERTING    EQU   8 INSPECT CONVERTING
000078                                    (12/83)190=*
000078                                    (12/84)191=* SHARED DATA AREAS
000078                                    (12/85)192=*
000078                                    (12/86)193=ZCVT_PVTMAXDL  DS H          MAXIMUM DISPLAY LINE LENGTH  RPI 1118
000080                                    (12/87)194=               DS 0D
000080                                    (12/88)195=ZCVT_ZERO      DC XL16'00'   BINARY ZEROS
000090                                    (12/89)196=ZCVT_HIGH_VALUES DC 0XL16,16X'FF' BINARY FF'S     RPI 1181
0000A0                                    (12/90)197=ZCVT_PWORK     DS PL8        CVD/CVB WORK
0000A8                                    (12/91)198=ZCVT_PWORK1    DS PL16       DIV DIVIDEND, CVDG/CVBG WORK
0000B8                                    (12/92)199=ZCVT_PWORK2    DS PL16       DIV DIVISOR
0000C8                                    (12/93)200=ZCVT_PWORK3    DS PL16       DIV QUOTIENT
0000D8                                    (12/94)201=ZCVT_PWORK4    DS PL16       DIV REMAINDER
0000E8                                    (12/95)202=ZCVT_NDDX      DS XL16       DIV DIVIDEND HOLD AREA
0000F8                                    (12/96)203=ZCVT_WORKAREA  DS XL256      GEN_INSPECT PARMS, GEN_EDIT WORK, ETC.
0001F8                                    (12/97)204=*
0001F8                                    (12/98)205=* END OF ZC390CVT
0001F8                                    (12/99)206=*
0001F8                  000001F8         (12/100)207=ZCVT_END   EQU   *
000000                                    (11/83)208+ZC390PVT DSECT 
000000                                    (13/11)209=PVTPGM   DS    CL8  ZCOBOL PGM NAME
000008                                    (13/12)210=PVTDATE  DS    CL8  ZCOBOL COMPILE DATE
000010                                    (13/13)211=PVTTIME  DS    CL8  ZCOBOL COMPILE TIME
000018                                    (13/14)212=PVTVER   DS    CL8  ZCOBOL COMPILER VERSION
000020                                    (13/15)213=PVTCICS  DS    C    ZCOBOL EXEC CICS PGM
000021                                    (13/16)214=PVTEXTND DS    C    ZCOBOL EXTENDED PRECISION
000022                                    (13/17)215=PVTTRUNC DS    C    ZCOBOL TRUNCATE TO PICTURE
000023                                    (13/18)216=PVTR64   DS    C    ZCOBOL USE 64 BIT REGISTERS
000024                                    (13/19)217=PVTMAXDL DS    H    ZCOBOL MAX DISPLAY LINE LENGTH
000026                                    (13/20)218=         DS    XL10 RESERVED
0003D8                                    (11/85)219+ZC_WSLOC LOCTR              CONTINUE WS FOR FD AND DATA
0003D8                                      (1/9)220 *        ENVIRONMENT DIVISION.
0003D8                                     (1/11)221 *        INPUT-OUTPUT SECTION.
0003D8                                     (1/13)222 *        FILE-CONTROL.
0003D8                                     (1/15)223 *            SELECT IN-FILE
0003D8                                     (1/16)224 *                ASSIGN TO 'ZCOBOL\TEST\TESTPM3.IN'
0003D8                                     (1/17)225 *                ORGANIZATION IS LINE SEQUENTIAL.
0003D8                                     (1/20)226 *            SELECT OUT-FILE
0003D8                                     (1/21)227 *                ASSIGN TO 'ZCOBOL\TEST\TESTPM3.OUT'
0003D8                                     (1/22)228 *                ORGANIZATION IS LINE SEQUENTIAL.
0003D8                                     (1/25)229 *        DATA DIVISION.
0003D8                                    (29/23)230+         PRINT DATA
0003D8                                     (1/27)231 *        FILE SECTION.
0003D8                                     (1/29)232 *        FD  IN-FILE
0003D8                                     (1/30)233 *            DATA RECORD IS IN-RECORD.
0003D8                                     (1/32)234 *        01  IN-RECORD.
0003D8                                     (1/34)235 *            03  IR   OCCURS  80 PIC X(01).
0003D8                                     (1/35)236 ********        01  IN-RECORD PIC X(80).
0003D8                                     (1/37)237 *        FD  OUT-FILE
0003D8                                     (1/38)238 *            DATA RECORD IS OUT-RECORD.
0003D8                                     (1/40)239 *        01  OUT-RECORD.
0003D8                                     (1/42)240 *            03  OR   OCCURS  80 PIC X(01).
0003D8                                     (1/43)241 ********        01  OUT-RECORD PIC X(80).
0003D8                                     (1/45)242 *        WORKING-STORAGE SECTION.
0003D8                                     (1/47)243 *        01  WS-LINE PIC X(80).
0003D8                                     (1/49)244 *        01  END-OF-FILE-FLAG PIC X VALUE 'F'.
0003D8                                     (1/51)245 *        77  ICHAR COMP   PIC S9(4) VALUE +0.
0003D8                                     (1/53)246 *        77  OCHAR COMP   PIC S9(4) VALUE +0.
0003D8                                     (1/55)247 *        77  IBYTES       COMP-3    PIC S9(18) VALUE +0.
0003D8                                     (1/57)248 *        77  COUNT COMP-3 PIC S9(4) VALUE +0.
0003D8                                     (1/59)249 *        77  HOLD-CHAR    PIC X(01) VALUE SPACE.
0003D8                                     (1/62)250 *        PROCEDURE DIVISION.
0003D8                                     (1/63)251 *ZC      9         PROCEDURE DIVISION
0003D8                                    (35/18)252+         PRINT LIST,GEN,LISTUSE TURN PRINT LISTING ON FOR USER CODE GEN
0000EC                                    (35/19)253+BYTEFILE CSECT                SWITCH TO PROCEDURE CODE AHEAD OF WS
0000EC                                     (1/65)254 *        MAINLINE.
0000EC                                     (8/96)255+PG_MAINLINE DS 0H
0000EC                                     (1/67)256 *            DISPLAY 'BYTEFILE STARTED'.
0000EC                                     (1/68)257 *ZC     34         DISPLAY 'BYTEFILE STARTED'
0000EC A715000C                000104     (18/49)258+         BRAS  1,*+(WTO#0133_EOT-*+1)/2*2
0000F0 00140000C2E8E3C5                   (18/50)259+         DC    AL2(WTO#0133_EOT-*,0),C'BYTEFILE STARTED'
0000F8 C6C9D3C540E2E3C1
000100 D9E3C5C4
000104                  00000104          (18/51)260+WTO#0133_EOT     EQU *
000104 0A23                               (18/52)261+         SVC   35
000106                                     (1/71)262 *            PERFORM INITIALIZATION-ROUTINE.
000106                                     (1/72)263 *ZC     35         PERFORM INITIALIZATION_ROUTINE
000106 C0E00000006B            0001DC     (41/44)264+         LARL  ZC_R14,PG_INITIALIZATION_ROUTINE
00010C C000000000BA            000280     (41/45)265+         LARL  ZC_R0,PG_INITIALIZATION_ROUTINE_END+6
000112 58F0903C                00003C     (41/46)266+         L     ZC_R15,ZCVT_PERFORM
000116 0D1F                               (41/47)267+         BASR  ZC_R1,ZC_R15
000118                                     (1/75)268 *            PERFORM THE-LOOP
000118                                     (1/76)269 *                    UNTIL END-OF-FILE-FLAG = 'Y'.
000118                                     (1/77)270 *ZC     36         PERFORM THE_LOOP,UNTIL,END_OF_FILE_FLAG,=,'Y'
000118                                     (8/41)271+PG_PM_2_T    DS    0H  &TYPE
000118 95E8D218                0005F0    (47/438)272+         CLI   END_OF_FILE_FLAG,C'Y'
00011C A7740004                000124     (48/15)273+         BRC   15-ZC_EQ,PG_IF_1_1
000120 A7F4000D                00013A     (50/15)274+         J     PG_PM_2_E
000124                                     (8/41)275+PG_IF_1_1    DS    0H  &TYPE
000124 C0E0000000AE            000280     (41/44)276+         LARL  ZC_R14,PG_THE_LOOP
00012A C000000000EE            000306     (41/45)277+         LARL  ZC_R0,PG_THE_LOOP_END+6
000130 58F0903C                00003C     (41/46)278+         L     ZC_R15,ZCVT_PERFORM
000134 0D1F                               (41/47)279+         BASR  ZC_R1,ZC_R15
000136 A7F4FFF1                000118     (50/15)280+         J     PG_PM_2_T
00013A                                     (8/41)281+PG_PM_2_E    DS    0H  &TYPE
00013A                                     (1/80)282 *            PERFORM EOJ-ROUTINE.
00013A                                     (1/81)283 *ZC     38         PERFORM EOJ_ROUTINE
00013A C0E000000110            00035A     (41/44)284+         LARL  ZC_R14,PG_EOJ_ROUTINE
000140 C00000000116            00036C     (41/45)285+         LARL  ZC_R0,PG_EOJ_ROUTINE_END+6
000146 58F0903C                00003C     (41/46)286+         L     ZC_R15,ZCVT_PERFORM
00014A 0D1F                               (41/47)287+         BASR  ZC_R1,ZC_R15
00014C                                     (1/84)288 *            DISPLAY 'BYTEFILE RECORDS COPIED = ' COUNT.
00014C                                     (1/85)289 *ZC     39         DISPLAY 'BYTEFILE RECORDS COPIED = ',COUNT
00014C 413090F8                0000F8     (39/28)290+         LA    ZC_R3,ZCVT_WORKAREA  ZC_R3=CVT LIST WORK AREA
000150 C00000000120            000390     (39/68)291+         LARL  ZC_R0,=CL26'BYTEFILE RECORDS COPIED = ' PAD TO EVEN LEN LIT
000156 4110001A                           (39/69)293+         LA    ZC_R1,26
00015A 412000E7                           (39/70)294+         LA    ZC_R2,C'X'
00015E 90023000                           (39/71)295+         STM   ZC_R0,ZC_R2,0(ZC_R3)  SET DISPLAY LIST ENTRY
000162 4100D227                0005FF     (39/82)296+         LA    ZC_R0,COUNT
000166 41100003                           (39/83)297+         LA    ZC_R1,3  RPI 1182 WAS &SYM_LEN(&FIELD_IX)
00016A 412000D7                           (39/88)298+         LA    ZC_R2,C'P'
00016E 9002300C                           (39/90)299+         STM   ZC_R0,ZC_R2,12(ZC_R3)  SET DISPLAY LIST ENTRY
000172 96803014                           (39/94)300+         OI    24-4(ZC_R3),X'80' SET VL BIT IN LAST WORD OF PARM LIST
000176 1813                               (39/95)301+         LR    ZC_R1,ZC_R3
000178 58F09070                000070     (39/96)302+         L     ZC_R15,ZCVT_DISPLAY
00017C 0DEF                               (39/97)303+         BASR  ZC_R14,ZC_R15
00017E                                     (1/88)304 *            DISPLAY 'BYTES COPIED =' IBYTES.
00017E                                     (1/89)305 *ZC     40         DISPLAY 'BYTES COPIED =',IBYTES
00017E 413090F8                0000F8     (39/28)306+         LA    ZC_R3,ZCVT_WORKAREA  ZC_R3=CVT LIST WORK AREA
000182 C00000000114            0003AA     (39/68)307+         LARL  ZC_R0,=CL14'BYTES COPIED =' PAD TO EVEN LEN LIT
000188 4110000E                           (39/69)308+         LA    ZC_R1,14
00018C 412000E7                           (39/70)309+         LA    ZC_R2,C'X'
000190 90023000                           (39/71)310+         STM   ZC_R0,ZC_R2,0(ZC_R3)  SET DISPLAY LIST ENTRY
000194 4100D21D                0005F5     (39/82)311+         LA    ZC_R0,IBYTES
000198 4110000A                           (39/83)312+         LA    ZC_R1,10  RPI 1182 WAS &SYM_LEN(&FIELD_IX)
00019C 412000D7                           (39/88)313+         LA    ZC_R2,C'P'
0001A0 9002300C                           (39/90)314+         STM   ZC_R0,ZC_R2,12(ZC_R3)  SET DISPLAY LIST ENTRY
0001A4 96803014                           (39/94)315+         OI    24-4(ZC_R3),X'80' SET VL BIT IN LAST WORD OF PARM LIST
0001A8 1813                               (39/95)316+         LR    ZC_R1,ZC_R3
0001AA 58F09070                000070     (39/96)317+         L     ZC_R15,ZCVT_DISPLAY
0001AE 0DEF                               (39/97)318+         BASR  ZC_R14,ZC_R15
0001B0                                     (1/92)319 *            DISPLAY 'BYTEFILE ENDED OK'
0001B0                                     (1/93)320 *ZC     41         DISPLAY 'BYTEFILE ENDED OK'
0001B0 A715000D                0001CA     (18/49)321+         BRAS  1,*+(WTO#0174_EOT-*+1)/2*2
0001B4 00150000C2E8E3C5                   (18/50)322+         DC    AL2(WTO#0174_EOT-*,0),C'BYTEFILE ENDED OK'
0001BC C6C9D3C540C5D5C4
0001C4 C5C440D6D2
0001C9                  000001C9          (18/51)323+WTO#0174_EOT     EQU *
0001CA 0A23                               (18/52)324+         SVC   35
0001CC                                     (1/95)325 *            STOP RUN.
0001CC                                     (1/96)326 *ZC     42         STOP  RUN
0001CC 4810D285                00065D     (53/18)327+         LH    ZC_R1,RETURN_CODE      PASS RETURN CODE IN R1
0001D0 58F09030                000030     (53/23)328+         L     ZC_R15,ZCVT_GOBACK
0001D4 07FF                               (53/24)329+         BR    ZC_R15
0001D6                                     (1/99)330 *        INITIALIZATION-ROUTINE.
0001D6 58F09040                000040      (8/64)331+PG_MAINLINE_END L ZC_R15,ZCVT_PMCHECK
0001DA 0DEF                                (8/65)332+         BASR  ZC_R14,ZC_R15 CHECK FOR END OF CURRENT PERFORM
0001DC                                     (8/96)333+PG_INITIALIZATION_ROUTINE DS 0H
0001DC                                    (1/101)334 *            OPEN INPUT IN-FILE.
0001DC                                    (1/102)335 *ZC     44         OPEN  INPUT,IN_FILE
0001DC C00100000050            000050     (55/29)336+         LGFI  ZC_R0,L'IN_RECORD
0001E2 4000D096                00046E     (55/30)337+         STH   ZC_R0,IN_FILE+DCBBLKSI-IHADCB
0001E6 C000000000C9            000378     (55/40)338+         LARL  ZC_R0,=C'"ZCOBOL\TEST\TESTPM3.IN"'
0001EC 5000D0B4                00048C     (55/42)339+         ST    ZC_R0,IN_FILE+DCBDSNAM-IHADCB
0001F0 C010000000E4            0003B8     (55/48)340+         LARL   ZC_R1,=AL2(DCBMACRF_GM)
0001F6 D201D08A1000     000462            (55/49)341+         MVC    DCBMACRF-IHADCB+IN_FILE,0(ZC_R1)
0001FC 4110D058                000430    (56/108)342+                       LA     1,IN_FILE
000200 41000040                          (56/111)343+                       LA  0,DCBOFLGS_GM   READ ONLY
000204 0A13                              (56/120)344+                   SVC   19 OPEN R0=TYPE,R1=DCB/ACB
000000                                    (57/40)345+IHADCB   DSECT 
000000                  000000            (57/41)346+         ORG   IHADCB+X'00'
000000                                    (57/42)347+DCBID    DS    CL4            DCB ID RPI88
000004                  00001A            (57/43)348+         ORG   IHADCB+X'1A'
00001A                                    (57/44)349+DCBDSORG DS    X              DATA SET ORGANIZATION
00001B                  00000040          (57/45)350+DCBDSORG_PS EQU X'40'           PHYSICAL SEQUENTIAL
00001B                  00000020          (57/46)351+DCBDSORG_DA EQU X'20'           DIRECT ACCESS
00001B                  00001C            (57/47)352+         ORG   IHADCB+X'1C'
00001C                                    (57/48)353+DCBIOBAD DS    A              INPUT/OUTPUT BLOCK (TIOT TABLE INDEX)
000020                  000020            (57/49)354+         ORG   IHADCB+X'20'
000020                                    (57/50)355+DCBEODA  DS    0A ADDRESS OF END OF FILE EXIT 31 BIT VS 24 RPI 989
000020                                    (57/51)356+DCBEODAD DS    A ADDRESS OF END OF FILE EXIT  31 BIT VS 24
000024                  000024            (57/52)357+         ORG   IHADCB+X'24'
000024                                    (57/53)358+DCBRECFM DS    X              RECORD FORMAT
000025                  00000080          (57/54)359+DCBRECF      EQU X'80'           FIXED  RPI 989
000025                  00000080          (57/55)360+DCBRECFM_F   EQU X'80'           FIXED
000025                  00000080          (57/56)361+DCBRECFM_FA  EQU X'80'           FIXED
000025                  00000080          (57/57)362+DCBRECFM_FM  EQU X'80'           FIXED
000025                  00000040          (57/58)363+DCBRECFM_V   EQU X'40'           VARIABLE
000025                  00000040          (57/59)364+DCBRECFM_VA  EQU X'40'           VARIABLE
000025                  00000040          (57/60)365+DCBRECFM_VM  EQU X'40'           VARIABLE
000025                  00000090          (57/61)366+DCBRECFM_FB  EQU X'90'           FIXED BLOCKED
000025                  00000010          (57/62)367+DCBRECBR     EQU X'10'           BLOCKED RECORDS RPI 989
000025                  00000090          (57/63)368+DCBRECFM_FBA EQU X'90'           FIXED BLOCKED
000025                  00000090          (57/64)369+DCBRECFM_FBM EQU X'90'           FIXED BLOCKED
000025                  00000050          (57/65)370+DCBRECFM_VB  EQU X'50'           VARIABLE BLOCKED
000025                  00000050          (57/66)371+DCBRECFM_VBA EQU X'50'           VARIABLE BLOCKED
000025                  00000050          (57/67)372+DCBRECFM_VBM EQU X'50'           VARIABLE BLOCKED
000025                  000000A0          (57/68)373+DCBRECFM_FT  EQU X'A0'           FIXED ASCII TEXT
000025                  00000060          (57/69)374+DCBRECFM_VT  EQU X'60'           VARIABLE ASCII TEXT
000025                  000000C0          (57/70)375+DCBRECU      EQU X'C0'           UNDEFINED RCDS NOT SUPPORTED RPI 989
000025                  000028            (57/71)376+         ORG   IHADCB+X'28'
000028                                    (57/72)377+DCBDDNAM DS    CL8            DDNAME > ENV VAR > FILE NAME
000030                  000030            (57/73)378+         ORG   IHADCB+X'30'
000030                                    (57/74)379+DCBOFLGS DS    X              OPEN FLAGS
000031                  00000010          (57/75)380+DCBOFLGS_OPEN EQU X'10'          FILE OPEN (X'80' > X'10' RPI 906)_
000031                  00000010          (57/76)381+DCBOFOPN      EQU X'10'          FILE OPEN RPI 906
000031                  00000040          (57/77)382+DCBOFLGS_GM   EQU X'40'          READ  ALLOWED
000031                  00000020          (57/78)383+DCBOFLGS_PM   EQU X'20'          WRITE ALLOWED
000031                  00000040          (57/79)384+DCBOFLGS_GL   EQU X'40'          READ  ALLOWED
000031                  00000020          (57/80)385+DCBOFLGS_PL   EQU X'20'          WRITE ALLOWED
000031                  00000040          (57/81)386+DCBOFLGS_R    EQU X'40'          READ  ALLOWED
000031                  00000020          (57/82)387+DCBOFLGS_W    EQU X'20'          WRITE ALLOWED
000031                  00000060          (57/83)388+DCBOFLGS_RW   EQU X'60'          READ AND WRITE ALLOWED
000031                  000032            (57/84)389+         ORG   IHADCB+X'32'
000032                                    (57/85)390+DCBMACRF DS    H              MACRO REFERENCE ACCESS TYPE
000034                  00005000          (57/86)391+DCBMACRF_GM EQU X'5000'         GET MOVE   QSAM
000034                  00000050          (57/87)392+DCBMACRF_PM EQU X'0050'         PUT MOVE   QSAM
000034                  00004800          (57/88)393+DCBMACRF_GL EQU X'4800'         GET LOCATE QSAM    RPI 764
000034                  00000048          (57/89)394+DCBMACRF_PL EQU X'0048'         PUT LOCATE QSAM    RPI 764
000034                  00002000          (57/90)395+DCBMACRF_R  EQU X'2000'         READ  RANDOM BDAM
000034                  00000020          (57/91)396+DCBMACRF_W  EQU X'0020'         WRITE RANDOM BDAM
000034                  00002020          (57/92)397+DCBMACRF_RW EQU X'2020'         READ/WRITE RANDOM BDAM
000034                  000038            (57/93)398+         ORG   IHADCB+X'38'
000038                                    (57/94)399+DCBSYNAD DS    A              ERROR EXIT
00003C                  00003C            (57/95)400+         ORG   IHADCB+X'3C'
00003C                                    (57/96)401+DCBBLKSIF DS   F              BLOCK SIZE    RPI 587 32 BIT BLOCK SIZE
000040                  00003E            (57/97)402+         ORG   IHADCB+X'3E'
00003E                                    (57/98)403+DCBBLKSI DS    H              BLOCK SIZE    (ALSO UNBLOCKED MAX RECORD)
000040                  000050            (57/99)404+         ORG   IHADCB+X'50'
000050                                   (57/100)405+DCBLRECLF DS   F              RECORD LENGTH RPI 587 32 BIT RECORD LEN
000054                  000052           (57/101)406+         ORG   IHADCB+X'52'
000052                                   (57/102)407+DCBLRECL DS    H              RECORD LENGTH (MAY BE ZERO FOR UNBLOCKED)
000054                  000058           (57/103)408+         ORG   IHADCB+X'58'
000058                                   (57/104)409+DCBREC   DS    A      X'58'   ADDRESS OF USER SUPPLIED RECORD AREA
00005C                                   (57/105)410+DCBDSNAM DS    A      X'5C'   ADDRESS OF USER SUPPLIED DSN FILE SPEC
000060                                   (57/106)411+DCBDCBE  DS    A      X'60'   ADDRESS OF DCBE EODAD/SYNAD  RPI 281
000064                                   (57/107)412+DCBIO    DS    F      X'64'   TOTAL DCB IO OPERATIONS SINCE OPEN
000068                  00000068         (57/108)413+DCBLEN   EQU   *-IHADCB
000206                                   (57/111)414+BYTEFILE        CSECT                              RPI 591
000206 12FF                               (55/60)415+         LTR    ZC_R15,ZC_R15
000208 A7840007                000216     (55/61)416+         BRZ    ZC_OPEN_OK_0185
00020C A7180003                           (55/62)417+         LHI    ZC_R1,3   ABORT DUE TO OPEN FAILED
000210 58F09068                000068     (55/63)418+         L      ZC_R15,ZCVT_ABORT
000214 0DEF                               (55/64)419+         BASR   ZC_R14,ZC_R15
000216                                    (55/65)420+ZC_OPEN_OK_0185    DS 0H
000216                                    (1/105)421 *            OPEN OUTPUT OUT-FILE.
000216                                    (1/106)422 *ZC     45         OPEN  OUTPUT,OUT_FILE
000216 C00100000050            000050     (55/29)423+         LGFI  ZC_R0,L'OUT_RECORD
00021C 4000D14E                000526     (55/30)424+         STH   ZC_R0,OUT_FILE+DCBBLKSI-IHADCB
000220 C000000000CD            0003BA     (55/38)425+         LARL  ZC_R0,=C'"ZCOBOL\TEST\TESTPM3.OUT" ' ADD SPACE TO FORCE EVEN LIT
000226 5000D16C                000544     (55/42)427+         ST    ZC_R0,OUT_FILE+DCBDSNAM-IHADCB
00022A C010000000D5            0003D4     (55/51)428+         LARL   ZC_R1,=AL2(DCBMACRF_PM)
000230 D201D1421000     00051A            (55/52)429+         MVC    DCBMACRF-IHADCB+OUT_FILE,0(ZC_R1)
000236 4110D110                0004E8    (56/108)430+                       LA     1,OUT_FILE
00023A 41000020                          (56/113)431+                       LA  0,DCBOFLGS_PM   WRITE ONLY
00023E 0A13                              (56/120)432+                   SVC   19 OPEN R0=TYPE,R1=DCB/ACB
000240 12FF                               (55/60)433+         LTR    ZC_R15,ZC_R15
000242 A7840007                000250     (55/61)434+         BRZ    ZC_OPEN_OK_0193
000246 A7180003                           (55/62)435+         LHI    ZC_R1,3   ABORT DUE TO OPEN FAILED
00024A 58F09068                000068     (55/63)436+         L      ZC_R15,ZCVT_ABORT
00024E 0DEF                               (55/64)437+         BASR   ZC_R14,ZC_R15
000250                                    (55/65)438+ZC_OPEN_OK_0193    DS 0H
000250                                    (1/109)439 *            READ IN-FILE INTO IN-RECORD
000250                                    (1/110)440 *ZC     47         READ  IN_FILE,INTO,IN_RECORD,AT,END
000250 C00000000013            000276     (59/19)441+         LARL  ZC_R0,PG_IN_FILE_AT_END1
000256 5000D078                000450     (59/23)442+         ST    ZC_R0,IN_FILE+DCBEODAD-IHADCB SET EODAD
00025A E320D0580071            000430     (59/27)443+         LAY   ZC_R2,IN_FILE
000260 E330D0C00071            000498     (59/28)444+         LAY   ZC_R3,IN_RECORD
000266 1812                               (61/28)445+         LR    1,ZC_R2
000268 1803                               (61/28)446+         LR    0,ZC_R3
00026A 0A97                               (60/53)447+         SVC  151
00026C D24FD0C0D0C0     000498 000498    (63/107)448+         MVC   IN_RECORD,IN_RECORD  ALIGN LEFT X OTHER
000272 A7F40004                00027A     (59/40)449+         J    PG_IN_FILE_END_READ1
000276                                     (8/41)450+PG_IN_FILE_AT_END1 DS 0H  &TYPE
000276                                    (1/112)451 *                 AT END MOVE 'Y' TO END-OF-FILE-FLAG.
000276                                    (1/113)452 *ZC     47         MOVE  'Y',TO,END_OF_FILE_FLAG
000276 92E8D218                0005F0    (63/157)453+         MVI   END_OF_FILE_FLAG,C'Y'
00027A                                     (8/41)454+PG_IN_FILE_END_READ1 DS 0H  &TYPE
00027A                                    (1/116)455 *        THE-LOOP.
00027A 58F09040                000040      (8/64)456+PG_INITIALIZATION_ROUTINE_END L ZC_R15,ZCVT_PMCHECK
00027E 0DEF                                (8/65)457+         BASR  ZC_R14,ZC_R15 CHECK FOR END OF CURRENT PERFORM
000280                                     (8/96)458+PG_THE_LOOP DS 0H
000280                                    (1/118)459 *            PERFORM THE-MOVE
000280                                    (1/119)460 *               VARYING ICHAR FROM 1 BY 1 UNTIL ICHAR > 80.
000280                                    (1/121)461 *ZC     49         PERFORM THE_MOVE,VARYING,ICHAR,FROM,1,BY,1,UNTIL,ICHAR,>,80
000280 E544D2190001            0005F1    (63/361)463+          MVHHI ICHAR,1
000286                                     (8/41)464+PG_PM_4_T    DS    0H  &TYPE
000286 4800D219                0005F1    (47/312)465+         LH    0,ICHAR
00028A A70E0050                          (47/313)466+         CHI   0,80
00028E A7D40004                000296     (48/15)467+         BRC   15-ZC_H,PG_IF_2_1
000292 A7F40013                0002B8     (50/15)468+         J     PG_PM_4_E
000296                                     (8/41)469+PG_IF_2_1    DS    0H  &TYPE
000296 C0E000000038            000306     (41/44)470+         LARL  ZC_R14,PG_THE_MOVE
00029C C0000000005F            00035A     (41/45)471+         LARL  ZC_R0,PG_THE_MOVE_END+6
0002A2 58F0903C                00003C     (41/46)472+         L     ZC_R15,ZCVT_PERFORM
0002A6 0D1F                               (41/47)473+         BASR  ZC_R1,ZC_R15
0002A8 4800D219                0005F1    (66/269)474+         LH    ZC_R0,ICHAR
0002AC A70A0001                          (66/270)475+         AHI   ZC_R0,1
0002B0 4000D219                0005F1    (66/271)476+         STH   ZC_R0,ICHAR
0002B4 A7F4FFE9                000286     (50/15)477+         J     PG_PM_4_T
0002B8                                     (8/41)478+PG_PM_4_E    DS    0H  &TYPE
0002B8                                    (1/124)479 *            WRITE OUT-RECORD.
0002B8                                    (1/125)480 *ZC     51         WRITE OUT_RECORD
0002B8 E320D1100071            0004E8     (69/25)481+         LAY   ZC_R2,OUT_FILE
0002BE E330D1780071            000550     (69/26)482+         LAY   ZC_R3,OUT_RECORD
0002C4 1812                               (61/28)483+         LR    1,ZC_R2
0002C6 1803                               (61/28)484+         LR    0,ZC_R3
0002C8 0A98                               (70/48)485+         SVC  152 QSAM PUT R0=REC, R1=DCB
0002CA                                    (1/128)486 *            ADD 1 TO COUNT.
0002CA                                    (1/129)487 *ZC     52         ADD   1,TO,COUNT
0002CA A7E50003                          (66/279)488+         BRAS  ZC_R14,3 SET ZC_R1 TO A(INLINE LIT) AND SKIP OVER IT
0002CE 001C                              (66/280)489+         DC    PL2'1'
0002D0 FA21D227E000     0005FF           (66/287)490+         AP    COUNT,0(2,ZC_R14)
0002D6                                    (1/132)491 *            READ IN-FILE INTO OUT-RECORD
0002D6                                    (1/133)492 *ZC     54         READ  IN_FILE,INTO,OUT_RECORD,AT,END
0002D6 C00000000013            0002FC     (59/19)493+         LARL  ZC_R0,PG_IN_FILE_AT_END2
0002DC 5000D078                000450     (59/23)494+         ST    ZC_R0,IN_FILE+DCBEODAD-IHADCB SET EODAD
0002E0 E320D0580071            000430     (59/27)495+         LAY   ZC_R2,IN_FILE
0002E6 E330D0C00071            000498     (59/28)496+         LAY   ZC_R3,IN_RECORD
0002EC 1812                               (61/28)497+         LR    1,ZC_R2
0002EE 1803                               (61/28)498+         LR    0,ZC_R3
0002F0 0A97                               (60/53)499+         SVC  151
0002F2 D24FD178D0C0     000550 000498    (63/107)500+         MVC   OUT_RECORD,IN_RECORD  ALIGN LEFT X OTHER
0002F8 A7F40004                000300     (59/40)501+         J    PG_IN_FILE_END_READ2
0002FC                                     (8/41)502+PG_IN_FILE_AT_END2 DS 0H  &TYPE
0002FC                                    (1/135)503 *                 AT END MOVE 'Y' TO END-OF-FILE-FLAG.
0002FC                                    (1/136)504 *ZC     54         MOVE  'Y',TO,END_OF_FILE_FLAG
0002FC 92E8D218                0005F0    (63/157)505+         MVI   END_OF_FILE_FLAG,C'Y'
000300                                     (8/41)506+PG_IN_FILE_END_READ2 DS 0H  &TYPE
000300                                    (1/139)507 *        THE-MOVE.
000300 58F09040                000040      (8/64)508+PG_THE_LOOP_END L ZC_R15,ZCVT_PMCHECK
000304 0DEF                                (8/65)509+         BASR  ZC_R14,ZC_R15 CHECK FOR END OF CURRENT PERFORM
000306                                     (8/96)510+PG_THE_MOVE DS 0H
000306                                    (1/141)511 *            MOVE ICHAR TO OCHAR.
000306                                    (1/142)512 *ZC     56         MOVE  ICHAR,TO,OCHAR
000306 D201D21BD219     0005F3 0005F1    (63/107)513+         MVC   OCHAR,ICHAR  ALIGN LEFT X OTHER
00030C                                    (1/145)514 *            MOVE IR (ICHAR) TO HOLD-CHAR.
00030C                                    (1/146)515 *
00030C                                    (1/147)516 *ZC     57         MOVE  IR,'(',ICHAR,')',TO,HOLD_CHAR
00030C C0F900000219            000219    (71/115)517+         IILF  ZC_R15,ICHAR-ZC_WS
000312 1AFD                              (71/116)518+         AR    ZC_R15,ZC_R13
000314 48FF0000                          (71/128)519+         LH    ZC_R15,0(ZC_R15)
000318 06F0                              (71/145)520+         BCTR  ZC_R15,0
00031A C2F100000001            000001    (71/148)521+         MSFI  ZC_R15,1 L'&SYM_NAME(&SIX_OCCUR(&CUR_SIX)) RPI 1161 CORRECT CONTINUE RPI 1182
000320 412FD0C0                000498     (71/42)523+         LA    ZC_R2,IR(ZC_R15)
000324 D200D22A2000     000602           (63/107)524+         MVC   HOLD_CHAR,0(ZC_R2)  ALIGN LEFT X OTHER
00032A                                    (1/150)525 *            MOVE HOLD-CHAR TO OR (OCHAR).
00032A                                    (1/151)526 *ZC     59         MOVE  HOLD_CHAR,TO,OR,'(',OCHAR,')'
00032A C0F90000021B            00021B    (71/115)527+         IILF  ZC_R15,OCHAR-ZC_WS
000330 1AFD                              (71/116)528+         AR    ZC_R15,ZC_R13
000332 48FF0000                          (71/128)529+         LH    ZC_R15,0(ZC_R15)
000336 06F0                              (71/145)530+         BCTR  ZC_R15,0
000338 C2F100000001            000001    (71/148)531+         MSFI  ZC_R15,1 L'&SYM_NAME(&SIX_OCCUR(&CUR_SIX)) RPI 1161 CORRECT CONTINUE RPI 1182
00033E 413FD178                000550     (71/42)533+         LA    ZC_R3,OR(ZC_R15)
000342 D2003000D22A            000602    (63/107)534+         MVC   0(1,ZC_R3),HOLD_CHAR  ALIGN LEFT X OTHER
000348                                    (1/154)535 *            COMPUTE IBYTES = IBYTES + 1.
000348                                    (1/155)536 *ZC     60         COMPUTE IBYTES,=,IBYTES,+,1
000348 A7E50003                          (66/279)537+         BRAS  ZC_R14,3 SET ZC_R1 TO A(INLINE LIT) AND SKIP OVER IT
00034C 001C                              (66/280)538+         DC    PL2'1'
00034E FA91D21DE000     0005F5           (66/287)539+         AP    IBYTES,0(2,ZC_R14)
000354                                    (1/158)540 *        EOJ-ROUTINE.
000354 58F09040                000040      (8/64)541+PG_THE_MOVE_END L ZC_R15,ZCVT_PMCHECK
000358 0DEF                                (8/65)542+         BASR  ZC_R14,ZC_R15 CHECK FOR END OF CURRENT PERFORM
00035A                                     (8/96)543+PG_EOJ_ROUTINE DS 0H
00035A                                    (1/160)544 *            CLOSE IN-FILE.
00035A                                    (1/161)545 *ZC     62         CLOSE IN_FILE
00035A 4110D058                000430    (76/100)546+                       LA     1,IN_FILE
00035E 0A14                              (76/106)547+                   SVC   20 CLOSE R1=DCB/ACB
000360                                    (1/164)548 *            CLOSE OUT-FILE.
000360                                    (1/165)549 *ZC     63         CLOSE OUT_FILE
000360 4110D110                0004E8    (76/100)550+                       LA     1,OUT_FILE
000364 0A14                              (76/106)551+                   SVC   20 CLOSE R1=DCB/ACB
000366 58F09040                000040      (8/64)552+PG_EOJ_ROUTINE_END L ZC_R15,ZCVT_PMCHECK
00036A 0DEF                                (8/65)553+         BASR  ZC_R14,ZC_R15 CHECK FOR END OF CURRENT PERFORM
00036C                                    (8/108)554+SN_END_PROCEDURE DS 0H SECTION
00036C                                    (77/18)555+*        PROCEDURE END
00036C 4810D285                00065D     (77/24)556+         LH    ZC_R1,RETURN_CODE
000370 58F09030                000030     (77/25)557+         L     ZC_R15,ZCVT_GOBACK
000374 0DEF                               (77/26)558+         BASR  ZC_R14,ZC_R15
000376                                    (77/32)559+         LTORG 
000378 7FE9C3D6C2D6D3E0 =C'"ZCOBOL\TEST\TESTPM3.IN"'
000380 E3C5E2E3E0E3C5E2
000388 E3D7D4F34BC9D57F
000390 C2E8E3C5C6C9D3C5 =CL26'BYTEFILE RECORDS COPIED = '
000398 40D9C5C3D6D9C4E2
0003A0 40C3D6D7C9C5C440
0003A8 7E40
0003AA C2E8E3C5E240C3D6 =CL14'BYTES COPIED ='
0003B2 D7C9C5C4407E
0003B8 5000             =AL2(DCBMACRF_GM)
0003BA 7FE9C3D6C2D6D3E0 =C'"ZCOBOL\TEST\TESTPM3.OUT" '
0003C2 E3C5E2E3E0E3C5E2
0003CA E3D7D4F34BD6E4E3
0003D2 7F40
0003D4 0050             =AL2(DCBMACRF_PM)
0003D6                                     (6/15)560+*    ZCOBOL WORKING STORAGE SECTION DATA ITEMS 
0003D6                                     (6/15)561+*    LVL DATA NAME                      ADDR     LEN      DUP TYP PIC        VALUE 
0003D6                                     (6/15)563+*    01  ZC_SAVEAREA                    00000000 00000048 1   X   X(72)       
0003D6                                     (6/15)565+*    01  ZC_WS_ID                       00000048 00000008 1   X   X(8)       ''WS*WS*WS'' 
0003D6                                     (6/15)567+*    01  ZC_WS_START                    00000050 00000004 1   A               
0003D6                                     (6/15)569+*    01  ZC_WS_LEN                      00000054 00000004 1   F   9(9)        
0003D6                                     (6/15)571+*    01  FILLER                         00000058 00000068 1   X               
0003D6                                     (6/15)573+*    91  IN_FILE                        00000058 00000068 1   X               
0003D6                                     (6/15)575+*    01  IN_RECORD                      000000C0 00000050 1   X               
0003D6                                     (6/15)577+*    03  IR                             000000C0 00000001 80   X   X(01)       
0003D6                                     (6/15)579+*    91  OUT_FILE                       00000110 00000068 1   X               
0003D6                                     (6/15)581+*    01  OUT_RECORD                     00000178 00000050 1   X               
0003D6                                     (6/15)583+*    03  OR                             00000178 00000001 80   X   X(01)       
0003D6                                     (6/15)585+*    01  WS_LINE                        000001C8 00000050 1   X   X(80)       
0003D6                                     (6/15)587+*    01  END_OF_FILE_FLAG               00000218 00000001 1   X   X          ''F'' 
0003D6                                     (6/15)589+*    01  ICHAR                          00000219 00000002 1   H   9(4)       +0 
0003D6                                     (6/15)591+*    01  OCHAR                          0000021B 00000002 1   H   9(4)       +0 
0003D6                                     (6/15)593+*    01  IBYTES                         0000021D 0000000A 1   P   9(18)      +0 
0003D6                                     (6/15)595+*    01  COUNT                          00000227 00000003 1   P   9(4)       +0 
0003D6                                     (6/15)597+*    01  HOLD_CHAR                      0000022A 00000001 1   X   X(01)      SPACE 
0003D6                                     (6/15)599+*    01  DEBUG_ITEM                     0000022B 00000058 1   X               
0003D6                                     (6/15)601+*    02  DEBUG_LINE                     0000022B 00000006 1   X   X(6)        
0003D6                                     (6/15)603+*    02  FILLER                         00000231 00000001 1   X   X          SPACE 
0003D6                                     (6/15)605+*    02  DEBUG_NAME                     00000232 0000001E 1   X   X(30)       
0003D6                                     (6/15)607+*    02  FILLER                         00000250 00000001 1   X   X          SPACE 
0003D6                                     (6/15)609+*    02  DEBUG_SUB_1                    00000251 00000004 1   Z   9999        
0003D6                                     (6/15)611+*    02  FILLER                         00000255 00000001 1   X   X          SPACE 
0003D6                                     (6/15)613+*    02  DEBUG_SUB_2                    00000256 00000004 1   Z   9999        
0003D6                                     (6/15)615+*    02  FILLER                         0000025A 00000001 1   X   X          SPACE 
0003D6                                     (6/15)617+*    02  DEBUG_SUB_3                    0000025B 00000004 1   Z   9999        
0003D6                                     (6/15)619+*    02  FILLER                         0000025F 00000001 1   X   X          SPACE 
0003D6                                     (6/15)621+*    02  DEBUG_CONTENTS                 00000260 00000023 1   X   X(35)       
0003D6                                     (6/15)623+*    01  TRUE                           00000283 00000001 1   Z   9          1 
0003D6                                     (6/15)625+*    01  FALSE                          00000284 00000001 1   Z   9          0 
0003D6                                     (6/15)627+*    01  RETURN_CODE                    00000285 00000002 1   H   9(4)       0 
0003D8                                    (79/39)629+ZC_WSLOC LOCTR 
0003D8                  00000000         (79/131)630+ZC_WS_LOC_1  EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
0003D8                                   (79/336)631+ZC_SAVEAREA DS CL72
000420                  00000048         (79/131)632+ZC_WS_LOC_2  EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000420 E6E25CE6E25CE6E2                  (79/220)633+ZC_WS_ID DC CL8'WS*WS*WS'
000428                  00000050         (79/131)634+ZC_WS_LOC_3  EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000428                                   (79/322)635+ZC_WS_START DS AL4
00042C                  00000054         (79/131)636+ZC_WS_LOC_4  EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
00042C                                   (79/324)637+ZC_WS_LEN DS FL4
000430                  00000058         (79/131)638+ZC_WS_LOC_5  EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000430                                   (79/336)639+         DS  0CL104
000430                                    (80/49)640+IN_FILE  DS    0D             RPI 915
000430 0000000000000000                   (80/50)641+         DC    XL(DCBLEN)'00' RPI 946
000438 0000000000000000
000440 0000000000000000
000448 0000000000000000
000450 0000000000000000
000458 0000000000000000
000460 0000000000000000
000468 0000000000000000
000470 0000000000000000
000478 0000000000000000
000480 0000000000000000
000488 0000000000000000
000490 0000000000000000
000498                  000430           (80/108)642+         ORG   IN_FILE+DCBID-IHADCB        RPI88
000430 C4C3C2E5F1F0F0F1                  (80/109)643+         DC    C'DCBV1001'            RPI88
000438                  00044A           (80/110)644+         ORG   IN_FILE+DCBDSORG-IHADCB
00044A 40                                (80/111)645+         DC    AL1(DCBDSORG_PS) DCBDSORG
00044B                  000450           (80/112)646+         ORG   IN_FILE+DCBEODAD-IHADCB
000450 00000000                          (80/113)647+         DC    A(0) DCBEODAD
000454                  000454           (80/114)648+         ORG   IN_FILE+DCBRECFM-IHADCB
000454 A0                                (80/115)649+         DC    AL1(DCBRECFM_FT) DCBRECFM
000455                  000458           (80/116)650+         ORG   IN_FILE+DCBDDNAM-IHADCB
000458 C9D56DC6C9D3C540                  (80/121)651+         DC    CL8'IN_FILE' DCBDDNAME
000460                  000460           (80/123)652+         ORG   IN_FILE+DCBOFLGS-IHADCB
000460 00                                (80/124)653+         DC    AL1(0) DCBOFLGS RPI 668 ZERO (SET AT OPEN)
000461                  000462           (80/125)654+         ORG   IN_FILE+DCBMACRF-IHADCB
000462 5000                              (80/127)655+         DC    AL2(DCBMACRF_GM) DCBMACRF
000464                  000468           (80/132)656+         ORG   IN_FILE+DCBSYNAD-IHADCB
000468 00000000                          (80/133)657+         DC    A(0) DCBSYNAD DCBSYNAD
00046C                  00046C           (80/134)658+         ORG   IN_FILE+DCBBLKSIF-IHADCB    RPI 587
00046C 00000000                          (80/135)659+         DC    F'0' DCBBLKSIF  RPI 587
000470                  000480           (80/136)660+         ORG   IN_FILE+DCBLRECLF-IHADCB    RPI 587
000480 00000000                          (80/137)661+         DC    F'0' DCBLRECLF    RPI 587
000484                  000488           (80/138)662+         ORG   IN_FILE+DCBREC-IHADCB
000488 00000000                          (80/139)663+         DC    A(0) DCBREC
00048C                  00048C           (80/140)664+         ORG   IN_FILE+DCBDSNAM-IHADCB
00048C 00000000                          (80/141)665+         DC    A(0) DCBDSNAM
000490                  000490           (80/142)666+         ORG   IN_FILE+DCBDCBE-IHADCB   RPI 281
000490 00000000                          (80/143)667+         DC    A(0) DCBDCBE
000494                  000494           (80/144)668+         ORG   IN_FILE+DCBIO-IHADCB     RPI 907
000494 00000000                          (80/145)669+         DC    A(0)     DCBIO      RPI 907 TOTAL IO COUNT SINCE OPEN
000498                  000498           (80/146)670+         ORG   IN_FILE+DCBLEN
000498                  000000C0         (79/131)671+ZC_WS_LOC_7  EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000498                                   (79/336)672+IN_RECORD DS 0CL80
000498                  000000C0         (79/131)673+ZC_WS_LOC_8  EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000498                                   (79/336)674+IR       DS  80CL1
0004E8                                    (80/49)675+OUT_FILE DS    0D             RPI 915
0004E8 0000000000000000                   (80/50)676+         DC    XL(DCBLEN)'00' RPI 946
0004F0 0000000000000000
0004F8 0000000000000000
000500 0000000000000000
000508 0000000000000000
000510 0000000000000000
000518 0000000000000000
000520 0000000000000000
000528 0000000000000000
000530 0000000000000000
000538 0000000000000000
000540 0000000000000000
000548 0000000000000000
000550                  0004E8           (80/108)677+         ORG   OUT_FILE+DCBID-IHADCB        RPI88
0004E8 C4C3C2E5F1F0F0F1                  (80/109)678+         DC    C'DCBV1001'            RPI88
0004F0                  000502           (80/110)679+         ORG   OUT_FILE+DCBDSORG-IHADCB
000502 40                                (80/111)680+         DC    AL1(DCBDSORG_PS) DCBDSORG
000503                  000508           (80/112)681+         ORG   OUT_FILE+DCBEODAD-IHADCB
000508 00000000                          (80/113)682+         DC    A(0) DCBEODAD
00050C                  00050C           (80/114)683+         ORG   OUT_FILE+DCBRECFM-IHADCB
00050C A0                                (80/115)684+         DC    AL1(DCBRECFM_FT) DCBRECFM
00050D                  000510           (80/116)685+         ORG   OUT_FILE+DCBDDNAM-IHADCB
000510 D6E4E36DC6C9D3C5                  (80/121)686+         DC    CL8'OUT_FILE' DCBDDNAME
000518                  000518           (80/123)687+         ORG   OUT_FILE+DCBOFLGS-IHADCB
000518 00                                (80/124)688+         DC    AL1(0) DCBOFLGS RPI 668 ZERO (SET AT OPEN)
000519                  00051A           (80/125)689+         ORG   OUT_FILE+DCBMACRF-IHADCB
00051A 5000                              (80/127)690+         DC    AL2(DCBMACRF_GM) DCBMACRF
00051C                  000520           (80/132)691+         ORG   OUT_FILE+DCBSYNAD-IHADCB
000520 00000000                          (80/133)692+         DC    A(0) DCBSYNAD DCBSYNAD
000524                  000524           (80/134)693+         ORG   OUT_FILE+DCBBLKSIF-IHADCB    RPI 587
000524 00000000                          (80/135)694+         DC    F'0' DCBBLKSIF  RPI 587
000528                  000538           (80/136)695+         ORG   OUT_FILE+DCBLRECLF-IHADCB    RPI 587
000538 00000000                          (80/137)696+         DC    F'0' DCBLRECLF    RPI 587
00053C                  000540           (80/138)697+         ORG   OUT_FILE+DCBREC-IHADCB
000540 00000000                          (80/139)698+         DC    A(0) DCBREC
000544                  000544           (80/140)699+         ORG   OUT_FILE+DCBDSNAM-IHADCB
000544 00000000                          (80/141)700+         DC    A(0) DCBDSNAM
000548                  000548           (80/142)701+         ORG   OUT_FILE+DCBDCBE-IHADCB   RPI 281
000548 00000000                          (80/143)702+         DC    A(0) DCBDCBE
00054C                  00054C           (80/144)703+         ORG   OUT_FILE+DCBIO-IHADCB     RPI 907
00054C 00000000                          (80/145)704+         DC    A(0)     DCBIO      RPI 907 TOTAL IO COUNT SINCE OPEN
000550                  000550           (80/146)705+         ORG   OUT_FILE+DCBLEN
000550                  00000178         (79/131)706+ZC_WS_LOC_10 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000550                                   (79/336)707+OUT_RECORD DS 0CL80
000550                  00000178         (79/131)708+ZC_WS_LOC_11 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000550                                   (79/336)709+OR       DS  80CL1
0005A0                  000001C8         (79/131)710+ZC_WS_LOC_12 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
0005A0                                   (79/336)711+WS_LINE  DS  CL80
0005F0                  00000218         (79/131)712+ZC_WS_LOC_13 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
0005F0 C6                                (79/220)713+END_OF_FILE_FLAG DC CL1'F'
0005F1                  00000219         (79/131)714+ZC_WS_LOC_14 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
0005F1 0000                              (79/199)715+ICHAR    DC AL2(+0)                  RPI 1065
0005F3                  0000021B         (79/131)716+ZC_WS_LOC_15 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
0005F3 0000                              (79/199)717+OCHAR    DC AL2(+0)                  RPI 1065
0005F5                  0000021D         (79/131)718+ZC_WS_LOC_16 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
0005F5 0000000000000000                  (79/204)719+IBYTES   DC PL10'+0'
0005FD 000C
0005FF                  00000227         (79/131)720+ZC_WS_LOC_17 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
0005FF 00000C                            (79/204)721+COUNT    DC PL3'+0'
000602                  0000022A         (79/131)722+ZC_WS_LOC_18 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000602 40                                (79/227)723+HOLD_CHAR DC CL1' '
000603                  0000022B         (79/131)724+ZC_WS_LOC_19 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000603                                   (79/336)725+DEBUG_ITEM DS 0CL88
000603                  0000022B         (79/131)726+ZC_WS_LOC_20 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000603                                   (79/336)727+DEBUG_LINE DS CL6
000609                  00000231         (79/131)728+ZC_WS_LOC_21 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000609 40                                (79/227)729+         DC CL1' '
00060A                  00000232         (79/131)730+ZC_WS_LOC_22 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
00060A                                   (79/336)731+DEBUG_NAME DS CL30
000628                  00000250         (79/131)732+ZC_WS_LOC_23 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000628 40                                (79/227)733+         DC CL1' '
000629                  00000251         (79/131)734+ZC_WS_LOC_24 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000629                                   (79/338)735+DEBUG_SUB_1 DS ZL4
00062D                  00000255         (79/131)736+ZC_WS_LOC_25 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
00062D 40                                (79/227)737+         DC CL1' '
00062E                  00000256         (79/131)738+ZC_WS_LOC_26 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
00062E                                   (79/338)739+DEBUG_SUB_2 DS ZL4
000632                  0000025A         (79/131)740+ZC_WS_LOC_27 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000632 40                                (79/227)741+         DC CL1' '
000633                  0000025B         (79/131)742+ZC_WS_LOC_28 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000633                                   (79/338)743+DEBUG_SUB_3 DS ZL4
000637                  0000025F         (79/131)744+ZC_WS_LOC_29 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000637 40                                (79/227)745+         DC CL1' '
000638                  00000260         (79/131)746+ZC_WS_LOC_30 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000638                                   (79/336)747+DEBUG_CONTENTS DS CL35
00065B                  00000283         (79/131)748+ZC_WS_LOC_31 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
00065B F1                                (79/251)749+TRUE     DC CL1'1'
00065C                  00000284         (79/131)750+ZC_WS_LOC_32 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
00065C F0                                (79/251)751+FALSE    DC CL1'0'
00065D                  00000285         (79/131)752+ZC_WS_LOC_33 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
00065D 0000                              (79/199)753+RETURN_CODE DC AL2(0)                  RPI 1065
00065F                                     (6/15)754+*    ZCOBOL LINKAGE SECTION DATA ITEMS 
00065F                                     (6/15)755+*    LVL DATA NAME                      ADDR     LEN      DUP TYP PIC        VALUE 
00065F                                    (79/39)757+ZC_WSLOC LOCTR 
00065F                                    (77/58)758+ZC_WSLOC LOCTR 
00065F                  00000000          (77/60)759+ZC_WS_DIFF EQU  *-ZC_WS-647  DIFF BETWEEN ALLOC AND CALC WS
000660                                    (77/65)760+ZC_WS_END DS   0D
000660                                    (81/14)761+         MNOTE *,'ZCOBOL TOTAL SYMBOLS                 = 33'
000660                                    (81/15)762+         MNOTE *,'ZCOBOL TOTAL SYMBOL DUPLICATES       = 0'
000660                                    (81/16)763+         MNOTE *,'ZCOBOL TOTAL SYMBOL MAX DUP CHAIN    = 0'
000660                                    (81/17)764+         MNOTE *,'ZCOBOL TOTAL SYMBOL LEVEL 88         = 0'
000660                                    (81/18)765+         MNOTE *,'ZCOBOL TOTAL SYMBOL SET INDEXES      = 0'
000660                                    (81/19)766+         MNOTE *,'ZCOBOL TOTAL SYMBOL LINKAGE SECTIONS = 0'
000660                                    (81/20)767+         MNOTE *,'ZCOBOL TOTAL PROCEDURE SECTIONS      = 0'
000660                                    (81/21)768+         MNOTE *,'ZCOBOL TOTAL PROCEDURE PARAGRAPHS    = 5'
000660                                    (81/22)769+         MNOTE *,'ZCOBOL TOTAL PROCEDURE PARAGRAPH DUP = 0'
000660                                    (1/169)770          END 

Symbol Table Listing

 SYM=BYTEFILE LOC=00000000 LEN=00000660 ESD=0001 TYPE=CST  XREF=8 253 414 
 SYM=COUNT    LOC=000005FF LEN=00000003 ESD=0001 TYPE=REL  XREF=721 296 490 
 SYM=DCBBLKSI LOC=0000003E LEN=00000002 ESD=0005 TYPE=REL  XREF=403 337 424 
 SYM=DCBBLKSIF LOC=0000003C LEN=00000004 ESD=0005 TYPE=REL  XREF=401 658 693 
 SYM=DCBDCBE  LOC=00000060 LEN=00000004 ESD=0005 TYPE=REL  XREF=411 666 701 
 SYM=DCBDDNAM LOC=00000028 LEN=00000008 ESD=0005 TYPE=REL  XREF=377 650 685 
 SYM=DCBDSNAM LOC=0000005C LEN=00000004 ESD=0005 TYPE=REL  XREF=410 339 427 664 699 
 SYM=DCBDSORG LOC=0000001A LEN=00000001 ESD=0005 TYPE=REL  XREF=349 644 679 
 SYM=DCBDSORG_DA LOC=00000020 LEN=00000001 ESD=0000 TYPE=ABS  XREF=351 
 SYM=DCBDSORG_PS LOC=00000040 LEN=00000001 ESD=0000 TYPE=ABS  XREF=350 645 680 
 SYM=DCBEODA  LOC=00000020 LEN=00000004 ESD=0005 TYPE=REL  XREF=355 
 SYM=DCBEODAD LOC=00000020 LEN=00000004 ESD=0005 TYPE=REL  XREF=356 442 494 646 681 
 SYM=DCBID    LOC=00000000 LEN=00000004 ESD=0005 TYPE=REL  XREF=347 642 677 
 SYM=DCBIO    LOC=00000064 LEN=00000004 ESD=0005 TYPE=REL  XREF=412 668 703 
 SYM=DCBIOBAD LOC=0000001C LEN=00000004 ESD=0005 TYPE=REL  XREF=353 
 SYM=DCBLEN   LOC=00000068 LEN=00000001 ESD=0000 TYPE=ABS  XREF=413 641 670 676 705 
 SYM=DCBLRECL LOC=00000052 LEN=00000002 ESD=0005 TYPE=REL  XREF=407 
 SYM=DCBLRECLF LOC=00000050 LEN=00000004 ESD=0005 TYPE=REL  XREF=405 660 695 
 SYM=DCBMACRF LOC=00000032 LEN=00000002 ESD=0005 TYPE=REL  XREF=390 341 429 654 689 
 SYM=DCBMACRF_GL LOC=00004800 LEN=00000001 ESD=0000 TYPE=ABS  XREF=393 
 SYM=DCBMACRF_GM LOC=00005000 LEN=00000001 ESD=0000 TYPE=ABS  XREF=391 340 559 655 
  690 
 SYM=DCBMACRF_PL LOC=00000048 LEN=00000001 ESD=0000 TYPE=ABS  XREF=394 
 SYM=DCBMACRF_PM LOC=00000050 LEN=00000001 ESD=0000 TYPE=ABS  XREF=392 428 559 
 SYM=DCBMACRF_R LOC=00002000 LEN=00000001 ESD=0000 TYPE=ABS  XREF=395 
 SYM=DCBMACRF_RW LOC=00002020 LEN=00000001 ESD=0000 TYPE=ABS  XREF=397 
 SYM=DCBMACRF_W LOC=00000020 LEN=00000001 ESD=0000 TYPE=ABS  XREF=396 
 SYM=DCBOFLGS LOC=00000030 LEN=00000001 ESD=0005 TYPE=REL  XREF=379 652 687 
 SYM=DCBOFLGS_GL LOC=00000040 LEN=00000001 ESD=0000 TYPE=ABS  XREF=384 
 SYM=DCBOFLGS_GM LOC=00000040 LEN=00000001 ESD=0000 TYPE=ABS  XREF=382 343 
 SYM=DCBOFLGS_OPEN LOC=00000010 LEN=00000001 ESD=0000 TYPE=ABS  XREF=380 
 SYM=DCBOFLGS_PL LOC=00000020 LEN=00000001 ESD=0000 TYPE=ABS  XREF=385 
 SYM=DCBOFLGS_PM LOC=00000020 LEN=00000001 ESD=0000 TYPE=ABS  XREF=383 431 
 SYM=DCBOFLGS_R LOC=00000040 LEN=00000001 ESD=0000 TYPE=ABS  XREF=386 
 SYM=DCBOFLGS_RW LOC=00000060 LEN=00000001 ESD=0000 TYPE=ABS  XREF=388 
 SYM=DCBOFLGS_W LOC=00000020 LEN=00000001 ESD=0000 TYPE=ABS  XREF=387 
 SYM=DCBOFOPN LOC=00000010 LEN=00000001 ESD=0000 TYPE=ABS  XREF=381 
 SYM=DCBREC   LOC=00000058 LEN=00000004 ESD=0005 TYPE=REL  XREF=409 662 697 
 SYM=DCBRECBR LOC=00000010 LEN=00000001 ESD=0000 TYPE=ABS  XREF=367 
 SYM=DCBRECF  LOC=00000080 LEN=00000001 ESD=0000 TYPE=ABS  XREF=359 
 SYM=DCBRECFM LOC=00000024 LEN=00000001 ESD=0005 TYPE=REL  XREF=358 648 683 
 SYM=DCBRECFM_F LOC=00000080 LEN=00000001 ESD=0000 TYPE=ABS  XREF=360 
 SYM=DCBRECFM_FA LOC=00000080 LEN=00000001 ESD=0000 TYPE=ABS  XREF=361 
 SYM=DCBRECFM_FB LOC=00000090 LEN=00000001 ESD=0000 TYPE=ABS  XREF=366 
 SYM=DCBRECFM_FBA LOC=00000090 LEN=00000001 ESD=0000 TYPE=ABS  XREF=368 
 SYM=DCBRECFM_FBM LOC=00000090 LEN=00000001 ESD=0000 TYPE=ABS  XREF=369 
 SYM=DCBRECFM_FM LOC=00000080 LEN=00000001 ESD=0000 TYPE=ABS  XREF=362 
 SYM=DCBRECFM_FT LOC=000000A0 LEN=00000001 ESD=0000 TYPE=ABS  XREF=373 649 684 
 SYM=DCBRECFM_V LOC=00000040 LEN=00000001 ESD=0000 TYPE=ABS  XREF=363 
 SYM=DCBRECFM_VA LOC=00000040 LEN=00000001 ESD=0000 TYPE=ABS  XREF=364 
 SYM=DCBRECFM_VB LOC=00000050 LEN=00000001 ESD=0000 TYPE=ABS  XREF=370 
 SYM=DCBRECFM_VBA LOC=00000050 LEN=00000001 ESD=0000 TYPE=ABS  XREF=371 
 SYM=DCBRECFM_VBM LOC=00000050 LEN=00000001 ESD=0000 TYPE=ABS  XREF=372 
 SYM=DCBRECFM_VM LOC=00000040 LEN=00000001 ESD=0000 TYPE=ABS  XREF=365 
 SYM=DCBRECFM_VT LOC=00000060 LEN=00000001 ESD=0000 TYPE=ABS  XREF=374 
 SYM=DCBRECU  LOC=000000C0 LEN=00000001 ESD=0000 TYPE=ABS  XREF=375 
 SYM=DCBSYNAD LOC=00000038 LEN=00000004 ESD=0005 TYPE=REL  XREF=399 656 691 
 SYM=DEBUG_CONTENTS LOC=00000638 LEN=00000023 ESD=0001 TYPE=REL  XREF=747 
 SYM=DEBUG_ITEM LOC=00000603 LEN=00000058 ESD=0001 TYPE=REL  XREF=725 
 SYM=DEBUG_LINE LOC=00000603 LEN=00000006 ESD=0001 TYPE=REL  XREF=727 
 SYM=DEBUG_NAME LOC=0000060A LEN=0000001E ESD=0001 TYPE=REL  XREF=731 
 SYM=DEBUG_SUB_1 LOC=00000629 LEN=00000004 ESD=0001 TYPE=REL  XREF=735 
 SYM=DEBUG_SUB_2 LOC=0000062E LEN=00000004 ESD=0001 TYPE=REL  XREF=739 
 SYM=DEBUG_SUB_3 LOC=00000633 LEN=00000004 ESD=0001 TYPE=REL  XREF=743 
 SYM=END_OF_FILE_FLAG LOC=000005F0 LEN=00000001 ESD=0001 TYPE=REL  XREF=713 272 453 
  505 
 SYM=FALSE    LOC=0000065C LEN=00000001 ESD=0001 TYPE=REL  XREF=751 
 SYM=HOLD_CHAR LOC=00000602 LEN=00000001 ESD=0001 TYPE=REL  XREF=723 524 534 
 SYM=IBYTES   LOC=000005F5 LEN=0000000A ESD=0001 TYPE=REL  XREF=719 311 539 
 SYM=ICHAR    LOC=000005F1 LEN=00000002 ESD=0001 TYPE=REL  XREF=715 463 465 474 476 
  513 517 
 SYM=IHADCB   LOC=00000000 LEN=00000068 ESD=0005 TYPE=DST  XREF=345 337 339 341 346 
  348 352 354 357 376 378 389 398 400 402 404 406 408 413 424 427 429 442 494 642 
  644 646 648 650 652 654 656 658 660 662 664 666 668 677 679 681 683 685 687 689 
  691 693 695 697 699 701 703 
 SYM=IN_FILE  LOC=00000430 LEN=00000008 ESD=0001 TYPE=REL  XREF=640 337 339 341 342 
  442 443 494 495 546 642 644 646 648 650 652 654 656 658 660 662 664 666 668 670 
 SYM=IN_RECORD LOC=00000498 LEN=00000050 ESD=0001 TYPE=REL  XREF=672 336 444 448 
  496 500 
 SYM=IR       LOC=00000498 LEN=00000001 ESD=0001 TYPE=REL  XREF=674 523 
 SYM=OCHAR    LOC=000005F3 LEN=00000002 ESD=0001 TYPE=REL  XREF=717 513 527 
 SYM=OR       LOC=00000550 LEN=00000001 ESD=0001 TYPE=REL  XREF=709 533 
 SYM=OUT_FILE LOC=000004E8 LEN=00000008 ESD=0001 TYPE=REL  XREF=675 424 427 429 430 
  481 550 677 679 681 683 685 687 689 691 693 695 697 699 701 703 705 
 SYM=OUT_RECORD LOC=00000550 LEN=00000050 ESD=0001 TYPE=REL  XREF=707 423 482 500 
 SYM=PFPO_RADIX LOC=00000001 LEN=00000001 ESD=0000 TYPE=ABS  XREF=112 
 SYM=PFPO_RND LOC=00000000 LEN=00000001 ESD=0000 TYPE=ABS  XREF=113 
 SYM=PFPO_TEST LOC=00000080 LEN=00000001 ESD=0000 TYPE=ABS  XREF=111 
 SYM=PFPO_TYPE_DB LOC=00000006 LEN=00000001 ESD=0000 TYPE=ABS  XREF=118 
 SYM=PFPO_TYPE_DD LOC=00000009 LEN=00000001 ESD=0000 TYPE=ABS  XREF=121 
 SYM=PFPO_TYPE_DH LOC=00000001 LEN=00000001 ESD=0000 TYPE=ABS  XREF=115 
 SYM=PFPO_TYPE_EB LOC=00000005 LEN=00000001 ESD=0000 TYPE=ABS  XREF=117 
 SYM=PFPO_TYPE_ED LOC=00000008 LEN=00000001 ESD=0000 TYPE=ABS  XREF=120 
 SYM=PFPO_TYPE_EH LOC=00000000 LEN=00000001 ESD=0000 TYPE=ABS  XREF=114 
 SYM=PFPO_TYPE_LB LOC=00000007 LEN=00000001 ESD=0000 TYPE=ABS  XREF=119 
 SYM=PFPO_TYPE_LD LOC=0000000A LEN=00000001 ESD=0000 TYPE=ABS  XREF=122 
 SYM=PFPO_TYPE_LH LOC=00000002 LEN=00000001 ESD=0000 TYPE=ABS  XREF=116 
 SYM=PG_EOJ_ROUTINE LOC=0000035A LEN=00000002 ESD=0001 TYPE=REL  XREF=543 284 
 SYM=PG_EOJ_ROUTINE_END LOC=00000366 LEN=00000004 ESD=0001 TYPE=REL  XREF=552 285 
 SYM=PG_IF_1_1 LOC=00000124 LEN=00000002 ESD=0001 TYPE=REL  XREF=275 273 
 SYM=PG_IF_2_1 LOC=00000296 LEN=00000002 ESD=0001 TYPE=REL  XREF=469 467 
 SYM=PG_INITIALIZATION_ROUTINE LOC=000001DC LEN=00000002 ESD=0001 TYPE=REL  XREF=333 264 
 SYM=PG_INITIALIZATION_ROUTINE_END LOC=0000027A LEN=00000004 ESD=0001 TYPE=REL  XREF=456 265 
 SYM=PG_IN_FILE_AT_END1 LOC=00000276 LEN=00000002 ESD=0001 TYPE=REL  XREF=450 441 
 SYM=PG_IN_FILE_AT_END2 LOC=000002FC LEN=00000002 ESD=0001 TYPE=REL  XREF=502 493 
 SYM=PG_IN_FILE_END_READ1 LOC=0000027A LEN=00000002 ESD=0001 TYPE=REL  XREF=454 449 
 SYM=PG_IN_FILE_END_READ2 LOC=00000300 LEN=00000002 ESD=0001 TYPE=REL  XREF=506 501 
 SYM=PG_MAINLINE LOC=000000EC LEN=00000002 ESD=0001 TYPE=REL  XREF=255 
 SYM=PG_MAINLINE_END LOC=000001D6 LEN=00000004 ESD=0001 TYPE=REL  XREF=331 
 SYM=PG_PM_2_E LOC=0000013A LEN=00000002 ESD=0001 TYPE=REL  XREF=281 274 
 SYM=PG_PM_2_T LOC=00000118 LEN=00000002 ESD=0001 TYPE=REL  XREF=271 280 
 SYM=PG_PM_4_E LOC=000002B8 LEN=00000002 ESD=0001 TYPE=REL  XREF=478 468 
 SYM=PG_PM_4_T LOC=00000286 LEN=00000002 ESD=0001 TYPE=REL  XREF=464 477 
 SYM=PG_THE_LOOP LOC=00000280 LEN=00000002 ESD=0001 TYPE=REL  XREF=458 276 
 SYM=PG_THE_LOOP_END LOC=00000300 LEN=00000004 ESD=0001 TYPE=REL  XREF=508 277 
 SYM=PG_THE_MOVE LOC=00000306 LEN=00000002 ESD=0001 TYPE=REL  XREF=510 470 
 SYM=PG_THE_MOVE_END LOC=00000354 LEN=00000004 ESD=0001 TYPE=REL  XREF=541 471 
 SYM=PVTCICS  LOC=00000020 LEN=00000001 ESD=0004 TYPE=REL  XREF=213 
 SYM=PVTDATE  LOC=00000008 LEN=00000008 ESD=0004 TYPE=REL  XREF=210 
 SYM=PVTEXTND LOC=00000021 LEN=00000001 ESD=0004 TYPE=REL  XREF=214 
 SYM=PVTMAXDL LOC=00000024 LEN=00000002 ESD=0004 TYPE=REL  XREF=217 
 SYM=PVTPGM   LOC=00000000 LEN=00000008 ESD=0004 TYPE=REL  XREF=209 
 SYM=PVTR64   LOC=00000023 LEN=00000001 ESD=0004 TYPE=REL  XREF=216 
 SYM=PVTTIME  LOC=00000010 LEN=00000008 ESD=0004 TYPE=REL  XREF=211 
 SYM=PVTTRUNC LOC=00000022 LEN=00000001 ESD=0004 TYPE=REL  XREF=215 
 SYM=PVTVER   LOC=00000018 LEN=00000008 ESD=0004 TYPE=REL  XREF=212 
 SYM=RETURN_CODE LOC=0000065D LEN=00000002 ESD=0001 TYPE=REL  XREF=753 327 556 
 SYM=SN_END_PROCEDURE LOC=0000036C LEN=00000002 ESD=0001 TYPE=REL  XREF=554 
 SYM=TRUE     LOC=0000065B LEN=00000001 ESD=0001 TYPE=REL  XREF=749 
 SYM=WS_LINE  LOC=000005A0 LEN=00000050 ESD=0001 TYPE=REL  XREF=711 
 SYM=WTO#0019_EOT LOC=00000060 LEN=00000001 ESD=0001 TYPE=REL  XREF=35 33 34 
 SYM=WTO#0020_EOT LOC=000000AA LEN=00000001 ESD=0001 TYPE=REL  XREF=52 50 51 
 SYM=WTO#0133_EOT LOC=00000104 LEN=00000001 ESD=0001 TYPE=REL  XREF=260 258 259 
 SYM=WTO#0174_EOT LOC=000001C9 LEN=00000001 ESD=0001 TYPE=REL  XREF=323 321 322 
 SYM=ZC390CVT LOC=00000000 LEN=000001F8 ESD=0003 TYPE=DST  XREF=137 41 
 SYM=ZC390PVT LOC=00000000 LEN=00000030 ESD=0004 TYPE=DST  XREF=208 
 SYM=ZCVT_ABORT LOC=00000068 LEN=00000004 ESD=0003 TYPE=REL  XREF=166 418 436 
 SYM=ZCVT_ABORT_ACCEPT LOC=0000000B LEN=00000001 ESD=0000 TYPE=ABS  XREF=176 
 SYM=ZCVT_ABORT_ALTER LOC=00000001 LEN=00000001 ESD=0000 TYPE=ABS  XREF=167 
 SYM=ZCVT_ABORT_CALL LOC=00000002 LEN=00000001 ESD=0000 TYPE=ABS  XREF=168 
 SYM=ZCVT_ABORT_CICS LOC=0000000A LEN=00000001 ESD=0000 TYPE=ABS  XREF=175 
 SYM=ZCVT_ABORT_DISPLAY LOC=00000003 LEN=00000001 ESD=0000 TYPE=ABS  XREF=169 
 SYM=ZCVT_ABORT_DIVQ LOC=00000009 LEN=00000001 ESD=0000 TYPE=ABS  XREF=174 
 SYM=ZCVT_ABORT_INT128 LOC=00000008 LEN=00000001 ESD=0000 TYPE=ABS  XREF=173 
 SYM=ZCVT_ABORT_MAXERR LOC=0000000B LEN=00000001 ESD=0000 TYPE=ABS  XREF=177 
 SYM=ZCVT_ABORT_OPEN LOC=00000004 LEN=00000001 ESD=0000 TYPE=ABS  XREF=170 
 SYM=ZCVT_ABORT_STACK LOC=00000006 LEN=00000001 ESD=0000 TYPE=ABS  XREF=171 
 SYM=ZCVT_ABORT_VERSION LOC=00000007 LEN=00000001 ESD=0000 TYPE=ABS  XREF=172 
 SYM=ZCVT_ACCEPT LOC=0000006C LEN=00000004 ESD=0003 TYPE=REL  XREF=178 
 SYM=ZCVT_ACCEPT_CONSOLE LOC=00000002 LEN=00000001 ESD=0000 TYPE=ABS  XREF=180 
 SYM=ZCVT_ACCEPT_DATE LOC=00000004 LEN=00000001 ESD=0000 TYPE=ABS  XREF=182 
 SYM=ZCVT_ACCEPT_DDNAME LOC=00000003 LEN=00000001 ESD=0000 TYPE=ABS  XREF=181 
 SYM=ZCVT_ACCEPT_DEFAULT LOC=00000001 LEN=00000001 ESD=0000 TYPE=ABS  XREF=179 
 SYM=ZCVT_ACCEPT_DOW LOC=00000006 LEN=00000001 ESD=0000 TYPE=ABS  XREF=184 
 SYM=ZCVT_ACCEPT_TIME LOC=00000005 LEN=00000001 ESD=0000 TYPE=ABS  XREF=183 
 SYM=ZCVT_CALL LOC=00000014 LEN=00000004 ESD=0003 TYPE=REL  XREF=142 
 SYM=ZCVT_CMP64R32 LOC=00000018 LEN=00000004 ESD=0003 TYPE=REL  XREF=143 
 SYM=ZCVT_CONVERTING LOC=00000008 LEN=00000001 ESD=0000 TYPE=ABS  XREF=189 
 SYM=ZCVT_CVTLBTQ LOC=0000001C LEN=00000004 ESD=0003 TYPE=REL  XREF=144 
 SYM=ZCVT_CVTLDTP LOC=00000020 LEN=00000004 ESD=0003 TYPE=REL  XREF=145 
 SYM=ZCVT_CVTQTLB LOC=00000024 LEN=00000004 ESD=0003 TYPE=REL  XREF=146 
 SYM=ZCVT_DISPLAY LOC=00000070 LEN=00000004 ESD=0003 TYPE=REL  XREF=185 302 317 
 SYM=ZCVT_DIV64R32 LOC=00000028 LEN=00000004 ESD=0003 TYPE=REL  XREF=147 
 SYM=ZCVT_DIVQ128 LOC=0000002C LEN=00000004 ESD=0003 TYPE=REL  XREF=148 
 SYM=ZCVT_END LOC=000001F8 LEN=00000001 ESD=0003 TYPE=REL  XREF=207 44 56 139 
 SYM=ZCVT_GOBACK LOC=00000030 LEN=00000004 ESD=0003 TYPE=REL  XREF=149 328 557 
 SYM=ZCVT_HIGH_VALUES LOC=00000090 LEN=00000010 ESD=0003 TYPE=REL  XREF=196 
 SYM=ZCVT_ID  LOC=00000000 LEN=00000004 ESD=0003 TYPE=REL  XREF=138 42 44 56 139 
 SYM=ZCVT_INSPECT LOC=00000074 LEN=00000004 ESD=0003 TYPE=REL  XREF=186 
 SYM=ZCVT_LEN LOC=00000004 LEN=00000004 ESD=0003 TYPE=REL  XREF=139 44 
 SYM=ZCVT_MPYQ128 LOC=00000034 LEN=00000004 ESD=0003 TYPE=REL  XREF=150 
 SYM=ZCVT_NDDX LOC=000000E8 LEN=00000010 ESD=0003 TYPE=REL  XREF=202 
 SYM=ZCVT_OSE64R32 LOC=00000038 LEN=00000004 ESD=0003 TYPE=REL  XREF=151 
 SYM=ZCVT_PERFORM LOC=0000003C LEN=00000004 ESD=0003 TYPE=REL  XREF=152 266 278 286 
  472 
 SYM=ZCVT_PMCHECK LOC=00000040 LEN=00000004 ESD=0003 TYPE=REL  XREF=153 331 456 508 
  541 552 
 SYM=ZCVT_PVTMAXDL LOC=00000078 LEN=00000002 ESD=0003 TYPE=REL  XREF=193 
 SYM=ZCVT_PWORK LOC=000000A0 LEN=00000008 ESD=0003 TYPE=REL  XREF=197 
 SYM=ZCVT_PWORK1 LOC=000000A8 LEN=00000010 ESD=0003 TYPE=REL  XREF=198 
 SYM=ZCVT_PWORK2 LOC=000000B8 LEN=00000010 ESD=0003 TYPE=REL  XREF=199 
 SYM=ZCVT_PWORK3 LOC=000000C8 LEN=00000010 ESD=0003 TYPE=REL  XREF=200 
 SYM=ZCVT_PWORK4 LOC=000000D8 LEN=00000010 ESD=0003 TYPE=REL  XREF=201 
 SYM=ZCVT_REPLACING LOC=00000004 LEN=00000001 ESD=0000 TYPE=ABS  XREF=188 
 SYM=ZCVT_ROUNDF LOC=00000044 LEN=00000004 ESD=0003 TYPE=REL  XREF=154 
 SYM=ZCVT_STACKEND LOC=00000050 LEN=00000004 ESD=0003 TYPE=REL  XREF=157 
 SYM=ZCVT_STACKORG LOC=00000048 LEN=00000004 ESD=0003 TYPE=REL  XREF=155 
 SYM=ZCVT_STACKPTR LOC=0000004C LEN=00000004 ESD=0003 TYPE=REL  XREF=156 
 SYM=ZCVT_STOPRUN LOC=00000054 LEN=00000004 ESD=0003 TYPE=REL  XREF=158 
 SYM=ZCVT_TALLYING LOC=00000000 LEN=00000001 ESD=0000 TYPE=ABS  XREF=187 
 SYM=ZCVT_TALPHAX LOC=00000058 LEN=00000004 ESD=0003 TYPE=REL  XREF=159 
 SYM=ZCVT_TNUMP LOC=0000005C LEN=00000004 ESD=0003 TYPE=REL  XREF=160 
 SYM=ZCVT_TNUMX LOC=00000060 LEN=00000004 ESD=0003 TYPE=REL  XREF=161 
 SYM=ZCVT_TNUMZ LOC=00000064 LEN=00000004 ESD=0003 TYPE=REL  XREF=162 
 SYM=ZCVT_VER LOC=00000008 LEN=00000008 ESD=0003 TYPE=REL  XREF=140 
 SYM=ZCVT_WORKAREA LOC=000000F8 LEN=00000100 ESD=0003 TYPE=REL  XREF=203 290 306 
 SYM=ZCVT_ZC390NUC LOC=00000010 LEN=00000004 ESD=0003 TYPE=REL  XREF=141 46 
 SYM=ZCVT_ZERO LOC=00000080 LEN=00000010 ESD=0003 TYPE=REL  XREF=195 
 SYM=ZC_E     LOC=00000008 LEN=00000001 ESD=0000 TYPE=ABS  XREF=93 
 SYM=ZC_EQ    LOC=00000008 LEN=00000001 ESD=0000 TYPE=ABS  XREF=105 273 
 SYM=ZC_F0    LOC=00000000 LEN=00000001 ESD=0000 TYPE=ABS  XREF=75 
 SYM=ZC_F10   LOC=0000000A LEN=00000001 ESD=0000 TYPE=ABS  XREF=85 
 SYM=ZC_F1    LOC=00000001 LEN=00000001 ESD=0000 TYPE=ABS  XREF=76 
 SYM=ZC_F11   LOC=0000000B LEN=00000001 ESD=0000 TYPE=ABS  XREF=86 
 SYM=ZC_F12   LOC=0000000C LEN=00000001 ESD=0000 TYPE=ABS  XREF=87 
 SYM=ZC_F13   LOC=0000000D LEN=00000001 ESD=0000 TYPE=ABS  XREF=88 
 SYM=ZC_F14   LOC=0000000E LEN=00000001 ESD=0000 TYPE=ABS  XREF=89 
 SYM=ZC_F15   LOC=0000000F LEN=00000001 ESD=0000 TYPE=ABS  XREF=90 
 SYM=ZC_F2    LOC=00000002 LEN=00000001 ESD=0000 TYPE=ABS  XREF=77 
 SYM=ZC_F3    LOC=00000003 LEN=00000001 ESD=0000 TYPE=ABS  XREF=78 
 SYM=ZC_F4    LOC=00000004 LEN=00000001 ESD=0000 TYPE=ABS  XREF=79 
 SYM=ZC_F5    LOC=00000005 LEN=00000001 ESD=0000 TYPE=ABS  XREF=80 
 SYM=ZC_F6    LOC=00000006 LEN=00000001 ESD=0000 TYPE=ABS  XREF=81 
 SYM=ZC_F7    LOC=00000007 LEN=00000001 ESD=0000 TYPE=ABS  XREF=82 
 SYM=ZC_F8    LOC=00000008 LEN=00000001 ESD=0000 TYPE=ABS  XREF=83 
 SYM=ZC_F9    LOC=00000009 LEN=00000001 ESD=0000 TYPE=ABS  XREF=84 
 SYM=ZC_GE    LOC=0000000B LEN=00000001 ESD=0000 TYPE=ABS  XREF=108 
 SYM=ZC_GT    LOC=00000002 LEN=00000001 ESD=0000 TYPE=ABS  XREF=106 
 SYM=ZC_H     LOC=00000002 LEN=00000001 ESD=0000 TYPE=ABS  XREF=91 467 
 SYM=ZC_L     LOC=00000004 LEN=00000001 ESD=0000 TYPE=ABS  XREF=92 
 SYM=ZC_LE    LOC=0000000D LEN=00000001 ESD=0000 TYPE=ABS  XREF=109 
 SYM=ZC_LOAD  LOC=00000038 LEN=00000002 ESD=0001 TYPE=REL  XREF=27 12 
 SYM=ZC_LOAD_OK LOC=00000068 LEN=00000002 ESD=0001 TYPE=REL  XREF=39 32 
 SYM=ZC_LT    LOC=00000004 LEN=00000001 ESD=0000 TYPE=ABS  XREF=107 
 SYM=ZC_M     LOC=00000004 LEN=00000001 ESD=0000 TYPE=ABS  XREF=99 
 SYM=ZC_NE    LOC=00000007 LEN=00000001 ESD=0000 TYPE=ABS  XREF=96 
 SYM=ZC_NH    LOC=0000000D LEN=00000001 ESD=0000 TYPE=ABS  XREF=94 
 SYM=ZC_NL    LOC=0000000B LEN=00000001 ESD=0000 TYPE=ABS  XREF=95 
 SYM=ZC_NM    LOC=0000000B LEN=00000001 ESD=0000 TYPE=ABS  XREF=102 
 SYM=ZC_NO    LOC=0000000E LEN=00000001 ESD=0000 TYPE=ABS  XREF=104 
 SYM=ZC_NP    LOC=0000000D LEN=00000001 ESD=0000 TYPE=ABS  XREF=101 
 SYM=ZC_NZ    LOC=00000007 LEN=00000001 ESD=0000 TYPE=ABS  XREF=103 
 SYM=ZC_O     LOC=00000001 LEN=00000001 ESD=0000 TYPE=ABS  XREF=97 
 SYM=ZC_OPEN_OK_0185 LOC=00000216 LEN=00000002 ESD=0001 TYPE=REL  XREF=420 416 
 SYM=ZC_OPEN_OK_0193 LOC=00000250 LEN=00000002 ESD=0001 TYPE=REL  XREF=438 434 
 SYM=ZC_P     LOC=00000002 LEN=00000001 ESD=0000 TYPE=ABS  XREF=98 
 SYM=ZC_R0    LOC=00000000 LEN=00000001 ESD=0000 TYPE=ABS  XREF=59 40 131 132 133 
  265 277 285 291 295 296 299 307 310 311 314 336 337 338 339 423 424 425 427 441 
  442 471 474 475 476 493 494 
 SYM=ZC_R10   LOC=0000000A LEN=00000001 ESD=0000 TYPE=ABS  XREF=69 
 SYM=ZC_R1    LOC=00000001 LEN=00000001 ESD=0000 TYPE=ABS  XREF=60 125 126 127 128 
  267 279 287 293 297 301 308 312 316 327 340 341 417 428 429 435 473 556 
 SYM=ZC_R11   LOC=0000000B LEN=00000001 ESD=0000 TYPE=ABS  XREF=70 
 SYM=ZC_R12   LOC=0000000C LEN=00000001 ESD=0000 TYPE=ABS  XREF=71 
 SYM=ZC_R13   LOC=0000000D LEN=00000001 ESD=0000 TYPE=ABS  XREF=72 124 126 127 128 
  129 130 132 518 528 
 SYM=ZC_R14   LOC=0000000E LEN=00000001 ESD=0000 TYPE=ABS  XREF=73 47 264 276 284 
  303 318 332 419 437 457 470 488 490 509 537 539 542 553 558 
 SYM=ZC_R15   LOC=0000000F LEN=00000001 ESD=0000 TYPE=ABS  XREF=74 9 31 37 46 47 
  54 134 266 267 278 279 286 287 302 303 317 318 328 329 331 332 415 418 419 433 
  436 437 456 457 472 473 508 509 517 518 519 520 521 523 527 528 529 530 531 533 
  541 542 552 553 557 558 
 SYM=ZC_R2    LOC=00000002 LEN=00000001 ESD=0000 TYPE=ABS  XREF=61 124 294 295 298 
  299 309 310 313 314 443 445 481 483 495 497 523 524 
 SYM=ZC_R3    LOC=00000003 LEN=00000001 ESD=0000 TYPE=ABS  XREF=62 290 295 299 300 
  301 306 310 314 315 316 444 446 482 484 496 498 533 534 
 SYM=ZC_R4    LOC=00000004 LEN=00000001 ESD=0000 TYPE=ABS  XREF=63 
 SYM=ZC_R5    LOC=00000005 LEN=00000001 ESD=0000 TYPE=ABS  XREF=64 
 SYM=ZC_R6    LOC=00000006 LEN=00000001 ESD=0000 TYPE=ABS  XREF=65 
 SYM=ZC_R7    LOC=00000007 LEN=00000001 ESD=0000 TYPE=ABS  XREF=66 
 SYM=ZC_R8    LOC=00000008 LEN=00000001 ESD=0000 TYPE=ABS  XREF=67 12 13 
 SYM=ZC_R9    LOC=00000009 LEN=00000001 ESD=0000 TYPE=ABS  XREF=68 40 41 
 SYM=ZC_SAVEAREA LOC=000003D8 LEN=00000048 ESD=0001 TYPE=REL  XREF=631 
 SYM=ZC_VER_ERR LOC=00000088 LEN=00000002 ESD=0001 TYPE=REL  XREF=49 43 45 
 SYM=ZC_VER_OK LOC=000000C8 LEN=00000002 ESD=0001 TYPE=REL  XREF=123 48 
 SYM=ZC_WS    LOC=000003D8 LEN=00000008 ESD=0001 TYPE=REL  XREF=136 125 129 517 527 
  630 632 634 636 638 671 673 706 708 710 712 714 716 718 720 722 724 726 728 730 
  732 734 736 738 740 742 744 746 748 750 752 759 
 SYM=ZC_WSLOC LOC=000003D6 LEN=0000028A ESD=0001 TYPE=CST  XREF=135 219 629 757 758 
 SYM=ZC_WS_DIFF LOC=00000000 LEN=00000001 ESD=0000 TYPE=ABS  XREF=759 
 SYM=ZC_WS_END LOC=00000660 LEN=00000008 ESD=0001 TYPE=REL  XREF=760 131 
 SYM=ZC_WS_ID LOC=00000420 LEN=00000008 ESD=0001 TYPE=REL  XREF=633 
 SYM=ZC_WS_LEN LOC=0000042C LEN=00000004 ESD=0001 TYPE=REL  XREF=637 133 
 SYM=ZC_WS_LOC_10 LOC=00000178 LEN=00000001 ESD=0000 TYPE=ABS  XREF=706 
 SYM=ZC_WS_LOC_1 LOC=00000000 LEN=00000001 ESD=0000 TYPE=ABS  XREF=630 
 SYM=ZC_WS_LOC_11 LOC=00000178 LEN=00000001 ESD=0000 TYPE=ABS  XREF=708 
 SYM=ZC_WS_LOC_12 LOC=000001C8 LEN=00000001 ESD=0000 TYPE=ABS  XREF=710 
 SYM=ZC_WS_LOC_13 LOC=00000218 LEN=00000001 ESD=0000 TYPE=ABS  XREF=712 
 SYM=ZC_WS_LOC_14 LOC=00000219 LEN=00000001 ESD=0000 TYPE=ABS  XREF=714 
 SYM=ZC_WS_LOC_15 LOC=0000021B LEN=00000001 ESD=0000 TYPE=ABS  XREF=716 
 SYM=ZC_WS_LOC_16 LOC=0000021D LEN=00000001 ESD=0000 TYPE=ABS  XREF=718 
 SYM=ZC_WS_LOC_17 LOC=00000227 LEN=00000001 ESD=0000 TYPE=ABS  XREF=720 
 SYM=ZC_WS_LOC_18 LOC=0000022A LEN=00000001 ESD=0000 TYPE=ABS  XREF=722 
 SYM=ZC_WS_LOC_19 LOC=0000022B LEN=00000001 ESD=0000 TYPE=ABS  XREF=724 
 SYM=ZC_WS_LOC_20 LOC=0000022B LEN=00000001 ESD=0000 TYPE=ABS  XREF=726 
 SYM=ZC_WS_LOC_2 LOC=00000048 LEN=00000001 ESD=0000 TYPE=ABS  XREF=632 
 SYM=ZC_WS_LOC_21 LOC=00000231 LEN=00000001 ESD=0000 TYPE=ABS  XREF=728 
 SYM=ZC_WS_LOC_22 LOC=00000232 LEN=00000001 ESD=0000 TYPE=ABS  XREF=730 
 SYM=ZC_WS_LOC_23 LOC=00000250 LEN=00000001 ESD=0000 TYPE=ABS  XREF=732 
 SYM=ZC_WS_LOC_24 LOC=00000251 LEN=00000001 ESD=0000 TYPE=ABS  XREF=734 
 SYM=ZC_WS_LOC_25 LOC=00000255 LEN=00000001 ESD=0000 TYPE=ABS  XREF=736 
 SYM=ZC_WS_LOC_26 LOC=00000256 LEN=00000001 ESD=0000 TYPE=ABS  XREF=738 
 SYM=ZC_WS_LOC_27 LOC=0000025A LEN=00000001 ESD=0000 TYPE=ABS  XREF=740 
 SYM=ZC_WS_LOC_28 LOC=0000025B LEN=00000001 ESD=0000 TYPE=ABS  XREF=742 
 SYM=ZC_WS_LOC_29 LOC=0000025F LEN=00000001 ESD=0000 TYPE=ABS  XREF=744 
 SYM=ZC_WS_LOC_30 LOC=00000260 LEN=00000001 ESD=0000 TYPE=ABS  XREF=746 
 SYM=ZC_WS_LOC_3 LOC=00000050 LEN=00000001 ESD=0000 TYPE=ABS  XREF=634 
 SYM=ZC_WS_LOC_31 LOC=00000283 LEN=00000001 ESD=0000 TYPE=ABS  XREF=748 
 SYM=ZC_WS_LOC_32 LOC=00000284 LEN=00000001 ESD=0000 TYPE=ABS  XREF=750 
 SYM=ZC_WS_LOC_33 LOC=00000285 LEN=00000001 ESD=0000 TYPE=ABS  XREF=752 
 SYM=ZC_WS_LOC_4 LOC=00000054 LEN=00000001 ESD=0000 TYPE=ABS  XREF=636 
 SYM=ZC_WS_LOC_5 LOC=00000058 LEN=00000001 ESD=0000 TYPE=ABS  XREF=638 
 SYM=ZC_WS_LOC_7 LOC=000000C0 LEN=00000001 ESD=0000 TYPE=ABS  XREF=671 
 SYM=ZC_WS_LOC_8 LOC=000000C0 LEN=00000001 ESD=0000 TYPE=ABS  XREF=673 
 SYM=ZC_WS_START LOC=00000428 LEN=00000004 ESD=0001 TYPE=REL  XREF=635 130 
 SYM=ZC_Z     LOC=00000008 LEN=00000001 ESD=0000 TYPE=ABS  XREF=100 

Literal Table Listing

 LIT=A(ZCVT_END-ZCVT_ID) LOC=000000C4 LEN=00000004 ESD=0001 POOL=0001 XREF=44 
 LIT=AL2(DCBMACRF_GM) LOC=000003B8 LEN=00000002 ESD=0001 POOL=0002 XREF=340 
 LIT=AL2(DCBMACRF_PM) LOC=000003D4 LEN=00000002 ESD=0001 POOL=0002 XREF=428 
 LIT=C'"ZCOBOL\TEST\TESTPM3.IN"' LOC=00000378 LEN=00000018 ESD=0001 POOL=0002 XREF=338 
 LIT=C'"ZCOBOL\TEST\TESTPM3.OUT" ' LOC=000003BA LEN=0000001A ESD=0001 POOL=0002 XREF=425 
 LIT=C'ZCVT'  LOC=000000C0 LEN=00000004 ESD=0001 POOL=0001 XREF=42 
 LIT=CL14'BYTES COPIED =' LOC=000003AA LEN=0000000E ESD=0001 POOL=0002 XREF=307 
 LIT=CL26'BYTEFILE RECORDS COPIED = ' LOC=00000390 LEN=0000001A ESD=0001 POOL=0002 XREF=291 
 LIT=CL8'ZC390LIB' LOC=000000B8 LEN=00000008 ESD=0001 POOL=0001 XREF=28 
 
AZ390I total mnote warnings = 0
AZ390I total mnote errors   = 0
AZ390I max   mnote level    = 0
AZ390I total mz390 errors   = 0
AZ390I total az390 errors   = 0
TESTPM3   MZ390 ENDED   RC= 0 MEM(MB)= MB IO=31503
