TESTCAL2  MZ390 START
AZ390I Copyright 2011 Automated Software Tools Corporation
AZ390I z390 is licensed under GNU General Public License
AZ390I program = ZCOBOL\TEST\TESTCAL2
AZ390I options = W:\work\z390\z390.OPT=(time(60)) @zcobol\z390\ZC390CLG=(
  sysmac(+zcobol+zcobol\z390+mac+cics) syscpy(+zcobol+zcobol\z390+mac+cics) 
  BAL NOLISTCALL MAXGBL(1500000)) notiming stats
External Symbol Definitions
 ESD=0001 LOC=00000000 LEN=000003E0 TYPE=CST NAME=TESTCAL2
Assembler Listing
000000                                       (6/15)1+*    ZCOBOL PGM='ZCOBOL\TEST\TESTCAL2' VER=V1.5.06 MM/DD/YY  
000000                                       (6/15)2+*    ZCOBOL OPTIONS=() 
000000                                        (1/4)3          COPY  TESTCAL2_ZC_LABELS.CPY
000000                                        (1/5)4 *        IDENTIFICATION DIVISION.
000000                                        (1/7)5 *        PROGRAM-ID.    TESTCAL2.
000000                                      (11/34)6+         PRINT NOLIST,NOGEN,NOLISTUSE    SET LIST OPTION FOR INTERNAL CODE
000000                                      (11/59)8+TESTCAL2 CSECT ,                CSECT WITH PROCEDURE CODE AND WS
000000                                      (11/60)9+         USING *,ZC_R15
LISTUSE TESTCAL2 ESD=0001 LOC=00000000 LEN=01000 REG=F OFF=00000 LAB=
000000 90ECD00C                            (16/51)10+         STM   14,12,12+4*(14-14)(13)
000004                                     (11/93)11+         CNOP  4,8             FORCE ZC390PVT TO DOUBLEWORD BOUNDARY
000004 A785001A                000038      (11/94)12+         BRAS  ZC_R8,ZC_LOAD
000008                                     (11/95)13+         USING *,ZC_R8            BASE FOR LOAD AND CICS V5 USE
LISTUSE TESTCAL2 ESD=0001 LOC=00000000 LEN=01000 REG=F OFF=00000 LAB=
LISTUSE TESTCAL2 ESD=0001 LOC=00000008 LEN=01000 REG=8 OFF=00000 LAB=
000008                                     (11/96)14+*
000008                                     (11/97)15+*  THESE FIELDS MUST BE KEPT IN SYNC WITH zcobol\ZC390PVT.CPY
000008                                     (11/98)16+*
000008 E3C5E2E3C3C1D3F2                    (11/99)17+         DC    CL8'TESTCAL2'    PVTPGM   ZCOBOL PGM NAME
000010 F0F161F0F261F0F5                   (11/100)18+         DC    CL8'01/02/05'   PVTDATE  ZCOBOL COMPILE DATE
000018 F2F24BF3F3404040                   (11/101)19+         DC    CL8'22.33'   PVTTIME  ZCOBOL COMPILE TIME
000020 E5F14BF54BF0F640                   (11/102)20+         DC    CL8'V1.5.06'    PVTVER   ZCOBOL COMPILER VERSION
000028 F0                                 (11/103)21+         DC    C'0'     PVTCICS  ZCOBOL EXEC CICS PGM
000029 F1                                 (11/104)22+         DC    C'1'   PVTEXTND ZCOBOL EXTENDED PRECISION
00002A F0                                 (11/105)23+         DC    C'0'    PVTTRUNC ZCOBOL TRUNCATE TO PICTURE
00002B F1                                 (11/106)24+         DC    C'1'      PVTR64   ZCOBOL USE 64 BIT REGISTERS
00002C 0050                               (11/107)25+         DC    H'80' MAX DISPLAY LINE LEN  RPI 1118
00002E                                    (11/108)26+         DS    XL10            RESERVED
000038                                    (11/109)27+ZC_LOAD  DS    0H
000038 410080B0                0000B8      (17/74)28+         LA    0,=CL8'ZC390LIB'
00003C 1BFF                                (17/95)29+         SR    15,15 USE DEFAULT SYS390 SEARCH
00003E 0A08                               (17/125)30+         SVC   8 LOAD R0=A(NAME) R15=DDNAME/DSNAME ADDR OR 0
000040 12FF                               (11/111)31+         LTR   ZC_R15,ZC_R15
000042 A7840013                000068     (11/112)32+         JZ    ZC_LOAD_OK
000046 A715000D                000060      (18/49)33+         BRAS  1,*+(WTO#0011_EOT-*+1)/2*2
00004A 00160000E9C3F3F9                    (18/50)34+         DC    AL2(WTO#0011_EOT-*,0),C'ZC390LIB NOT FOUND'
000060                  00000060           (18/51)35+WTO#0011_EOT     EQU *
000060 0A23                                (18/52)36+         SVC   35
000062 41F00010                           (11/114)37+         LA  ZC_R15,16
000066 0A03                               (11/115)38+         SVC 3      EXIT TO CALLER WITH RC=16
000068                                    (11/116)39+ZC_LOAD_OK DS  0H
000068 1890                               (11/117)40+         LR    ZC_R9,ZC_R0
00006A                                    (11/118)41+         USING ZC390CVT,ZC_R9    R9=CVT
LISTUSE TESTCAL2 ESD=0001 LOC=00000000 LEN=01000 REG=F OFF=00000 LAB=
LISTUSE TESTCAL2 ESD=0001 LOC=00000008 LEN=01000 REG=8 OFF=00000 LAB=
LISTUSE ZC390CVT ESD=0003 LOC=00000000 LEN=01000 REG=9 OFF=00000 LAB=
00006A D503900080B8     000000 0000C0     (11/119)42+         CLC   ZCVT_ID,=C'ZCVT'              CHECK ZCVT ID AND LENGTH
000070 A774000C                000088     (11/120)43+         JNE   ZC_VER_ERR                    IN ZC390LIB.390 MATCH
000074 D503900480BC     000004 0000C4     (11/121)44+         CLC   ZCVT_LEN,=A(ZCVT_END-ZCVT_ID) ZCOBOL PGM COMPILED ID/LEN
00007A 47708080                000088     (11/122)45+         BNE   ZC_VER_ERR
00007E 58F09010                000010     (11/123)46+         L     ZC_R15,ZCVT_ZC390NUC
000082 0DEF                               (11/124)47+         BASR  ZC_R14,ZC_R15 CALL ZC390NUC TO VERIFY VER, OPTIONS
000084 A7F40022                0000C8     (11/125)48+         J     ZC_VER_OK
000088                                    (11/126)49+ZC_VER_ERR DS 0H
000088 A7150011                0000AA      (18/49)50+         BRAS  1,*+(WTO#0012_EOT-*+1)/2*2
00008C 001E0000E9C3F3F9                    (18/50)51+         DC    AL2(WTO#0012_EOT-*,0),C'ZC390LIB ZCVT VERIFY ERROR'
0000AA                  000000AA           (18/51)52+WTO#0012_EOT     EQU *
0000AA 0A23                                (18/52)53+         SVC   35
0000AC 41F00010                           (11/128)54+         LA  ZC_R15,16
0000B0 0A03                               (11/129)55+         SVC 3      EXIT TO CALLER WITH RC=16
0000B2                                    (11/130)56+         LTORG 
0000B8 E9C3F3F9F0D3C9C2 =CL8'ZC390LIB'
0000C0 E9C3E5E3         =C'ZCVT'
0000C4 000001F8         =A(ZCVT_END-ZCVT_ID)
0000C8                  00000080          (15/10)111=PFPO_TEST    EQU  X'80' PFPO TEST IF VALID OPCODE (NOT SUPPORTED YET)
0000C8                  00000001          (15/11)112=PFPO_RADIX   EQU  1 PFPO OPCODE - CONVERT FROM ONE RADIX TO ANOTHER
0000C8                  00000000          (15/12)113=PFPO_RND     EQU  0 PFOP ROUNDING OPTION (ONLY DEFAULT ALLOWED)
0000C8                  00000000          (15/13)114=PFPO_TYPE_EH EQU  0 EH HFP SHORT     32 BITS 7  DIGITS
0000C8                  00000001          (15/14)115=PFPO_TYPE_DH EQU  1 ED HFP LONG      64 BITS 15 DIGITS
0000C8                  00000002          (15/15)116=PFPO_TYPE_LH EQU  2 EL HFP EXTENDED 128 BITS 30 DIGITS
0000C8                  00000005          (15/16)117=PFPO_TYPE_EB EQU  5 EB BFP SHORT     32 BITS 7  DIGITS
0000C8                  00000006          (15/17)118=PFPO_TYPE_DB EQU  6 DB BFP LONG      64 BITS 16 DIGITS
0000C8                  00000007          (15/18)119=PFPO_TYPE_LB EQU  7 LB BFP EXTENDED 128 BITS 34 DIGITS
0000C8                  00000008          (15/19)120=PFPO_TYPE_ED EQU  8 ED DFP SHORT     32 BITS 7  DIGITS
0000C8                  00000009          (15/20)121=PFPO_TYPE_DD EQU  9 DD DFP LONG      64 BITS 16 DIGITS
0000C8                  0000000A          (15/21)122=PFPO_TYPE_LD EQU 10 LD DFP EXTENDED 128 BITS 34 DIGITS
0000C8                                   (11/133)123+ZC_VER_OK DS   0H
0000C8 582D0018                           (11/63)124+         L     ZC_R2,24(ZC_R13) SET ZC_R2=PARMLIST ADDRESS AFTER LOAD
0000CC C01000000106            0002D8     (11/64)125+         LARL  ZC_R1,ZC_WS     ZC_R2=A(WORKING STORAGE WITH SAVEAREA)
0000D2 501D0008                           (11/65)126+         ST    ZC_R1,8(ZC_R13) FORWARD  SAVE CHAIN
0000D6 50D10004                           (11/66)127+         ST    ZC_R13,4(ZC_R1) BACKWARD SAVE CHAIN
0000DA 18D1                               (11/67)128+         LR    ZC_R13,ZC_R1    LINK SAVE AREA IN ZC390CVT
0000DC                                    (11/68)129+         USING ZC_WS,ZC_R13    BASE FOR ZCOBOL WS (SEE GEN_SYM_RX.MAC)
LISTUSE TESTCAL2 ESD=0001 LOC=00000000 LEN=01000 REG=F OFF=00000 LAB=
LISTUSE TESTCAL2 ESD=0001 LOC=00000008 LEN=01000 REG=8 OFF=00000 LAB=
LISTUSE ZC390CVT ESD=0003 LOC=00000000 LEN=01000 REG=9 OFF=00000 LAB=
LISTUSE TESTCAL2 ESD=0001 LOC=000002D8 LEN=01000 REG=D OFF=00000 LAB=
0000DC 50D0D050                000328     (11/69)130+         ST    ZC_R13,ZC_WS_START  SAVE ADDR WS IN WS PREFIX
0000E0 C00000000180            0003E0     (11/70)131+         LARL  ZC_R0,ZC_WS_END
0000E6 1B0D                               (11/71)132+         SR    ZC_R0,ZC_R13
0000E8 5000D054                00032C     (11/72)133+         ST    ZC_R0,ZC_WS_LEN     SAVE LENGTH OF WS IN WS PREFIX
0000EC                                    (11/73)134+         DROP  ZC_R15              RPI 1042
LISTUSE TESTCAL2 ESD=0001 LOC=000002D8 LEN=01000 REG=D OFF=00000 LAB=
LISTUSE TESTCAL2 ESD=0001 LOC=00000008 LEN=01000 REG=8 OFF=00000 LAB=
LISTUSE ZC390CVT ESD=0003 LOC=00000000 LEN=01000 REG=9 OFF=00000 LAB=
0002D8                                    (11/74)135+ZC_WSLOC LOCTR 
0002D8                                    (11/75)136+ZC_WS    DS    0D           START WORKING STORAGE
000000                                    (11/81)137+ZC390CVT DSECT 
000000                                    (12/31)138=ZCVT_ID            DC    C'ZCVT'             ZCVT ID  VERIFIED BY ZCOB
000004                                    (12/32)139=ZCVT_LEN           DC    A(ZCVT_END-ZCVT_ID) ZCVT LEN VERIFIED BY ZCOB
000008                                    (12/33)140=ZCVT_VER           DC    CL8'V1.5.06'    ZCVT VER VERIFIED BY ZC390NUC
000010                                    (12/34)141=ZCVT_ZC390NUC  DC V(ZC390NUC)      MODULE  SYSTEM ROUTINE MODULE INIT
000014                                    (12/35)142=ZCVT_CALL           DC V(CALL)       ENTRY R0=A(PGM),R1=A(PARMLIST)
000018                                    (12/36)143=ZCVT_CMP64R32       DC V(CMP64R32)   ENTRY COMPARE R0-1=FLD1 R2-3=FLD2
00001C                                    (12/37)144=ZCVT_CVTLBTQ        DC V(CVTLBTQ)    ENTRY CVT LB IN F4-6 TO Q IN R0-1
000020                                    (12/38)145=ZCVT_CVTLDTP        DC V(CVTLDTP)    ENTRY CVT LD IN F0-2 TO PL31 R0-1
000024                                    (12/39)146=ZCVT_CVTQTLB        DC V(CVTQTLB)    ENTRY CVT Q IN R0-1 TO LB IN F4-6
000028                                    (12/40)147=ZCVT_DIV64R32       DC V(DIV64R32)   ENTRY DIVIDE R0-1=N64, R2-3=MAX64
00002C                                    (12/41)148=ZCVT_DIVQ128        DC V(DIVQ128)    ENTRY DIVIDE Q128 R0-R1 BY R2-R3
000030                                    (12/42)149=ZCVT_GOBACK         DC V(GOBACK)     ENTRY R1=RC
000034                                    (12/43)150=ZCVT_MPYQ128        DC V(MPYQ128)    ENTRY MULTIPLY Q128 R0-R1 BY R2-R3
000038                                    (12/44)151=ZCVT_OSE64R32       DC V(OSE64R32)   ENTRY ON SIZE ERR R0-1=N, R2-3=MAX
00003C                                    (12/45)152=ZCVT_PERFORM        DC V(PERFORM)    ENTRY R14=PGTAR,R0=PGEXT,R1=PMRET
000040                                    (12/46)153=ZCVT_PMCHECK        DC V(PMCHECK)    ENTRY R14=RETURN TO NEXT INSTR.
000044                                    (12/47)154=ZCVT_ROUNDF         DC V(ROUNDF)     ENTRY R0=REM,R1=QUO,R2=DIVISOR
000048                                    (12/48)155=ZCVT_STACKORG       DC V(STACKORG)   ENTRY PERFORM STACK ORIGIN
00004C                                    (12/49)156=ZCVT_STACKPTR       DC V(STACKPTR)   ENTRY CUR ENTRY A(PG_END+4,RET)
000050                                    (12/50)157=ZCVT_STACKEND       DC V(STACKEND)   ENTRY PERFORM STACK END
000054                                    (12/51)158=ZCVT_STOPRUN        DC V(STOPRUN)    ENTRY R1=RC
000058                                    (12/52)159=ZCVT_TALPHAX        DC V(TALPHAX)    ENTRY TEST ALPHABETIC X
00005C                                    (12/53)160=ZCVT_TNUMP          DC V(TNUMP)      ENTRY TEST NUMERIC P
000060                                    (12/54)161=ZCVT_TNUMX          DC V(TNUMX)      ENTRY TEST NUMERIC X
000064                                    (12/55)162=ZCVT_TNUMZ          DC V(TNUMZ)      ENTRY TEST NUMERIC Z
000068                                    (12/56)163=*
000068                                    (12/57)164=* ADDITIONAL SEPARATE MODULES LINKED WITH Z390NUC IN ZC390LIB.390
000068                                    (12/58)165=*
000068                                    (12/59)166=ZCVT_ABORT     DC V(ABORT)         MODULE  R1=ABORT ERROR MSG #
00006C                  00000001          (12/60)167=ZCVT_ABORT_ALTER   EQU    1 ABORT ALTER DUE TO BRC NOT FOUND AT TARGET
00006C                  00000002          (12/61)168=ZCVT_ABORT_CALL    EQU    2 ABORT DYNAMIC CALL - PGM NOT FOUND
00006C                  00000003          (12/62)169=ZCVT_ABORT_DISPLAY EQU    3 ABORT DISPLAY DUE TO BUFFER EXCEEDED
00006C                  00000004          (12/63)170=ZCVT_ABORT_OPEN    EQU    4 ABORT OPEN  INVALID DCB
00006C                  00000006          (12/64)171=ZCVT_ABORT_STACK   EQU    6 ABORT PEROFRM STACK OVERFLOW
00006C                  00000007          (12/65)172=ZCVT_ABORT_VERSION EQU    7 ABORT ZC390NUC INIT ZCOBOL VERSION ERROR
00006C                  00000008          (12/66)173=ZCVT_ABORT_INT128  EQU    8 ABORT INTEGER 128 CONVERSION OVERFLO
00006C                  00000009          (12/67)174=ZCVT_ABORT_DIVQ    EQU    9 ABORT DIVIDE Q IF DIVISOR 0 OR > 2**63
00006C                  0000000A          (12/68)175=ZCVT_ABORT_CICS    EQU   10 ABORT THIS PGM REQUIRES EXEC CICS TRANS MGR
00006C                  0000000B          (12/69)176=ZCVT_ABORT_ACCEPT  EQU   11 ABORT ACCEPT EOF
00006C                  0000000B          (12/70)177=ZCVT_ABORT_MAXERR  EQU   11 ABORT MAX ERROR CODE
00006C                                    (12/71)178=ZCVT_ACCEPT    DC V(ACCEPT)        MODULE  R1=A(TYPE,FLD_ADD,FLD_LEN)
000070                  00000001          (12/72)179=ZCVT_ACCEPT_DEFAULT EQU   1 INPUT DEFAULT DDNAME=SYSIN
000070                  00000002          (12/73)180=ZCVT_ACCEPT_CONSOLE EQU   2 INPUT VIA WTOR FROM CONSOLE
000070                  00000003          (12/74)181=ZCVT_ACCEPT_DDNAME  EQU   3 INPUT FROM DDNAME WITH DDNAME ADDR IN R3
000070                  00000004          (12/75)182=ZCVT_ACCEPT_DATE    EQU   4 RETURN DAY OF WEEK PIC 9(8) MMDDYYYY
000070                  00000005          (12/76)183=ZCVT_ACCEPT_TIME    EQU   5 RETURN DAY OF WEEK PIC 9(8) HHMMSSTH
000070                  00000006          (12/77)184=ZCVT_ACCEPT_DOW     EQU   6 RETURN DAY OF WEEK PIC 9 1-7
000070                                    (12/78)185=ZCVT_DISPLAY   DC V(DISPLAY)       MODULE  R1=A(ADDR,LEN,TYPE)
000074                                    (12/79)186=ZCVT_INSPECT   DC V(INSPECT)       MODULE  R0=TYPE,R1=PARMLIST
000078                  00000000          (12/80)187=ZCVT_TALLYING      EQU   0 INSPECT TALLYING
000078                  00000004          (12/81)188=ZCVT_REPLACING     EQU   4 INSPECT REPLACING
000078                  00000008          (12/82)189=ZCVT_CONVERTING    EQU   8 INSPECT CONVERTING
000078                                    (12/83)190=*
000078                                    (12/84)191=* SHARED DATA AREAS
000078                                    (12/85)192=*
000078                                    (12/86)193=ZCVT_PVTMAXDL  DS H          MAXIMUM DISPLAY LINE LENGTH  RPI 1118
000080                                    (12/87)194=               DS 0D
000080                                    (12/88)195=ZCVT_ZERO      DC XL16'00'   BINARY ZEROS
000090                                    (12/89)196=ZCVT_HIGH_VALUES DC 0XL16,16X'FF' BINARY FF'S     RPI 1181
0000A0                                    (12/90)197=ZCVT_PWORK     DS PL8        CVD/CVB WORK
0000A8                                    (12/91)198=ZCVT_PWORK1    DS PL16       DIV DIVIDEND, CVDG/CVBG WORK
0000B8                                    (12/92)199=ZCVT_PWORK2    DS PL16       DIV DIVISOR
0000C8                                    (12/93)200=ZCVT_PWORK3    DS PL16       DIV QUOTIENT
0000D8                                    (12/94)201=ZCVT_PWORK4    DS PL16       DIV REMAINDER
0000E8                                    (12/95)202=ZCVT_NDDX      DS XL16       DIV DIVIDEND HOLD AREA
0000F8                                    (12/96)203=ZCVT_WORKAREA  DS XL256      GEN_INSPECT PARMS, GEN_EDIT WORK, ETC.
0001F8                                    (12/97)204=*
0001F8                                    (12/98)205=* END OF ZC390CVT
0001F8                                    (12/99)206=*
0001F8                  000001F8         (12/100)207=ZCVT_END   EQU   *
000000                                    (11/83)208+ZC390PVT DSECT 
000000                                    (13/11)209=PVTPGM   DS    CL8  ZCOBOL PGM NAME
000008                                    (13/12)210=PVTDATE  DS    CL8  ZCOBOL COMPILE DATE
000010                                    (13/13)211=PVTTIME  DS    CL8  ZCOBOL COMPILE TIME
000018                                    (13/14)212=PVTVER   DS    CL8  ZCOBOL COMPILER VERSION
000020                                    (13/15)213=PVTCICS  DS    C    ZCOBOL EXEC CICS PGM
000021                                    (13/16)214=PVTEXTND DS    C    ZCOBOL EXTENDED PRECISION
000022                                    (13/17)215=PVTTRUNC DS    C    ZCOBOL TRUNCATE TO PICTURE
000023                                    (13/18)216=PVTR64   DS    C    ZCOBOL USE 64 BIT REGISTERS
000024                                    (13/19)217=PVTMAXDL DS    H    ZCOBOL MAX DISPLAY LINE LENGTH
000026                                    (13/20)218=         DS    XL10 RESERVED
0002D8                                    (11/85)219+ZC_WSLOC LOCTR              CONTINUE WS FOR FD AND DATA
0002D8                                      (1/9)220 *        AUTHOR.        DON HIGGINS.
0002D8                                     (1/11)221 *        DATE-WRITTEN.  12/02/08.
0002D8                                     (1/12)222 *      ***************************************************************
0002D8                                     (1/13)223 *      * REGRESSION TEST CALL
0002D8                                     (1/14)224 *      *  FROM TESTCAL1.CBL TO TESTCAL2.CBL STATIC LINKED
0002D8                                     (1/15)225 *      *  FROM TESTCBL2.CBL TO TESTCBL3.CBL DYNAMIC LINK
0002D8                                     (1/16)226 *      *  FROM TESTCBL3.CBL TO TESTASM4.MLC STATIC LINK
0002D8                                     (1/17)227 *      * USING BY VALUE PARM1 BY REFERENCE PARM2.
0002D8                                     (1/18)228 *      ***************************************************************
0002D8                                     (1/20)229 *        ENVIRONMENT DIVISION.
0002D8                                     (1/22)230 *        DATA DIVISION.
0002D8                                    (28/23)231+         PRINT DATA
0002D8                                     (1/24)232 *        WORKING-STORAGE SECTION.
0002D8                                     (1/26)233 *        77  PGM3 PIC X(8) VALUE 'TESTCAL3'.
0002D8                                     (1/28)234 *        LINKAGE SECTION.
0002D8                                     (1/30)235 *        01 PARM1 PIC X(20).
0002D8                                     (1/32)236 *        01 PARM2 PIC X(20).
0002D8                                     (1/35)237 *        PROCEDURE DIVISION USING PARM1 PARM2.
0002D8                                     (1/36)238 *ZC   PROCEDURE DIVISION,USING,PARM1,PARM2
0002D8                                    (32/18)239+         PRINT LIST,GEN,LISTUSE TURN PRINT LISTING ON FOR USER CODE GEN
0000EC                                    (32/19)240+TESTCAL2 CSECT                SWITCH TO PROCEDURE CODE AHEAD OF WS
0000EC 58020000                           (32/70)241+         L     ZC_R0,0(ZC_R2)          LOAD PARM ADDR FROM PARMLIST
0000F0 5000D0C3                00039B     (32/72)242+         ST    ZC_R0,ZC_PARM1_PTR STORE PARM POINTER
0000F4 58020004                           (32/70)243+         L     ZC_R0,4(ZC_R2)          LOAD PARM ADDR FROM PARMLIST
0000F8 5000D0C7                00039F     (32/72)244+         ST    ZC_R0,ZC_PARM2_PTR STORE PARM POINTER
0000FC                                     (1/38)245 *        MAINLINE.
0000FC                                     (8/96)246+PG_MAINLINE DS 0H
0000FC                                     (1/40)247 *            DISPLAY 'TESTCAL2 STARTING'
0000FC                                     (1/41)248 *ZC     21         DISPLAY 'TESTCAL2 STARTING'
0000FC A715000D                000116     (18/49)249+         BRAS  1,*+(WTO#0109_EOT-*+1)/2*2
000100 00150000E3C5E2E3                   (18/50)250+         DC    AL2(WTO#0109_EOT-*,0),C'TESTCAL2 STARTING'
000108 C3C1D3F240E2E3C1
000110 D9E3C9D5C7
000115                  00000115          (18/51)251+WTO#0109_EOT     EQU *
000116 0A23                               (18/52)252+         SVC   35
000118                                     (1/43)253 *            DISPLAY 'TESTCAL2 PARM1 =' PARM1
000118                                     (1/44)254 *ZC     22         DISPLAY 'TESTCAL2 PARM1 =',PARM1
000118 413090F8                0000F8     (38/28)255+         LA    ZC_R3,ZCVT_WORKAREA  ZC_R3=CVT LIST WORK AREA
00011C C000000000BA            000290     (38/68)256+         LARL  ZC_R0,=CL16'TESTCAL2 PARM1 =' PAD TO EVEN LEN LIT
000122 41100010                           (38/69)257+         LA    ZC_R1,16
000126 412000E7                           (38/70)258+         LA    ZC_R2,C'X'
00012A 90023000                           (38/71)259+         STM   ZC_R0,ZC_R2,0(ZC_R3)  SET DISPLAY LIST ENTRY
00012E 5850D0C3                00039B    (35/111)260+         L     ZC_R5,ZC_PARM1_PTR
000132                                   (35/119)261+         USING PARM1_DSECT,ZC_R5
LISTUSE TESTCAL2 ESD=0001 LOC=000002D8 LEN=01000 REG=D OFF=00000 LAB=
LISTUSE TESTCAL2 ESD=0001 LOC=00000008 LEN=01000 REG=8 OFF=00000 LAB=
LISTUSE ZC390CVT ESD=0003 LOC=00000000 LEN=01000 REG=9 OFF=00000 LAB=
LISTUSE PARM1_DSECT ESD=0005 LOC=00000000 LEN=01000 REG=5 OFF=00000 LAB=
000132 41005000                000000     (38/82)262+         LA    ZC_R0,PARM1
000136 41100014                           (38/83)263+         LA    ZC_R1,20  RPI 1182 WAS &SYM_LEN(&FIELD_IX)
00013A 412000E7                           (38/88)264+         LA    ZC_R2,C'X'
00013E 9002300C                           (38/90)265+         STM   ZC_R0,ZC_R2,12(ZC_R3)  SET DISPLAY LIST ENTRY
000142 96803014                           (38/94)266+         OI    24-4(ZC_R3),X'80' SET VL BIT IN LAST WORD OF PARM LIST
000146 1813                               (38/95)267+         LR    ZC_R1,ZC_R3
000148 58F09070                000070     (38/96)268+         L     ZC_R15,ZCVT_DISPLAY
00014C 0DEF                               (38/97)269+         BASR  ZC_R14,ZC_R15
00014E                                     (1/46)270 *            DISPLAY 'TESTCAL2 PARM2 =' PARM2
00014E                                     (1/47)271 *ZC     23         DISPLAY 'TESTCAL2 PARM2 =',PARM2
00014E 413090F8                0000F8     (38/28)272+         LA    ZC_R3,ZCVT_WORKAREA  ZC_R3=CVT LIST WORK AREA
000152 C000000000A7            0002A0     (38/68)273+         LARL  ZC_R0,=CL16'TESTCAL2 PARM2 =' PAD TO EVEN LEN LIT
000158 41100010                           (38/69)274+         LA    ZC_R1,16
00015C 412000E7                           (38/70)275+         LA    ZC_R2,C'X'
000160 90023000                           (38/71)276+         STM   ZC_R0,ZC_R2,0(ZC_R3)  SET DISPLAY LIST ENTRY
000164 5840D0C7                00039F    (35/128)277+         L     ZC_R4,ZC_PARM2_PTR
000168                                   (35/136)278+         USING PARM2_DSECT,ZC_R4
LISTUSE TESTCAL2 ESD=0001 LOC=000002D8 LEN=01000 REG=D OFF=00000 LAB=
LISTUSE TESTCAL2 ESD=0001 LOC=00000008 LEN=01000 REG=8 OFF=00000 LAB=
LISTUSE ZC390CVT ESD=0003 LOC=00000000 LEN=01000 REG=9 OFF=00000 LAB=
LISTUSE PARM1_DSECT ESD=0005 LOC=00000000 LEN=01000 REG=5 OFF=00000 LAB=
LISTUSE PARM2_DSECT ESD=0006 LOC=00000000 LEN=01000 REG=4 OFF=00000 LAB=
000168 41004000                000000     (38/82)279+         LA    ZC_R0,PARM2
00016C 41100014                           (38/83)280+         LA    ZC_R1,20  RPI 1182 WAS &SYM_LEN(&FIELD_IX)
000170 412000E7                           (38/88)281+         LA    ZC_R2,C'X'
000174 9002300C                           (38/90)282+         STM   ZC_R0,ZC_R2,12(ZC_R3)  SET DISPLAY LIST ENTRY
000178 96803014                           (38/94)283+         OI    24-4(ZC_R3),X'80' SET VL BIT IN LAST WORD OF PARM LIST
00017C 1813                               (38/95)284+         LR    ZC_R1,ZC_R3
00017E 58F09070                000070     (38/96)285+         L     ZC_R15,ZCVT_DISPLAY
000182 0DEF                               (38/97)286+         BASR  ZC_R14,ZC_R15
000184                                     (1/49)287 *            MOVE    'TESTCAL2 UPDT1' TO PARM1
000184                                     (1/50)288 *ZC     24         MOVE  'TESTCAL2 UPDT1',TO,PARM1
000184 C01000000096            0002B0    (43/160)289+         LARL  ZC_R1,=CL20'TESTCAL2 UPDT1'
00018A D21350001000     000000           (43/299)290+          MVC   PARM1,0(ZC_R1)
000190                                     (1/52)291 *            MOVE    'TESTCAL2 UPDT2' TO PARM2
000190                                     (1/53)292 *ZC     25         MOVE  'TESTCAL2 UPDT2',TO,PARM2
000190 C0100000009A            0002C4    (43/160)293+         LARL  ZC_R1,=CL20'TESTCAL2 UPDT2'
000196 D21340001000     000000           (43/299)294+          MVC   PARM2,0(ZC_R1)
00019C                                     (1/55)295 *            CALL PGM3 USING BY VALUE     PARM1
00019C                                     (1/56)296 *                            BY REFERENCE PARM2.
00019C                                     (1/57)297 *ZC     26         CALL  PGM3,USING,BY,VALUE,PARM1,BY,REFERENCE,PARM2
00019C D213D0D75000     0003AF 000000    (43/107)298+         MVC   ZC_CALL_VALUE_4,PARM1  ALIGN LEFT X OTHER
0001A2 4100D0D7                0003AF     (45/76)299+         LA    ZC_R0,ZC_CALL_VALUE_4
0001A6 5000D0CF                0003A7     (45/77)300+         ST    ZC_R0,ZC_CALL_LIST_3+0
0001AA 41004000                000000     (45/54)301+         LA    ZC_R0,PARM2
0001AE 5000D0D3                0003AB     (45/55)302+         ST    ZC_R0,ZC_CALL_LIST_3+4
0001B2 9680D0D3                0003AB    (45/113)303+         OI    ZC_CALL_LIST_3+8-4,X'80'
0001B6 4110D0CF                0003A7    (45/114)304+         LA    ZC_R1,ZC_CALL_LIST_3
0001BA 4100D058                000330    (45/133)305+         LA    ZC_R0,PGM3
0001BE 58F09014                000014    (45/134)306+         L     ZC_R15,ZCVT_CALL
0001C2 0DEF                              (45/135)307+         BASR  ZC_R14,ZC_R15
0001C4 40F0D0C1                000399    (45/138)308+         STH  ZC_R15,RETURN_CODE
0001C8                                     (1/60)309 *            CALL PGM3 USING BY VALUE     PARM1
0001C8                                     (1/61)310 *                            BY REFERENCE PARM2.
0001C8                                     (1/62)311 *ZC     28         CALL  PGM3,USING,BY,VALUE,PARM1,BY,REFERENCE,PARM2
0001C8 D213D0F35000     0003CB 000000    (43/107)312+         MVC   ZC_CALL_VALUE_6,PARM1  ALIGN LEFT X OTHER
0001CE 4100D0F3                0003CB     (45/76)313+         LA    ZC_R0,ZC_CALL_VALUE_6
0001D2 5000D0EB                0003C3     (45/77)314+         ST    ZC_R0,ZC_CALL_LIST_5+0
0001D6 41004000                000000     (45/54)315+         LA    ZC_R0,PARM2
0001DA 5000D0EF                0003C7     (45/55)316+         ST    ZC_R0,ZC_CALL_LIST_5+4
0001DE 9680D0EF                0003C7    (45/113)317+         OI    ZC_CALL_LIST_5+8-4,X'80'
0001E2 4110D0EB                0003C3    (45/114)318+         LA    ZC_R1,ZC_CALL_LIST_5
0001E6 4100D058                000330    (45/133)319+         LA    ZC_R0,PGM3
0001EA 58F09014                000014    (45/134)320+         L     ZC_R15,ZCVT_CALL
0001EE 0DEF                              (45/135)321+         BASR  ZC_R14,ZC_R15
0001F0 40F0D0C1                000399    (45/138)322+         STH  ZC_R15,RETURN_CODE
0001F4                                     (1/65)323 *            DISPLAY 'TESTCAL2 PARM1 =' PARM1
0001F4                                     (1/66)324 *ZC     30         DISPLAY 'TESTCAL2 PARM1 =',PARM1
0001F4 413090F8                0000F8     (38/28)325+         LA    ZC_R3,ZCVT_WORKAREA  ZC_R3=CVT LIST WORK AREA
0001F8 C0000000004C            000290     (38/68)326+         LARL  ZC_R0,=CL16'TESTCAL2 PARM1 =' PAD TO EVEN LEN LIT
0001FE 41100010                           (38/69)327+         LA    ZC_R1,16
000202 412000E7                           (38/70)328+         LA    ZC_R2,C'X'
000206 90023000                           (38/71)329+         STM   ZC_R0,ZC_R2,0(ZC_R3)  SET DISPLAY LIST ENTRY
00020A 41005000                000000     (38/82)330+         LA    ZC_R0,PARM1
00020E 41100014                           (38/83)331+         LA    ZC_R1,20  RPI 1182 WAS &SYM_LEN(&FIELD_IX)
000212 412000E7                           (38/88)332+         LA    ZC_R2,C'X'
000216 9002300C                           (38/90)333+         STM   ZC_R0,ZC_R2,12(ZC_R3)  SET DISPLAY LIST ENTRY
00021A 96803014                           (38/94)334+         OI    24-4(ZC_R3),X'80' SET VL BIT IN LAST WORD OF PARM LIST
00021E 1813                               (38/95)335+         LR    ZC_R1,ZC_R3
000220 58F09070                000070     (38/96)336+         L     ZC_R15,ZCVT_DISPLAY
000224 0DEF                               (38/97)337+         BASR  ZC_R14,ZC_R15
000226                                     (1/68)338 *            DISPLAY 'TESTCAL2 PARM2 =' PARM2
000226                                     (1/69)339 *ZC     31         DISPLAY 'TESTCAL2 PARM2 =',PARM2
000226 413090F8                0000F8     (38/28)340+         LA    ZC_R3,ZCVT_WORKAREA  ZC_R3=CVT LIST WORK AREA
00022A C0000000003B            0002A0     (38/68)341+         LARL  ZC_R0,=CL16'TESTCAL2 PARM2 =' PAD TO EVEN LEN LIT
000230 41100010                           (38/69)342+         LA    ZC_R1,16
000234 412000E7                           (38/70)343+         LA    ZC_R2,C'X'
000238 90023000                           (38/71)344+         STM   ZC_R0,ZC_R2,0(ZC_R3)  SET DISPLAY LIST ENTRY
00023C 41004000                000000     (38/82)345+         LA    ZC_R0,PARM2
000240 41100014                           (38/83)346+         LA    ZC_R1,20  RPI 1182 WAS &SYM_LEN(&FIELD_IX)
000244 412000E7                           (38/88)347+         LA    ZC_R2,C'X'
000248 9002300C                           (38/90)348+         STM   ZC_R0,ZC_R2,12(ZC_R3)  SET DISPLAY LIST ENTRY
00024C 96803014                           (38/94)349+         OI    24-4(ZC_R3),X'80' SET VL BIT IN LAST WORD OF PARM LIST
000250 1813                               (38/95)350+         LR    ZC_R1,ZC_R3
000252 58F09070                000070     (38/96)351+         L     ZC_R15,ZCVT_DISPLAY
000256 0DEF                               (38/97)352+         BASR  ZC_R14,ZC_R15
000258                                     (1/71)353 *            DISPLAY 'TESTCAL2 ENDING OK'
000258                                     (1/72)354 *ZC     32         DISPLAY 'TESTCAL2 ENDING OK'
000258 A715000D                000272     (18/49)355+         BRAS  1,*+(WTO#0188_EOT-*+1)/2*2
00025C 00160000E3C5E2E3                   (18/50)356+         DC    AL2(WTO#0188_EOT-*,0),C'TESTCAL2 ENDING OK'
000264 C3C1D3F240C5D5C4
00026C C9D5C740D6D2
000272                  00000272          (18/51)357+WTO#0188_EOT     EQU *
000272 0A23                               (18/52)358+         SVC   35
000274                                     (1/74)359 *            GOBACK.
000274                                     (1/75)360 *ZC     33         GOBACK
000274 4810D0C1                000399     (48/18)361+         LH    ZC_R1,RETURN_CODE      PASS RETURN CODE IN R1
000278 58F09030                000030     (48/23)362+         L     ZC_R15,ZCVT_GOBACK
00027C 07FF                               (48/24)363+         BR    ZC_R15
00027E 58F09040                000040      (8/64)364+PG_MAINLINE_END L ZC_R15,ZCVT_PMCHECK
000282 0DEF                                (8/65)365+         BASR  ZC_R14,ZC_R15 CHECK FOR END OF CURRENT PERFORM
000284                                    (8/108)366+SN_END_PROCEDURE DS 0H SECTION
000284                                    (50/12)367+         DROP     ZC_R4
LISTUSE TESTCAL2 ESD=0001 LOC=000002D8 LEN=01000 REG=D OFF=00000 LAB=
LISTUSE TESTCAL2 ESD=0001 LOC=00000008 LEN=01000 REG=8 OFF=00000 LAB=
LISTUSE ZC390CVT ESD=0003 LOC=00000000 LEN=01000 REG=9 OFF=00000 LAB=
LISTUSE PARM1_DSECT ESD=0005 LOC=00000000 LEN=01000 REG=5 OFF=00000 LAB=
000284                                    (50/12)368+         DROP     ZC_R5
LISTUSE TESTCAL2 ESD=0001 LOC=000002D8 LEN=01000 REG=D OFF=00000 LAB=
LISTUSE TESTCAL2 ESD=0001 LOC=00000008 LEN=01000 REG=8 OFF=00000 LAB=
LISTUSE ZC390CVT ESD=0003 LOC=00000000 LEN=01000 REG=9 OFF=00000 LAB=
000284                                    (49/18)369+*        PROCEDURE END
000284 4810D0C1                000399     (49/24)370+         LH    ZC_R1,RETURN_CODE
000288 58F09030                000030     (49/25)371+         L     ZC_R15,ZCVT_GOBACK
00028C 0DEF                               (49/26)372+         BASR  ZC_R14,ZC_R15
00028E                                    (49/32)373+         LTORG 
000290 E3C5E2E3C3C1D3F2 =CL16'TESTCAL2 PARM1 ='
000298 40D7C1D9D4F1407E
0002A0 E3C5E2E3C3C1D3F2 =CL16'TESTCAL2 PARM2 ='
0002A8 40D7C1D9D4F2407E
0002B0 E3C5E2E3C3C1D3F2 =CL20'TESTCAL2 UPDT1'
0002B8 40E4D7C4E3F14040
0002C0 40404040
0002C4 E3C5E2E3C3C1D3F2 =CL20'TESTCAL2 UPDT2'
0002CC 40E4D7C4E3F24040
0002D4 40404040
0002D8                                     (6/15)374+*    ZCOBOL WORKING STORAGE SECTION DATA ITEMS 
0002D8                                     (6/15)375+*    LVL DATA NAME                      ADDR     LEN      DUP TYP PIC        VALUE 
0002D8                                     (6/15)377+*    01  ZC_SAVEAREA                    00000000 00000048 1   X   X(72)       
0002D8                                     (6/15)379+*    01  ZC_WS_ID                       00000048 00000008 1   X   X(8)       ''WS*WS*WS'' 
0002D8                                     (6/15)381+*    01  ZC_WS_START                    00000050 00000004 1   A               
0002D8                                     (6/15)383+*    01  ZC_WS_LEN                      00000054 00000004 1   F   9(9)        
0002D8                                     (6/15)385+*    01  FILLER                         00000058 00000000 1   X               
0002D8                                     (6/15)387+*    01  PGM3                           00000058 00000008 1   X   X(8)       ''TESTCAL3'' 
0002D8                                     (6/15)389+*    01  ZC_WS_ID1                      00000060 00000007 1   X   X(7)       ''ZCWSID1'' 
0002D8                                     (6/15)391+*    01  DEBUG_ITEM                     00000067 00000058 1   X               
0002D8                                     (6/15)393+*    02  DEBUG_LINE                     00000067 00000006 1   X   X(6)        
0002D8                                     (6/15)395+*    02  FILLER                         0000006D 00000001 1   X   X          SPACE 
0002D8                                     (6/15)397+*    02  DEBUG_NAME                     0000006E 0000001E 1   X   X(30)       
0002D8                                     (6/15)399+*    02  FILLER                         0000008C 00000001 1   X   X          SPACE 
0002D8                                     (6/15)401+*    02  DEBUG_SUB_1                    0000008D 00000004 1   Z   9999        
0002D8                                     (6/15)403+*    02  FILLER                         00000091 00000001 1   X   X          SPACE 
0002D8                                     (6/15)405+*    02  DEBUG_SUB_2                    00000092 00000004 1   Z   9999        
0002D8                                     (6/15)407+*    02  FILLER                         00000096 00000001 1   X   X          SPACE 
0002D8                                     (6/15)409+*    02  DEBUG_SUB_3                    00000097 00000004 1   Z   9999        
0002D8                                     (6/15)411+*    02  FILLER                         0000009B 00000001 1   X   X          SPACE 
0002D8                                     (6/15)413+*    02  DEBUG_CONTENTS                 0000009C 00000023 1   X   X(35)       
0002D8                                     (6/15)415+*    01  TRUE                           000000BF 00000001 1   Z   9          1 
0002D8                                     (6/15)417+*    01  FALSE                          000000C0 00000001 1   Z   9          0 
0002D8                                     (6/15)419+*    01  RETURN_CODE                    000000C1 00000002 1   H   9(4)       0 
0002D8                                     (6/15)421+*    01  ZC_PARM1_PTR                   000000C3 00000004 1   A               
0002D8                                     (6/15)423+*    01  ZC_PARM2_PTR                   000000C7 00000004 1   A               
0002D8                                     (6/15)425+*    01  ZC_ZC_LK_END_PTR               000000CB 00000004 1   A               
0002D8                                     (6/15)427+*    01  ZC_CALL_LIST_3                 000000CF 00000008 1   X   X(8)        
0002D8                                     (6/15)429+*    01  ZC_CALL_VALUE_4                000000D7 00000014 1   X   X(20)       
0002D8                                     (6/15)431+*    01  ZC_CALL_LIST_5                 000000EB 00000008 1   X   X(8)        
0002D8                                     (6/15)433+*    01  ZC_CALL_VALUE_6                000000F3 00000014 1   X   X(20)       
0002D8                                    (52/39)435+ZC_WSLOC LOCTR 
0002D8                  00000000         (52/131)436+ZC_WS_LOC_1  EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
0002D8                                   (52/336)437+ZC_SAVEAREA DS CL72
000320                  00000048         (52/131)438+ZC_WS_LOC_2  EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000320 E6E25CE6E25CE6E2                  (52/220)439+ZC_WS_ID DC CL8'WS*WS*WS'
000328                  00000050         (52/131)440+ZC_WS_LOC_3  EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000328                                   (52/322)441+ZC_WS_START DS AL4
00032C                  00000054         (52/131)442+ZC_WS_LOC_4  EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
00032C                                   (52/324)443+ZC_WS_LEN DS FL4
000330                  00000058         (52/131)444+ZC_WS_LOC_5  EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000330                                   (52/336)445+         DS  0CL0
000330                  00000058         (52/131)446+ZC_WS_LOC_6  EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000330 E3C5E2E3C3C1D3F3                  (52/220)447+PGM3     DC CL8'TESTCAL3'
000338                  00000060         (52/131)448+ZC_WS_LOC_7  EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000338 E9C3E6E2C9C4F1                    (52/220)449+ZC_WS_ID1 DC CL7'ZCWSID1'
00033F                  00000067         (52/131)450+ZC_WS_LOC_11 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
00033F                                   (52/336)451+DEBUG_ITEM DS 0CL88
00033F                  00000067         (52/131)452+ZC_WS_LOC_12 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
00033F                                   (52/336)453+DEBUG_LINE DS CL6
000345                  0000006D         (52/131)454+ZC_WS_LOC_13 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000345 40                                (52/227)455+         DC CL1' '
000346                  0000006E         (52/131)456+ZC_WS_LOC_14 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000346                                   (52/336)457+DEBUG_NAME DS CL30
000364                  0000008C         (52/131)458+ZC_WS_LOC_15 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000364 40                                (52/227)459+         DC CL1' '
000365                  0000008D         (52/131)460+ZC_WS_LOC_16 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000365                                   (52/338)461+DEBUG_SUB_1 DS ZL4
000369                  00000091         (52/131)462+ZC_WS_LOC_17 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000369 40                                (52/227)463+         DC CL1' '
00036A                  00000092         (52/131)464+ZC_WS_LOC_18 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
00036A                                   (52/338)465+DEBUG_SUB_2 DS ZL4
00036E                  00000096         (52/131)466+ZC_WS_LOC_19 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
00036E 40                                (52/227)467+         DC CL1' '
00036F                  00000097         (52/131)468+ZC_WS_LOC_20 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
00036F                                   (52/338)469+DEBUG_SUB_3 DS ZL4
000373                  0000009B         (52/131)470+ZC_WS_LOC_21 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000373 40                                (52/227)471+         DC CL1' '
000374                  0000009C         (52/131)472+ZC_WS_LOC_22 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000374                                   (52/336)473+DEBUG_CONTENTS DS CL35
000397                  000000BF         (52/131)474+ZC_WS_LOC_23 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000397 F1                                (52/251)475+TRUE     DC CL1'1'
000398                  000000C0         (52/131)476+ZC_WS_LOC_24 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000398 F0                                (52/251)477+FALSE    DC CL1'0'
000399                  000000C1         (52/131)478+ZC_WS_LOC_25 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000399 0000                              (52/199)479+RETURN_CODE DC AL2(0)                  RPI 1065
00039B                  000000C3         (52/131)480+ZC_WS_LOC_26 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
00039B                                   (52/322)481+ZC_PARM1_PTR DS AL4
00039F                  000000C7         (52/131)482+ZC_WS_LOC_27 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
00039F                                   (52/322)483+ZC_PARM2_PTR DS AL4
0003A3                  000000CB         (52/131)484+ZC_WS_LOC_28 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
0003A3                                   (52/322)485+ZC_ZC_LK_END_PTR DS AL4
0003A7                  000000CF         (52/131)486+ZC_WS_LOC_29 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
0003A7                                   (52/336)487+ZC_CALL_LIST_3 DS CL8
0003AF                  000000D7         (52/131)488+ZC_WS_LOC_30 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
0003AF                                   (52/336)489+ZC_CALL_VALUE_4 DS CL20
0003C3                  000000EB         (52/131)490+ZC_WS_LOC_31 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
0003C3                                   (52/336)491+ZC_CALL_LIST_5 DS CL8
0003CB                  000000F3         (52/131)492+ZC_WS_LOC_32 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
0003CB                                   (52/336)493+ZC_CALL_VALUE_6 DS CL20
0003DF                                     (6/15)494+*    ZCOBOL LINKAGE SECTION DATA ITEMS 
0003DF                                     (6/15)495+*    LVL DATA NAME                      ADDR     LEN      DUP TYP PIC        VALUE 
0003DF                                     (6/15)497+*    01  PARM1                          00000000 00000014 1   X   X(20)       
0003DF                                     (6/15)499+*    01  PARM2                          00000000 00000014 1   X   X(20)       
0003DF                                     (6/15)501+*    01  ZC_LK_END                      00000000 00000001 1   X   X           
0003DF                                    (52/39)503+ZC_WSLOC LOCTR 
000000                                    (52/80)504+PARM1_DSECT DSECT 
000000                  00000000         (52/128)505+ZC_LK_LOC_8  EQU *-PARM1 CHECK &SYM_NAME(&I) LK LOC
000000                                   (52/336)506+PARM1    DS  CL20
000000                                    (52/80)507+PARM2_DSECT DSECT 
000000                  00000000         (52/128)508+ZC_LK_LOC_9  EQU *-PARM2 CHECK &SYM_NAME(&I) LK LOC
000000                                   (52/336)509+PARM2    DS  CL20
000000                                    (52/80)510+ZC_LK_END_DSECT DSECT 
000000                  00000000         (52/128)511+ZC_LK_LOC_10 EQU *-ZC_LK_END CHECK &SYM_NAME(&I) LK LOC
000000                                   (52/336)512+ZC_LK_END DS CL1
0003DF                                    (49/58)513+ZC_WSLOC LOCTR 
0003DF                  00000000          (49/60)514+ZC_WS_DIFF EQU  *-ZC_WS-263  DIFF BETWEEN ALLOC AND CALC WS
0003E0                                    (49/65)515+ZC_WS_END DS   0D
0003E0                                    (53/14)516+         MNOTE *,'ZCOBOL TOTAL SYMBOLS                 = 32'
0003E0                                    (53/15)517+         MNOTE *,'ZCOBOL TOTAL SYMBOL DUPLICATES       = 0'
0003E0                                    (53/16)518+         MNOTE *,'ZCOBOL TOTAL SYMBOL MAX DUP CHAIN    = 0'
0003E0                                    (53/17)519+         MNOTE *,'ZCOBOL TOTAL SYMBOL LEVEL 88         = 0'
0003E0                                    (53/18)520+         MNOTE *,'ZCOBOL TOTAL SYMBOL SET INDEXES      = 0'
0003E0                                    (53/19)521+         MNOTE *,'ZCOBOL TOTAL SYMBOL LINKAGE SECTIONS = 3'
0003E0                                    (53/20)522+         MNOTE *,'ZCOBOL TOTAL PROCEDURE SECTIONS      = 0'
0003E0                                    (53/21)523+         MNOTE *,'ZCOBOL TOTAL PROCEDURE PARAGRAPHS    = 1'
0003E0                                    (53/22)524+         MNOTE *,'ZCOBOL TOTAL PROCEDURE PARAGRAPH DUP = 0'
0003E0                                     (1/79)525          END 

Symbol Table Listing

 SYM=DEBUG_CONTENTS LOC=00000374 LEN=00000023 ESD=0001 TYPE=REL  XREF=473 
 SYM=DEBUG_ITEM LOC=0000033F LEN=00000058 ESD=0001 TYPE=REL  XREF=451 
 SYM=DEBUG_LINE LOC=0000033F LEN=00000006 ESD=0001 TYPE=REL  XREF=453 
 SYM=DEBUG_NAME LOC=00000346 LEN=0000001E ESD=0001 TYPE=REL  XREF=457 
 SYM=DEBUG_SUB_1 LOC=00000365 LEN=00000004 ESD=0001 TYPE=REL  XREF=461 
 SYM=DEBUG_SUB_2 LOC=0000036A LEN=00000004 ESD=0001 TYPE=REL  XREF=465 
 SYM=DEBUG_SUB_3 LOC=0000036F LEN=00000004 ESD=0001 TYPE=REL  XREF=469 
 SYM=FALSE    LOC=00000398 LEN=00000001 ESD=0001 TYPE=REL  XREF=477 
 SYM=PARM1    LOC=00000000 LEN=00000014 ESD=0005 TYPE=REL  XREF=506 262 290 298 312 
  330 505 
 SYM=PARM1_DSECT LOC=00000000 LEN=00000018 ESD=0005 TYPE=DST  XREF=504 261 
 SYM=PARM2    LOC=00000000 LEN=00000014 ESD=0006 TYPE=REL  XREF=509 279 294 301 315 
  345 508 
 SYM=PARM2_DSECT LOC=00000000 LEN=00000018 ESD=0006 TYPE=DST  XREF=507 278 
 SYM=PFPO_RADIX LOC=00000001 LEN=00000001 ESD=0000 TYPE=ABS  XREF=112 
 SYM=PFPO_RND LOC=00000000 LEN=00000001 ESD=0000 TYPE=ABS  XREF=113 
 SYM=PFPO_TEST LOC=00000080 LEN=00000001 ESD=0000 TYPE=ABS  XREF=111 
 SYM=PFPO_TYPE_DB LOC=00000006 LEN=00000001 ESD=0000 TYPE=ABS  XREF=118 
 SYM=PFPO_TYPE_DD LOC=00000009 LEN=00000001 ESD=0000 TYPE=ABS  XREF=121 
 SYM=PFPO_TYPE_DH LOC=00000001 LEN=00000001 ESD=0000 TYPE=ABS  XREF=115 
 SYM=PFPO_TYPE_EB LOC=00000005 LEN=00000001 ESD=0000 TYPE=ABS  XREF=117 
 SYM=PFPO_TYPE_ED LOC=00000008 LEN=00000001 ESD=0000 TYPE=ABS  XREF=120 
 SYM=PFPO_TYPE_EH LOC=00000000 LEN=00000001 ESD=0000 TYPE=ABS  XREF=114 
 SYM=PFPO_TYPE_LB LOC=00000007 LEN=00000001 ESD=0000 TYPE=ABS  XREF=119 
 SYM=PFPO_TYPE_LD LOC=0000000A LEN=00000001 ESD=0000 TYPE=ABS  XREF=122 
 SYM=PFPO_TYPE_LH LOC=00000002 LEN=00000001 ESD=0000 TYPE=ABS  XREF=116 
 SYM=PGM3     LOC=00000330 LEN=00000008 ESD=0001 TYPE=REL  XREF=447 305 319 
 SYM=PG_MAINLINE LOC=000000FC LEN=00000002 ESD=0001 TYPE=REL  XREF=246 
 SYM=PG_MAINLINE_END LOC=0000027E LEN=00000004 ESD=0001 TYPE=REL  XREF=364 
 SYM=PVTCICS  LOC=00000020 LEN=00000001 ESD=0004 TYPE=REL  XREF=213 
 SYM=PVTDATE  LOC=00000008 LEN=00000008 ESD=0004 TYPE=REL  XREF=210 
 SYM=PVTEXTND LOC=00000021 LEN=00000001 ESD=0004 TYPE=REL  XREF=214 
 SYM=PVTMAXDL LOC=00000024 LEN=00000002 ESD=0004 TYPE=REL  XREF=217 
 SYM=PVTPGM   LOC=00000000 LEN=00000008 ESD=0004 TYPE=REL  XREF=209 
 SYM=PVTR64   LOC=00000023 LEN=00000001 ESD=0004 TYPE=REL  XREF=216 
 SYM=PVTTIME  LOC=00000010 LEN=00000008 ESD=0004 TYPE=REL  XREF=211 
 SYM=PVTTRUNC LOC=00000022 LEN=00000001 ESD=0004 TYPE=REL  XREF=215 
 SYM=PVTVER   LOC=00000018 LEN=00000008 ESD=0004 TYPE=REL  XREF=212 
 SYM=RETURN_CODE LOC=00000399 LEN=00000002 ESD=0001 TYPE=REL  XREF=479 308 322 361 
  370 
 SYM=SN_END_PROCEDURE LOC=00000284 LEN=00000002 ESD=0001 TYPE=REL  XREF=366 
 SYM=TESTCAL2 LOC=00000000 LEN=000003E0 ESD=0001 TYPE=CST  XREF=8 240 
 SYM=TRUE     LOC=00000397 LEN=00000001 ESD=0001 TYPE=REL  XREF=475 
 SYM=WTO#0011_EOT LOC=00000060 LEN=00000001 ESD=0001 TYPE=REL  XREF=35 33 34 
 SYM=WTO#0012_EOT LOC=000000AA LEN=00000001 ESD=0001 TYPE=REL  XREF=52 50 51 
 SYM=WTO#0109_EOT LOC=00000115 LEN=00000001 ESD=0001 TYPE=REL  XREF=251 249 250 
 SYM=WTO#0188_EOT LOC=00000272 LEN=00000001 ESD=0001 TYPE=REL  XREF=357 355 356 
 SYM=ZC390CVT LOC=00000000 LEN=000001F8 ESD=0003 TYPE=DST  XREF=137 41 
 SYM=ZC390PVT LOC=00000000 LEN=00000030 ESD=0004 TYPE=DST  XREF=208 
 SYM=ZCVT_ABORT LOC=00000068 LEN=00000004 ESD=0003 TYPE=REL  XREF=166 
 SYM=ZCVT_ABORT_ACCEPT LOC=0000000B LEN=00000001 ESD=0000 TYPE=ABS  XREF=176 
 SYM=ZCVT_ABORT_ALTER LOC=00000001 LEN=00000001 ESD=0000 TYPE=ABS  XREF=167 
 SYM=ZCVT_ABORT_CALL LOC=00000002 LEN=00000001 ESD=0000 TYPE=ABS  XREF=168 
 SYM=ZCVT_ABORT_CICS LOC=0000000A LEN=00000001 ESD=0000 TYPE=ABS  XREF=175 
 SYM=ZCVT_ABORT_DISPLAY LOC=00000003 LEN=00000001 ESD=0000 TYPE=ABS  XREF=169 
 SYM=ZCVT_ABORT_DIVQ LOC=00000009 LEN=00000001 ESD=0000 TYPE=ABS  XREF=174 
 SYM=ZCVT_ABORT_INT128 LOC=00000008 LEN=00000001 ESD=0000 TYPE=ABS  XREF=173 
 SYM=ZCVT_ABORT_MAXERR LOC=0000000B LEN=00000001 ESD=0000 TYPE=ABS  XREF=177 
 SYM=ZCVT_ABORT_OPEN LOC=00000004 LEN=00000001 ESD=0000 TYPE=ABS  XREF=170 
 SYM=ZCVT_ABORT_STACK LOC=00000006 LEN=00000001 ESD=0000 TYPE=ABS  XREF=171 
 SYM=ZCVT_ABORT_VERSION LOC=00000007 LEN=00000001 ESD=0000 TYPE=ABS  XREF=172 
 SYM=ZCVT_ACCEPT LOC=0000006C LEN=00000004 ESD=0003 TYPE=REL  XREF=178 
 SYM=ZCVT_ACCEPT_CONSOLE LOC=00000002 LEN=00000001 ESD=0000 TYPE=ABS  XREF=180 
 SYM=ZCVT_ACCEPT_DATE LOC=00000004 LEN=00000001 ESD=0000 TYPE=ABS  XREF=182 
 SYM=ZCVT_ACCEPT_DDNAME LOC=00000003 LEN=00000001 ESD=0000 TYPE=ABS  XREF=181 
 SYM=ZCVT_ACCEPT_DEFAULT LOC=00000001 LEN=00000001 ESD=0000 TYPE=ABS  XREF=179 
 SYM=ZCVT_ACCEPT_DOW LOC=00000006 LEN=00000001 ESD=0000 TYPE=ABS  XREF=184 
 SYM=ZCVT_ACCEPT_TIME LOC=00000005 LEN=00000001 ESD=0000 TYPE=ABS  XREF=183 
 SYM=ZCVT_CALL LOC=00000014 LEN=00000004 ESD=0003 TYPE=REL  XREF=142 306 320 
 SYM=ZCVT_CMP64R32 LOC=00000018 LEN=00000004 ESD=0003 TYPE=REL  XREF=143 
 SYM=ZCVT_CONVERTING LOC=00000008 LEN=00000001 ESD=0000 TYPE=ABS  XREF=189 
 SYM=ZCVT_CVTLBTQ LOC=0000001C LEN=00000004 ESD=0003 TYPE=REL  XREF=144 
 SYM=ZCVT_CVTLDTP LOC=00000020 LEN=00000004 ESD=0003 TYPE=REL  XREF=145 
 SYM=ZCVT_CVTQTLB LOC=00000024 LEN=00000004 ESD=0003 TYPE=REL  XREF=146 
 SYM=ZCVT_DISPLAY LOC=00000070 LEN=00000004 ESD=0003 TYPE=REL  XREF=185 268 285 336 
  351 
 SYM=ZCVT_DIV64R32 LOC=00000028 LEN=00000004 ESD=0003 TYPE=REL  XREF=147 
 SYM=ZCVT_DIVQ128 LOC=0000002C LEN=00000004 ESD=0003 TYPE=REL  XREF=148 
 SYM=ZCVT_END LOC=000001F8 LEN=00000001 ESD=0003 TYPE=REL  XREF=207 44 56 139 
 SYM=ZCVT_GOBACK LOC=00000030 LEN=00000004 ESD=0003 TYPE=REL  XREF=149 362 371 
 SYM=ZCVT_HIGH_VALUES LOC=00000090 LEN=00000010 ESD=0003 TYPE=REL  XREF=196 
 SYM=ZCVT_ID  LOC=00000000 LEN=00000004 ESD=0003 TYPE=REL  XREF=138 42 44 56 139 
 SYM=ZCVT_INSPECT LOC=00000074 LEN=00000004 ESD=0003 TYPE=REL  XREF=186 
 SYM=ZCVT_LEN LOC=00000004 LEN=00000004 ESD=0003 TYPE=REL  XREF=139 44 
 SYM=ZCVT_MPYQ128 LOC=00000034 LEN=00000004 ESD=0003 TYPE=REL  XREF=150 
 SYM=ZCVT_NDDX LOC=000000E8 LEN=00000010 ESD=0003 TYPE=REL  XREF=202 
 SYM=ZCVT_OSE64R32 LOC=00000038 LEN=00000004 ESD=0003 TYPE=REL  XREF=151 
 SYM=ZCVT_PERFORM LOC=0000003C LEN=00000004 ESD=0003 TYPE=REL  XREF=152 
 SYM=ZCVT_PMCHECK LOC=00000040 LEN=00000004 ESD=0003 TYPE=REL  XREF=153 364 
 SYM=ZCVT_PVTMAXDL LOC=00000078 LEN=00000002 ESD=0003 TYPE=REL  XREF=193 
 SYM=ZCVT_PWORK LOC=000000A0 LEN=00000008 ESD=0003 TYPE=REL  XREF=197 
 SYM=ZCVT_PWORK1 LOC=000000A8 LEN=00000010 ESD=0003 TYPE=REL  XREF=198 
 SYM=ZCVT_PWORK2 LOC=000000B8 LEN=00000010 ESD=0003 TYPE=REL  XREF=199 
 SYM=ZCVT_PWORK3 LOC=000000C8 LEN=00000010 ESD=0003 TYPE=REL  XREF=200 
 SYM=ZCVT_PWORK4 LOC=000000D8 LEN=00000010 ESD=0003 TYPE=REL  XREF=201 
 SYM=ZCVT_REPLACING LOC=00000004 LEN=00000001 ESD=0000 TYPE=ABS  XREF=188 
 SYM=ZCVT_ROUNDF LOC=00000044 LEN=00000004 ESD=0003 TYPE=REL  XREF=154 
 SYM=ZCVT_STACKEND LOC=00000050 LEN=00000004 ESD=0003 TYPE=REL  XREF=157 
 SYM=ZCVT_STACKORG LOC=00000048 LEN=00000004 ESD=0003 TYPE=REL  XREF=155 
 SYM=ZCVT_STACKPTR LOC=0000004C LEN=00000004 ESD=0003 TYPE=REL  XREF=156 
 SYM=ZCVT_STOPRUN LOC=00000054 LEN=00000004 ESD=0003 TYPE=REL  XREF=158 
 SYM=ZCVT_TALLYING LOC=00000000 LEN=00000001 ESD=0000 TYPE=ABS  XREF=187 
 SYM=ZCVT_TALPHAX LOC=00000058 LEN=00000004 ESD=0003 TYPE=REL  XREF=159 
 SYM=ZCVT_TNUMP LOC=0000005C LEN=00000004 ESD=0003 TYPE=REL  XREF=160 
 SYM=ZCVT_TNUMX LOC=00000060 LEN=00000004 ESD=0003 TYPE=REL  XREF=161 
 SYM=ZCVT_TNUMZ LOC=00000064 LEN=00000004 ESD=0003 TYPE=REL  XREF=162 
 SYM=ZCVT_VER LOC=00000008 LEN=00000008 ESD=0003 TYPE=REL  XREF=140 
 SYM=ZCVT_WORKAREA LOC=000000F8 LEN=00000100 ESD=0003 TYPE=REL  XREF=203 255 272 
  325 340 
 SYM=ZCVT_ZC390NUC LOC=00000010 LEN=00000004 ESD=0003 TYPE=REL  XREF=141 46 
 SYM=ZCVT_ZERO LOC=00000080 LEN=00000010 ESD=0003 TYPE=REL  XREF=195 
 SYM=ZC_CALL_LIST_3 LOC=000003A7 LEN=00000008 ESD=0001 TYPE=REL  XREF=487 300 302 
  303 304 
 SYM=ZC_CALL_LIST_5 LOC=000003C3 LEN=00000008 ESD=0001 TYPE=REL  XREF=491 314 316 
  317 318 
 SYM=ZC_CALL_VALUE_4 LOC=000003AF LEN=00000014 ESD=0001 TYPE=REL  XREF=489 298 299 
 SYM=ZC_CALL_VALUE_6 LOC=000003CB LEN=00000014 ESD=0001 TYPE=REL  XREF=493 312 313 
 SYM=ZC_E     LOC=00000008 LEN=00000001 ESD=0000 TYPE=ABS  XREF=93 
 SYM=ZC_EQ    LOC=00000008 LEN=00000001 ESD=0000 TYPE=ABS  XREF=105 
 SYM=ZC_F0    LOC=00000000 LEN=00000001 ESD=0000 TYPE=ABS  XREF=75 
 SYM=ZC_F10   LOC=0000000A LEN=00000001 ESD=0000 TYPE=ABS  XREF=85 
 SYM=ZC_F1    LOC=00000001 LEN=00000001 ESD=0000 TYPE=ABS  XREF=76 
 SYM=ZC_F11   LOC=0000000B LEN=00000001 ESD=0000 TYPE=ABS  XREF=86 
 SYM=ZC_F12   LOC=0000000C LEN=00000001 ESD=0000 TYPE=ABS  XREF=87 
 SYM=ZC_F13   LOC=0000000D LEN=00000001 ESD=0000 TYPE=ABS  XREF=88 
 SYM=ZC_F14   LOC=0000000E LEN=00000001 ESD=0000 TYPE=ABS  XREF=89 
 SYM=ZC_F15   LOC=0000000F LEN=00000001 ESD=0000 TYPE=ABS  XREF=90 
 SYM=ZC_F2    LOC=00000002 LEN=00000001 ESD=0000 TYPE=ABS  XREF=77 
 SYM=ZC_F3    LOC=00000003 LEN=00000001 ESD=0000 TYPE=ABS  XREF=78 
 SYM=ZC_F4    LOC=00000004 LEN=00000001 ESD=0000 TYPE=ABS  XREF=79 
 SYM=ZC_F5    LOC=00000005 LEN=00000001 ESD=0000 TYPE=ABS  XREF=80 
 SYM=ZC_F6    LOC=00000006 LEN=00000001 ESD=0000 TYPE=ABS  XREF=81 
 SYM=ZC_F7    LOC=00000007 LEN=00000001 ESD=0000 TYPE=ABS  XREF=82 
 SYM=ZC_F8    LOC=00000008 LEN=00000001 ESD=0000 TYPE=ABS  XREF=83 
 SYM=ZC_F9    LOC=00000009 LEN=00000001 ESD=0000 TYPE=ABS  XREF=84 
 SYM=ZC_GE    LOC=0000000B LEN=00000001 ESD=0000 TYPE=ABS  XREF=108 
 SYM=ZC_GT    LOC=00000002 LEN=00000001 ESD=0000 TYPE=ABS  XREF=106 
 SYM=ZC_H     LOC=00000002 LEN=00000001 ESD=0000 TYPE=ABS  XREF=91 
 SYM=ZC_L     LOC=00000004 LEN=00000001 ESD=0000 TYPE=ABS  XREF=92 
 SYM=ZC_LE    LOC=0000000D LEN=00000001 ESD=0000 TYPE=ABS  XREF=109 
 SYM=ZC_LK_END LOC=00000000 LEN=00000001 ESD=0007 TYPE=REL  XREF=512 511 
 SYM=ZC_LK_END_DSECT LOC=00000000 LEN=00000008 ESD=0007 TYPE=DST  XREF=510 
 SYM=ZC_LK_LOC_10 LOC=00000000 LEN=00000001 ESD=0000 TYPE=ABS  XREF=511 
 SYM=ZC_LK_LOC_8 LOC=00000000 LEN=00000001 ESD=0000 TYPE=ABS  XREF=505 
 SYM=ZC_LK_LOC_9 LOC=00000000 LEN=00000001 ESD=0000 TYPE=ABS  XREF=508 
 SYM=ZC_LOAD  LOC=00000038 LEN=00000002 ESD=0001 TYPE=REL  XREF=27 12 
 SYM=ZC_LOAD_OK LOC=00000068 LEN=00000002 ESD=0001 TYPE=REL  XREF=39 32 
 SYM=ZC_LT    LOC=00000004 LEN=00000001 ESD=0000 TYPE=ABS  XREF=107 
 SYM=ZC_M     LOC=00000004 LEN=00000001 ESD=0000 TYPE=ABS  XREF=99 
 SYM=ZC_NE    LOC=00000007 LEN=00000001 ESD=0000 TYPE=ABS  XREF=96 
 SYM=ZC_NH    LOC=0000000D LEN=00000001 ESD=0000 TYPE=ABS  XREF=94 
 SYM=ZC_NL    LOC=0000000B LEN=00000001 ESD=0000 TYPE=ABS  XREF=95 
 SYM=ZC_NM    LOC=0000000B LEN=00000001 ESD=0000 TYPE=ABS  XREF=102 
 SYM=ZC_NO    LOC=0000000E LEN=00000001 ESD=0000 TYPE=ABS  XREF=104 
 SYM=ZC_NP    LOC=0000000D LEN=00000001 ESD=0000 TYPE=ABS  XREF=101 
 SYM=ZC_NZ    LOC=00000007 LEN=00000001 ESD=0000 TYPE=ABS  XREF=103 
 SYM=ZC_O     LOC=00000001 LEN=00000001 ESD=0000 TYPE=ABS  XREF=97 
 SYM=ZC_P     LOC=00000002 LEN=00000001 ESD=0000 TYPE=ABS  XREF=98 
 SYM=ZC_PARM1_PTR LOC=0000039B LEN=00000004 ESD=0001 TYPE=REL  XREF=481 242 260 
 SYM=ZC_PARM2_PTR LOC=0000039F LEN=00000004 ESD=0001 TYPE=REL  XREF=483 244 277 
 SYM=ZC_R0    LOC=00000000 LEN=00000001 ESD=0000 TYPE=ABS  XREF=59 40 131 132 133 
  241 242 243 244 256 259 262 265 273 276 279 282 299 300 301 302 305 313 314 315 
  316 319 326 329 330 333 341 344 345 348 
 SYM=ZC_R10   LOC=0000000A LEN=00000001 ESD=0000 TYPE=ABS  XREF=69 
 SYM=ZC_R1    LOC=00000001 LEN=00000001 ESD=0000 TYPE=ABS  XREF=60 125 126 127 128 
  257 263 267 274 280 284 289 290 293 294 304 318 327 331 335 342 346 350 361 370 
 SYM=ZC_R11   LOC=0000000B LEN=00000001 ESD=0000 TYPE=ABS  XREF=70 
 SYM=ZC_R12   LOC=0000000C LEN=00000001 ESD=0000 TYPE=ABS  XREF=71 
 SYM=ZC_R13   LOC=0000000D LEN=00000001 ESD=0000 TYPE=ABS  XREF=72 124 126 127 128 
  129 130 132 
 SYM=ZC_R14   LOC=0000000E LEN=00000001 ESD=0000 TYPE=ABS  XREF=73 47 269 286 307 
  321 337 352 365 372 
 SYM=ZC_R15   LOC=0000000F LEN=00000001 ESD=0000 TYPE=ABS  XREF=74 9 31 37 46 47 
  54 134 268 269 285 286 306 307 308 320 321 322 336 337 351 352 362 363 364 365 
  371 372 
 SYM=ZC_R2    LOC=00000002 LEN=00000001 ESD=0000 TYPE=ABS  XREF=61 124 241 243 258 
  259 264 265 275 276 281 282 328 329 332 333 343 344 347 348 
 SYM=ZC_R3    LOC=00000003 LEN=00000001 ESD=0000 TYPE=ABS  XREF=62 255 259 265 266 
  267 272 276 282 283 284 325 329 333 334 335 340 344 348 349 350 
 SYM=ZC_R4    LOC=00000004 LEN=00000001 ESD=0000 TYPE=ABS  XREF=63 277 278 367 
 SYM=ZC_R5    LOC=00000005 LEN=00000001 ESD=0000 TYPE=ABS  XREF=64 260 261 368 
 SYM=ZC_R6    LOC=00000006 LEN=00000001 ESD=0000 TYPE=ABS  XREF=65 
 SYM=ZC_R7    LOC=00000007 LEN=00000001 ESD=0000 TYPE=ABS  XREF=66 
 SYM=ZC_R8    LOC=00000008 LEN=00000001 ESD=0000 TYPE=ABS  XREF=67 12 13 
 SYM=ZC_R9    LOC=00000009 LEN=00000001 ESD=0000 TYPE=ABS  XREF=68 40 41 
 SYM=ZC_SAVEAREA LOC=000002D8 LEN=00000048 ESD=0001 TYPE=REL  XREF=437 
 SYM=ZC_VER_ERR LOC=00000088 LEN=00000002 ESD=0001 TYPE=REL  XREF=49 43 45 
 SYM=ZC_VER_OK LOC=000000C8 LEN=00000002 ESD=0001 TYPE=REL  XREF=123 48 
 SYM=ZC_WS    LOC=000002D8 LEN=00000008 ESD=0001 TYPE=REL  XREF=136 125 129 436 438 
  440 442 444 446 448 450 452 454 456 458 460 462 464 466 468 470 472 474 476 478 
  480 482 484 486 488 490 492 514 
 SYM=ZC_WSLOC LOC=000002D8 LEN=00000108 ESD=0001 TYPE=CST  XREF=135 219 435 503 513 
 SYM=ZC_WS_DIFF LOC=00000000 LEN=00000001 ESD=0000 TYPE=ABS  XREF=514 
 SYM=ZC_WS_END LOC=000003E0 LEN=00000008 ESD=0001 TYPE=REL  XREF=515 131 
 SYM=ZC_WS_ID LOC=00000320 LEN=00000008 ESD=0001 TYPE=REL  XREF=439 
 SYM=ZC_WS_ID1 LOC=00000338 LEN=00000007 ESD=0001 TYPE=REL  XREF=449 
 SYM=ZC_WS_LEN LOC=0000032C LEN=00000004 ESD=0001 TYPE=REL  XREF=443 133 
 SYM=ZC_WS_LOC_1 LOC=00000000 LEN=00000001 ESD=0000 TYPE=ABS  XREF=436 
 SYM=ZC_WS_LOC_11 LOC=00000067 LEN=00000001 ESD=0000 TYPE=ABS  XREF=450 
 SYM=ZC_WS_LOC_12 LOC=00000067 LEN=00000001 ESD=0000 TYPE=ABS  XREF=452 
 SYM=ZC_WS_LOC_13 LOC=0000006D LEN=00000001 ESD=0000 TYPE=ABS  XREF=454 
 SYM=ZC_WS_LOC_14 LOC=0000006E LEN=00000001 ESD=0000 TYPE=ABS  XREF=456 
 SYM=ZC_WS_LOC_15 LOC=0000008C LEN=00000001 ESD=0000 TYPE=ABS  XREF=458 
 SYM=ZC_WS_LOC_16 LOC=0000008D LEN=00000001 ESD=0000 TYPE=ABS  XREF=460 
 SYM=ZC_WS_LOC_17 LOC=00000091 LEN=00000001 ESD=0000 TYPE=ABS  XREF=462 
 SYM=ZC_WS_LOC_18 LOC=00000092 LEN=00000001 ESD=0000 TYPE=ABS  XREF=464 
 SYM=ZC_WS_LOC_19 LOC=00000096 LEN=00000001 ESD=0000 TYPE=ABS  XREF=466 
 SYM=ZC_WS_LOC_20 LOC=00000097 LEN=00000001 ESD=0000 TYPE=ABS  XREF=468 
 SYM=ZC_WS_LOC_2 LOC=00000048 LEN=00000001 ESD=0000 TYPE=ABS  XREF=438 
 SYM=ZC_WS_LOC_21 LOC=0000009B LEN=00000001 ESD=0000 TYPE=ABS  XREF=470 
 SYM=ZC_WS_LOC_22 LOC=0000009C LEN=00000001 ESD=0000 TYPE=ABS  XREF=472 
 SYM=ZC_WS_LOC_23 LOC=000000BF LEN=00000001 ESD=0000 TYPE=ABS  XREF=474 
 SYM=ZC_WS_LOC_24 LOC=000000C0 LEN=00000001 ESD=0000 TYPE=ABS  XREF=476 
 SYM=ZC_WS_LOC_25 LOC=000000C1 LEN=00000001 ESD=0000 TYPE=ABS  XREF=478 
 SYM=ZC_WS_LOC_26 LOC=000000C3 LEN=00000001 ESD=0000 TYPE=ABS  XREF=480 
 SYM=ZC_WS_LOC_27 LOC=000000C7 LEN=00000001 ESD=0000 TYPE=ABS  XREF=482 
 SYM=ZC_WS_LOC_28 LOC=000000CB LEN=00000001 ESD=0000 TYPE=ABS  XREF=484 
 SYM=ZC_WS_LOC_29 LOC=000000CF LEN=00000001 ESD=0000 TYPE=ABS  XREF=486 
 SYM=ZC_WS_LOC_30 LOC=000000D7 LEN=00000001 ESD=0000 TYPE=ABS  XREF=488 
 SYM=ZC_WS_LOC_3 LOC=00000050 LEN=00000001 ESD=0000 TYPE=ABS  XREF=440 
 SYM=ZC_WS_LOC_31 LOC=000000EB LEN=00000001 ESD=0000 TYPE=ABS  XREF=490 
 SYM=ZC_WS_LOC_32 LOC=000000F3 LEN=00000001 ESD=0000 TYPE=ABS  XREF=492 
 SYM=ZC_WS_LOC_4 LOC=00000054 LEN=00000001 ESD=0000 TYPE=ABS  XREF=442 
 SYM=ZC_WS_LOC_5 LOC=00000058 LEN=00000001 ESD=0000 TYPE=ABS  XREF=444 
 SYM=ZC_WS_LOC_6 LOC=00000058 LEN=00000001 ESD=0000 TYPE=ABS  XREF=446 
 SYM=ZC_WS_LOC_7 LOC=00000060 LEN=00000001 ESD=0000 TYPE=ABS  XREF=448 
 SYM=ZC_WS_START LOC=00000328 LEN=00000004 ESD=0001 TYPE=REL  XREF=441 130 
 SYM=ZC_Z     LOC=00000008 LEN=00000001 ESD=0000 TYPE=ABS  XREF=100 
 SYM=ZC_ZC_LK_END_PTR LOC=000003A3 LEN=00000004 ESD=0001 TYPE=REL  XREF=485 

Literal Table Listing

 LIT=A(ZCVT_END-ZCVT_ID) LOC=000000C4 LEN=00000004 ESD=0001 POOL=0001 XREF=44 
 LIT=C'ZCVT'  LOC=000000C0 LEN=00000004 ESD=0001 POOL=0001 XREF=42 
 LIT=CL16'TESTCAL2 PARM1 =' LOC=00000290 LEN=00000010 ESD=0001 POOL=0002 XREF=256 
  326 
 LIT=CL16'TESTCAL2 PARM2 =' LOC=000002A0 LEN=00000010 ESD=0001 POOL=0002 XREF=273 
  341 
 LIT=CL20'TESTCAL2 UPDT1' LOC=000002B0 LEN=00000014 ESD=0001 POOL=0002 XREF=289 
 LIT=CL20'TESTCAL2 UPDT2' LOC=000002C4 LEN=00000014 ESD=0001 POOL=0002 XREF=293 
 LIT=CL8'ZC390LIB' LOC=000000B8 LEN=00000008 ESD=0001 POOL=0001 XREF=28 
 
AZ390I total mnote warnings = 0
AZ390I total mnote errors   = 0
AZ390I max   mnote level    = 0
AZ390I total mz390 errors   = 0
AZ390I total az390 errors   = 0
TESTCAL2  MZ390 ENDED   RC= 0 MEM(MB)= MB IO=16087
