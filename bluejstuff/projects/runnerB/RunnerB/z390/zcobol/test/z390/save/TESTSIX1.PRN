TESTSIX1  MZ390 START
AZ390I Copyright 2011 Automated Software Tools Corporation
AZ390I z390 is licensed under GNU General Public License
AZ390I program = zcobol\test\TESTSIX1
AZ390I options = W:\work\z390\z390.OPT=(time(60)) @zcobol\z390\ZC390CLG=(
  sysmac(+zcobol+zcobol\z390+mac+cics) syscpy(+zcobol+zcobol\z390+mac+cics) 
  BAL NOLISTCALL MAXGBL(1500000)) notiming stats
External Symbol Definitions
 ESD=0001 LOC=00000000 LEN=000007F0 TYPE=CST NAME=TESTSIX1
Assembler Listing
000000                                       (6/15)1+*    ZCOBOL PGM='zcobol\test\TESTSIX1' VER=V1.5.06 MM/DD/YY  
000000                                       (6/15)2+*    ZCOBOL OPTIONS=() 
000000                                        (1/4)3          COPY  TESTSIX1_ZC_LABELS.CPY
000000                                        (1/5)4 *        IDENTIFICATION DIVISION.
000000                                        (1/7)5 *        PROGRAM-ID.    TESTSIX1.
000000                                      (11/34)6+         PRINT NOLIST,NOGEN,NOLISTUSE    SET LIST OPTION FOR INTERNAL CODE
000000                                      (11/59)8+TESTSIX1 CSECT ,                CSECT WITH PROCEDURE CODE AND WS
000000                                      (11/60)9+         USING *,ZC_R15
LISTUSE TESTSIX1 ESD=0001 LOC=00000000 LEN=01000 REG=F OFF=00000 LAB=
000000 90ECD00C                            (16/51)10+         STM   14,12,12+4*(14-14)(13)
000004                                     (11/93)11+         CNOP  4,8             FORCE ZC390PVT TO DOUBLEWORD BOUNDARY
000004 A785001A                000038      (11/94)12+         BRAS  ZC_R8,ZC_LOAD
000008                                     (11/95)13+         USING *,ZC_R8            BASE FOR LOAD AND CICS V5 USE
LISTUSE TESTSIX1 ESD=0001 LOC=00000000 LEN=01000 REG=F OFF=00000 LAB=
LISTUSE TESTSIX1 ESD=0001 LOC=00000008 LEN=01000 REG=8 OFF=00000 LAB=
000008                                     (11/96)14+*
000008                                     (11/97)15+*  THESE FIELDS MUST BE KEPT IN SYNC WITH zcobol\ZC390PVT.CPY
000008                                     (11/98)16+*
000008 E3C5E2E3E2C9E7F1                    (11/99)17+         DC    CL8'TESTSIX1'    PVTPGM   ZCOBOL PGM NAME
000010 F0F161F0F261F0F5                   (11/100)18+         DC    CL8'01/02/05'   PVTDATE  ZCOBOL COMPILE DATE
000018 F2F24BF3F3404040                   (11/101)19+         DC    CL8'22.33'   PVTTIME  ZCOBOL COMPILE TIME
000020 E5F14BF54BF0F640                   (11/102)20+         DC    CL8'V1.5.06'    PVTVER   ZCOBOL COMPILER VERSION
000028 F0                                 (11/103)21+         DC    C'0'     PVTCICS  ZCOBOL EXEC CICS PGM
000029 F1                                 (11/104)22+         DC    C'1'   PVTEXTND ZCOBOL EXTENDED PRECISION
00002A F0                                 (11/105)23+         DC    C'0'    PVTTRUNC ZCOBOL TRUNCATE TO PICTURE
00002B F1                                 (11/106)24+         DC    C'1'      PVTR64   ZCOBOL USE 64 BIT REGISTERS
00002C 0050                               (11/107)25+         DC    H'80' MAX DISPLAY LINE LEN  RPI 1118
00002E                                    (11/108)26+         DS    XL10            RESERVED
000038                                    (11/109)27+ZC_LOAD  DS    0H
000038 410080B0                0000B8      (17/74)28+         LA    0,=CL8'ZC390LIB'
00003C 1BFF                                (17/95)29+         SR    15,15 USE DEFAULT SYS390 SEARCH
00003E 0A08                               (17/125)30+         SVC   8 LOAD R0=A(NAME) R15=DDNAME/DSNAME ADDR OR 0
000040 12FF                               (11/111)31+         LTR   ZC_R15,ZC_R15
000042 A7840013                000068     (11/112)32+         JZ    ZC_LOAD_OK
000046 A715000D                000060      (18/49)33+         BRAS  1,*+(WTO#0015_EOT-*+1)/2*2
00004A 00160000E9C3F3F9                    (18/50)34+         DC    AL2(WTO#0015_EOT-*,0),C'ZC390LIB NOT FOUND'
000060                  00000060           (18/51)35+WTO#0015_EOT     EQU *
000060 0A23                                (18/52)36+         SVC   35
000062 41F00010                           (11/114)37+         LA  ZC_R15,16
000066 0A03                               (11/115)38+         SVC 3      EXIT TO CALLER WITH RC=16
000068                                    (11/116)39+ZC_LOAD_OK DS  0H
000068 1890                               (11/117)40+         LR    ZC_R9,ZC_R0
00006A                                    (11/118)41+         USING ZC390CVT,ZC_R9    R9=CVT
LISTUSE TESTSIX1 ESD=0001 LOC=00000000 LEN=01000 REG=F OFF=00000 LAB=
LISTUSE TESTSIX1 ESD=0001 LOC=00000008 LEN=01000 REG=8 OFF=00000 LAB=
LISTUSE ZC390CVT ESD=0003 LOC=00000000 LEN=01000 REG=9 OFF=00000 LAB=
00006A D503900080B8     000000 0000C0     (11/119)42+         CLC   ZCVT_ID,=C'ZCVT'              CHECK ZCVT ID AND LENGTH
000070 A774000C                000088     (11/120)43+         JNE   ZC_VER_ERR                    IN ZC390LIB.390 MATCH
000074 D503900480BC     000004 0000C4     (11/121)44+         CLC   ZCVT_LEN,=A(ZCVT_END-ZCVT_ID) ZCOBOL PGM COMPILED ID/LEN
00007A 47708080                000088     (11/122)45+         BNE   ZC_VER_ERR
00007E 58F09010                000010     (11/123)46+         L     ZC_R15,ZCVT_ZC390NUC
000082 0DEF                               (11/124)47+         BASR  ZC_R14,ZC_R15 CALL ZC390NUC TO VERIFY VER, OPTIONS
000084 A7F40022                0000C8     (11/125)48+         J     ZC_VER_OK
000088                                    (11/126)49+ZC_VER_ERR DS 0H
000088 A7150011                0000AA      (18/49)50+         BRAS  1,*+(WTO#0016_EOT-*+1)/2*2
00008C 001E0000E9C3F3F9                    (18/50)51+         DC    AL2(WTO#0016_EOT-*,0),C'ZC390LIB ZCVT VERIFY ERROR'
0000AA                  000000AA           (18/51)52+WTO#0016_EOT     EQU *
0000AA 0A23                                (18/52)53+         SVC   35
0000AC 41F00010                           (11/128)54+         LA  ZC_R15,16
0000B0 0A03                               (11/129)55+         SVC 3      EXIT TO CALLER WITH RC=16
0000B2                                    (11/130)56+         LTORG 
0000B8 E9C3F3F9F0D3C9C2 =CL8'ZC390LIB'
0000C0 E9C3E5E3         =C'ZCVT'
0000C4 000001F8         =A(ZCVT_END-ZCVT_ID)
0000C8                  00000080          (15/10)111=PFPO_TEST    EQU  X'80' PFPO TEST IF VALID OPCODE (NOT SUPPORTED YET)
0000C8                  00000001          (15/11)112=PFPO_RADIX   EQU  1 PFPO OPCODE - CONVERT FROM ONE RADIX TO ANOTHER
0000C8                  00000000          (15/12)113=PFPO_RND     EQU  0 PFOP ROUNDING OPTION (ONLY DEFAULT ALLOWED)
0000C8                  00000000          (15/13)114=PFPO_TYPE_EH EQU  0 EH HFP SHORT     32 BITS 7  DIGITS
0000C8                  00000001          (15/14)115=PFPO_TYPE_DH EQU  1 ED HFP LONG      64 BITS 15 DIGITS
0000C8                  00000002          (15/15)116=PFPO_TYPE_LH EQU  2 EL HFP EXTENDED 128 BITS 30 DIGITS
0000C8                  00000005          (15/16)117=PFPO_TYPE_EB EQU  5 EB BFP SHORT     32 BITS 7  DIGITS
0000C8                  00000006          (15/17)118=PFPO_TYPE_DB EQU  6 DB BFP LONG      64 BITS 16 DIGITS
0000C8                  00000007          (15/18)119=PFPO_TYPE_LB EQU  7 LB BFP EXTENDED 128 BITS 34 DIGITS
0000C8                  00000008          (15/19)120=PFPO_TYPE_ED EQU  8 ED DFP SHORT     32 BITS 7  DIGITS
0000C8                  00000009          (15/20)121=PFPO_TYPE_DD EQU  9 DD DFP LONG      64 BITS 16 DIGITS
0000C8                  0000000A          (15/21)122=PFPO_TYPE_LD EQU 10 LD DFP EXTENDED 128 BITS 34 DIGITS
0000C8                                   (11/133)123+ZC_VER_OK DS   0H
0000C8 582D0018                           (11/63)124+         L     ZC_R2,24(ZC_R13) SET ZC_R2=PARMLIST ADDRESS AFTER LOAD
0000CC C01000000316            0006F8     (11/64)125+         LARL  ZC_R1,ZC_WS     ZC_R2=A(WORKING STORAGE WITH SAVEAREA)
0000D2 501D0008                           (11/65)126+         ST    ZC_R1,8(ZC_R13) FORWARD  SAVE CHAIN
0000D6 50D10004                           (11/66)127+         ST    ZC_R13,4(ZC_R1) BACKWARD SAVE CHAIN
0000DA 18D1                               (11/67)128+         LR    ZC_R13,ZC_R1    LINK SAVE AREA IN ZC390CVT
0000DC                                    (11/68)129+         USING ZC_WS,ZC_R13    BASE FOR ZCOBOL WS (SEE GEN_SYM_RX.MAC)
LISTUSE TESTSIX1 ESD=0001 LOC=00000000 LEN=01000 REG=F OFF=00000 LAB=
LISTUSE TESTSIX1 ESD=0001 LOC=00000008 LEN=01000 REG=8 OFF=00000 LAB=
LISTUSE ZC390CVT ESD=0003 LOC=00000000 LEN=01000 REG=9 OFF=00000 LAB=
LISTUSE TESTSIX1 ESD=0001 LOC=000006F8 LEN=01000 REG=D OFF=00000 LAB=
0000DC 50D0D050                000748     (11/69)130+         ST    ZC_R13,ZC_WS_START  SAVE ADDR WS IN WS PREFIX
0000E0 C00000000388            0007F0     (11/70)131+         LARL  ZC_R0,ZC_WS_END
0000E6 1B0D                               (11/71)132+         SR    ZC_R0,ZC_R13
0000E8 5000D054                00074C     (11/72)133+         ST    ZC_R0,ZC_WS_LEN     SAVE LENGTH OF WS IN WS PREFIX
0000EC                                    (11/73)134+         DROP  ZC_R15              RPI 1042
LISTUSE TESTSIX1 ESD=0001 LOC=000006F8 LEN=01000 REG=D OFF=00000 LAB=
LISTUSE TESTSIX1 ESD=0001 LOC=00000008 LEN=01000 REG=8 OFF=00000 LAB=
LISTUSE ZC390CVT ESD=0003 LOC=00000000 LEN=01000 REG=9 OFF=00000 LAB=
0006F6                                    (11/74)135+ZC_WSLOC LOCTR 
0006F8                                    (11/75)136+ZC_WS    DS    0D           START WORKING STORAGE
000000                                    (11/81)137+ZC390CVT DSECT 
000000                                    (12/31)138=ZCVT_ID            DC    C'ZCVT'             ZCVT ID  VERIFIED BY ZCOB
000004                                    (12/32)139=ZCVT_LEN           DC    A(ZCVT_END-ZCVT_ID) ZCVT LEN VERIFIED BY ZCOB
000008                                    (12/33)140=ZCVT_VER           DC    CL8'V1.5.06'    ZCVT VER VERIFIED BY ZC390NUC
000010                                    (12/34)141=ZCVT_ZC390NUC  DC V(ZC390NUC)      MODULE  SYSTEM ROUTINE MODULE INIT
000014                                    (12/35)142=ZCVT_CALL           DC V(CALL)       ENTRY R0=A(PGM),R1=A(PARMLIST)
000018                                    (12/36)143=ZCVT_CMP64R32       DC V(CMP64R32)   ENTRY COMPARE R0-1=FLD1 R2-3=FLD2
00001C                                    (12/37)144=ZCVT_CVTLBTQ        DC V(CVTLBTQ)    ENTRY CVT LB IN F4-6 TO Q IN R0-1
000020                                    (12/38)145=ZCVT_CVTLDTP        DC V(CVTLDTP)    ENTRY CVT LD IN F0-2 TO PL31 R0-1
000024                                    (12/39)146=ZCVT_CVTQTLB        DC V(CVTQTLB)    ENTRY CVT Q IN R0-1 TO LB IN F4-6
000028                                    (12/40)147=ZCVT_DIV64R32       DC V(DIV64R32)   ENTRY DIVIDE R0-1=N64, R2-3=MAX64
00002C                                    (12/41)148=ZCVT_DIVQ128        DC V(DIVQ128)    ENTRY DIVIDE Q128 R0-R1 BY R2-R3
000030                                    (12/42)149=ZCVT_GOBACK         DC V(GOBACK)     ENTRY R1=RC
000034                                    (12/43)150=ZCVT_MPYQ128        DC V(MPYQ128)    ENTRY MULTIPLY Q128 R0-R1 BY R2-R3
000038                                    (12/44)151=ZCVT_OSE64R32       DC V(OSE64R32)   ENTRY ON SIZE ERR R0-1=N, R2-3=MAX
00003C                                    (12/45)152=ZCVT_PERFORM        DC V(PERFORM)    ENTRY R14=PGTAR,R0=PGEXT,R1=PMRET
000040                                    (12/46)153=ZCVT_PMCHECK        DC V(PMCHECK)    ENTRY R14=RETURN TO NEXT INSTR.
000044                                    (12/47)154=ZCVT_ROUNDF         DC V(ROUNDF)     ENTRY R0=REM,R1=QUO,R2=DIVISOR
000048                                    (12/48)155=ZCVT_STACKORG       DC V(STACKORG)   ENTRY PERFORM STACK ORIGIN
00004C                                    (12/49)156=ZCVT_STACKPTR       DC V(STACKPTR)   ENTRY CUR ENTRY A(PG_END+4,RET)
000050                                    (12/50)157=ZCVT_STACKEND       DC V(STACKEND)   ENTRY PERFORM STACK END
000054                                    (12/51)158=ZCVT_STOPRUN        DC V(STOPRUN)    ENTRY R1=RC
000058                                    (12/52)159=ZCVT_TALPHAX        DC V(TALPHAX)    ENTRY TEST ALPHABETIC X
00005C                                    (12/53)160=ZCVT_TNUMP          DC V(TNUMP)      ENTRY TEST NUMERIC P
000060                                    (12/54)161=ZCVT_TNUMX          DC V(TNUMX)      ENTRY TEST NUMERIC X
000064                                    (12/55)162=ZCVT_TNUMZ          DC V(TNUMZ)      ENTRY TEST NUMERIC Z
000068                                    (12/56)163=*
000068                                    (12/57)164=* ADDITIONAL SEPARATE MODULES LINKED WITH Z390NUC IN ZC390LIB.390
000068                                    (12/58)165=*
000068                                    (12/59)166=ZCVT_ABORT     DC V(ABORT)         MODULE  R1=ABORT ERROR MSG #
00006C                  00000001          (12/60)167=ZCVT_ABORT_ALTER   EQU    1 ABORT ALTER DUE TO BRC NOT FOUND AT TARGET
00006C                  00000002          (12/61)168=ZCVT_ABORT_CALL    EQU    2 ABORT DYNAMIC CALL - PGM NOT FOUND
00006C                  00000003          (12/62)169=ZCVT_ABORT_DISPLAY EQU    3 ABORT DISPLAY DUE TO BUFFER EXCEEDED
00006C                  00000004          (12/63)170=ZCVT_ABORT_OPEN    EQU    4 ABORT OPEN  INVALID DCB
00006C                  00000006          (12/64)171=ZCVT_ABORT_STACK   EQU    6 ABORT PEROFRM STACK OVERFLOW
00006C                  00000007          (12/65)172=ZCVT_ABORT_VERSION EQU    7 ABORT ZC390NUC INIT ZCOBOL VERSION ERROR
00006C                  00000008          (12/66)173=ZCVT_ABORT_INT128  EQU    8 ABORT INTEGER 128 CONVERSION OVERFLO
00006C                  00000009          (12/67)174=ZCVT_ABORT_DIVQ    EQU    9 ABORT DIVIDE Q IF DIVISOR 0 OR > 2**63
00006C                  0000000A          (12/68)175=ZCVT_ABORT_CICS    EQU   10 ABORT THIS PGM REQUIRES EXEC CICS TRANS MGR
00006C                  0000000B          (12/69)176=ZCVT_ABORT_ACCEPT  EQU   11 ABORT ACCEPT EOF
00006C                  0000000B          (12/70)177=ZCVT_ABORT_MAXERR  EQU   11 ABORT MAX ERROR CODE
00006C                                    (12/71)178=ZCVT_ACCEPT    DC V(ACCEPT)        MODULE  R1=A(TYPE,FLD_ADD,FLD_LEN)
000070                  00000001          (12/72)179=ZCVT_ACCEPT_DEFAULT EQU   1 INPUT DEFAULT DDNAME=SYSIN
000070                  00000002          (12/73)180=ZCVT_ACCEPT_CONSOLE EQU   2 INPUT VIA WTOR FROM CONSOLE
000070                  00000003          (12/74)181=ZCVT_ACCEPT_DDNAME  EQU   3 INPUT FROM DDNAME WITH DDNAME ADDR IN R3
000070                  00000004          (12/75)182=ZCVT_ACCEPT_DATE    EQU   4 RETURN DAY OF WEEK PIC 9(8) MMDDYYYY
000070                  00000005          (12/76)183=ZCVT_ACCEPT_TIME    EQU   5 RETURN DAY OF WEEK PIC 9(8) HHMMSSTH
000070                  00000006          (12/77)184=ZCVT_ACCEPT_DOW     EQU   6 RETURN DAY OF WEEK PIC 9 1-7
000070                                    (12/78)185=ZCVT_DISPLAY   DC V(DISPLAY)       MODULE  R1=A(ADDR,LEN,TYPE)
000074                                    (12/79)186=ZCVT_INSPECT   DC V(INSPECT)       MODULE  R0=TYPE,R1=PARMLIST
000078                  00000000          (12/80)187=ZCVT_TALLYING      EQU   0 INSPECT TALLYING
000078                  00000004          (12/81)188=ZCVT_REPLACING     EQU   4 INSPECT REPLACING
000078                  00000008          (12/82)189=ZCVT_CONVERTING    EQU   8 INSPECT CONVERTING
000078                                    (12/83)190=*
000078                                    (12/84)191=* SHARED DATA AREAS
000078                                    (12/85)192=*
000078                                    (12/86)193=ZCVT_PVTMAXDL  DS H          MAXIMUM DISPLAY LINE LENGTH  RPI 1118
000080                                    (12/87)194=               DS 0D
000080                                    (12/88)195=ZCVT_ZERO      DC XL16'00'   BINARY ZEROS
000090                                    (12/89)196=ZCVT_HIGH_VALUES DC 0XL16,16X'FF' BINARY FF'S     RPI 1181
0000A0                                    (12/90)197=ZCVT_PWORK     DS PL8        CVD/CVB WORK
0000A8                                    (12/91)198=ZCVT_PWORK1    DS PL16       DIV DIVIDEND, CVDG/CVBG WORK
0000B8                                    (12/92)199=ZCVT_PWORK2    DS PL16       DIV DIVISOR
0000C8                                    (12/93)200=ZCVT_PWORK3    DS PL16       DIV QUOTIENT
0000D8                                    (12/94)201=ZCVT_PWORK4    DS PL16       DIV REMAINDER
0000E8                                    (12/95)202=ZCVT_NDDX      DS XL16       DIV DIVIDEND HOLD AREA
0000F8                                    (12/96)203=ZCVT_WORKAREA  DS XL256      GEN_INSPECT PARMS, GEN_EDIT WORK, ETC.
0001F8                                    (12/97)204=*
0001F8                                    (12/98)205=* END OF ZC390CVT
0001F8                                    (12/99)206=*
0001F8                  000001F8         (12/100)207=ZCVT_END   EQU   *
000000                                    (11/83)208+ZC390PVT DSECT 
000000                                    (13/11)209=PVTPGM   DS    CL8  ZCOBOL PGM NAME
000008                                    (13/12)210=PVTDATE  DS    CL8  ZCOBOL COMPILE DATE
000010                                    (13/13)211=PVTTIME  DS    CL8  ZCOBOL COMPILE TIME
000018                                    (13/14)212=PVTVER   DS    CL8  ZCOBOL COMPILER VERSION
000020                                    (13/15)213=PVTCICS  DS    C    ZCOBOL EXEC CICS PGM
000021                                    (13/16)214=PVTEXTND DS    C    ZCOBOL EXTENDED PRECISION
000022                                    (13/17)215=PVTTRUNC DS    C    ZCOBOL TRUNCATE TO PICTURE
000023                                    (13/18)216=PVTR64   DS    C    ZCOBOL USE 64 BIT REGISTERS
000024                                    (13/19)217=PVTMAXDL DS    H    ZCOBOL MAX DISPLAY LINE LENGTH
000026                                    (13/20)218=         DS    XL10 RESERVED
0006F8                                    (11/85)219+ZC_WSLOC LOCTR              CONTINUE WS FOR FD AND DATA
0006F8                                      (1/9)220 *        AUTHOR.        DON HIGGINS.
0006F8                                     (1/11)221 *        DATE-WRITTEN.  01/08/09.
0006F8                                     (1/13)222 *      * TEST SUBSCRIPTS AND INDEXES (MORE TO COME)                    
0006F8                                     (1/15)223 *        ENVIRONMENT DIVISION.
0006F8                                     (1/17)224 *        DATA DIVISION.
0006F8                                    (28/23)225+         PRINT DATA
0006F8                                     (1/19)226 *        WORKING-STORAGE SECTION.
0006F8                                     (1/21)227 *        77  FLT-SRT FLOAT-SHORT OCCURS 2.
0006F8                                     (1/23)228 *        01  T0.
0006F8                                     (1/25)229 *            10  T1 OCCURS 2 TIMES.
0006F8                                     (1/27)230 *                15 T1-ID PIC X.
0006F8                                     (1/29)231 *                15 T2 OCCURS 3 TIMES.
0006F8                                     (1/31)232 *                   20 T2-ID PIC X.
0006F8                                     (1/33)233 *        77  S1 COMP PIC S9(9).
0006F8                                     (1/35)234 *        77  S2 COMP PIC S9(9).
0006F8                                     (1/37)235 *        77  NFS2 COMP   PIC S9(9)  OCCURS 2 TIMES.
0006F8                                     (1/39)236 *        77  NGS2 COMP   PIC S9(18) OCCURS 2 TIMES.
0006F8                                     (1/41)237 *        77  NHS2 COMP   PIC S9(4)  OCCURS 2 TIMES.
0006F8                                     (1/43)238 *        77  I    COMP   PIC S99    VALUE 1.
0006F8                                     (1/45)239 *        77  J    COMP   PIC S99    VALUE 2.
0006F8                                     (1/47)240 *        77  GOOD COMP-3 PIC S9(9) VALUE 0.
0006F8                                     (1/49)241 *        77  BAD  COMP-3 PIC S9(9) VALUE 0.
0006F8                                     (1/52)242 *        PROCEDURE DIVISION.
0006F8                                     (1/53)243 *ZC   PROCEDURE DIVISION
0006F8                                    (31/18)244+         PRINT LIST,GEN,LISTUSE TURN PRINT LISTING ON FOR USER CODE GEN
0000EC                                    (31/19)245+TESTSIX1 CSECT                SWITCH TO PROCEDURE CODE AHEAD OF WS
0000EC                                     (1/55)246 *        MAINLINE.
0000EC                                     (8/96)247+PG_MAINLINE DS 0H
0000EC                                     (1/57)248 *            DISPLAY 'TESTSIX1 STARTING'
0000EC                                     (1/58)249 *ZC     26         DISPLAY 'TESTSIX1 STARTING'
0000EC A715000D                000106     (18/49)250+         BRAS  1,*+(WTO#0129_EOT-*+1)/2*2
0000F0 00150000E3C5E2E3                   (18/50)251+         DC    AL2(WTO#0129_EOT-*,0),C'TESTSIX1 STARTING'
0000F8 E2C9E7F140E2E3C1
000100 D9E3C9D5C7
000105                  00000105          (18/51)252+WTO#0129_EOT     EQU *
000106 0A23                               (18/52)253+         SVC   35
000108                                     (1/60)254 *            MOVE '1ABC2DEF' TO T0
000108                                     (1/61)255 *ZC     27         MOVE  '1ABC2DEF',TO,T0
000108 C010000002D4            0006B0    (41/160)256+         LARL  ZC_R1,=CL8'1ABC2DEF'
00010E D207D0601000     000758           (41/299)257+          MVC   T0,0(ZC_R1)
000114                                     (1/63)258 *      1     IF T1-ID(1) = '1'   PERFORM GOOD ELSE PERFORM BAD.
000114                                     (1/64)259 *ZC     28      1  IF    T1_ID,'(',1,')',=,'1'
000114 95F1D060                000758    (44/438)260+         CLI   T1_ID,C'1'
000118 A774000D                000132     (45/15)261+         BRC   15-ZC_EQ,PG_IF_1_1
00011C                                     (1/66)262 *ZC     28      1  PERFORM GOOD
00011C C0E0000002A1            00065E     (48/44)263+         LARL  ZC_R14,PG_GOOD
000122 C000000002AE            00067E     (48/45)264+         LARL  ZC_R0,PG_GOOD_END+6
000128 58F0903C                00003C     (48/46)265+         L     ZC_R15,ZCVT_PERFORM
00012C 0D1F                               (48/47)266+         BASR  ZC_R1,ZC_R15
00012E                                     (1/68)267 *ZC     28      1  ELSE
00012E A7F4000B                000144     (50/15)268+         J     PG_IF_1_E
000132                                     (8/41)269+PG_IF_1_1    DS    0H  &TYPE
000132                                     (1/70)270 *ZC     28      1  PERFORM BAD
000132 C0E0000002A6            00067E     (48/44)271+         LARL  ZC_R14,PG_BAD
000138 C000000002B6            0006A4     (48/45)272+         LARL  ZC_R0,PG_BAD_END+6
00013E 58F0903C                00003C     (48/46)273+         L     ZC_R15,ZCVT_PERFORM
000142 0D1F                               (48/47)274+         BASR  ZC_R1,ZC_R15
000144                                     (8/41)275+PG_IF_1_E    DS    0H  &TYPE
000144                                     (1/73)276 *      2     IF T1-ID(2) = '2'   PERFORM GOOD ELSE PERFORM BAD.
000144                                     (1/74)277 *ZC     29      2  IF    T1_ID,'(',2,')',=,'2'
000144 C02900000004            000004     (43/32)278+         IILF  ZC_R2,(2-1)*4 (LIT-1)*LEN
00014A 4122D060                000758     (43/33)279+         LA    ZC_R2,T1_ID(ZC_R2)
00014E 95F22000                          (44/438)280+         CLI   0(ZC_R2),C'2'
000152 A774000D                00016C     (45/15)281+         BRC   15-ZC_EQ,PG_IF_2_1
000156                                     (1/76)282 *ZC     29      2  PERFORM GOOD
000156 C0E000000284            00065E     (48/44)283+         LARL  ZC_R14,PG_GOOD
00015C C00000000291            00067E     (48/45)284+         LARL  ZC_R0,PG_GOOD_END+6
000162 58F0903C                00003C     (48/46)285+         L     ZC_R15,ZCVT_PERFORM
000166 0D1F                               (48/47)286+         BASR  ZC_R1,ZC_R15
000168                                     (1/78)287 *ZC     29      2  ELSE
000168 A7F4000B                00017E     (50/15)288+         J     PG_IF_2_E
00016C                                     (8/41)289+PG_IF_2_1    DS    0H  &TYPE
00016C                                     (1/80)290 *ZC     29      2  PERFORM BAD
00016C C0E000000289            00067E     (48/44)291+         LARL  ZC_R14,PG_BAD
000172 C00000000299            0006A4     (48/45)292+         LARL  ZC_R0,PG_BAD_END+6
000178 58F0903C                00003C     (48/46)293+         L     ZC_R15,ZCVT_PERFORM
00017C 0D1F                               (48/47)294+         BASR  ZC_R1,ZC_R15
00017E                                     (8/41)295+PG_IF_2_E    DS    0H  &TYPE
00017E                                     (1/83)296 *      3     IF T2-ID(1 1) = 'A' PERFORM GOOD ELSE PERFORM BAD.
00017E                                     (1/84)297 *ZC     30      3  IF    T2_ID,'(',1,1,')',=,'A'
00017E 4120D061                000759     (43/56)298+         LA    ZC_R2,T2_ID
000182 95C12000                          (44/438)299+         CLI   0(ZC_R2),C'A'
000186 A774000D                0001A0     (45/15)300+         BRC   15-ZC_EQ,PG_IF_3_1
00018A                                     (1/86)301 *ZC     30      3  PERFORM GOOD
00018A C0E00000026A            00065E     (48/44)302+         LARL  ZC_R14,PG_GOOD
000190 C00000000277            00067E     (48/45)303+         LARL  ZC_R0,PG_GOOD_END+6
000196 58F0903C                00003C     (48/46)304+         L     ZC_R15,ZCVT_PERFORM
00019A 0D1F                               (48/47)305+         BASR  ZC_R1,ZC_R15
00019C                                     (1/88)306 *ZC     30      3  ELSE
00019C A7F4000B                0001B2     (50/15)307+         J     PG_IF_3_E
0001A0                                     (8/41)308+PG_IF_3_1    DS    0H  &TYPE
0001A0                                     (1/90)309 *ZC     30      3  PERFORM BAD
0001A0 C0E00000026F            00067E     (48/44)310+         LARL  ZC_R14,PG_BAD
0001A6 C0000000027F            0006A4     (48/45)311+         LARL  ZC_R0,PG_BAD_END+6
0001AC 58F0903C                00003C     (48/46)312+         L     ZC_R15,ZCVT_PERFORM
0001B0 0D1F                               (48/47)313+         BASR  ZC_R1,ZC_R15
0001B2                                     (8/41)314+PG_IF_3_E    DS    0H  &TYPE
0001B2                                     (1/93)315 *      4     IF T2-ID(2 1) = 'D' PERFORM GOOD ELSE PERFORM BAD.
0001B2                                     (1/94)316 *ZC     31      4  IF    T2_ID,'(',2,1,')',=,'D'
0001B2 4120D061                000759     (43/56)317+         LA    ZC_R2,T2_ID
0001B6 C22900000004            000004     (43/70)318+         AFI   ZC_R2,(2-1)*4 (LIT-1)*LEN
0001BC 95C42000                          (44/438)319+         CLI   0(ZC_R2),C'D'
0001C0 A774000D                0001DA     (45/15)320+         BRC   15-ZC_EQ,PG_IF_4_1
0001C4                                     (1/96)321 *ZC     31      4  PERFORM GOOD
0001C4 C0E00000024D            00065E     (48/44)322+         LARL  ZC_R14,PG_GOOD
0001CA C0000000025A            00067E     (48/45)323+         LARL  ZC_R0,PG_GOOD_END+6
0001D0 58F0903C                00003C     (48/46)324+         L     ZC_R15,ZCVT_PERFORM
0001D4 0D1F                               (48/47)325+         BASR  ZC_R1,ZC_R15
0001D6                                     (1/98)326 *ZC     31      4  ELSE
0001D6 A7F4000B                0001EC     (50/15)327+         J     PG_IF_4_E
0001DA                                     (8/41)328+PG_IF_4_1    DS    0H  &TYPE
0001DA                                    (1/100)329 *ZC     31      4  PERFORM BAD
0001DA C0E000000252            00067E     (48/44)330+         LARL  ZC_R14,PG_BAD
0001E0 C00000000262            0006A4     (48/45)331+         LARL  ZC_R0,PG_BAD_END+6
0001E6 58F0903C                00003C     (48/46)332+         L     ZC_R15,ZCVT_PERFORM
0001EA 0D1F                               (48/47)333+         BASR  ZC_R1,ZC_R15
0001EC                                     (8/41)334+PG_IF_4_E    DS    0H  &TYPE
0001EC                                    (1/103)335 *      5     IF T2-ID(1 3) = 'C' PERFORM GOOD ELSE PERFORM BAD.
0001EC                                    (1/104)336 *ZC     32      5  IF    T2_ID,'(',1,3,')',=,'C'
0001EC 4120D061                000759     (43/56)337+         LA    ZC_R2,T2_ID
0001F0 C22900000002            000002     (43/70)338+         AFI   ZC_R2,(3-1)*1 (LIT-1)*LEN
0001F6 95C32000                          (44/438)339+         CLI   0(ZC_R2),C'C'
0001FA A774000D                000214     (45/15)340+         BRC   15-ZC_EQ,PG_IF_5_1
0001FE                                    (1/106)341 *ZC     32      5  PERFORM GOOD
0001FE C0E000000230            00065E     (48/44)342+         LARL  ZC_R14,PG_GOOD
000204 C0000000023D            00067E     (48/45)343+         LARL  ZC_R0,PG_GOOD_END+6
00020A 58F0903C                00003C     (48/46)344+         L     ZC_R15,ZCVT_PERFORM
00020E 0D1F                               (48/47)345+         BASR  ZC_R1,ZC_R15
000210                                    (1/108)346 *ZC     32      5  ELSE
000210 A7F4000B                000226     (50/15)347+         J     PG_IF_5_E
000214                                     (8/41)348+PG_IF_5_1    DS    0H  &TYPE
000214                                    (1/110)349 *ZC     32      5  PERFORM BAD
000214 C0E000000235            00067E     (48/44)350+         LARL  ZC_R14,PG_BAD
00021A C00000000245            0006A4     (48/45)351+         LARL  ZC_R0,PG_BAD_END+6
000220 58F0903C                00003C     (48/46)352+         L     ZC_R15,ZCVT_PERFORM
000224 0D1F                               (48/47)353+         BASR  ZC_R1,ZC_R15
000226                                     (8/41)354+PG_IF_5_E    DS    0H  &TYPE
000226                                    (1/113)355 *      6     IF T2-ID(2 3) = 'F' PERFORM GOOD ELSE PERFORM BAD.
000226                                    (1/114)356 *ZC     33      6  IF    T2_ID,'(',2,3,')',=,'F'
000226 4120D061                000759     (43/56)357+         LA    ZC_R2,T2_ID
00022A C22900000004            000004     (43/70)358+         AFI   ZC_R2,(2-1)*4 (LIT-1)*LEN
000230 C22900000002            000002     (43/70)359+         AFI   ZC_R2,(3-1)*1 (LIT-1)*LEN
000236 95C62000                          (44/438)360+         CLI   0(ZC_R2),C'F'
00023A A774000D                000254     (45/15)361+         BRC   15-ZC_EQ,PG_IF_6_1
00023E                                    (1/116)362 *ZC     33      6  PERFORM GOOD
00023E C0E000000210            00065E     (48/44)363+         LARL  ZC_R14,PG_GOOD
000244 C0000000021D            00067E     (48/45)364+         LARL  ZC_R0,PG_GOOD_END+6
00024A 58F0903C                00003C     (48/46)365+         L     ZC_R15,ZCVT_PERFORM
00024E 0D1F                               (48/47)366+         BASR  ZC_R1,ZC_R15
000250                                    (1/118)367 *ZC     33      6  ELSE
000250 A7F4000B                000266     (50/15)368+         J     PG_IF_6_E
000254                                     (8/41)369+PG_IF_6_1    DS    0H  &TYPE
000254                                    (1/120)370 *ZC     33      6  PERFORM BAD
000254 C0E000000215            00067E     (48/44)371+         LARL  ZC_R14,PG_BAD
00025A C00000000225            0006A4     (48/45)372+         LARL  ZC_R0,PG_BAD_END+6
000260 58F0903C                00003C     (48/46)373+         L     ZC_R15,ZCVT_PERFORM
000264 0D1F                               (48/47)374+         BASR  ZC_R1,ZC_R15
000266                                     (8/41)375+PG_IF_6_E    DS    0H  &TYPE
000266                                    (1/123)376 *            MOVE 1 TO S1 MOVE 3 TO S2
000266                                    (1/124)377 *ZC     34         MOVE  1,TO,S1
000266 E54CD0680001            000760    (41/342)378+          MVHI  S1,1
00026C                                    (1/126)379 *ZC     34         MOVE  3,TO,S2
00026C E54CD06C0003            000764    (41/342)380+          MVHI  S2,3
000272                                    (1/128)381 *      7     IF T2-ID(S1 S2) = 'C' PERFORM GOOD ELSE PERFORM BAD.
000272                                    (1/129)382 *ZC     35      7  IF    T2_ID,'(',S1,S2,')',=,'C'
000272 4120D061                000759     (43/56)383+         LA    ZC_R2,T2_ID
000276 C0F900000068            000068    (43/115)384+         IILF  ZC_R15,S1-ZC_WS
00027C 1AFD                              (43/116)385+         AR    ZC_R15,ZC_R13
00027E 58FF0000                          (43/124)386+         L     ZC_R15,0(ZC_R15)
000282 06F0                              (43/145)387+         BCTR  ZC_R15,0
000284 C2F100000004            000004    (43/148)388+         MSFI  ZC_R15,4 L'&SYM_NAME(&SIX_OCCUR(&CUR_SIX)) RPI 1161 CORRECT CONTINUE RPI 1182
00028A 1A2F                               (43/77)390+         AR    ZC_R2,ZC_R15                         RPI 1182
00028C C0F90000006C            00006C    (43/115)391+         IILF  ZC_R15,S2-ZC_WS
000292 1AFD                              (43/116)392+         AR    ZC_R15,ZC_R13
000294 58FF0000                          (43/124)393+         L     ZC_R15,0(ZC_R15)
000298 06F0                              (43/145)394+         BCTR  ZC_R15,0
00029A C2F100000001            000001    (43/148)395+         MSFI  ZC_R15,1 L'&SYM_NAME(&SIX_OCCUR(&CUR_SIX)) RPI 1161 CORRECT CONTINUE RPI 1182
0002A0 1A2F                               (43/77)397+         AR    ZC_R2,ZC_R15                         RPI 1182
0002A2 95C32000                          (44/438)398+         CLI   0(ZC_R2),C'C'
0002A6 A774000D                0002C0     (45/15)399+         BRC   15-ZC_EQ,PG_IF_7_1
0002AA                                    (1/131)400 *ZC     35      7  PERFORM GOOD
0002AA C0E0000001DA            00065E     (48/44)401+         LARL  ZC_R14,PG_GOOD
0002B0 C000000001E7            00067E     (48/45)402+         LARL  ZC_R0,PG_GOOD_END+6
0002B6 58F0903C                00003C     (48/46)403+         L     ZC_R15,ZCVT_PERFORM
0002BA 0D1F                               (48/47)404+         BASR  ZC_R1,ZC_R15
0002BC                                    (1/133)405 *ZC     35      7  ELSE
0002BC A7F4000B                0002D2     (50/15)406+         J     PG_IF_7_E
0002C0                                     (8/41)407+PG_IF_7_1    DS    0H  &TYPE
0002C0                                    (1/135)408 *ZC     35      7  PERFORM BAD
0002C0 C0E0000001DF            00067E     (48/44)409+         LARL  ZC_R14,PG_BAD
0002C6 C000000001EF            0006A4     (48/45)410+         LARL  ZC_R0,PG_BAD_END+6
0002CC 58F0903C                00003C     (48/46)411+         L     ZC_R15,ZCVT_PERFORM
0002D0 0D1F                               (48/47)412+         BASR  ZC_R1,ZC_R15
0002D2                                     (8/41)413+PG_IF_7_E    DS    0H  &TYPE
0002D2                                    (1/138)414 *            PERFORM VARYING S1 FROM 1 BY 1 UNTIL S1 > 2
0002D2                                    (1/139)415 *ZC     36         PERFORM VARYING,S1,FROM,1,BY,1,UNTIL,S1,>,2
0002D2 E54CD0680001            000760    (41/342)416+          MVHI  S1,1
0002D8 A7F40005                0002E2     (50/15)417+         J     PG_PM_15_T
0002DC                                     (8/41)418+PG_PM_15_A   DS    0H  &TYPE
0002DC EB01D068006A            000760    (53/190)419+         ASI   S1,1
0002E2                                     (8/41)420+PG_PM_15_T   DS    0H  &TYPE
0002E2 5800D068                000760    (44/289)421+         L     0,S1
0002E6 C20D00000002            000002    (44/290)422+         CFI   0,2
0002EC A7D40004                0002F4     (45/15)423+         BRC   15-ZC_H,PG_IF_8_1
0002F0 A7F4006A                0003C4     (50/15)424+         J     PG_PM_15_E
0002F4                                     (8/41)425+PG_IF_8_1    DS    0H  &TYPE
0002F4                                    (1/141)426 *                PERFORM VARYING S2 FROM 1 BY 1 UNTIL S2 > 3
0002F4                                    (1/142)427 *ZC     37         PERFORM VARYING,S2,FROM,1,BY,1,UNTIL,S2,>,3
0002F4 E54CD06C0001            000764    (41/342)428+          MVHI  S2,1
0002FA A7F40005                000304     (50/15)429+         J     PG_PM_16_T
0002FE                                     (8/41)430+PG_PM_16_A   DS    0H  &TYPE
0002FE EB01D06C006A            000764    (53/190)431+         ASI   S2,1
000304                                     (8/41)432+PG_PM_16_T   DS    0H  &TYPE
000304 5800D06C                000764    (44/289)433+         L     0,S2
000308 C20D00000003            000003    (44/290)434+         CFI   0,3
00030E A7D40004                000316     (45/15)435+         BRC   15-ZC_H,PG_IF_9_1
000312 A7F40057                0003C0     (50/15)436+         J     PG_PM_16_E
000316                                     (8/41)437+PG_IF_9_1    DS    0H  &TYPE
000316                                    (1/144)438 *                   DISPLAY 'T2-ID(' S1 ',' S2 ')=' T2-ID(S1 S2).
000316                                    (1/145)439 *ZC     38         DISPLAY 'T2-ID(',S1,',',S2,')=',T2_ID,'(',S1,S2,')'
000316 413090F8                0000F8     (35/28)440+         LA    ZC_R3,ZCVT_WORKAREA  ZC_R3=CVT LIST WORK AREA
00031A C000000001D7            0006C8     (35/68)441+         LARL  ZC_R0,=CL6'T2-ID(' PAD TO EVEN LEN LIT
000320 41100006                           (35/69)442+         LA    ZC_R1,6
000324 412000E7                           (35/70)443+         LA    ZC_R2,C'X'
000328 90023000                           (35/71)444+         STM   ZC_R0,ZC_R2,0(ZC_R3)  SET DISPLAY LIST ENTRY
00032C 4100D068                000760     (35/82)445+         LA    ZC_R0,S1
000330 41100004                           (35/83)446+         LA    ZC_R1,4  RPI 1182 WAS &SYM_LEN(&FIELD_IX)
000334 412000C6                           (35/88)447+         LA    ZC_R2,C'F'
000338 9002300C                           (35/90)448+         STM   ZC_R0,ZC_R2,12(ZC_R3)  SET DISPLAY LIST ENTRY
00033C C000000001C9            0006CE     (35/68)449+         LARL  ZC_R0,=CL2',' PAD TO EVEN LEN LIT
000342 41100001                           (35/69)450+         LA    ZC_R1,1
000346 412000E7                           (35/70)451+         LA    ZC_R2,C'X'
00034A 90023018                           (35/71)452+         STM   ZC_R0,ZC_R2,24(ZC_R3)  SET DISPLAY LIST ENTRY
00034E 4100D06C                000764     (35/82)453+         LA    ZC_R0,S2
000352 41100004                           (35/83)454+         LA    ZC_R1,4  RPI 1182 WAS &SYM_LEN(&FIELD_IX)
000356 412000C6                           (35/88)455+         LA    ZC_R2,C'F'
00035A 90023024                           (35/90)456+         STM   ZC_R0,ZC_R2,36(ZC_R3)  SET DISPLAY LIST ENTRY
00035E C000000001B9            0006D0     (35/68)457+         LARL  ZC_R0,=CL2')=' PAD TO EVEN LEN LIT
000364 41100002                           (35/69)458+         LA    ZC_R1,2
000368 412000E7                           (35/70)459+         LA    ZC_R2,C'X'
00036C 90023030                           (35/71)460+         STM   ZC_R0,ZC_R2,48(ZC_R3)  SET DISPLAY LIST ENTRY
000370 4120D061                000759     (43/56)461+         LA    ZC_R2,T2_ID
000374 C0F900000068            000068    (43/115)462+         IILF  ZC_R15,S1-ZC_WS
00037A 1AFD                              (43/116)463+         AR    ZC_R15,ZC_R13
00037C 58FF0000                          (43/124)464+         L     ZC_R15,0(ZC_R15)
000380 06F0                              (43/145)465+         BCTR  ZC_R15,0
000382 C2F100000004            000004    (43/148)466+         MSFI  ZC_R15,4 L'&SYM_NAME(&SIX_OCCUR(&CUR_SIX)) RPI 1161 CORRECT CONTINUE RPI 1182
000388 1A2F                               (43/77)468+         AR    ZC_R2,ZC_R15                         RPI 1182
00038A C0F90000006C            00006C    (43/115)469+         IILF  ZC_R15,S2-ZC_WS
000390 1AFD                              (43/116)470+         AR    ZC_R15,ZC_R13
000392 58FF0000                          (43/124)471+         L     ZC_R15,0(ZC_R15)
000396 06F0                              (43/145)472+         BCTR  ZC_R15,0
000398 C2F100000001            000001    (43/148)473+         MSFI  ZC_R15,1 L'&SYM_NAME(&SIX_OCCUR(&CUR_SIX)) RPI 1161 CORRECT CONTINUE RPI 1182
00039E 1A2F                               (43/77)475+         AR    ZC_R2,ZC_R15                         RPI 1182
0003A0 41020000                           (35/82)476+         LA    ZC_R0,0(ZC_R2)
0003A4 41100001                           (35/83)477+         LA    ZC_R1,1  RPI 1182 WAS &SYM_LEN(&FIELD_IX)
0003A8 412000E7                           (35/88)478+         LA    ZC_R2,C'X'
0003AC 9002303C                           (35/90)479+         STM   ZC_R0,ZC_R2,60(ZC_R3)  SET DISPLAY LIST ENTRY
0003B0 96803044                           (35/94)480+         OI    72-4(ZC_R3),X'80' SET VL BIT IN LAST WORD OF PARM LIST
0003B4 1813                               (35/95)481+         LR    ZC_R1,ZC_R3
0003B6 58F09070                000070     (35/96)482+         L     ZC_R15,ZCVT_DISPLAY
0003BA 0DEF                               (35/97)483+         BASR  ZC_R14,ZC_R15
0003BC A7F4FFA1                0002FE     (50/15)484+         J     PG_PM_16_A
0003C0                                     (8/41)485+PG_PM_16_E   DS    0H  &TYPE
0003C0 A7F4FF8E                0002DC     (50/15)486+         J     PG_PM_15_A
0003C4                                     (8/41)487+PG_PM_15_E   DS    0H  &TYPE
0003C4                                    (1/148)488 *            MOVE 1 TO NFS2(I) NFS2(I+1)
0003C4                                    (1/149)489 *ZC     39         MOVE  1,TO,NFS2,'(',I,')',NFS2,'(',I,+,1,')'
0003C4 C0F90000008C            00008C    (43/115)490+         IILF  ZC_R15,I-ZC_WS
0003CA 1AFD                              (43/116)491+         AR    ZC_R15,ZC_R13
0003CC 48FF0000                          (43/128)492+         LH    ZC_R15,0(ZC_R15)
0003D0 06F0                              (43/145)493+         BCTR  ZC_R15,0
0003D2 C2F100000004            000004    (43/148)494+         MSFI  ZC_R15,4 L'&SYM_NAME(&SIX_OCCUR(&CUR_SIX)) RPI 1161 CORRECT CONTINUE RPI 1182
0003D8 413FD070                000768     (43/42)496+         LA    ZC_R3,NFS2(ZC_R15)
0003DC E54C30000001                      (41/342)497+          MVHI  0(ZC_R3),1
0003E2 C0F90000008C            00008C    (43/115)498+         IILF  ZC_R15,I-ZC_WS
0003E8 1AFD                              (43/116)499+         AR    ZC_R15,ZC_R13
0003EA 48FF0000                          (43/128)500+         LH    ZC_R15,0(ZC_R15)
0003EE A7FA0000                          (43/143)501+         AHI   ZC_R15,+1-1
0003F2 C2F100000004            000004    (43/148)502+         MSFI  ZC_R15,4 L'&SYM_NAME(&SIX_OCCUR(&CUR_SIX)) RPI 1161 CORRECT CONTINUE RPI 1182
0003F8 413FD070                000768     (43/42)504+         LA    ZC_R3,NFS2(ZC_R15)
0003FC E54C30000001                      (41/342)505+          MVHI  0(ZC_R3),1
000402                                    (1/151)506 *            ADD       NFS2(I) TO NFS2(I+1)
000402                                    (1/152)507 *ZC     40         ADD   NFS2,'(',I,')',TO,NFS2,'(',I,+,1,')'
000402 C0F90000008C            00008C    (43/115)508+         IILF  ZC_R15,I-ZC_WS
000408 1AFD                              (43/116)509+         AR    ZC_R15,ZC_R13
00040A 48FF0000                          (43/128)510+         LH    ZC_R15,0(ZC_R15)
00040E 06F0                              (43/145)511+         BCTR  ZC_R15,0
000410 C2F100000004            000004    (43/148)512+         MSFI  ZC_R15,4 L'&SYM_NAME(&SIX_OCCUR(&CUR_SIX)) RPI 1161 CORRECT CONTINUE RPI 1182
000416 411FD070                000768     (43/42)514+         LA    ZC_R1,NFS2(ZC_R15)
00041A C0F90000008C            00008C    (43/115)515+         IILF  ZC_R15,I-ZC_WS
000420 1AFD                              (43/116)516+         AR    ZC_R15,ZC_R13
000422 48FF0000                          (43/128)517+         LH    ZC_R15,0(ZC_R15)
000426 A7FA0000                          (43/143)518+         AHI   ZC_R15,+1-1
00042A C2F100000004            000004    (43/148)519+         MSFI  ZC_R15,4 L'&SYM_NAME(&SIX_OCCUR(&CUR_SIX)) RPI 1161 CORRECT CONTINUE RPI 1182
000430 412FD070                000768     (43/42)521+         LA    ZC_R2,NFS2(ZC_R15)
000434 58010000                          (53/872)522+         L     ZC_R0,0(ZC_R1)
000438 5A020000                          (53/910)523+         A     ZC_R0,0(ZC_R2)
00043C 50020000                          (53/911)524+         ST    ZC_R0,0(ZC_R2)
000440                                    (1/154)525 *      8     IF NFS2(I+1) = 2 PERFORM GOOD ELSE PERFORM BAD.
000440                                    (1/155)526 *ZC     41      8  IF    NFS2,'(',I,+,1,')',=,2
000440 C0F90000008C            00008C    (43/115)527+         IILF  ZC_R15,I-ZC_WS
000446 1AFD                              (43/116)528+         AR    ZC_R15,ZC_R13
000448 48FF0000                          (43/128)529+         LH    ZC_R15,0(ZC_R15)
00044C A7FA0000                          (43/143)530+         AHI   ZC_R15,+1-1
000450 C2F100000004            000004    (43/148)531+         MSFI  ZC_R15,4 L'&SYM_NAME(&SIX_OCCUR(&CUR_SIX)) RPI 1161 CORRECT CONTINUE RPI 1182
000456 412FD070                000768     (43/42)533+         LA    ZC_R2,NFS2(ZC_R15)
00045A 58020000                          (44/289)534+         L     0,0(ZC_R2)
00045E C20D00000002            000002    (44/290)535+         CFI   0,2
000464 A774000D                00047E     (45/15)536+         BRC   15-ZC_EQ,PG_IF_10_1
000468                                    (1/157)537 *ZC     41      8  PERFORM GOOD
000468 C0E0000000FB            00065E     (48/44)538+         LARL  ZC_R14,PG_GOOD
00046E C00000000108            00067E     (48/45)539+         LARL  ZC_R0,PG_GOOD_END+6
000474 58F0903C                00003C     (48/46)540+         L     ZC_R15,ZCVT_PERFORM
000478 0D1F                               (48/47)541+         BASR  ZC_R1,ZC_R15
00047A                                    (1/159)542 *ZC     41      8  ELSE
00047A A7F4000B                000490     (50/15)543+         J     PG_IF_10_E
00047E                                     (8/41)544+PG_IF_10_1   DS    0H  &TYPE
00047E                                    (1/161)545 *ZC     41      8  PERFORM BAD
00047E C0E000000100            00067E     (48/44)546+         LARL  ZC_R14,PG_BAD
000484 C00000000110            0006A4     (48/45)547+         LARL  ZC_R0,PG_BAD_END+6
00048A 58F0903C                00003C     (48/46)548+         L     ZC_R15,ZCVT_PERFORM
00048E 0D1F                               (48/47)549+         BASR  ZC_R1,ZC_R15
000490                                     (8/41)550+PG_IF_10_E   DS    0H  &TYPE
000490                                    (1/164)551 *            ADD  1 TO NFS2(I) NFS2(I+1)
000490                                    (1/165)552 *ZC     42         ADD   1,TO,NFS2,'(',I,')',NFS2,'(',I,+,1,')'
000490 C0F90000008C            00008C    (43/115)553+         IILF  ZC_R15,I-ZC_WS
000496 1AFD                              (43/116)554+         AR    ZC_R15,ZC_R13
000498 48FF0000                          (43/128)555+         LH    ZC_R15,0(ZC_R15)
00049C 06F0                              (43/145)556+         BCTR  ZC_R15,0
00049E C2F100000004            000004    (43/148)557+         MSFI  ZC_R15,4 L'&SYM_NAME(&SIX_OCCUR(&CUR_SIX)) RPI 1161 CORRECT CONTINUE RPI 1182
0004A4 412FD070                000768     (43/42)559+         LA    ZC_R2,NFS2(ZC_R15)
0004A8 EB012000006A                      (53/190)560+         ASI   0(ZC_R2),1
0004AE C0F90000008C            00008C    (43/115)561+         IILF  ZC_R15,I-ZC_WS
0004B4 1AFD                              (43/116)562+         AR    ZC_R15,ZC_R13
0004B6 48FF0000                          (43/128)563+         LH    ZC_R15,0(ZC_R15)
0004BA A7FA0000                          (43/143)564+         AHI   ZC_R15,+1-1
0004BE C2F100000004            000004    (43/148)565+         MSFI  ZC_R15,4 L'&SYM_NAME(&SIX_OCCUR(&CUR_SIX)) RPI 1161 CORRECT CONTINUE RPI 1182
0004C4 412FD070                000768     (43/42)567+         LA    ZC_R2,NFS2(ZC_R15)
0004C8 EB012000006A                      (53/190)568+         ASI   0(ZC_R2),1
0004CE                                    (1/167)569 *      9     IF NFS2(I)   = 2 PERFORM GOOD ELSE PERFORM BAD.
0004CE                                    (1/168)570 *ZC     43      9  IF    NFS2,'(',I,')',=,2
0004CE C0F90000008C            00008C    (43/115)571+         IILF  ZC_R15,I-ZC_WS
0004D4 1AFD                              (43/116)572+         AR    ZC_R15,ZC_R13
0004D6 48FF0000                          (43/128)573+         LH    ZC_R15,0(ZC_R15)
0004DA 06F0                              (43/145)574+         BCTR  ZC_R15,0
0004DC C2F100000004            000004    (43/148)575+         MSFI  ZC_R15,4 L'&SYM_NAME(&SIX_OCCUR(&CUR_SIX)) RPI 1161 CORRECT CONTINUE RPI 1182
0004E2 412FD070                000768     (43/42)577+         LA    ZC_R2,NFS2(ZC_R15)
0004E6 58020000                          (44/289)578+         L     0,0(ZC_R2)
0004EA C20D00000002            000002    (44/290)579+         CFI   0,2
0004F0 A774000D                00050A     (45/15)580+         BRC   15-ZC_EQ,PG_IF_11_1
0004F4                                    (1/170)581 *ZC     43      9  PERFORM GOOD
0004F4 C0E0000000B5            00065E     (48/44)582+         LARL  ZC_R14,PG_GOOD
0004FA C000000000C2            00067E     (48/45)583+         LARL  ZC_R0,PG_GOOD_END+6
000500 58F0903C                00003C     (48/46)584+         L     ZC_R15,ZCVT_PERFORM
000504 0D1F                               (48/47)585+         BASR  ZC_R1,ZC_R15
000506                                    (1/172)586 *ZC     43      9  ELSE
000506 A7F4000B                00051C     (50/15)587+         J     PG_IF_11_E
00050A                                     (8/41)588+PG_IF_11_1   DS    0H  &TYPE
00050A                                    (1/174)589 *ZC     43      9  PERFORM BAD
00050A C0E0000000BA            00067E     (48/44)590+         LARL  ZC_R14,PG_BAD
000510 C000000000CA            0006A4     (48/45)591+         LARL  ZC_R0,PG_BAD_END+6
000516 58F0903C                00003C     (48/46)592+         L     ZC_R15,ZCVT_PERFORM
00051A 0D1F                               (48/47)593+         BASR  ZC_R1,ZC_R15
00051C                                     (8/41)594+PG_IF_11_E   DS    0H  &TYPE
00051C                                    (1/177)595 *     10     IF NFS2(I+1) = 3 PERFORM GOOD ELSE PERFORM BAD.
00051C                                    (1/178)596 *ZC     44     10  IF    NFS2,'(',I,+,1,')',=,3
00051C C0F90000008C            00008C    (43/115)597+         IILF  ZC_R15,I-ZC_WS
000522 1AFD                              (43/116)598+         AR    ZC_R15,ZC_R13
000524 48FF0000                          (43/128)599+         LH    ZC_R15,0(ZC_R15)
000528 A7FA0000                          (43/143)600+         AHI   ZC_R15,+1-1
00052C C2F100000004            000004    (43/148)601+         MSFI  ZC_R15,4 L'&SYM_NAME(&SIX_OCCUR(&CUR_SIX)) RPI 1161 CORRECT CONTINUE RPI 1182
000532 412FD070                000768     (43/42)603+         LA    ZC_R2,NFS2(ZC_R15)
000536 58020000                          (44/289)604+         L     0,0(ZC_R2)
00053A C20D00000003            000003    (44/290)605+         CFI   0,3
000540 A774000D                00055A     (45/15)606+         BRC   15-ZC_EQ,PG_IF_12_1
000544                                    (1/180)607 *ZC     44     10  PERFORM GOOD
000544 C0E00000008D            00065E     (48/44)608+         LARL  ZC_R14,PG_GOOD
00054A C0000000009A            00067E     (48/45)609+         LARL  ZC_R0,PG_GOOD_END+6
000550 58F0903C                00003C     (48/46)610+         L     ZC_R15,ZCVT_PERFORM
000554 0D1F                               (48/47)611+         BASR  ZC_R1,ZC_R15
000556                                    (1/182)612 *ZC     44     10  ELSE
000556 A7F4000B                00056C     (50/15)613+         J     PG_IF_12_E
00055A                                     (8/41)614+PG_IF_12_1   DS    0H  &TYPE
00055A                                    (1/184)615 *      * TEST COMPUTE DFP WITH SUBSCRIPTS
00055A                                    (1/185)616 *ZC     44     10  PERFORM BAD
00055A C0E000000092            00067E     (48/44)617+         LARL  ZC_R14,PG_BAD
000560 C000000000A2            0006A4     (48/45)618+         LARL  ZC_R0,PG_BAD_END+6
000566 58F0903C                00003C     (48/46)619+         L     ZC_R15,ZCVT_PERFORM
00056A 0D1F                               (48/47)620+         BASR  ZC_R1,ZC_R15
00056C                                     (8/41)621+PG_IF_12_E   DS    0H  &TYPE
00056C                                    (1/188)622 *            MOVE 1.1 TO FLT-SRT(2)
00056C                                    (1/189)623 *ZC     46         MOVE  1.1,TO,FLT_SRT,'(',2,')'
00056C C03900000004            000004     (43/32)624+         IILF  ZC_R3,(2-1)*4 (LIT-1)*LEN
000572 4133D058                000750     (43/33)625+         LA    ZC_R3,FLT_SRT(ZC_R3)
000576 C010000000A5            0006C0    (41/329)626+          LARL  ZC_R1,=ED'1.1'
00057C D20330001000                      (41/330)627+          MVC   0(4,ZC_R3),0(ZC_R1)
000582                                    (1/191)628 *            ADD  2.2 TO FLT-SRT(2).
000582                                    (1/192)629 *ZC     47         ADD   2.2,TO,FLT_SRT,'(',2,')'
000582 C02900000004            000004     (43/32)630+         IILF  ZC_R2,(2-1)*4 (LIT-1)*LEN
000588 4122D058                000750     (43/33)631+         LA    ZC_R2,FLT_SRT(ZC_R2)
00058C 78020000                          (53/148)632+         LE    ZC_F0,0(ZC_R2)
000590 B3D40000                          (53/149)633+         LDETR ZC_F0,ZC_F0,0
000594 C0E000000092            0006B8    (53/150)634+         LARL  ZC_R14,=DD'2.2'
00059A 681E0000                          (53/151)635+         LD    ZC_F1,0(ZC_R14)
00059E B3D21000                          (53/152)636+         ADTR  ZC_F0,ZC_F0,ZC_F1
0005A2 B3D50000                          (53/153)637+         LEDTR ZC_F0,0,ZC_F0,0
0005A6 70020000                          (53/154)638+         STE   ZC_F0,0(ZC_R2)
0005AA                                    (1/195)639 *     11     IF FLT-SRT(2) = 3.3 PERFORM GOOD ELSE PERFORM BAD.
0005AA                                    (1/196)640 *ZC     48     11  IF    FLT_SRT,'(',2,')',=,3.3
0005AA C02900000004            000004     (43/32)641+         IILF  ZC_R2,(2-1)*4 (LIT-1)*LEN
0005B0 4122D058                000750     (43/33)642+         LA    ZC_R2,FLT_SRT(ZC_R2)
0005B4 78020000                          (44/264)643+         LE    0,0(ZC_R2)
0005B8 C01000000086            0006C4    (44/265)644+         LARL  ZC_R1,=ED'3.3'
0005BE 78110000                          (44/266)645+         LE    ZC_F1,0(ZC_R1)
0005C2 B3D40000                          (44/267)646+         LDETR 0,0,0
0005C6 B3D40011                          (44/268)647+         LDETR 1,1,0
0005CA B3E40001                          (44/269)648+         CDTR  0,1
0005CE A774000D                0005E8     (45/15)649+         BRC   15-ZC_EQ,PG_IF_13_1
0005D2                                    (1/198)650 *ZC     48     11  PERFORM GOOD
0005D2 C0E000000046            00065E     (48/44)651+         LARL  ZC_R14,PG_GOOD
0005D8 C00000000053            00067E     (48/45)652+         LARL  ZC_R0,PG_GOOD_END+6
0005DE 58F0903C                00003C     (48/46)653+         L     ZC_R15,ZCVT_PERFORM
0005E2 0D1F                               (48/47)654+         BASR  ZC_R1,ZC_R15
0005E4                                    (1/200)655 *ZC     48     11  ELSE
0005E4 A7F4000B                0005FA     (50/15)656+         J     PG_IF_13_E
0005E8                                     (8/41)657+PG_IF_13_1   DS    0H  &TYPE
0005E8                                    (1/202)658 *ZC     48     11  PERFORM BAD
0005E8 C0E00000004B            00067E     (48/44)659+         LARL  ZC_R14,PG_BAD
0005EE C0000000005B            0006A4     (48/45)660+         LARL  ZC_R0,PG_BAD_END+6
0005F4 58F0903C                00003C     (48/46)661+         L     ZC_R15,ZCVT_PERFORM
0005F8 0D1F                               (48/47)662+         BASR  ZC_R1,ZC_R15
0005FA                                     (8/41)663+PG_IF_13_E   DS    0H  &TYPE
0005FA                                    (1/205)664 *            DISPLAY 'TESTSIX1 GOOD TESTS =' GOOD ' BAD TESTS = ' BAD
0005FA                                    (1/207)665 *ZC     49         DISPLAY 'TESTSIX1 GOOD TESTS =',GOOD,' BAD TESTS = ',BAD
0005FA 413090F8                0000F8     (35/28)667+         LA    ZC_R3,ZCVT_WORKAREA  ZC_R3=CVT LIST WORK AREA
0005FE C0000000006A            0006D2     (35/68)668+         LARL  ZC_R0,=CL22'TESTSIX1 GOOD TESTS =' PAD TO EVEN LEN LIT
000604 41100015                           (35/69)669+         LA    ZC_R1,21
000608 412000E7                           (35/70)670+         LA    ZC_R2,C'X'
00060C 90023000                           (35/71)671+         STM   ZC_R0,ZC_R2,0(ZC_R3)  SET DISPLAY LIST ENTRY
000610 4100D090                000788     (35/82)672+         LA    ZC_R0,GOOD
000614 41100005                           (35/83)673+         LA    ZC_R1,5  RPI 1182 WAS &SYM_LEN(&FIELD_IX)
000618 412000D7                           (35/88)674+         LA    ZC_R2,C'P'
00061C 9002300C                           (35/90)675+         STM   ZC_R0,ZC_R2,12(ZC_R3)  SET DISPLAY LIST ENTRY
000620 C00000000064            0006E8     (35/68)676+         LARL  ZC_R0,=CL14' BAD TESTS = ' PAD TO EVEN LEN LIT
000626 4110000D                           (35/69)677+         LA    ZC_R1,13
00062A 412000E7                           (35/70)678+         LA    ZC_R2,C'X'
00062E 90023018                           (35/71)679+         STM   ZC_R0,ZC_R2,24(ZC_R3)  SET DISPLAY LIST ENTRY
000632 4100D095                00078D     (35/82)680+         LA    ZC_R0,BAD
000636 41100005                           (35/83)681+         LA    ZC_R1,5  RPI 1182 WAS &SYM_LEN(&FIELD_IX)
00063A 412000D7                           (35/88)682+         LA    ZC_R2,C'P'
00063E 90023024                           (35/90)683+         STM   ZC_R0,ZC_R2,36(ZC_R3)  SET DISPLAY LIST ENTRY
000642 9680302C                           (35/94)684+         OI    48-4(ZC_R3),X'80' SET VL BIT IN LAST WORD OF PARM LIST
000646 1813                               (35/95)685+         LR    ZC_R1,ZC_R3
000648 58F09070                000070     (35/96)686+         L     ZC_R15,ZCVT_DISPLAY
00064C 0DEF                               (35/97)687+         BASR  ZC_R14,ZC_R15
00064E                                    (1/209)688 *            STOP RUN.
00064E                                    (1/210)689 *ZC     50         STOP  RUN
00064E 4810D0F4                0007EC     (58/18)690+         LH    ZC_R1,RETURN_CODE      PASS RETURN CODE IN R1
000652 58F09030                000030     (58/23)691+         L     ZC_R15,ZCVT_GOBACK
000656 07FF                               (58/24)692+         BR    ZC_R15
000658                                    (1/213)693 *        GOOD.
000658 58F09040                000040      (8/64)694+PG_MAINLINE_END L ZC_R15,ZCVT_PMCHECK
00065C 0DEF                                (8/65)695+         BASR  ZC_R14,ZC_R15 CHECK FOR END OF CURRENT PERFORM
00065E                                     (8/96)696+PG_GOOD  DS    0H
00065E                                    (1/215)697 *            ADD 1 TO GOOD.
00065E                                    (1/216)698 *ZC     52         ADD   1,TO,GOOD
00065E A7E50003                          (53/279)699+         BRAS  ZC_R14,3 SET ZC_R1 TO A(INLINE LIT) AND SKIP OVER IT
000662 001C                              (53/280)700+         DC    PL2'1'
000664 FA41D090E000     000788           (53/287)701+         AP    GOOD,0(2,ZC_R14)
00066A                                    (1/219)702 *            DISPLAY 'GOOD'.
00066A                                    (1/220)703 *ZC     53         DISPLAY 'GOOD'
00066A A7150006                000676     (18/49)704+         BRAS  1,*+(WTO#0524_EOT-*+1)/2*2
00066E 00080000C7D6D6C4                   (18/50)705+         DC    AL2(WTO#0524_EOT-*,0),C'GOOD'
000676                  00000676          (18/51)706+WTO#0524_EOT     EQU *
000676 0A23                               (18/52)707+         SVC   35
000678                                    (1/223)708 *        BAD.
000678 58F09040                000040      (8/64)709+PG_GOOD_END L  ZC_R15,ZCVT_PMCHECK
00067C 0DEF                                (8/65)710+         BASR  ZC_R14,ZC_R15 CHECK FOR END OF CURRENT PERFORM
00067E                                     (8/96)711+PG_BAD   DS    0H
00067E                                    (1/225)712 *            ADD 1 TO BAD.
00067E                                    (1/226)713 *ZC     55         ADD   1,TO,BAD
00067E A7E50003                          (53/279)714+         BRAS  ZC_R14,3 SET ZC_R1 TO A(INLINE LIT) AND SKIP OVER IT
000682 001C                              (53/280)715+         DC    PL2'1'
000684 FA41D095E000     00078D           (53/287)716+         AP    BAD,0(2,ZC_R14)
00068A                                    (1/229)717 *            MOVE 16 TO RETURN-CODE
00068A                                    (1/230)718 *ZC     56         MOVE  16,TO,RETURN_CODE
00068A E544D0F40010            0007EC    (41/361)719+          MVHHI RETURN_CODE,16
000690                                    (1/232)720 *            DISPLAY 'BAD'..
000690                                    (1/233)721 *ZC     57         DISPLAY 'BAD'
000690 A7150006                00069C     (18/49)722+         BRAS  1,*+(WTO#0541_EOT-*+1)/2*2
000694 00070000C2C1C4                     (18/50)723+         DC    AL2(WTO#0541_EOT-*,0),C'BAD'
00069B                  0000069B          (18/51)724+WTO#0541_EOT     EQU *
00069C 0A23                               (18/52)725+         SVC   35
00069E 58F09040                000040      (8/64)726+PG_BAD_END L   ZC_R15,ZCVT_PMCHECK
0006A2 0DEF                                (8/65)727+         BASR  ZC_R14,ZC_R15 CHECK FOR END OF CURRENT PERFORM
0006A4                                    (8/108)728+SN_END_PROCEDURE DS 0H SECTION
0006A4                                    (59/18)729+*        PROCEDURE END
0006A4 4810D0F4                0007EC     (59/24)730+         LH    ZC_R1,RETURN_CODE
0006A8 58F09030                000030     (59/25)731+         L     ZC_R15,ZCVT_GOBACK
0006AC 0DEF                               (59/26)732+         BASR  ZC_R14,ZC_R15
0006AE                                    (59/32)733+         LTORG 
0006B0 F1C1C2C3F2C4C5C6 =CL8'1ABC2DEF'
0006B8 2234000000000022 =DD'2.2'
0006C0 22400011         =ED'1.1'
0006C4 22400033         =ED'3.3'
0006C8 E3F260C9C44D     =CL6'T2-ID('
0006CE 6B40             =CL2','
0006D0 5D7E             =CL2')='
0006D2 E3C5E2E3E2C9E7F1 =CL22'TESTSIX1 GOOD TESTS ='
0006DA 40C7D6D6C440E3C5
0006E2 E2E3E2407E40
0006E8 40C2C1C440E3C5E2 =CL14' BAD TESTS = '
0006F0 E3E2407E4040
0006F6                                     (6/15)734+*    ZCOBOL WORKING STORAGE SECTION DATA ITEMS 
0006F6                                     (6/15)735+*    LVL DATA NAME                      ADDR     LEN      DUP TYP PIC        VALUE 
0006F6                                     (6/15)737+*    01  ZC_SAVEAREA                    00000000 00000048 1   X   X(72)       
0006F6                                     (6/15)739+*    01  ZC_WS_ID                       00000048 00000008 1   X   X(8)       ''WS*WS*WS'' 
0006F6                                     (6/15)741+*    01  ZC_WS_START                    00000050 00000004 1   A               
0006F6                                     (6/15)743+*    01  ZC_WS_LEN                      00000054 00000004 1   F   9(9)        
0006F6                                     (6/15)745+*    01  FILLER                         00000058 00000000 1   X               
0006F6                                     (6/15)747+*    01  FLT_SRT                        00000058 00000004 2   7               
0006F6                                     (6/15)749+*    01  T0                             00000060 00000008 1   X               
0006F6                                     (6/15)751+*    10  T1                             00000060 00000004 2   X               
0006F6                                     (6/15)753+*    15  T1_ID                          00000060 00000001 1   X   X           
0006F6                                     (6/15)755+*    15  T2                             00000061 00000001 3   X               
0006F6                                     (6/15)757+*    20  T2_ID                          00000061 00000001 1   X   X           
0006F6                                     (6/15)759+*    01  S1                             00000068 00000004 1   F   9(9)        
0006F6                                     (6/15)761+*    01  S2                             0000006C 00000004 1   F   9(9)        
0006F6                                     (6/15)763+*    01  NFS2                           00000070 00000004 2   F   9(9)        
0006F6                                     (6/15)765+*    01  NGS2                           00000078 00000008 2   G   9(18)       
0006F6                                     (6/15)767+*    01  NHS2                           00000088 00000002 2   H   9(4)        
0006F6                                     (6/15)769+*    01  I                              0000008C 00000002 1   H   99         1 
0006F6                                     (6/15)771+*    01  J                              0000008E 00000002 1   H   99         2 
0006F6                                     (6/15)773+*    01  GOOD                           00000090 00000005 1   P   9(9)       0 
0006F6                                     (6/15)775+*    01  BAD                            00000095 00000005 1   P   9(9)       0 
0006F6                                     (6/15)777+*    01  DEBUG_ITEM                     0000009A 00000058 1   X               
0006F6                                     (6/15)779+*    02  DEBUG_LINE                     0000009A 00000006 1   X   X(6)        
0006F6                                     (6/15)781+*    02  FILLER                         000000A0 00000001 1   X   X          SPACE 
0006F6                                     (6/15)783+*    02  DEBUG_NAME                     000000A1 0000001E 1   X   X(30)       
0006F6                                     (6/15)785+*    02  FILLER                         000000BF 00000001 1   X   X          SPACE 
0006F6                                     (6/15)787+*    02  DEBUG_SUB_1                    000000C0 00000004 1   Z   9999        
0006F6                                     (6/15)789+*    02  FILLER                         000000C4 00000001 1   X   X          SPACE 
0006F6                                     (6/15)791+*    02  DEBUG_SUB_2                    000000C5 00000004 1   Z   9999        
0006F6                                     (6/15)793+*    02  FILLER                         000000C9 00000001 1   X   X          SPACE 
0006F6                                     (6/15)795+*    02  DEBUG_SUB_3                    000000CA 00000004 1   Z   9999        
0006F6                                     (6/15)797+*    02  FILLER                         000000CE 00000001 1   X   X          SPACE 
0006F6                                     (6/15)799+*    02  DEBUG_CONTENTS                 000000CF 00000023 1   X   X(35)       
0006F6                                     (6/15)801+*    01  TRUE                           000000F2 00000001 1   Z   9          1 
0006F6                                     (6/15)803+*    01  FALSE                          000000F3 00000001 1   Z   9          0 
0006F6                                     (6/15)805+*    01  RETURN_CODE                    000000F4 00000002 1   H   9(4)       0 
0006F8                                    (61/39)807+ZC_WSLOC LOCTR 
0006F8                  00000000         (61/131)808+ZC_WS_LOC_1  EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
0006F8                                   (61/336)809+ZC_SAVEAREA DS CL72
000740                  00000048         (61/131)810+ZC_WS_LOC_2  EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000740 E6E25CE6E25CE6E2                  (61/220)811+ZC_WS_ID DC CL8'WS*WS*WS'
000748                  00000050         (61/131)812+ZC_WS_LOC_3  EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000748                                   (61/322)813+ZC_WS_START DS AL4
00074C                  00000054         (61/131)814+ZC_WS_LOC_4  EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
00074C                                   (61/324)815+ZC_WS_LEN DS FL4
000750                  00000058         (61/131)816+ZC_WS_LOC_5  EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000750                                   (61/336)817+         DS  0CL0
000750                  00000058         (61/131)818+ZC_WS_LOC_6  EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000750                                   (61/316)819+FLT_SRT  DS 2EDL4
000758                  00000060         (61/131)820+ZC_WS_LOC_7  EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000758                                   (61/336)821+T0       DS  0CL8
000758                  00000060         (61/131)822+ZC_WS_LOC_8  EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000758                                   (61/336)823+T1       DS  0CL4
000758                  00000060         (61/131)824+ZC_WS_LOC_9  EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000758                                   (61/336)825+T1_ID    DS  CL1
000759                  00000061         (61/131)826+ZC_WS_LOC_10 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000759                                   (61/336)827+T2       DS  0CL1
000759                  00000061         (61/131)828+ZC_WS_LOC_11 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000759                                   (61/336)829+T2_ID    DS  CL1
00075A                                    (61/61)830+         DS    XL2 PAD FOR MULT OCCURS
00075C                                    (61/61)831+         DS    XL4 PAD FOR MULT OCCURS
000760                  00000068         (61/131)832+ZC_WS_LOC_12 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000760                                   (61/324)833+S1       DS  FL4
000764                  0000006C         (61/131)834+ZC_WS_LOC_13 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000764                                   (61/324)835+S2       DS  FL4
000768                  00000070         (61/131)836+ZC_WS_LOC_14 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000768                                   (61/324)837+NFS2     DS  2FL4
000770                  00000078         (61/131)838+ZC_WS_LOC_15 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000770                                   (61/326)839+NGS2     DS  2FL8
000780                  00000088         (61/131)840+ZC_WS_LOC_16 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000780                                   (61/328)841+NHS2     DS  2HL2
000784                  0000008C         (61/131)842+ZC_WS_LOC_17 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000784 0001                              (61/199)843+I        DC AL2(1)                  RPI 1065
000786                  0000008E         (61/131)844+ZC_WS_LOC_18 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000786 0002                              (61/199)845+J        DC AL2(2)                  RPI 1065
000788                  00000090         (61/131)846+ZC_WS_LOC_19 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000788 000000000C                        (61/204)847+GOOD     DC PL5'0'
00078D                  00000095         (61/131)848+ZC_WS_LOC_20 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
00078D 000000000C                        (61/204)849+BAD      DC PL5'0'
000792                  0000009A         (61/131)850+ZC_WS_LOC_21 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000792                                   (61/336)851+DEBUG_ITEM DS 0CL88
000792                  0000009A         (61/131)852+ZC_WS_LOC_22 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000792                                   (61/336)853+DEBUG_LINE DS CL6
000798                  000000A0         (61/131)854+ZC_WS_LOC_23 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000798 40                                (61/227)855+         DC CL1' '
000799                  000000A1         (61/131)856+ZC_WS_LOC_24 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000799                                   (61/336)857+DEBUG_NAME DS CL30
0007B7                  000000BF         (61/131)858+ZC_WS_LOC_25 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
0007B7 40                                (61/227)859+         DC CL1' '
0007B8                  000000C0         (61/131)860+ZC_WS_LOC_26 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
0007B8                                   (61/338)861+DEBUG_SUB_1 DS ZL4
0007BC                  000000C4         (61/131)862+ZC_WS_LOC_27 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
0007BC 40                                (61/227)863+         DC CL1' '
0007BD                  000000C5         (61/131)864+ZC_WS_LOC_28 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
0007BD                                   (61/338)865+DEBUG_SUB_2 DS ZL4
0007C1                  000000C9         (61/131)866+ZC_WS_LOC_29 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
0007C1 40                                (61/227)867+         DC CL1' '
0007C2                  000000CA         (61/131)868+ZC_WS_LOC_30 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
0007C2                                   (61/338)869+DEBUG_SUB_3 DS ZL4
0007C6                  000000CE         (61/131)870+ZC_WS_LOC_31 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
0007C6 40                                (61/227)871+         DC CL1' '
0007C7                  000000CF         (61/131)872+ZC_WS_LOC_32 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
0007C7                                   (61/336)873+DEBUG_CONTENTS DS CL35
0007EA                  000000F2         (61/131)874+ZC_WS_LOC_33 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
0007EA F1                                (61/251)875+TRUE     DC CL1'1'
0007EB                  000000F3         (61/131)876+ZC_WS_LOC_34 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
0007EB F0                                (61/251)877+FALSE    DC CL1'0'
0007EC                  000000F4         (61/131)878+ZC_WS_LOC_35 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
0007EC 0000                              (61/199)879+RETURN_CODE DC AL2(0)                  RPI 1065
0007EE                                     (6/15)880+*    ZCOBOL LINKAGE SECTION DATA ITEMS 
0007EE                                     (6/15)881+*    LVL DATA NAME                      ADDR     LEN      DUP TYP PIC        VALUE 
0007EE                                    (61/39)883+ZC_WSLOC LOCTR 
0007EE                                    (59/58)884+ZC_WSLOC LOCTR 
0007EE                  00000000          (59/60)885+ZC_WS_DIFF EQU  *-ZC_WS-246  DIFF BETWEEN ALLOC AND CALC WS
0007F0                                    (59/65)886+ZC_WS_END DS   0D
0007F0                                    (62/14)887+         MNOTE *,'ZCOBOL TOTAL SYMBOLS                 = 35'
0007F0                                    (62/15)888+         MNOTE *,'ZCOBOL TOTAL SYMBOL DUPLICATES       = 0'
0007F0                                    (62/16)889+         MNOTE *,'ZCOBOL TOTAL SYMBOL MAX DUP CHAIN    = 0'
0007F0                                    (62/17)890+         MNOTE *,'ZCOBOL TOTAL SYMBOL LEVEL 88         = 0'
0007F0                                    (62/18)891+         MNOTE *,'ZCOBOL TOTAL SYMBOL SET INDEXES      = 0'
0007F0                                    (62/19)892+         MNOTE *,'ZCOBOL TOTAL SYMBOL LINKAGE SECTIONS = 0'
0007F0                                    (62/20)893+         MNOTE *,'ZCOBOL TOTAL PROCEDURE SECTIONS      = 0'
0007F0                                    (62/21)894+         MNOTE *,'ZCOBOL TOTAL PROCEDURE PARAGRAPHS    = 3'
0007F0                                    (62/22)895+         MNOTE *,'ZCOBOL TOTAL PROCEDURE PARAGRAPH DUP = 0'
0007F0                                    (1/237)896          END 

Symbol Table Listing

 SYM=BAD      LOC=0000078D LEN=00000005 ESD=0001 TYPE=REL  XREF=849 680 716 
 SYM=DEBUG_CONTENTS LOC=000007C7 LEN=00000023 ESD=0001 TYPE=REL  XREF=873 
 SYM=DEBUG_ITEM LOC=00000792 LEN=00000058 ESD=0001 TYPE=REL  XREF=851 
 SYM=DEBUG_LINE LOC=00000792 LEN=00000006 ESD=0001 TYPE=REL  XREF=853 
 SYM=DEBUG_NAME LOC=00000799 LEN=0000001E ESD=0001 TYPE=REL  XREF=857 
 SYM=DEBUG_SUB_1 LOC=000007B8 LEN=00000004 ESD=0001 TYPE=REL  XREF=861 
 SYM=DEBUG_SUB_2 LOC=000007BD LEN=00000004 ESD=0001 TYPE=REL  XREF=865 
 SYM=DEBUG_SUB_3 LOC=000007C2 LEN=00000004 ESD=0001 TYPE=REL  XREF=869 
 SYM=FALSE    LOC=000007EB LEN=00000001 ESD=0001 TYPE=REL  XREF=877 
 SYM=FLT_SRT  LOC=00000750 LEN=00000004 ESD=0001 TYPE=REL  XREF=819 625 631 642 
 SYM=GOOD     LOC=00000788 LEN=00000005 ESD=0001 TYPE=REL  XREF=847 672 701 
 SYM=I        LOC=00000784 LEN=00000002 ESD=0001 TYPE=REL  XREF=843 490 498 508 515 
  527 553 561 571 597 
 SYM=J        LOC=00000786 LEN=00000002 ESD=0001 TYPE=REL  XREF=845 
 SYM=NFS2     LOC=00000768 LEN=00000004 ESD=0001 TYPE=REL  XREF=837 496 504 514 521 
  533 559 567 577 603 
 SYM=NGS2     LOC=00000770 LEN=00000008 ESD=0001 TYPE=REL  XREF=839 
 SYM=NHS2     LOC=00000780 LEN=00000002 ESD=0001 TYPE=REL  XREF=841 
 SYM=PFPO_RADIX LOC=00000001 LEN=00000001 ESD=0000 TYPE=ABS  XREF=112 
 SYM=PFPO_RND LOC=00000000 LEN=00000001 ESD=0000 TYPE=ABS  XREF=113 
 SYM=PFPO_TEST LOC=00000080 LEN=00000001 ESD=0000 TYPE=ABS  XREF=111 
 SYM=PFPO_TYPE_DB LOC=00000006 LEN=00000001 ESD=0000 TYPE=ABS  XREF=118 
 SYM=PFPO_TYPE_DD LOC=00000009 LEN=00000001 ESD=0000 TYPE=ABS  XREF=121 
 SYM=PFPO_TYPE_DH LOC=00000001 LEN=00000001 ESD=0000 TYPE=ABS  XREF=115 
 SYM=PFPO_TYPE_EB LOC=00000005 LEN=00000001 ESD=0000 TYPE=ABS  XREF=117 
 SYM=PFPO_TYPE_ED LOC=00000008 LEN=00000001 ESD=0000 TYPE=ABS  XREF=120 
 SYM=PFPO_TYPE_EH LOC=00000000 LEN=00000001 ESD=0000 TYPE=ABS  XREF=114 
 SYM=PFPO_TYPE_LB LOC=00000007 LEN=00000001 ESD=0000 TYPE=ABS  XREF=119 
 SYM=PFPO_TYPE_LD LOC=0000000A LEN=00000001 ESD=0000 TYPE=ABS  XREF=122 
 SYM=PFPO_TYPE_LH LOC=00000002 LEN=00000001 ESD=0000 TYPE=ABS  XREF=116 
 SYM=PG_BAD   LOC=0000067E LEN=00000002 ESD=0001 TYPE=REL  XREF=711 271 291 310 330 
  350 371 409 546 590 617 659 
 SYM=PG_BAD_END LOC=0000069E LEN=00000004 ESD=0001 TYPE=REL  XREF=726 272 292 311 
  331 351 372 410 547 591 618 660 
 SYM=PG_GOOD  LOC=0000065E LEN=00000002 ESD=0001 TYPE=REL  XREF=696 263 283 302 322 
  342 363 401 538 582 608 651 
 SYM=PG_GOOD_END LOC=00000678 LEN=00000004 ESD=0001 TYPE=REL  XREF=709 264 284 303 
  323 343 364 402 539 583 609 652 
 SYM=PG_IF_10_1 LOC=0000047E LEN=00000002 ESD=0001 TYPE=REL  XREF=544 536 
 SYM=PG_IF_10_E LOC=00000490 LEN=00000002 ESD=0001 TYPE=REL  XREF=550 543 
 SYM=PG_IF_11_1 LOC=0000050A LEN=00000002 ESD=0001 TYPE=REL  XREF=588 580 
 SYM=PG_IF_11_E LOC=0000051C LEN=00000002 ESD=0001 TYPE=REL  XREF=594 587 
 SYM=PG_IF_12_1 LOC=0000055A LEN=00000002 ESD=0001 TYPE=REL  XREF=614 606 
 SYM=PG_IF_12_E LOC=0000056C LEN=00000002 ESD=0001 TYPE=REL  XREF=621 613 
 SYM=PG_IF_13_1 LOC=000005E8 LEN=00000002 ESD=0001 TYPE=REL  XREF=657 649 
 SYM=PG_IF_13_E LOC=000005FA LEN=00000002 ESD=0001 TYPE=REL  XREF=663 656 
 SYM=PG_IF_1_1 LOC=00000132 LEN=00000002 ESD=0001 TYPE=REL  XREF=269 261 
 SYM=PG_IF_1_E LOC=00000144 LEN=00000002 ESD=0001 TYPE=REL  XREF=275 268 
 SYM=PG_IF_2_1 LOC=0000016C LEN=00000002 ESD=0001 TYPE=REL  XREF=289 281 
 SYM=PG_IF_2_E LOC=0000017E LEN=00000002 ESD=0001 TYPE=REL  XREF=295 288 
 SYM=PG_IF_3_1 LOC=000001A0 LEN=00000002 ESD=0001 TYPE=REL  XREF=308 300 
 SYM=PG_IF_3_E LOC=000001B2 LEN=00000002 ESD=0001 TYPE=REL  XREF=314 307 
 SYM=PG_IF_4_1 LOC=000001DA LEN=00000002 ESD=0001 TYPE=REL  XREF=328 320 
 SYM=PG_IF_4_E LOC=000001EC LEN=00000002 ESD=0001 TYPE=REL  XREF=334 327 
 SYM=PG_IF_5_1 LOC=00000214 LEN=00000002 ESD=0001 TYPE=REL  XREF=348 340 
 SYM=PG_IF_5_E LOC=00000226 LEN=00000002 ESD=0001 TYPE=REL  XREF=354 347 
 SYM=PG_IF_6_1 LOC=00000254 LEN=00000002 ESD=0001 TYPE=REL  XREF=369 361 
 SYM=PG_IF_6_E LOC=00000266 LEN=00000002 ESD=0001 TYPE=REL  XREF=375 368 
 SYM=PG_IF_7_1 LOC=000002C0 LEN=00000002 ESD=0001 TYPE=REL  XREF=407 399 
 SYM=PG_IF_7_E LOC=000002D2 LEN=00000002 ESD=0001 TYPE=REL  XREF=413 406 
 SYM=PG_IF_8_1 LOC=000002F4 LEN=00000002 ESD=0001 TYPE=REL  XREF=425 423 
 SYM=PG_IF_9_1 LOC=00000316 LEN=00000002 ESD=0001 TYPE=REL  XREF=437 435 
 SYM=PG_MAINLINE LOC=000000EC LEN=00000002 ESD=0001 TYPE=REL  XREF=247 
 SYM=PG_MAINLINE_END LOC=00000658 LEN=00000004 ESD=0001 TYPE=REL  XREF=694 
 SYM=PG_PM_15_A LOC=000002DC LEN=00000002 ESD=0001 TYPE=REL  XREF=418 486 
 SYM=PG_PM_15_E LOC=000003C4 LEN=00000002 ESD=0001 TYPE=REL  XREF=487 424 
 SYM=PG_PM_15_T LOC=000002E2 LEN=00000002 ESD=0001 TYPE=REL  XREF=420 417 
 SYM=PG_PM_16_A LOC=000002FE LEN=00000002 ESD=0001 TYPE=REL  XREF=430 484 
 SYM=PG_PM_16_E LOC=000003C0 LEN=00000002 ESD=0001 TYPE=REL  XREF=485 436 
 SYM=PG_PM_16_T LOC=00000304 LEN=00000002 ESD=0001 TYPE=REL  XREF=432 429 
 SYM=PVTCICS  LOC=00000020 LEN=00000001 ESD=0004 TYPE=REL  XREF=213 
 SYM=PVTDATE  LOC=00000008 LEN=00000008 ESD=0004 TYPE=REL  XREF=210 
 SYM=PVTEXTND LOC=00000021 LEN=00000001 ESD=0004 TYPE=REL  XREF=214 
 SYM=PVTMAXDL LOC=00000024 LEN=00000002 ESD=0004 TYPE=REL  XREF=217 
 SYM=PVTPGM   LOC=00000000 LEN=00000008 ESD=0004 TYPE=REL  XREF=209 
 SYM=PVTR64   LOC=00000023 LEN=00000001 ESD=0004 TYPE=REL  XREF=216 
 SYM=PVTTIME  LOC=00000010 LEN=00000008 ESD=0004 TYPE=REL  XREF=211 
 SYM=PVTTRUNC LOC=00000022 LEN=00000001 ESD=0004 TYPE=REL  XREF=215 
 SYM=PVTVER   LOC=00000018 LEN=00000008 ESD=0004 TYPE=REL  XREF=212 
 SYM=RETURN_CODE LOC=000007EC LEN=00000002 ESD=0001 TYPE=REL  XREF=879 690 719 730 
 SYM=S1       LOC=00000760 LEN=00000004 ESD=0001 TYPE=REL  XREF=833 378 384 416 419 
  421 445 462 
 SYM=S2       LOC=00000764 LEN=00000004 ESD=0001 TYPE=REL  XREF=835 380 391 428 431 
  433 453 469 
 SYM=SN_END_PROCEDURE LOC=000006A4 LEN=00000002 ESD=0001 TYPE=REL  XREF=728 
 SYM=T0       LOC=00000758 LEN=00000008 ESD=0001 TYPE=REL  XREF=821 257 
 SYM=T1       LOC=00000758 LEN=00000004 ESD=0001 TYPE=REL  XREF=823 
 SYM=T1_ID    LOC=00000758 LEN=00000001 ESD=0001 TYPE=REL  XREF=825 260 279 
 SYM=T2       LOC=00000759 LEN=00000001 ESD=0001 TYPE=REL  XREF=827 
 SYM=T2_ID    LOC=00000759 LEN=00000001 ESD=0001 TYPE=REL  XREF=829 298 317 337 357 
  383 461 
 SYM=TESTSIX1 LOC=00000000 LEN=000007F0 ESD=0001 TYPE=CST  XREF=8 245 
 SYM=TRUE     LOC=000007EA LEN=00000001 ESD=0001 TYPE=REL  XREF=875 
 SYM=WTO#0015_EOT LOC=00000060 LEN=00000001 ESD=0001 TYPE=REL  XREF=35 33 34 
 SYM=WTO#0016_EOT LOC=000000AA LEN=00000001 ESD=0001 TYPE=REL  XREF=52 50 51 
 SYM=WTO#0129_EOT LOC=00000105 LEN=00000001 ESD=0001 TYPE=REL  XREF=252 250 251 
 SYM=WTO#0524_EOT LOC=00000676 LEN=00000001 ESD=0001 TYPE=REL  XREF=706 704 705 
 SYM=WTO#0541_EOT LOC=0000069B LEN=00000001 ESD=0001 TYPE=REL  XREF=724 722 723 
 SYM=ZC390CVT LOC=00000000 LEN=000001F8 ESD=0003 TYPE=DST  XREF=137 41 
 SYM=ZC390PVT LOC=00000000 LEN=00000030 ESD=0004 TYPE=DST  XREF=208 
 SYM=ZCVT_ABORT LOC=00000068 LEN=00000004 ESD=0003 TYPE=REL  XREF=166 
 SYM=ZCVT_ABORT_ACCEPT LOC=0000000B LEN=00000001 ESD=0000 TYPE=ABS  XREF=176 
 SYM=ZCVT_ABORT_ALTER LOC=00000001 LEN=00000001 ESD=0000 TYPE=ABS  XREF=167 
 SYM=ZCVT_ABORT_CALL LOC=00000002 LEN=00000001 ESD=0000 TYPE=ABS  XREF=168 
 SYM=ZCVT_ABORT_CICS LOC=0000000A LEN=00000001 ESD=0000 TYPE=ABS  XREF=175 
 SYM=ZCVT_ABORT_DISPLAY LOC=00000003 LEN=00000001 ESD=0000 TYPE=ABS  XREF=169 
 SYM=ZCVT_ABORT_DIVQ LOC=00000009 LEN=00000001 ESD=0000 TYPE=ABS  XREF=174 
 SYM=ZCVT_ABORT_INT128 LOC=00000008 LEN=00000001 ESD=0000 TYPE=ABS  XREF=173 
 SYM=ZCVT_ABORT_MAXERR LOC=0000000B LEN=00000001 ESD=0000 TYPE=ABS  XREF=177 
 SYM=ZCVT_ABORT_OPEN LOC=00000004 LEN=00000001 ESD=0000 TYPE=ABS  XREF=170 
 SYM=ZCVT_ABORT_STACK LOC=00000006 LEN=00000001 ESD=0000 TYPE=ABS  XREF=171 
 SYM=ZCVT_ABORT_VERSION LOC=00000007 LEN=00000001 ESD=0000 TYPE=ABS  XREF=172 
 SYM=ZCVT_ACCEPT LOC=0000006C LEN=00000004 ESD=0003 TYPE=REL  XREF=178 
 SYM=ZCVT_ACCEPT_CONSOLE LOC=00000002 LEN=00000001 ESD=0000 TYPE=ABS  XREF=180 
 SYM=ZCVT_ACCEPT_DATE LOC=00000004 LEN=00000001 ESD=0000 TYPE=ABS  XREF=182 
 SYM=ZCVT_ACCEPT_DDNAME LOC=00000003 LEN=00000001 ESD=0000 TYPE=ABS  XREF=181 
 SYM=ZCVT_ACCEPT_DEFAULT LOC=00000001 LEN=00000001 ESD=0000 TYPE=ABS  XREF=179 
 SYM=ZCVT_ACCEPT_DOW LOC=00000006 LEN=00000001 ESD=0000 TYPE=ABS  XREF=184 
 SYM=ZCVT_ACCEPT_TIME LOC=00000005 LEN=00000001 ESD=0000 TYPE=ABS  XREF=183 
 SYM=ZCVT_CALL LOC=00000014 LEN=00000004 ESD=0003 TYPE=REL  XREF=142 
 SYM=ZCVT_CMP64R32 LOC=00000018 LEN=00000004 ESD=0003 TYPE=REL  XREF=143 
 SYM=ZCVT_CONVERTING LOC=00000008 LEN=00000001 ESD=0000 TYPE=ABS  XREF=189 
 SYM=ZCVT_CVTLBTQ LOC=0000001C LEN=00000004 ESD=0003 TYPE=REL  XREF=144 
 SYM=ZCVT_CVTLDTP LOC=00000020 LEN=00000004 ESD=0003 TYPE=REL  XREF=145 
 SYM=ZCVT_CVTQTLB LOC=00000024 LEN=00000004 ESD=0003 TYPE=REL  XREF=146 
 SYM=ZCVT_DISPLAY LOC=00000070 LEN=00000004 ESD=0003 TYPE=REL  XREF=185 482 686 
 SYM=ZCVT_DIV64R32 LOC=00000028 LEN=00000004 ESD=0003 TYPE=REL  XREF=147 
 SYM=ZCVT_DIVQ128 LOC=0000002C LEN=00000004 ESD=0003 TYPE=REL  XREF=148 
 SYM=ZCVT_END LOC=000001F8 LEN=00000001 ESD=0003 TYPE=REL  XREF=207 44 56 139 
 SYM=ZCVT_GOBACK LOC=00000030 LEN=00000004 ESD=0003 TYPE=REL  XREF=149 691 731 
 SYM=ZCVT_HIGH_VALUES LOC=00000090 LEN=00000010 ESD=0003 TYPE=REL  XREF=196 
 SYM=ZCVT_ID  LOC=00000000 LEN=00000004 ESD=0003 TYPE=REL  XREF=138 42 44 56 139 
 SYM=ZCVT_INSPECT LOC=00000074 LEN=00000004 ESD=0003 TYPE=REL  XREF=186 
 SYM=ZCVT_LEN LOC=00000004 LEN=00000004 ESD=0003 TYPE=REL  XREF=139 44 
 SYM=ZCVT_MPYQ128 LOC=00000034 LEN=00000004 ESD=0003 TYPE=REL  XREF=150 
 SYM=ZCVT_NDDX LOC=000000E8 LEN=00000010 ESD=0003 TYPE=REL  XREF=202 
 SYM=ZCVT_OSE64R32 LOC=00000038 LEN=00000004 ESD=0003 TYPE=REL  XREF=151 
 SYM=ZCVT_PERFORM LOC=0000003C LEN=00000004 ESD=0003 TYPE=REL  XREF=152 265 273 285 
  293 304 312 324 332 344 352 365 373 403 411 540 548 584 592 610 619 653 661 
 SYM=ZCVT_PMCHECK LOC=00000040 LEN=00000004 ESD=0003 TYPE=REL  XREF=153 694 709 726 
 SYM=ZCVT_PVTMAXDL LOC=00000078 LEN=00000002 ESD=0003 TYPE=REL  XREF=193 
 SYM=ZCVT_PWORK LOC=000000A0 LEN=00000008 ESD=0003 TYPE=REL  XREF=197 
 SYM=ZCVT_PWORK1 LOC=000000A8 LEN=00000010 ESD=0003 TYPE=REL  XREF=198 
 SYM=ZCVT_PWORK2 LOC=000000B8 LEN=00000010 ESD=0003 TYPE=REL  XREF=199 
 SYM=ZCVT_PWORK3 LOC=000000C8 LEN=00000010 ESD=0003 TYPE=REL  XREF=200 
 SYM=ZCVT_PWORK4 LOC=000000D8 LEN=00000010 ESD=0003 TYPE=REL  XREF=201 
 SYM=ZCVT_REPLACING LOC=00000004 LEN=00000001 ESD=0000 TYPE=ABS  XREF=188 
 SYM=ZCVT_ROUNDF LOC=00000044 LEN=00000004 ESD=0003 TYPE=REL  XREF=154 
 SYM=ZCVT_STACKEND LOC=00000050 LEN=00000004 ESD=0003 TYPE=REL  XREF=157 
 SYM=ZCVT_STACKORG LOC=00000048 LEN=00000004 ESD=0003 TYPE=REL  XREF=155 
 SYM=ZCVT_STACKPTR LOC=0000004C LEN=00000004 ESD=0003 TYPE=REL  XREF=156 
 SYM=ZCVT_STOPRUN LOC=00000054 LEN=00000004 ESD=0003 TYPE=REL  XREF=158 
 SYM=ZCVT_TALLYING LOC=00000000 LEN=00000001 ESD=0000 TYPE=ABS  XREF=187 
 SYM=ZCVT_TALPHAX LOC=00000058 LEN=00000004 ESD=0003 TYPE=REL  XREF=159 
 SYM=ZCVT_TNUMP LOC=0000005C LEN=00000004 ESD=0003 TYPE=REL  XREF=160 
 SYM=ZCVT_TNUMX LOC=00000060 LEN=00000004 ESD=0003 TYPE=REL  XREF=161 
 SYM=ZCVT_TNUMZ LOC=00000064 LEN=00000004 ESD=0003 TYPE=REL  XREF=162 
 SYM=ZCVT_VER LOC=00000008 LEN=00000008 ESD=0003 TYPE=REL  XREF=140 
 SYM=ZCVT_WORKAREA LOC=000000F8 LEN=00000100 ESD=0003 TYPE=REL  XREF=203 440 667 
 SYM=ZCVT_ZC390NUC LOC=00000010 LEN=00000004 ESD=0003 TYPE=REL  XREF=141 46 
 SYM=ZCVT_ZERO LOC=00000080 LEN=00000010 ESD=0003 TYPE=REL  XREF=195 
 SYM=ZC_E     LOC=00000008 LEN=00000001 ESD=0000 TYPE=ABS  XREF=93 
 SYM=ZC_EQ    LOC=00000008 LEN=00000001 ESD=0000 TYPE=ABS  XREF=105 261 281 300 320 
  340 361 399 536 580 606 649 
 SYM=ZC_F0    LOC=00000000 LEN=00000001 ESD=0000 TYPE=ABS  XREF=75 632 633 636 637 
  638 
 SYM=ZC_F10   LOC=0000000A LEN=00000001 ESD=0000 TYPE=ABS  XREF=85 
 SYM=ZC_F1    LOC=00000001 LEN=00000001 ESD=0000 TYPE=ABS  XREF=76 635 636 645 
 SYM=ZC_F11   LOC=0000000B LEN=00000001 ESD=0000 TYPE=ABS  XREF=86 
 SYM=ZC_F12   LOC=0000000C LEN=00000001 ESD=0000 TYPE=ABS  XREF=87 
 SYM=ZC_F13   LOC=0000000D LEN=00000001 ESD=0000 TYPE=ABS  XREF=88 
 SYM=ZC_F14   LOC=0000000E LEN=00000001 ESD=0000 TYPE=ABS  XREF=89 
 SYM=ZC_F15   LOC=0000000F LEN=00000001 ESD=0000 TYPE=ABS  XREF=90 
 SYM=ZC_F2    LOC=00000002 LEN=00000001 ESD=0000 TYPE=ABS  XREF=77 
 SYM=ZC_F3    LOC=00000003 LEN=00000001 ESD=0000 TYPE=ABS  XREF=78 
 SYM=ZC_F4    LOC=00000004 LEN=00000001 ESD=0000 TYPE=ABS  XREF=79 
 SYM=ZC_F5    LOC=00000005 LEN=00000001 ESD=0000 TYPE=ABS  XREF=80 
 SYM=ZC_F6    LOC=00000006 LEN=00000001 ESD=0000 TYPE=ABS  XREF=81 
 SYM=ZC_F7    LOC=00000007 LEN=00000001 ESD=0000 TYPE=ABS  XREF=82 
 SYM=ZC_F8    LOC=00000008 LEN=00000001 ESD=0000 TYPE=ABS  XREF=83 
 SYM=ZC_F9    LOC=00000009 LEN=00000001 ESD=0000 TYPE=ABS  XREF=84 
 SYM=ZC_GE    LOC=0000000B LEN=00000001 ESD=0000 TYPE=ABS  XREF=108 
 SYM=ZC_GT    LOC=00000002 LEN=00000001 ESD=0000 TYPE=ABS  XREF=106 
 SYM=ZC_H     LOC=00000002 LEN=00000001 ESD=0000 TYPE=ABS  XREF=91 423 435 
 SYM=ZC_L     LOC=00000004 LEN=00000001 ESD=0000 TYPE=ABS  XREF=92 
 SYM=ZC_LE    LOC=0000000D LEN=00000001 ESD=0000 TYPE=ABS  XREF=109 
 SYM=ZC_LOAD  LOC=00000038 LEN=00000002 ESD=0001 TYPE=REL  XREF=27 12 
 SYM=ZC_LOAD_OK LOC=00000068 LEN=00000002 ESD=0001 TYPE=REL  XREF=39 32 
 SYM=ZC_LT    LOC=00000004 LEN=00000001 ESD=0000 TYPE=ABS  XREF=107 
 SYM=ZC_M     LOC=00000004 LEN=00000001 ESD=0000 TYPE=ABS  XREF=99 
 SYM=ZC_NE    LOC=00000007 LEN=00000001 ESD=0000 TYPE=ABS  XREF=96 
 SYM=ZC_NH    LOC=0000000D LEN=00000001 ESD=0000 TYPE=ABS  XREF=94 
 SYM=ZC_NL    LOC=0000000B LEN=00000001 ESD=0000 TYPE=ABS  XREF=95 
 SYM=ZC_NM    LOC=0000000B LEN=00000001 ESD=0000 TYPE=ABS  XREF=102 
 SYM=ZC_NO    LOC=0000000E LEN=00000001 ESD=0000 TYPE=ABS  XREF=104 
 SYM=ZC_NP    LOC=0000000D LEN=00000001 ESD=0000 TYPE=ABS  XREF=101 
 SYM=ZC_NZ    LOC=00000007 LEN=00000001 ESD=0000 TYPE=ABS  XREF=103 
 SYM=ZC_O     LOC=00000001 LEN=00000001 ESD=0000 TYPE=ABS  XREF=97 
 SYM=ZC_P     LOC=00000002 LEN=00000001 ESD=0000 TYPE=ABS  XREF=98 
 SYM=ZC_R0    LOC=00000000 LEN=00000001 ESD=0000 TYPE=ABS  XREF=59 40 131 132 133 
  264 272 284 292 303 311 323 331 343 351 364 372 402 410 441 444 445 448 449 452 
  453 456 457 460 476 479 522 523 524 539 547 583 591 609 618 652 660 668 671 672 
  675 676 679 680 683 
 SYM=ZC_R10   LOC=0000000A LEN=00000001 ESD=0000 TYPE=ABS  XREF=69 
 SYM=ZC_R1    LOC=00000001 LEN=00000001 ESD=0000 TYPE=ABS  XREF=60 125 126 127 128 
  256 257 266 274 286 294 305 313 325 333 345 353 366 374 404 412 442 446 450 454 
  458 477 481 514 522 541 549 585 593 611 620 626 627 644 645 654 662 669 673 677 
  681 685 690 730 
 SYM=ZC_R11   LOC=0000000B LEN=00000001 ESD=0000 TYPE=ABS  XREF=70 
 SYM=ZC_R12   LOC=0000000C LEN=00000001 ESD=0000 TYPE=ABS  XREF=71 
 SYM=ZC_R13   LOC=0000000D LEN=00000001 ESD=0000 TYPE=ABS  XREF=72 124 126 127 128 
  129 130 132 385 392 463 470 491 499 509 516 528 554 562 572 598 
 SYM=ZC_R14   LOC=0000000E LEN=00000001 ESD=0000 TYPE=ABS  XREF=73 47 263 271 283 
  291 302 310 322 330 342 350 363 371 401 409 483 538 546 582 590 608 617 634 635 
  651 659 687 695 699 701 710 714 716 727 732 
 SYM=ZC_R15   LOC=0000000F LEN=00000001 ESD=0000 TYPE=ABS  XREF=74 9 31 37 46 47 
  54 134 265 266 273 274 285 286 293 294 304 305 312 313 324 325 332 333 344 345 
  352 353 365 366 373 374 384 385 386 387 388 390 391 392 393 394 395 397 403 404 
  411 412 462 463 464 465 466 468 469 470 471 472 473 475 482 483 490 491 492 493 
  494 496 498 499 500 501 502 504 508 509 510 511 512 514 515 516 517 518 519 521 
  527 528 529 530 531 533 540 541 548 549 553 554 555 556 557 559 561 562 563 564 
  565 567 571 572 573 574 575 577 584 585 592 593 597 598 599 600 601 603 610 611 
  619 620 653 654 661 662 686 687 691 692 694 695 709 710 726 727 731 732 
 SYM=ZC_R2    LOC=00000002 LEN=00000001 ESD=0000 TYPE=ABS  XREF=61 124 278 279 280 
  298 299 317 318 319 337 338 339 357 358 359 360 383 390 397 398 443 444 447 448 
  451 452 455 456 459 460 461 468 475 476 478 479 521 523 524 533 534 559 560 567 
  568 577 578 603 604 630 631 632 638 641 642 643 670 671 674 675 678 679 682 683 
 SYM=ZC_R3    LOC=00000003 LEN=00000001 ESD=0000 TYPE=ABS  XREF=62 440 444 448 452 
  456 460 479 480 481 496 497 504 505 624 625 627 667 671 675 679 683 684 685 
 SYM=ZC_R4    LOC=00000004 LEN=00000001 ESD=0000 TYPE=ABS  XREF=63 
 SYM=ZC_R5    LOC=00000005 LEN=00000001 ESD=0000 TYPE=ABS  XREF=64 
 SYM=ZC_R6    LOC=00000006 LEN=00000001 ESD=0000 TYPE=ABS  XREF=65 
 SYM=ZC_R7    LOC=00000007 LEN=00000001 ESD=0000 TYPE=ABS  XREF=66 
 SYM=ZC_R8    LOC=00000008 LEN=00000001 ESD=0000 TYPE=ABS  XREF=67 12 13 
 SYM=ZC_R9    LOC=00000009 LEN=00000001 ESD=0000 TYPE=ABS  XREF=68 40 41 
 SYM=ZC_SAVEAREA LOC=000006F8 LEN=00000048 ESD=0001 TYPE=REL  XREF=809 
 SYM=ZC_VER_ERR LOC=00000088 LEN=00000002 ESD=0001 TYPE=REL  XREF=49 43 45 
 SYM=ZC_VER_OK LOC=000000C8 LEN=00000002 ESD=0001 TYPE=REL  XREF=123 48 
 SYM=ZC_WS    LOC=000006F8 LEN=00000008 ESD=0001 TYPE=REL  XREF=136 125 129 384 391 
  462 469 490 498 508 515 527 553 561 571 597 808 810 812 814 816 818 820 822 824 
  826 828 832 834 836 838 840 842 844 846 848 850 852 854 856 858 860 862 864 866 
  868 870 872 874 876 878 885 
 SYM=ZC_WSLOC LOC=000006F6 LEN=000000FA ESD=0001 TYPE=CST  XREF=135 219 807 883 884 
 SYM=ZC_WS_DIFF LOC=00000000 LEN=00000001 ESD=0000 TYPE=ABS  XREF=885 
 SYM=ZC_WS_END LOC=000007F0 LEN=00000008 ESD=0001 TYPE=REL  XREF=886 131 
 SYM=ZC_WS_ID LOC=00000740 LEN=00000008 ESD=0001 TYPE=REL  XREF=811 
 SYM=ZC_WS_LEN LOC=0000074C LEN=00000004 ESD=0001 TYPE=REL  XREF=815 133 
 SYM=ZC_WS_LOC_10 LOC=00000061 LEN=00000001 ESD=0000 TYPE=ABS  XREF=826 
 SYM=ZC_WS_LOC_1 LOC=00000000 LEN=00000001 ESD=0000 TYPE=ABS  XREF=808 
 SYM=ZC_WS_LOC_11 LOC=00000061 LEN=00000001 ESD=0000 TYPE=ABS  XREF=828 
 SYM=ZC_WS_LOC_12 LOC=00000068 LEN=00000001 ESD=0000 TYPE=ABS  XREF=832 
 SYM=ZC_WS_LOC_13 LOC=0000006C LEN=00000001 ESD=0000 TYPE=ABS  XREF=834 
 SYM=ZC_WS_LOC_14 LOC=00000070 LEN=00000001 ESD=0000 TYPE=ABS  XREF=836 
 SYM=ZC_WS_LOC_15 LOC=00000078 LEN=00000001 ESD=0000 TYPE=ABS  XREF=838 
 SYM=ZC_WS_LOC_16 LOC=00000088 LEN=00000001 ESD=0000 TYPE=ABS  XREF=840 
 SYM=ZC_WS_LOC_17 LOC=0000008C LEN=00000001 ESD=0000 TYPE=ABS  XREF=842 
 SYM=ZC_WS_LOC_18 LOC=0000008E LEN=00000001 ESD=0000 TYPE=ABS  XREF=844 
 SYM=ZC_WS_LOC_19 LOC=00000090 LEN=00000001 ESD=0000 TYPE=ABS  XREF=846 
 SYM=ZC_WS_LOC_20 LOC=00000095 LEN=00000001 ESD=0000 TYPE=ABS  XREF=848 
 SYM=ZC_WS_LOC_2 LOC=00000048 LEN=00000001 ESD=0000 TYPE=ABS  XREF=810 
 SYM=ZC_WS_LOC_21 LOC=0000009A LEN=00000001 ESD=0000 TYPE=ABS  XREF=850 
 SYM=ZC_WS_LOC_22 LOC=0000009A LEN=00000001 ESD=0000 TYPE=ABS  XREF=852 
 SYM=ZC_WS_LOC_23 LOC=000000A0 LEN=00000001 ESD=0000 TYPE=ABS  XREF=854 
 SYM=ZC_WS_LOC_24 LOC=000000A1 LEN=00000001 ESD=0000 TYPE=ABS  XREF=856 
 SYM=ZC_WS_LOC_25 LOC=000000BF LEN=00000001 ESD=0000 TYPE=ABS  XREF=858 
 SYM=ZC_WS_LOC_26 LOC=000000C0 LEN=00000001 ESD=0000 TYPE=ABS  XREF=860 
 SYM=ZC_WS_LOC_27 LOC=000000C4 LEN=00000001 ESD=0000 TYPE=ABS  XREF=862 
 SYM=ZC_WS_LOC_28 LOC=000000C5 LEN=00000001 ESD=0000 TYPE=ABS  XREF=864 
 SYM=ZC_WS_LOC_29 LOC=000000C9 LEN=00000001 ESD=0000 TYPE=ABS  XREF=866 
 SYM=ZC_WS_LOC_30 LOC=000000CA LEN=00000001 ESD=0000 TYPE=ABS  XREF=868 
 SYM=ZC_WS_LOC_3 LOC=00000050 LEN=00000001 ESD=0000 TYPE=ABS  XREF=812 
 SYM=ZC_WS_LOC_31 LOC=000000CE LEN=00000001 ESD=0000 TYPE=ABS  XREF=870 
 SYM=ZC_WS_LOC_32 LOC=000000CF LEN=00000001 ESD=0000 TYPE=ABS  XREF=872 
 SYM=ZC_WS_LOC_33 LOC=000000F2 LEN=00000001 ESD=0000 TYPE=ABS  XREF=874 
 SYM=ZC_WS_LOC_34 LOC=000000F3 LEN=00000001 ESD=0000 TYPE=ABS  XREF=876 
 SYM=ZC_WS_LOC_35 LOC=000000F4 LEN=00000001 ESD=0000 TYPE=ABS  XREF=878 
 SYM=ZC_WS_LOC_4 LOC=00000054 LEN=00000001 ESD=0000 TYPE=ABS  XREF=814 
 SYM=ZC_WS_LOC_5 LOC=00000058 LEN=00000001 ESD=0000 TYPE=ABS  XREF=816 
 SYM=ZC_WS_LOC_6 LOC=00000058 LEN=00000001 ESD=0000 TYPE=ABS  XREF=818 
 SYM=ZC_WS_LOC_7 LOC=00000060 LEN=00000001 ESD=0000 TYPE=ABS  XREF=820 
 SYM=ZC_WS_LOC_8 LOC=00000060 LEN=00000001 ESD=0000 TYPE=ABS  XREF=822 
 SYM=ZC_WS_LOC_9 LOC=00000060 LEN=00000001 ESD=0000 TYPE=ABS  XREF=824 
 SYM=ZC_WS_START LOC=00000748 LEN=00000004 ESD=0001 TYPE=REL  XREF=813 130 
 SYM=ZC_Z     LOC=00000008 LEN=00000001 ESD=0000 TYPE=ABS  XREF=100 

Literal Table Listing

 LIT=A(ZCVT_END-ZCVT_ID) LOC=000000C4 LEN=00000004 ESD=0001 POOL=0001 XREF=44 
 LIT=C'ZCVT'  LOC=000000C0 LEN=00000004 ESD=0001 POOL=0001 XREF=42 
 LIT=CL14' BAD TESTS = ' LOC=000006E8 LEN=0000000E ESD=0001 POOL=0002 XREF=676 
 LIT=CL2')='  LOC=000006D0 LEN=00000002 ESD=0001 POOL=0002 XREF=457 
 LIT=CL2','   LOC=000006CE LEN=00000002 ESD=0001 POOL=0002 XREF=449 
 LIT=CL22'TESTSIX1 GOOD TESTS =' LOC=000006D2 LEN=00000016 ESD=0001 POOL=0002 XREF=668 
 LIT=CL6'T2-ID(' LOC=000006C8 LEN=00000006 ESD=0001 POOL=0002 XREF=441 
 LIT=CL8'1ABC2DEF' LOC=000006B0 LEN=00000008 ESD=0001 POOL=0002 XREF=256 
 LIT=CL8'ZC390LIB' LOC=000000B8 LEN=00000008 ESD=0001 POOL=0001 XREF=28 
 LIT=DD'2.2'  LOC=000006B8 LEN=00000008 ESD=0001 POOL=0002 XREF=634 
 LIT=ED'1.1'  LOC=000006C0 LEN=00000004 ESD=0001 POOL=0002 XREF=626 
 LIT=ED'3.3'  LOC=000006C4 LEN=00000004 ESD=0001 POOL=0002 XREF=644 
 
AZ390I total mnote warnings = 0
AZ390I total mnote errors   = 0
AZ390I max   mnote level    = 0
AZ390I total mz390 errors   = 0
AZ390I total az390 errors   = 0
TESTSIX1  MZ390 ENDED   RC= 0 MEM(MB)= MB IO=25752
