P6MM1    ZMFACC CODE,START,NAME='Melvyn Maltz'
*
* METHOD 1 57.2 mS
* USES SLDL
*
         SR R2,R2 CLEAR R2
         SR R3,R3 CLEAR R3
         LA R4,BITS1 OUTPUT AREA
         LA R5,8 COUNT
         ICM R3,8,BYTE INSERT BYTE AT TOP
BITLOOP1 EQU *
         SLDL R2,1 SHIFT NEXT BIT INTO R2
         LTR R2,R2 IS IT 1 ?
         BZ INCR EXIT IF NOT
         MVI 0(R4),C'1' MARK IT
         SR R2,R2 CLEAR R2
INCR EQU *
         AHI R4,1 BUMP OUTPUT POINTER
         BCT R5,BITLOOP1 LOOP
*
* METHOD 2 2.4mS
* USES 2K TABLE
         SR R2,R2 CLEAR R2
         IC R2,BYTE INSERT BYTE TO CONVERT
         SLL R2,3 * 8
         LA R3,BITABLE1(R2) INDEX
         MVC BITS2(8),0(R3) MOVE TO OUTPUT
*
* METHOD 3 5mS
* USES 64-BYTE TABLE
         SR R2,R2 CLEAR R2
         SR R3,R3 CLEAR R3
         ICM R3,8,BYTE INSERT BYTE AT TOP
         SLDL R2,4 SHIFT 1ST NIBBLE
         SLL R2,2 * 4
         LA R2,BITABLE2(R2) INDEX
         MVC BITS3(4),0(R2) MOVE TO OUTPUT
         SR R2,R2 CLEAR R2
         SLDL R2,4 SHIFT 2ND NIBBLE
         SLL R2,2 * 4
         LA R2,BITABLE2(R2) INDEX
         MVC BITS3+4(4),0(R2) MOVE TO OUTPUT
*
* METHOD 4 49mS WITHOUT FLAG CONVERSION...44.3mS
* USES ROTATE, WITH ADDED FLAG CONVERSION
         SR R2,R2 CLEAR R2
         SR R3,R3 CLEAR R3
         LA R4,WORK OUTPUT AREA
         LA R5,8 COUNT
         ICM R3,8,BYTE INSERT BYTE AT TOP
         LR R2,R3 COPY TO R2
BITLOOP4 EQU *
         LTR R2,R2 TEST IT
         BNM INCR4 EXIT IF -VE
         MVI 0(R4),X'FF' MARK IT
INCR4 EQU *
         AHI R4,1 BUMP OUTPUT POINTER
         RLL R2,R3,1 ROTATE LEFT INTO R2
         LR R3,R2 COPY BACK
         BCT R5,BITLOOP4 LOOP
* CONVERT TO INDICATOR FLAGS
         XC BITS4(8),WORK INVERT IT
         OC WORK,ZEROS MARK THE ZEROS
         OC BITS4(8),ONES MARK THE ONES
         NC BITS4(8),WORK COMBINE
*
P6MM1    ZMFACC CODE,END
*
P6MM1    ZMFACC INPUT,START
BYTE DC X'AB' A NICE BYTE
P6MM1    ZMFACC INPUT,END
*
P6MM1    ZMFACC OUTPUT,START
BITS1 DC 8C'0'
BITS2 DC 8C'0'
BITS3 DC 8C'0'
BITS4 DC 8X'FF'
P6MM1    ZMFACC OUTPUT,END
*
BITABLE1 EQU * 2K TABLE
         DC C'00000000'
         DC (X'AB'-X'01')CL8' ' I'M NOT DOING IT
         DC C'10101011'
         DC (X'FF'-X'AC')CL8' ' I'M NOT DOING IT
         DC C'11111111'
*
BITABLE2 EQU * 64-BYTE TABLE
         DC C'0000'
         DC C'0001'
         DC C'0010'
         DC C'0011'
         DC C'0100'
         DC C'0101'
         DC C'0110'
         DC C'0111'
         DC C'1000'
         DC C'1001'
         DC C'1010'
         DC C'1011'
         DC C'1100'
         DC C'1101'
         DC C'1110'
         DC C'1111'
*
ZEROS DC 8C'.'
ONES DC C'12345678'
WORK DS XL8
         END
