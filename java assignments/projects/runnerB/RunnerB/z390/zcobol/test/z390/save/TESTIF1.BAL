*    ZCOBOL PGM='zcobol\test\TESTIF1' VER=V1.5.06 MM/DD/YY  
*    ZCOBOL OPTIONS=() 
         COPY  TESTIF1_ZC_LABELS.CPY
*        IDENTIFICATION DIVISION.
*        PROGRAM-ID.    TESTIF1.
         PRINT NOLIST,NOGEN,NOLISTUSE    SET LIST OPTION FOR INTERNAL CX
               ODE
TESTIF1  CSECT ,                CSECT WITH PROCEDURE CODE AND WS
         USING *,ZC_R15
         STM   14,12,12+4*(14-14)(13)
         CNOP  4,8             FORCE ZC390PVT TO DOUBLEWORD BOUNDARY
         BRAS  ZC_R8,ZC_LOAD
         USING *,ZC_R8            BASE FOR LOAD AND CICS V5 USE
*
*  THESE FIELDS MUST BE KEPT IN SYNC WITH zcobol\ZC390PVT.CPY
*
         DC    CL8'TESTIF1'    PVTPGM   ZCOBOL PGM NAME
         DC    CL8'01/02/05'   PVTDATE  ZCOBOL COMPILE DATE
         DC    CL8'22.33'   PVTTIME  ZCOBOL COMPILE TIME
         DC    CL8'V1.5.06'    PVTVER   ZCOBOL COMPILER VERSION
         DC    C'0'     PVTCICS  ZCOBOL EXEC CICS PGM
         DC    C'1'   PVTEXTND ZCOBOL EXTENDED PRECISION
         DC    C'0'    PVTTRUNC ZCOBOL TRUNCATE TO PICTURE
         DC    C'1'      PVTR64   ZCOBOL USE 64 BIT REGISTERS
         DC    H'80' MAX DISPLAY LINE LEN  RPI 1118
         DS    XL10            RESERVED
ZC_LOAD  DS    0H
         LA    0,=CL8'ZC390LIB'
         SR    15,15 USE DEFAULT SYS390 SEARCH
         SVC   8 LOAD R0=A(NAME) R15=DDNAME/DSNAME ADDR OR 0
         LTR   ZC_R15,ZC_R15
         JZ    ZC_LOAD_OK
         BRAS  1,*+(WTO#0015_EOT-*+1)/2*2
         DC    AL2(WTO#0015_EOT-*,0),C'ZC390LIB NOT FOUND'
WTO#0015_EOT     EQU *
         SVC   35
         LA  ZC_R15,16
         SVC 3      EXIT TO CALLER WITH RC=16
ZC_LOAD_OK DS  0H
         LR    ZC_R9,ZC_R0
         USING ZC390CVT,ZC_R9    R9=CVT
         CLC   ZCVT_ID,=C'ZCVT'              CHECK ZCVT ID AND LENGTH
         JNE   ZC_VER_ERR                    IN ZC390LIB.390 MATCH
         CLC   ZCVT_LEN,=A(ZCVT_END-ZCVT_ID) ZCOBOL PGM COMPILED ID/LEN
         BNE   ZC_VER_ERR
         L     ZC_R15,ZCVT_ZC390NUC
         BASR  ZC_R14,ZC_R15 CALL ZC390NUC TO VERIFY VER, OPTIONS
         J     ZC_VER_OK
ZC_VER_ERR DS 0H
         BRAS  1,*+(WTO#0016_EOT-*+1)/2*2
         DC    AL2(WTO#0016_EOT-*,0),C'ZC390LIB ZCVT VERIFY ERROR'
WTO#0016_EOT     EQU *
         SVC   35
         LA  ZC_R15,16
         SVC 3      EXIT TO CALLER WITH RC=16
         LTORG 
         PUSH  PRINT,NOPRINT
         PRINT OFF,NOPRINT
ZC_R0    EQU   0
ZC_R1    EQU   1
ZC_R2    EQU   2
ZC_R3    EQU   3
ZC_R4    EQU   4
ZC_R5    EQU   5
ZC_R6    EQU   6
ZC_R7    EQU   7
ZC_R8    EQU   8
ZC_R9    EQU   9
ZC_R10   EQU  10
ZC_R11   EQU  11
ZC_R12   EQU  12
ZC_R13   EQU  13
ZC_R14   EQU  14
ZC_R15   EQU  15
ZC_F0    EQU   0
ZC_F1    EQU   1
ZC_F2    EQU   2
ZC_F3    EQU   3
ZC_F4    EQU   4
ZC_F5    EQU   5
ZC_F6    EQU   6
ZC_F7    EQU   7
ZC_F8    EQU   8
ZC_F9    EQU   9
ZC_F10   EQU  10
ZC_F11   EQU  11
ZC_F12   EQU  12
ZC_F13   EQU  13
ZC_F14   EQU  14
ZC_F15   EQU  15
ZC_H     EQU   2   HIGH
ZC_L     EQU   4   LOW
ZC_E     EQU   8   EQUAL
ZC_NH    EQU   13  NOT HIGHT
ZC_NL    EQU   11  NOT LOW
ZC_NE    EQU   7   NOT EQUAL
ZC_O     EQU   1   OVERFLOW
ZC_P     EQU   2   POSITIVE
ZC_M     EQU   4   MINUS
ZC_Z     EQU   8   ZERO
ZC_NP    EQU   13  NOT POSITIVE
ZC_NM    EQU   11  NOT MINUS
ZC_NZ    EQU   7   NOT ZERO
ZC_NO    EQU   14  NOT OVERFLOW
ZC_EQ    EQU   8   EQUAL
ZC_GT    EQU   2   GREATER THAN
ZC_LT    EQU   4   LESS    THAN
ZC_GE    EQU   11  GREATER THAN OR EQUAL
ZC_LE    EQU   13  LESS    THAN OR EQUAL
         POP   PRINT,NOPRINT
PFPO_TEST    EQU  X'80' PFPO TEST IF VALID OPCODE (NOT SUPPORTED YET)
PFPO_RADIX   EQU  1 PFPO OPCODE - CONVERT FROM ONE RADIX TO ANOTHER
PFPO_RND     EQU  0 PFOP ROUNDING OPTION (ONLY DEFAULT ALLOWED)
PFPO_TYPE_EH EQU  0 EH HFP SHORT     32 BITS 7  DIGITS
PFPO_TYPE_DH EQU  1 ED HFP LONG      64 BITS 15 DIGITS
PFPO_TYPE_LH EQU  2 EL HFP EXTENDED 128 BITS 30 DIGITS
PFPO_TYPE_EB EQU  5 EB BFP SHORT     32 BITS 7  DIGITS
PFPO_TYPE_DB EQU  6 DB BFP LONG      64 BITS 16 DIGITS
PFPO_TYPE_LB EQU  7 LB BFP EXTENDED 128 BITS 34 DIGITS
PFPO_TYPE_ED EQU  8 ED DFP SHORT     32 BITS 7  DIGITS
PFPO_TYPE_DD EQU  9 DD DFP LONG      64 BITS 16 DIGITS
PFPO_TYPE_LD EQU 10 LD DFP EXTENDED 128 BITS 34 DIGITS
ZC_VER_OK DS   0H
         L     ZC_R2,24(ZC_R13) SET ZC_R2=PARMLIST ADDRESS AFTER LOAD
         LARL  ZC_R1,ZC_WS     ZC_R2=A(WORKING STORAGE WITH SAVEAREA)
         ST    ZC_R1,8(ZC_R13) FORWARD  SAVE CHAIN
         ST    ZC_R13,4(ZC_R1) BACKWARD SAVE CHAIN
         LR    ZC_R13,ZC_R1    LINK SAVE AREA IN ZC390CVT
         USING ZC_WS,ZC_R13    BASE FOR ZCOBOL WS (SEE GEN_SYM_RX.MAC)
         ST    ZC_R13,ZC_WS_START  SAVE ADDR WS IN WS PREFIX
         LARL  ZC_R0,ZC_WS_END
         SR    ZC_R0,ZC_R13
         ST    ZC_R0,ZC_WS_LEN     SAVE LENGTH OF WS IN WS PREFIX
         DROP  ZC_R15              RPI 1042
ZC_WSLOC LOCTR 
ZC_WS    DS    0D           START WORKING STORAGE
ZC390CVT DSECT 
ZCVT_ID            DC    C'ZCVT'             ZCVT ID  VERIFIED BY ZCOB
ZCVT_LEN           DC    A(ZCVT_END-ZCVT_ID) ZCVT LEN VERIFIED BY ZCOB
ZCVT_VER           DC    CL8'V1.5.06'    ZCVT VER VERIFIED BY ZC390NUC
ZCVT_ZC390NUC  DC V(ZC390NUC)      MODULE  SYSTEM ROUTINE MODULE INIT
ZCVT_CALL           DC V(CALL)       ENTRY R0=A(PGM),R1=A(PARMLIST)
ZCVT_CMP64R32       DC V(CMP64R32)   ENTRY COMPARE R0-1=FLD1 R2-3=FLD2
ZCVT_CVTLBTQ        DC V(CVTLBTQ)    ENTRY CVT LB IN F4-6 TO Q IN R0-1
ZCVT_CVTLDTP        DC V(CVTLDTP)    ENTRY CVT LD IN F0-2 TO PL31 R0-1
ZCVT_CVTQTLB        DC V(CVTQTLB)    ENTRY CVT Q IN R0-1 TO LB IN F4-6
ZCVT_DIV64R32       DC V(DIV64R32)   ENTRY DIVIDE R0-1=N64, R2-3=MAX64
ZCVT_DIVQ128        DC V(DIVQ128)    ENTRY DIVIDE Q128 R0-R1 BY R2-R3
ZCVT_GOBACK         DC V(GOBACK)     ENTRY R1=RC
ZCVT_MPYQ128        DC V(MPYQ128)    ENTRY MULTIPLY Q128 R0-R1 BY R2-R3
ZCVT_OSE64R32       DC V(OSE64R32)   ENTRY ON SIZE ERR R0-1=N, R2-3=MAX
ZCVT_PERFORM        DC V(PERFORM)    ENTRY R14=PGTAR,R0=PGEXT,R1=PMRET
ZCVT_PMCHECK        DC V(PMCHECK)    ENTRY R14=RETURN TO NEXT INSTR.
ZCVT_ROUNDF         DC V(ROUNDF)     ENTRY R0=REM,R1=QUO,R2=DIVISOR
ZCVT_STACKORG       DC V(STACKORG)   ENTRY PERFORM STACK ORIGIN
ZCVT_STACKPTR       DC V(STACKPTR)   ENTRY CUR ENTRY A(PG_END+4,RET)
ZCVT_STACKEND       DC V(STACKEND)   ENTRY PERFORM STACK END
ZCVT_STOPRUN        DC V(STOPRUN)    ENTRY R1=RC
ZCVT_TALPHAX        DC V(TALPHAX)    ENTRY TEST ALPHABETIC X
ZCVT_TNUMP          DC V(TNUMP)      ENTRY TEST NUMERIC P
ZCVT_TNUMX          DC V(TNUMX)      ENTRY TEST NUMERIC X
ZCVT_TNUMZ          DC V(TNUMZ)      ENTRY TEST NUMERIC Z
*
* ADDITIONAL SEPARATE MODULES LINKED WITH Z390NUC IN ZC390LIB.390
*
ZCVT_ABORT     DC V(ABORT)         MODULE  R1=ABORT ERROR MSG #
ZCVT_ABORT_ALTER   EQU    1 ABORT ALTER DUE TO BRC NOT FOUND AT TARGET
ZCVT_ABORT_CALL    EQU    2 ABORT DYNAMIC CALL - PGM NOT FOUND
ZCVT_ABORT_DISPLAY EQU    3 ABORT DISPLAY DUE TO BUFFER EXCEEDED
ZCVT_ABORT_OPEN    EQU    4 ABORT OPEN  INVALID DCB
ZCVT_ABORT_STACK   EQU    6 ABORT PEROFRM STACK OVERFLOW
ZCVT_ABORT_VERSION EQU    7 ABORT ZC390NUC INIT ZCOBOL VERSION ERROR
ZCVT_ABORT_INT128  EQU    8 ABORT INTEGER 128 CONVERSION OVERFLO
ZCVT_ABORT_DIVQ    EQU    9 ABORT DIVIDE Q IF DIVISOR 0 OR > 2**63
ZCVT_ABORT_CICS    EQU   10 ABORT THIS PGM REQUIRES EXEC CICS TRANS MGR
ZCVT_ABORT_ACCEPT  EQU   11 ABORT ACCEPT EOF
ZCVT_ABORT_MAXERR  EQU   11 ABORT MAX ERROR CODE
ZCVT_ACCEPT    DC V(ACCEPT)        MODULE  R1=A(TYPE,FLD_ADD,FLD_LEN)
ZCVT_ACCEPT_DEFAULT EQU   1 INPUT DEFAULT DDNAME=SYSIN
ZCVT_ACCEPT_CONSOLE EQU   2 INPUT VIA WTOR FROM CONSOLE
ZCVT_ACCEPT_DDNAME  EQU   3 INPUT FROM DDNAME WITH DDNAME ADDR IN R3
ZCVT_ACCEPT_DATE    EQU   4 RETURN DAY OF WEEK PIC 9(8) MMDDYYYY
ZCVT_ACCEPT_TIME    EQU   5 RETURN DAY OF WEEK PIC 9(8) HHMMSSTH
ZCVT_ACCEPT_DOW     EQU   6 RETURN DAY OF WEEK PIC 9 1-7
ZCVT_DISPLAY   DC V(DISPLAY)       MODULE  R1=A(ADDR,LEN,TYPE)
ZCVT_INSPECT   DC V(INSPECT)       MODULE  R0=TYPE,R1=PARMLIST
ZCVT_TALLYING      EQU   0 INSPECT TALLYING
ZCVT_REPLACING     EQU   4 INSPECT REPLACING
ZCVT_CONVERTING    EQU   8 INSPECT CONVERTING
*
* SHARED DATA AREAS
*
ZCVT_PVTMAXDL  DS H          MAXIMUM DISPLAY LINE LENGTH  RPI 1118
               DS 0D
ZCVT_ZERO      DC XL16'00'   BINARY ZEROS
ZCVT_HIGH_VALUES DC 0XL16,16X'FF' BINARY FF'S     RPI 1181
ZCVT_PWORK     DS PL8        CVD/CVB WORK
ZCVT_PWORK1    DS PL16       DIV DIVIDEND, CVDG/CVBG WORK
ZCVT_PWORK2    DS PL16       DIV DIVISOR
ZCVT_PWORK3    DS PL16       DIV QUOTIENT
ZCVT_PWORK4    DS PL16       DIV REMAINDER
ZCVT_NDDX      DS XL16       DIV DIVIDEND HOLD AREA
ZCVT_WORKAREA  DS XL256      GEN_INSPECT PARMS, GEN_EDIT WORK, ETC.
*
* END OF ZC390CVT
*
ZCVT_END   EQU   *
ZC390PVT DSECT 
PVTPGM   DS    CL8  ZCOBOL PGM NAME
PVTDATE  DS    CL8  ZCOBOL COMPILE DATE
PVTTIME  DS    CL8  ZCOBOL COMPILE TIME
PVTVER   DS    CL8  ZCOBOL COMPILER VERSION
PVTCICS  DS    C    ZCOBOL EXEC CICS PGM
PVTEXTND DS    C    ZCOBOL EXTENDED PRECISION
PVTTRUNC DS    C    ZCOBOL TRUNCATE TO PICTURE
PVTR64   DS    C    ZCOBOL USE 64 BIT REGISTERS
PVTMAXDL DS    H    ZCOBOL MAX DISPLAY LINE LENGTH
         DS    XL10 RESERVED
ZC_WSLOC LOCTR              CONTINUE WS FOR FD AND DATA
*        AUTHOR.        DON HIGGINS.
*        DATE-WRITTEN.  10/13/08.
*      * TEST IF ELSE END-IF
*        ENVIRONMENT DIVISION.
*        DATA DIVISION.
         PRINT DATA
*        WORKING-STORAGE SECTION.
*        77 A       PIC 9 VALUE 1.
*        77 B       PIC 9 VALUE 2.
*        77 C       PIC 9 VALUE 3.
*        77 D       PIC 9 VALUE 4.
*        77 ERRORS  PIC X VALUE 'F'.
*        01  H1 PIC S9(4) COMP OCCURS 2 TIMES.
*            88 H1-ZERO VALUE 10.
*        01  H2 PIC S9(4) COMP OCCURS 2 TIMES.
*            88 H2-ONE-TWO  VALUES 11 12.
*      * THE FOLLOWING ARE 9 SUPPORTED FLOATING POINT TYPES
*        77 HFP-SRT FLOAT-HEX-7      VALUE 1234.
*        77 HFP-LNG FLOAT-HEX-15     VALUE 1234.
*        77 HFP-EXT FLOAT-HEX-30     VALUE 1234.
*        77 BFP-SRT FLOAT-BINARY-7   VALUE 1234.
*        77 BFP-LNG FLOAT-BINARY-16  VALUE 1234.
*        77 BFP-EXT FLOAT-BINARY-34  VALUE 1234.
*        77 DFP-SRT FLOAT-DECIMAL-7  VALUE 1234.
*        77 DFP-LNG FLOAT-DECIMAL-16 VALUE 1234.
*        77 DFP-EXT FLOAT-DECIMAL-34 VALUE 1234.
*      * THE FOLLOWING 4 TYPES DEFINE 16, 32, 64, AND 128 BINARY TYPES
*        77 HW      COMP PIC S9(4)  VALUE 1234.
*        77 FW      COMP PIC S9(9)  VALUE 1234.
*        77 DW      COMP PIC S9(18) VALUE 1234.
*        77 QW      COMP PIC S9(39) VALUE 1234.
*      * THE FOLLOWING 2 TYPES DEFINE 31 DIGIT PACKED AND ZONED DECIMAL
*        77 PD      COMP-3 PIC S9(31) VALUE 1234.
*        77 ZD             PIC S9(31) VALUE 1234.
*        77  GOOD COMP-3 PIC S9(4) VALUE 0.
*        PROCEDURE DIVISION.
*ZC   PROCEDURE DIVISION
         PRINT LIST,GEN,LISTUSE TURN PRINT LISTING ON FOR USER CODE GEN
TESTIF1  CSECT                SWITCH TO PROCEDURE CODE AHEAD OF WS
*        MAINLINE.
PG_MAINLINE DS 0H
*            DISPLAY 'TESTIF1 STARTING'
*ZC     39         DISPLAY 'TESTIF1 STARTING'
         BRAS  1,*+(WTO#0156_EOT-*+1)/2*2
         DC    AL2(WTO#0156_EOT-*,0),C'TESTIF1 STARTING'
WTO#0156_EOT     EQU *
         SVC   35
*      1     IF A = B
*ZC     40      1  IF    A,=,B
         PACK  ZCVT_PWORK1(1),0+A(1) PACK #1 NORMAL
         PACK  ZCVT_PWORK2(1),0+B(1) PACK #1 NORMAL
         CP    ZCVT_PWORK1(1),ZCVT_PWORK2(1)
         BRC   15-ZC_EQ,PG_IF_1_1
*               DISPLAY 'A NOT < B' PERFORM BAD ELSE PERFORM GOOD.
*ZC     41         DISPLAY 'A NOT < B'
         BRAS  1,*+(WTO#0169_EOT-*+1)/2*2
         DC    AL2(WTO#0169_EOT-*,0),C'A NOT < B'
WTO#0169_EOT     EQU *
         SVC   35
*ZC     41         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC     41         ELSE
         J     PG_IF_1_E
PG_IF_1_1    DS    0H  &TYPE
*ZC     41         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_1_E    DS    0H  &TYPE
*      2     IF A EQUAL B
*ZC     42      2  IF    A,EQUAL,B
         PACK  ZCVT_PWORK1(1),0+A(1) PACK #1 NORMAL
         PACK  ZCVT_PWORK2(1),0+B(1) PACK #1 NORMAL
         CP    ZCVT_PWORK1(1),ZCVT_PWORK2(1)
         BRC   15-ZC_EQ,PG_IF_2_1
*               DISPLAY 'A NOT < B' PERFORM BAD ELSE PERFORM GOOD.
*ZC     43         DISPLAY 'A NOT < B'
         BRAS  1,*+(WTO#0196_EOT-*+1)/2*2
         DC    AL2(WTO#0196_EOT-*,0),C'A NOT < B'
WTO#0196_EOT     EQU *
         SVC   35
*ZC     43         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC     43         ELSE
         J     PG_IF_2_E
PG_IF_2_1    DS    0H  &TYPE
*ZC     43         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_2_E    DS    0H  &TYPE
*      3     IF A > B
*ZC     44      3  IF    A,>,B
         PACK  ZCVT_PWORK1(1),0+A(1) PACK #1 NORMAL
         PACK  ZCVT_PWORK2(1),0+B(1) PACK #1 NORMAL
         CP    ZCVT_PWORK1(1),ZCVT_PWORK2(1)
         BRC   15-ZC_H,PG_IF_3_1
*               DISPLAY 'A NOT < B' PERFORM BAD ELSE PERFORM GOOD.
*ZC     45         DISPLAY 'A NOT < B'
         BRAS  1,*+(WTO#0223_EOT-*+1)/2*2
         DC    AL2(WTO#0223_EOT-*,0),C'A NOT < B'
WTO#0223_EOT     EQU *
         SVC   35
*ZC     45         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC     45         ELSE
         J     PG_IF_3_E
PG_IF_3_1    DS    0H  &TYPE
*ZC     45         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_3_E    DS    0H  &TYPE
*      4     IF A GREATER THAN B
*ZC     46      4  IF    A,GREATER,THAN,B
         PACK  ZCVT_PWORK1(1),0+A(1) PACK #1 NORMAL
         PACK  ZCVT_PWORK2(1),0+B(1) PACK #1 NORMAL
         CP    ZCVT_PWORK1(1),ZCVT_PWORK2(1)
         BRC   15-ZC_H,PG_IF_4_1
*               DISPLAY 'A NOT < B' PERFORM BAD ELSE PERFORM GOOD.
*ZC     47         DISPLAY 'A NOT < B'
         BRAS  1,*+(WTO#0251_EOT-*+1)/2*2
         DC    AL2(WTO#0251_EOT-*,0),C'A NOT < B'
WTO#0251_EOT     EQU *
         SVC   35
*ZC     47         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC     47         ELSE
         J     PG_IF_4_E
PG_IF_4_1    DS    0H  &TYPE
*ZC     47         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_4_E    DS    0H  &TYPE
*      5     IF B < A
*ZC     48      5  IF    B,<,A
         PACK  ZCVT_PWORK1(1),0+B(1) PACK #1 NORMAL
         PACK  ZCVT_PWORK2(1),0+A(1) PACK #1 NORMAL
         CP    ZCVT_PWORK1(1),ZCVT_PWORK2(1)
         BRC   15-ZC_L,PG_IF_5_1
*               DISPLAY 'A NOT < B' PERFORM BAD ELSE PERFORM GOOD.
*ZC     49         DISPLAY 'A NOT < B'
         BRAS  1,*+(WTO#0278_EOT-*+1)/2*2
         DC    AL2(WTO#0278_EOT-*,0),C'A NOT < B'
WTO#0278_EOT     EQU *
         SVC   35
*ZC     49         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC     49         ELSE
         J     PG_IF_5_E
PG_IF_5_1    DS    0H  &TYPE
*ZC     49         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_5_E    DS    0H  &TYPE
*      6     IF B LESS THAN A
*ZC     50      6  IF    B,LESS,THAN,A
         PACK  ZCVT_PWORK1(1),0+B(1) PACK #1 NORMAL
         PACK  ZCVT_PWORK2(1),0+A(1) PACK #1 NORMAL
         CP    ZCVT_PWORK1(1),ZCVT_PWORK2(1)
         BRC   15-ZC_L,PG_IF_6_1
*               DISPLAY 'A NOT < B' PERFORM BAD ELSE PERFORM GOOD.
*ZC     51         DISPLAY 'A NOT < B'
         BRAS  1,*+(WTO#0306_EOT-*+1)/2*2
         DC    AL2(WTO#0306_EOT-*,0),C'A NOT < B'
WTO#0306_EOT     EQU *
         SVC   35
*ZC     51         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC     51         ELSE
         J     PG_IF_6_E
PG_IF_6_1    DS    0H  &TYPE
*ZC     51         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_6_E    DS    0H  &TYPE
*      7     IF A NOT < B
*ZC     52      7  IF    A,NOT,<,B
         PACK  ZCVT_PWORK1(1),0+A(1) PACK #1 NORMAL
         PACK  ZCVT_PWORK2(1),0+B(1) PACK #1 NORMAL
         CP    ZCVT_PWORK1(1),ZCVT_PWORK2(1)
         BRC   15-ZC_GE,PG_IF_7_1
*               DISPLAY 'A NOT < B' PERFORM BAD ELSE PERFORM GOOD.
*ZC     53         DISPLAY 'A NOT < B'
         BRAS  1,*+(WTO#0334_EOT-*+1)/2*2
         DC    AL2(WTO#0334_EOT-*,0),C'A NOT < B'
WTO#0334_EOT     EQU *
         SVC   35
*ZC     53         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC     53         ELSE
         J     PG_IF_7_E
PG_IF_7_1    DS    0H  &TYPE
*ZC     53         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_7_E    DS    0H  &TYPE
*      8     IF A > B AND C > D
*ZC     54      8  IF    A,>,B,AND,C,>,D
         PACK  ZCVT_PWORK1(1),0+A(1) PACK #1 NORMAL
         PACK  ZCVT_PWORK2(1),0+B(1) PACK #1 NORMAL
         CP    ZCVT_PWORK1(1),ZCVT_PWORK2(1)
         BRC   15-ZC_H,PG_IF_8_1
         PACK  ZCVT_PWORK1(1),0+C(1) PACK #1 NORMAL
         PACK  ZCVT_PWORK2(1),0+D(1) PACK #1 NORMAL
         CP    ZCVT_PWORK1(1),ZCVT_PWORK2(1)
         BRC   15-ZC_H,PG_IF_8_1
*               DISPLAY 'A NOT < B' PERFORM BAD ELSE PERFORM GOOD.
*ZC     55         DISPLAY 'A NOT < B'
         BRAS  1,*+(WTO#0370_EOT-*+1)/2*2
         DC    AL2(WTO#0370_EOT-*,0),C'A NOT < B'
WTO#0370_EOT     EQU *
         SVC   35
*ZC     55         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC     55         ELSE
         J     PG_IF_8_E
PG_IF_8_1    DS    0H  &TYPE
*ZC     55         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_8_E    DS    0H  &TYPE
*      9     IF A NOT < B OR C NOT < D
*ZC     56      9  IF    A,NOT,<,B,OR,C,NOT,<,D
         PACK  ZCVT_PWORK1(1),0+A(1) PACK #1 NORMAL
         PACK  ZCVT_PWORK2(1),0+B(1) PACK #1 NORMAL
         CP    ZCVT_PWORK1(1),ZCVT_PWORK2(1)
         BRC   ZC_GE,PG_IF_9_IOP1_T
         PACK  ZCVT_PWORK1(1),0+C(1) PACK #1 NORMAL
         PACK  ZCVT_PWORK2(1),0+D(1) PACK #1 NORMAL
         CP    ZCVT_PWORK1(1),ZCVT_PWORK2(1)
         BRC   15-ZC_GE,PG_IF_9_1
PG_IF_9_IOP1_T DS  0H  &TYPE
*               DISPLAY 'A NOT < B' PERFORM BAD ELSE PERFORM GOOD.
*ZC     57         DISPLAY 'A NOT < B'
         BRAS  1,*+(WTO#0410_EOT-*+1)/2*2
         DC    AL2(WTO#0410_EOT-*,0),C'A NOT < B'
WTO#0410_EOT     EQU *
         SVC   35
*ZC     57         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC     57         ELSE
         J     PG_IF_9_E
PG_IF_9_1    DS    0H  &TYPE
*ZC     57         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_9_E    DS    0H  &TYPE
*     10     IF (A > B) AND (C > D)
*ZC     58     10  IF    '(',A,>,B,')',AND,'(',C,>,D,')'
         PACK  ZCVT_PWORK1(1),0+A(1) PACK #1 NORMAL
         PACK  ZCVT_PWORK2(1),0+B(1) PACK #1 NORMAL
         CP    ZCVT_PWORK1(1),ZCVT_PWORK2(1)
         BRC   15-ZC_H,PG_IF_10_1
         PACK  ZCVT_PWORK1(1),0+C(1) PACK #1 NORMAL
         PACK  ZCVT_PWORK2(1),0+D(1) PACK #1 NORMAL
         CP    ZCVT_PWORK1(1),ZCVT_PWORK2(1)
         BRC   15-ZC_H,PG_IF_10_1
*               DISPLAY 'A NOT < B' PERFORM BAD ELSE PERFORM GOOD.
*ZC     59         DISPLAY 'A NOT < B'
         BRAS  1,*+(WTO#0446_EOT-*+1)/2*2
         DC    AL2(WTO#0446_EOT-*,0),C'A NOT < B'
WTO#0446_EOT     EQU *
         SVC   35
*ZC     59         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC     59         ELSE
         J     PG_IF_10_E
PG_IF_10_1   DS    0H  &TYPE
*ZC     59         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_10_E   DS    0H  &TYPE
*     11     IF (A > B OR C > D) AND (A = B OR C = D)
*ZC     60     11  IF    '(',A,>,B,OR,C,>,D,')',AND,'(',A,=,B,OR,C,=,D,X
               ')'
         PACK  ZCVT_PWORK1(1),0+A(1) PACK #1 NORMAL
         PACK  ZCVT_PWORK2(1),0+B(1) PACK #1 NORMAL
         CP    ZCVT_PWORK1(1),ZCVT_PWORK2(1)
         MVI   ZCVT_WORKAREA+1,1
         BRC   ZC_H,PG_IF_11_IOP1_T
         PACK  ZCVT_PWORK1(1),0+C(1) PACK #1 NORMAL
         PACK  ZCVT_PWORK2(1),0+D(1) PACK #1 NORMAL
         CP    ZCVT_PWORK1(1),ZCVT_PWORK2(1)
         BRC   ZC_H,PG_IF_11_IOP1_T
         MVI   ZCVT_WORKAREA+1,0
PG_IF_11_IOP1_T DS 0H  &TYPE
         PACK  ZCVT_PWORK1(1),0+A(1) PACK #1 NORMAL
         PACK  ZCVT_PWORK2(1),0+B(1) PACK #1 NORMAL
         CP    ZCVT_PWORK1(1),ZCVT_PWORK2(1)
         MVI   ZCVT_WORKAREA+2,1
         BRC   ZC_EQ,PG_IF_11_IOP2_T
         PACK  ZCVT_PWORK1(1),0+C(1) PACK #1 NORMAL
         PACK  ZCVT_PWORK2(1),0+D(1) PACK #1 NORMAL
         CP    ZCVT_PWORK1(1),ZCVT_PWORK2(1)
         BRC   ZC_EQ,PG_IF_11_IOP2_T
         MVI   ZCVT_WORKAREA+2,0
PG_IF_11_IOP2_T DS 0H  &TYPE
         CLI   ZCVT_WORKAREA+1,1
         BRC   15-ZC_EQ,PG_IF_11_1
         CLI   ZCVT_WORKAREA+2,1
         BRC   15-ZC_EQ,PG_IF_11_1
*               DISPLAY 'A NOT < B' PERFORM BAD ELSE PERFORM GOOD.
*ZC     61         DISPLAY 'A NOT < B'
         BRAS  1,*+(WTO#0512_EOT-*+1)/2*2
         DC    AL2(WTO#0512_EOT-*,0),C'A NOT < B'
WTO#0512_EOT     EQU *
         SVC   35
*ZC     61         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC     61         ELSE
         J     PG_IF_11_E
PG_IF_11_1   DS    0H  &TYPE
*ZC     61         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_11_E   DS    0H  &TYPE
*     12     IF A < B
*ZC     62     12  IF    A,<,B
         PACK  ZCVT_PWORK1(1),0+A(1) PACK #1 NORMAL
         PACK  ZCVT_PWORK2(1),0+B(1) PACK #1 NORMAL
         CP    ZCVT_PWORK1(1),ZCVT_PWORK2(1)
         BRC   15-ZC_L,PG_IF_12_1
*               PERFORM GOOD
*ZC     63         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*               NEXT SENTENCE ELSE  PERFORM BAD.
*ZC     64         NEXT  SENTENCE
         J     PG_PERIOD_NEXT_1
*ZC     64         ELSE
         J     PG_IF_12_E
PG_IF_12_1   DS    0H  &TYPE
*ZC     64         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_12_E   DS    0H  &TYPE
PG_PERIOD_NEXT_1 DS 0H  &TYPE
*     13     IF A EQUAL A
*ZC     65     13  IF    A,EQUAL,A
         PACK  ZCVT_PWORK1(1),0+A(1) PACK #1 NORMAL
         PACK  ZCVT_PWORK2(1),0+A(1) PACK #1 NORMAL
         CP    ZCVT_PWORK1(1),ZCVT_PWORK2(1)
         BRC   15-ZC_EQ,PG_IF_13_1
*               PERFORM GOOD
*ZC     66         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*               NEXT SENTENCE ELSE  PERFORM BAD.
*ZC     67         NEXT  SENTENCE
         J     PG_PERIOD_NEXT_2
*ZC     67         ELSE
         J     PG_IF_13_E
PG_IF_13_1   DS    0H  &TYPE
*ZC     67         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_13_E   DS    0H  &TYPE
PG_PERIOD_NEXT_2 DS 0H  &TYPE
*     14     IF B > A
*ZC     68     14  IF    B,>,A
         PACK  ZCVT_PWORK1(1),0+B(1) PACK #1 NORMAL
         PACK  ZCVT_PWORK2(1),0+A(1) PACK #1 NORMAL
         CP    ZCVT_PWORK1(1),ZCVT_PWORK2(1)
         BRC   15-ZC_H,PG_IF_14_1
*               PERFORM GOOD
*ZC     69         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*               NEXT SENTENCE ELSE PERFORM BAD.
*ZC     70         NEXT  SENTENCE
         J     PG_PERIOD_NEXT_3
*ZC     70         ELSE
         J     PG_IF_14_E
PG_IF_14_1   DS    0H  &TYPE
*ZC     70         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_14_E   DS    0H  &TYPE
PG_PERIOD_NEXT_3 DS 0H  &TYPE
*     15     IF B GREATER THAN A
*ZC     71     15  IF    B,GREATER,THAN,A
         PACK  ZCVT_PWORK1(1),0+B(1) PACK #1 NORMAL
         PACK  ZCVT_PWORK2(1),0+A(1) PACK #1 NORMAL
         CP    ZCVT_PWORK1(1),ZCVT_PWORK2(1)
         BRC   15-ZC_H,PG_IF_15_1
*               PERFORM GOOD
*ZC     72         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*               NEXT SENTENCE ELSE PERFORM BAD.
*ZC     73         NEXT  SENTENCE
         J     PG_PERIOD_NEXT_4
*ZC     73         ELSE
         J     PG_IF_15_E
PG_IF_15_1   DS    0H  &TYPE
*ZC     73         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_15_E   DS    0H  &TYPE
PG_PERIOD_NEXT_4 DS 0H  &TYPE
*     16     IF A < B
*ZC     74     16  IF    A,<,B
         PACK  ZCVT_PWORK1(1),0+A(1) PACK #1 NORMAL
         PACK  ZCVT_PWORK2(1),0+B(1) PACK #1 NORMAL
         CP    ZCVT_PWORK1(1),ZCVT_PWORK2(1)
         BRC   15-ZC_L,PG_IF_16_1
*               PERFORM GOOD
*ZC     75         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*               NEXT SENTENCE ELSE PERFORM BAD.
*ZC     76         NEXT  SENTENCE
         J     PG_PERIOD_NEXT_5
*ZC     76         ELSE
         J     PG_IF_16_E
PG_IF_16_1   DS    0H  &TYPE
*ZC     76         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_16_E   DS    0H  &TYPE
PG_PERIOD_NEXT_5 DS 0H  &TYPE
*     17     IF A LESS THAN B
*ZC     77     17  IF    A,LESS,THAN,B
         PACK  ZCVT_PWORK1(1),0+A(1) PACK #1 NORMAL
         PACK  ZCVT_PWORK2(1),0+B(1) PACK #1 NORMAL
         CP    ZCVT_PWORK1(1),ZCVT_PWORK2(1)
         BRC   15-ZC_L,PG_IF_17_1
*               PERFORM GOOD
*ZC     78         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*               NEXT SENTENCE ELSE PERFORM BAD.
*ZC     79         NEXT  SENTENCE
         J     PG_PERIOD_NEXT_6
*ZC     79         ELSE
         J     PG_IF_17_E
PG_IF_17_1   DS    0H  &TYPE
*ZC     79         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_17_E   DS    0H  &TYPE
PG_PERIOD_NEXT_6 DS 0H  &TYPE
*     18     IF B NOT < A
*ZC     80     18  IF    B,NOT,<,A
         PACK  ZCVT_PWORK1(1),0+B(1) PACK #1 NORMAL
         PACK  ZCVT_PWORK2(1),0+A(1) PACK #1 NORMAL
         CP    ZCVT_PWORK1(1),ZCVT_PWORK2(1)
         BRC   15-ZC_GE,PG_IF_18_1
*               PERFORM GOOD
*ZC     81         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*               NEXT SENTENCE ELSE PERFORM BAD.
*ZC     82         NEXT  SENTENCE
         J     PG_PERIOD_NEXT_7
*ZC     82         ELSE
         J     PG_IF_18_E
PG_IF_18_1   DS    0H  &TYPE
*ZC     82         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_18_E   DS    0H  &TYPE
PG_PERIOD_NEXT_7 DS 0H  &TYPE
*     19     IF B > A AND D > C
*ZC     83     19  IF    B,>,A,AND,D,>,C
         PACK  ZCVT_PWORK1(1),0+B(1) PACK #1 NORMAL
         PACK  ZCVT_PWORK2(1),0+A(1) PACK #1 NORMAL
         CP    ZCVT_PWORK1(1),ZCVT_PWORK2(1)
         BRC   15-ZC_H,PG_IF_19_1
         PACK  ZCVT_PWORK1(1),0+D(1) PACK #1 NORMAL
         PACK  ZCVT_PWORK2(1),0+C(1) PACK #1 NORMAL
         CP    ZCVT_PWORK1(1),ZCVT_PWORK2(1)
         BRC   15-ZC_H,PG_IF_19_1
*               PERFORM GOOD
*ZC     84         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*               NEXT SENTENCE ELSE PERFORM BAD.
*ZC     85         NEXT  SENTENCE
         J     PG_PERIOD_NEXT_8
*ZC     85         ELSE
         J     PG_IF_19_E
PG_IF_19_1   DS    0H  &TYPE
*ZC     85         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_19_E   DS    0H  &TYPE
PG_PERIOD_NEXT_8 DS 0H  &TYPE
*     20     IF B NOT < A OR D NOT < C
*ZC     86     20  IF    B,NOT,<,A,OR,D,NOT,<,C
         PACK  ZCVT_PWORK1(1),0+B(1) PACK #1 NORMAL
         PACK  ZCVT_PWORK2(1),0+A(1) PACK #1 NORMAL
         CP    ZCVT_PWORK1(1),ZCVT_PWORK2(1)
         BRC   ZC_GE,PG_IF_20_IOP1_T
         PACK  ZCVT_PWORK1(1),0+D(1) PACK #1 NORMAL
         PACK  ZCVT_PWORK2(1),0+C(1) PACK #1 NORMAL
         CP    ZCVT_PWORK1(1),ZCVT_PWORK2(1)
         BRC   15-ZC_GE,PG_IF_20_1
PG_IF_20_IOP1_T DS 0H  &TYPE
*               PERFORM GOOD
*ZC     87         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*               NEXT SENTENCE ELSE PERFORM BAD.
*ZC     88         NEXT  SENTENCE
         J     PG_PERIOD_NEXT_9
*ZC     88         ELSE
         J     PG_IF_20_E
PG_IF_20_1   DS    0H  &TYPE
*ZC     88         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_20_E   DS    0H  &TYPE
PG_PERIOD_NEXT_9 DS 0H  &TYPE
*     21     IF (B > A) AND (D > C)
*ZC     89     21  IF    '(',B,>,A,')',AND,'(',D,>,C,')'
         PACK  ZCVT_PWORK1(1),0+B(1) PACK #1 NORMAL
         PACK  ZCVT_PWORK2(1),0+A(1) PACK #1 NORMAL
         CP    ZCVT_PWORK1(1),ZCVT_PWORK2(1)
         BRC   15-ZC_H,PG_IF_21_1
         PACK  ZCVT_PWORK1(1),0+D(1) PACK #1 NORMAL
         PACK  ZCVT_PWORK2(1),0+C(1) PACK #1 NORMAL
         CP    ZCVT_PWORK1(1),ZCVT_PWORK2(1)
         BRC   15-ZC_H,PG_IF_21_1
*               PERFORM GOOD
*ZC     90         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*               NEXT SENTENCE ELSE PERFORM BAD.
*ZC     91         NEXT  SENTENCE
         J     PG_PERIOD_NEXT_10
*ZC     91         ELSE
         J     PG_IF_21_E
PG_IF_21_1   DS    0H  &TYPE
*ZC     91         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_21_E   DS    0H  &TYPE
PG_PERIOD_NEXT_10 DS 0H  &TYPE
*     22     IF (B > A OR D > C) AND (B = B OR C = C)
*ZC     92     22  IF    '(',B,>,A,OR,D,>,C,')',AND,'(',B,=,B,OR,C,=,C,X
               ')'
         PACK  ZCVT_PWORK1(1),0+B(1) PACK #1 NORMAL
         PACK  ZCVT_PWORK2(1),0+A(1) PACK #1 NORMAL
         CP    ZCVT_PWORK1(1),ZCVT_PWORK2(1)
         MVI   ZCVT_WORKAREA+1,1
         BRC   ZC_H,PG_IF_22_IOP1_T
         PACK  ZCVT_PWORK1(1),0+D(1) PACK #1 NORMAL
         PACK  ZCVT_PWORK2(1),0+C(1) PACK #1 NORMAL
         CP    ZCVT_PWORK1(1),ZCVT_PWORK2(1)
         BRC   ZC_H,PG_IF_22_IOP1_T
         MVI   ZCVT_WORKAREA+1,0
PG_IF_22_IOP1_T DS 0H  &TYPE
         PACK  ZCVT_PWORK1(1),0+B(1) PACK #1 NORMAL
         PACK  ZCVT_PWORK2(1),0+B(1) PACK #1 NORMAL
         CP    ZCVT_PWORK1(1),ZCVT_PWORK2(1)
         MVI   ZCVT_WORKAREA+2,1
         BRC   ZC_EQ,PG_IF_22_IOP2_T
         PACK  ZCVT_PWORK1(1),0+C(1) PACK #1 NORMAL
         PACK  ZCVT_PWORK2(1),0+C(1) PACK #1 NORMAL
         CP    ZCVT_PWORK1(1),ZCVT_PWORK2(1)
         BRC   ZC_EQ,PG_IF_22_IOP2_T
         MVI   ZCVT_WORKAREA+2,0
PG_IF_22_IOP2_T DS 0H  &TYPE
         CLI   ZCVT_WORKAREA+1,1
         BRC   15-ZC_EQ,PG_IF_22_1
         CLI   ZCVT_WORKAREA+2,1
         BRC   15-ZC_EQ,PG_IF_22_1
*               PERFORM GOOD
*ZC     93         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*               NEXT SENTENCE ELSE PERFORM BAD.
*ZC     94         NEXT  SENTENCE
         J     PG_PERIOD_NEXT_11
*ZC     94         ELSE
         J     PG_IF_22_E
PG_IF_22_1   DS    0H  &TYPE
*      * TEST CONDITIONAL 88'S
*ZC     94         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_22_E   DS    0H  &TYPE
PG_PERIOD_NEXT_11 DS 0H  &TYPE
*            MOVE 10 TO H1(2)
*ZC     96         MOVE  10,TO,H1,'(',2,')'
         IILF  ZC_R3,(2-1)*2 (LIT-1)*LEN
         LA    ZC_R3,H1(ZC_R3)
          MVHHI 0(ZC_R3),10
*     23     IF H1-ZERO(2)
*ZC     97     23  IF    H1_ZERO,'(',2,')'
         IILF  ZC_R2,(2-1)*2 (LIT-1)*LEN
         LA    ZC_R2,H1(ZC_R2)
         LH    0,0(ZC_R2)
         CHI   0,10
         BRC   15-ZC_EQ,PG_IF_23_1
*               PERFORM GOOD
*ZC     98         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*               NEXT SENTENCE ELSE PERFORM BAD.
*ZC     99         NEXT  SENTENCE
         J     PG_PERIOD_NEXT_12
*ZC     99         ELSE
         J     PG_IF_23_E
PG_IF_23_1   DS    0H  &TYPE
*ZC     99         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_23_E   DS    0H  &TYPE
PG_PERIOD_NEXT_12 DS 0H  &TYPE
*            MOVE 13 TO H1(2)
*ZC    100         MOVE  13,TO,H1,'(',2,')'
         IILF  ZC_R3,(2-1)*2 (LIT-1)*LEN
         LA    ZC_R3,H1(ZC_R3)
          MVHHI 0(ZC_R3),13
*     24     IF NOT H1-ZERO(2)
*ZC    101     24  IF    NOT,H1_ZERO,'(',2,')'
         IILF  ZC_R2,(2-1)*2 (LIT-1)*LEN
         LA    ZC_R2,H1(ZC_R2)
         LH    0,0(ZC_R2)
         CHI   0,10
         BRC   ZC_EQ,PG_IF_24_1
*               PERFORM GOOD
*ZC    102         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*               NEXT SENTENCE ELSE PERFORM BAD.
*ZC    103         NEXT  SENTENCE
         J     PG_PERIOD_NEXT_13
*ZC    103         ELSE
         J     PG_IF_24_E
PG_IF_24_1   DS    0H  &TYPE
*ZC    103         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_24_E   DS    0H  &TYPE
PG_PERIOD_NEXT_13 DS 0H  &TYPE
*            MOVE 12 TO H2(2)
*ZC    104         MOVE  12,TO,H2,'(',2,')'
         IILF  ZC_R3,(2-1)*2 (LIT-1)*LEN
         LA    ZC_R3,H2(ZC_R3)
          MVHHI 0(ZC_R3),12
*     25     IF H2-ONE-TWO(2)
*ZC    105     25  IF    H2_ONE_TWO,'(',2,')'
         IILF  ZC_R2,(2-1)*2 (LIT-1)*LEN
         LA    ZC_R2,H2(ZC_R2)
         LH    0,0(ZC_R2)
         CHI   0,11
         BRC   ZC_EQ,PG_IF_25_IOP_1
         LH    0,0(ZC_R2)
         CHI   0,12
         BRC   15-ZC_EQ,PG_IF_25_1
PG_IF_25_IOP_1 DS  0H  &TYPE
*               PERFORM GOOD
*ZC    106         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*               NEXT SENTENCE ELSE PERFORM BAD.
*ZC    107         NEXT  SENTENCE
         J     PG_PERIOD_NEXT_14
*ZC    107         ELSE
         J     PG_IF_25_E
PG_IF_25_1   DS    0H  &TYPE
*ZC    107         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_25_E   DS    0H  &TYPE
PG_PERIOD_NEXT_14 DS 0H  &TYPE
*            MOVE 13 TO H2(2)
*ZC    108         MOVE  13,TO,H2,'(',2,')'
         IILF  ZC_R3,(2-1)*2 (LIT-1)*LEN
         LA    ZC_R3,H2(ZC_R3)
          MVHHI 0(ZC_R3),13
*     26     IF NOT H2-ONE-TWO(2)
*ZC    109     26  IF    NOT,H2_ONE_TWO,'(',2,')'
         IILF  ZC_R2,(2-1)*2 (LIT-1)*LEN
         LA    ZC_R2,H2(ZC_R2)
         LH    0,0(ZC_R2)
         CHI   0,11
         BRC   ZC_EQ,PG_IF_26_1
         LH    0,0(ZC_R2)
         CHI   0,12
         BRC   ZC_EQ,PG_IF_26_1
*               PERFORM GOOD
*ZC    110         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*               NEXT SENTENCE ELSE PERFORM BAD.
*ZC    111         NEXT  SENTENCE
         J     PG_PERIOD_NEXT_15
*ZC    111         ELSE
         J     PG_IF_26_E
PG_IF_26_1   DS    0H  &TYPE
*      * TEST ALL FIELD TYPE COMBINATIONS
*ZC    111         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_26_E   DS    0H  &TYPE
PG_PERIOD_NEXT_15 DS 0H  &TYPE
*            IF HFP-SRT = HFP-SRT      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    113         IF    HFP_SRT,=,HFP_SRT
         LE    ZC_F0,HFP_SRT
         CE    ZC_F0,HFP_SRT
         BRC   15-ZC_EQ,PG_IF_27_1
*ZC    113         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    113         ELSE
         J     PG_IF_27_E
PG_IF_27_1   DS    0H  &TYPE
*ZC    113         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_27_E   DS    0H  &TYPE
*            IF HFP-SRT = HFP-LNG      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    114         IF    HFP_SRT,=,HFP_LNG
         LDE   ZC_F0,HFP_SRT
         CD    ZC_F0,HFP_LNG
         BRC   15-ZC_EQ,PG_IF_28_1
*ZC    114         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    114         ELSE
         J     PG_IF_28_E
PG_IF_28_1   DS    0H  &TYPE
*ZC    114         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_28_E   DS    0H  &TYPE
*            IF HFP-SRT = HFP-EXT      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    115         IF    HFP_SRT,=,HFP_EXT
         LE    ZC_F0,HFP_SRT
         LXER  ZC_F0,ZC_F0
         LD    ZC_F1,HFP_EXT
         LD    ZC_F3,8+HFP_EXT
         CXR   ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_29_1
*ZC    115         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    115         ELSE
         J     PG_IF_29_E
PG_IF_29_1   DS    0H  &TYPE
*ZC    115         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_29_E   DS    0H  &TYPE
*            IF HFP-SRT = BFP-SRT      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    116         IF    HFP_SRT,=,BFP_SRT
         LE    ZC_F4,HFP_SRT
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_EB,PFPO_TYPE_EH,PFPO_RNDX
               )
         PFPO 
         CEB   ZC_F0,BFP_SRT
         BRC   15-ZC_EQ,PG_IF_30_1
*ZC    116         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    116         ELSE
         J     PG_IF_30_E
PG_IF_30_1   DS    0H  &TYPE
*ZC    116         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_30_E   DS    0H  &TYPE
*            IF HFP-SRT = BFP-LNG      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    117         IF    HFP_SRT,=,BFP_LNG
         LE    ZC_F4,HFP_SRT
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_DB,PFPO_TYPE_EH,PFPO_RNDX
               )
         PFPO 
         CDB   ZC_F0,BFP_LNG
         BRC   15-ZC_EQ,PG_IF_31_1
*ZC    117         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    117         ELSE
         J     PG_IF_31_E
PG_IF_31_1   DS    0H  &TYPE
*ZC    117         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_31_E   DS    0H  &TYPE
*            IF HFP-SRT = BFP-EXT      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    118         IF    HFP_SRT,=,BFP_EXT
         LE    ZC_F4,HFP_SRT
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_LB,PFPO_TYPE_EH,PFPO_RNDX
               )
         PFPO 
         LD    ZC_F1,BFP_EXT
         LD    ZC_F3,8+BFP_EXT
         CXBR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_32_1
*ZC    118         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    118         ELSE
         J     PG_IF_32_E
PG_IF_32_1   DS    0H  &TYPE
*ZC    118         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_32_E   DS    0H  &TYPE
*            IF HFP-SRT = DFP-SRT      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    119         IF    HFP_SRT,=,DFP_SRT
         LE    ZC_F4,HFP_SRT
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_DD,PFPO_TYPE_EH,PFPO_RNDX
               )
         PFPO 
         LE    ZC_F1,DFP_SRT
         LDETR ZC_F1,ZC_F1,0
         CDTR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_33_1
*ZC    119         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    119         ELSE
         J     PG_IF_33_E
PG_IF_33_1   DS    0H  &TYPE
*ZC    119         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_33_E   DS    0H  &TYPE
*            IF HFP-SRT = DFP-LNG      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    120         IF    HFP_SRT,=,DFP_LNG
         LE    ZC_F4,HFP_SRT
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_DD,PFPO_TYPE_EH,PFPO_RNDX
               )
         PFPO 
         LD    ZC_F1,DFP_LNG
         CDTR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_34_1
*ZC    120         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    120         ELSE
         J     PG_IF_34_E
PG_IF_34_1   DS    0H  &TYPE
*ZC    120         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_34_E   DS    0H  &TYPE
*            IF HFP-SRT = DFP-EXT      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    121         IF    HFP_SRT,=,DFP_EXT
         LE    ZC_F4,HFP_SRT
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_LD,PFPO_TYPE_EH,PFPO_RNDX
               )
         PFPO 
         LD    ZC_F1,DFP_EXT
         LD    ZC_F3,8+DFP_EXT
         CXTR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_35_1
*ZC    121         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    121         ELSE
         J     PG_IF_35_E
PG_IF_35_1   DS    0H  &TYPE
*ZC    121         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_35_E   DS    0H  &TYPE
*            IF HFP-SRT = HW           PERFORM GOOD ELSE PERFORM BAD.  
*ZC    122         IF    HFP_SRT,=,HW
         LE    ZC_F0,HFP_SRT
         LH    ZC_R1,HW
         CEFR  ZC_F1,ZC_R1
         CER   ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_36_1
*ZC    122         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    122         ELSE
         J     PG_IF_36_E
PG_IF_36_1   DS    0H  &TYPE
*ZC    122         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_36_E   DS    0H  &TYPE
*            IF HFP-SRT = FW           PERFORM GOOD ELSE PERFORM BAD.  
*ZC    123         IF    HFP_SRT,=,FW
         LE    ZC_F0,HFP_SRT
         L     ZC_R1,FW
         CEFR  ZC_F1,ZC_R1
         CER   ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_37_1
*ZC    123         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    123         ELSE
         J     PG_IF_37_E
PG_IF_37_1   DS    0H  &TYPE
*ZC    123         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_37_E   DS    0H  &TYPE
*            IF HFP-SRT = DW           PERFORM GOOD ELSE PERFORM BAD.  
*ZC    124         IF    HFP_SRT,=,DW
         LE    ZC_F0,HFP_SRT
         LG    ZC_R1,DW
         CEGR  ZC_F1,ZC_R1
         CER   ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_38_1
*ZC    124         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    124         ELSE
         J     PG_IF_38_E
PG_IF_38_1   DS    0H  &TYPE
*ZC    124         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_38_E   DS    0H  &TYPE
*            IF HFP-SRT = QW           PERFORM GOOD ELSE PERFORM BAD.  
*ZC    125         IF    HFP_SRT,=,QW
         LG    ZC_R0,QW
         LG    ZC_R1,8+QW
         L     ZC_R15,ZCVT_CVTQTLB   CVT Q IN ZC_R0-ZC_R1              X
                                     TO LB IN ZC_F4-ZC_F6
         BASR  ZC_R14,ZC_R15
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_EH,PFPO_TYPE_LB,PFPO_RNDX
               )
         PFPO 
         LER   ZC_F1,ZC_F0
         LE    ZC_F0,HFP_SRT
         CER   ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_39_1
*ZC    125         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    125         ELSE
         J     PG_IF_39_E
PG_IF_39_1   DS    0H  &TYPE
*ZC    125         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_39_E   DS    0H  &TYPE
*            IF HFP-SRT = PD           PERFORM GOOD ELSE PERFORM BAD.  
*ZC    126         IF    HFP_SRT,=,PD
         ZAP   ZCVT_PWORK2,PD
         LMG   ZC_R0,ZC_R1,ZCVT_PWORK2
         CXSTR ZC_F4,ZC_R0
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_EH,PFPO_TYPE_LD,PFPO_RNDX
               )
         PFPO 
         LER   ZC_F1,ZC_F0
         LE    ZC_F0,HFP_SRT
         CER   ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_40_1
*ZC    126         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    126         ELSE
         J     PG_IF_40_E
PG_IF_40_1   DS    0H  &TYPE
*ZC    126         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_40_E   DS    0H  &TYPE
*            IF HFP-SRT = ZD           PERFORM GOOD ELSE PERFORM BAD.  
*ZC    127         IF    HFP_SRT,=,ZD
         PACK  ZCVT_PWORK2(8),0+ZD(15) PACK #1 FULL
         PACK  7+ZCVT_PWORK2(8),14+ZD(15) PACK #2 FULL
         PACK  14+ZCVT_PWORK2(2),28+ZD(3)  PACK #3 FINAL
         LMG   ZC_R0,ZC_R1,ZCVT_PWORK2
         CXSTR ZC_F4,ZC_R0
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_EH,PFPO_TYPE_LD,PFPO_RNDX
               )
         PFPO 
         LER   ZC_F1,ZC_F0
         LE    ZC_F0,HFP_SRT
         CER   ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_41_1
*ZC    127         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    127         ELSE
         J     PG_IF_41_E
PG_IF_41_1   DS    0H  &TYPE
*ZC    127         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_41_E   DS    0H  &TYPE
*            IF HFP-LNG = HFP-SRT      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    128         IF    HFP_LNG,=,HFP_SRT
         LD    ZC_F0,HFP_LNG
         LDE   ZC_F1,HFP_SRT
         CDR   ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_42_1
*ZC    128         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    128         ELSE
         J     PG_IF_42_E
PG_IF_42_1   DS    0H  &TYPE
*ZC    128         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_42_E   DS    0H  &TYPE
*            IF HFP-LNG = HFP-LNG      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    129         IF    HFP_LNG,=,HFP_LNG
         LD    ZC_F0,HFP_LNG
         CD    ZC_F0,HFP_LNG
         BRC   15-ZC_EQ,PG_IF_43_1
*ZC    129         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    129         ELSE
         J     PG_IF_43_E
PG_IF_43_1   DS    0H  &TYPE
*ZC    129         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_43_E   DS    0H  &TYPE
*            IF HFP-LNG = HFP-EXT      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    130         IF    HFP_LNG,=,HFP_EXT
         LD    ZC_F0,HFP_LNG
         LXDR  ZC_F0,ZC_F0
         LD    ZC_F1,HFP_EXT
         LD    ZC_F3,8+HFP_EXT
         CXR   ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_44_1
*ZC    130         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    130         ELSE
         J     PG_IF_44_E
PG_IF_44_1   DS    0H  &TYPE
*ZC    130         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_44_E   DS    0H  &TYPE
*            IF HFP-LNG = BFP-SRT      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    131         IF    HFP_LNG,=,BFP_SRT
         LE    ZC_F4,BFP_SRT
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_DH,PFPO_TYPE_EB,PFPO_RNDX
               )
         PFPO 
         LD    ZC_F1,HFP_LNG
         CDR   ZC_F1,ZC_F0
         BRC   15-ZC_EQ,PG_IF_45_1
*ZC    131         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    131         ELSE
         J     PG_IF_45_E
PG_IF_45_1   DS    0H  &TYPE
*ZC    131         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_45_E   DS    0H  &TYPE
*            IF HFP-LNG = BFP-LNG      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    132         IF    HFP_LNG,=,BFP_LNG
         LD    ZC_F4,HFP_LNG
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_DB,PFPO_TYPE_DH,PFPO_RNDX
               )
         PFPO 
         CDB   ZC_F0,BFP_LNG
         BRC   15-ZC_EQ,PG_IF_46_1
*ZC    132         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    132         ELSE
         J     PG_IF_46_E
PG_IF_46_1   DS    0H  &TYPE
*ZC    132         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_46_E   DS    0H  &TYPE
*            IF HFP-LNG = BFP-EXT      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    133         IF    HFP_LNG,=,BFP_EXT
         LD    ZC_F4,HFP_LNG
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_LB,PFPO_TYPE_DH,PFPO_RNDX
               )
         PFPO 
         LD    ZC_F1,BFP_EXT
         LD    ZC_F3,8+BFP_EXT
         CXBR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_47_1
*ZC    133         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    133         ELSE
         J     PG_IF_47_E
PG_IF_47_1   DS    0H  &TYPE
*ZC    133         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_47_E   DS    0H  &TYPE
*            IF HFP-LNG = DFP-SRT      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    134         IF    HFP_LNG,=,DFP_SRT
         LE    ZC_F4,DFP_SRT
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_DH,PFPO_TYPE_ED,PFPO_RNDX
               )
         PFPO 
         LD    ZC_F1,HFP_LNG
         CDR   ZC_F1,ZC_F0
         BRC   15-ZC_EQ,PG_IF_48_1
*ZC    134         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    134         ELSE
         J     PG_IF_48_E
PG_IF_48_1   DS    0H  &TYPE
*ZC    134         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_48_E   DS    0H  &TYPE
*            IF HFP-LNG = DFP-LNG      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    135         IF    HFP_LNG,=,DFP_LNG
         LD    ZC_F4,HFP_LNG
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_DD,PFPO_TYPE_DH,PFPO_RNDX
               )
         PFPO 
         LD    ZC_F1,DFP_LNG
         CDTR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_49_1
*ZC    135         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    135         ELSE
         J     PG_IF_49_E
PG_IF_49_1   DS    0H  &TYPE
*ZC    135         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_49_E   DS    0H  &TYPE
*            IF HFP-LNG = DFP-EXT      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    136         IF    HFP_LNG,=,DFP_EXT
         LD    ZC_F4,HFP_LNG
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_LD,PFPO_TYPE_DH,PFPO_RNDX
               )
         PFPO 
         LD    ZC_F1,DFP_EXT
         LD    ZC_F3,8+DFP_EXT
         CXTR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_50_1
*ZC    136         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    136         ELSE
         J     PG_IF_50_E
PG_IF_50_1   DS    0H  &TYPE
*ZC    136         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_50_E   DS    0H  &TYPE
*            IF HFP-LNG = HW           PERFORM GOOD ELSE PERFORM BAD.  
*ZC    137         IF    HFP_LNG,=,HW
         LD    ZC_F0,HFP_LNG
         LH    ZC_R1,HW
         CDFR  ZC_F1,ZC_R1
         CDR   ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_51_1
*ZC    137         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    137         ELSE
         J     PG_IF_51_E
PG_IF_51_1   DS    0H  &TYPE
*ZC    137         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_51_E   DS    0H  &TYPE
*            IF HFP-LNG = FW           PERFORM GOOD ELSE PERFORM BAD.  
*ZC    138         IF    HFP_LNG,=,FW
         LD    ZC_F0,HFP_LNG
         L     ZC_R1,FW
         CDFR  ZC_F1,ZC_R1
         CDR   ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_52_1
*ZC    138         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    138         ELSE
         J     PG_IF_52_E
PG_IF_52_1   DS    0H  &TYPE
*ZC    138         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_52_E   DS    0H  &TYPE
*            IF HFP-LNG = DW           PERFORM GOOD ELSE PERFORM BAD.  
*ZC    139         IF    HFP_LNG,=,DW
         LD    ZC_F0,HFP_LNG
         LG    ZC_R1,DW
         CDGR  ZC_F1,ZC_R1
         CDR   ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_53_1
*ZC    139         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    139         ELSE
         J     PG_IF_53_E
PG_IF_53_1   DS    0H  &TYPE
*ZC    139         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_53_E   DS    0H  &TYPE
*            IF HFP-LNG = QW           PERFORM GOOD ELSE PERFORM BAD.  
*ZC    140         IF    HFP_LNG,=,QW
         LG    ZC_R0,QW
         LG    ZC_R1,8+QW
         L     ZC_R15,ZCVT_CVTQTLB   CVT Q IN ZC_R0-ZC_R1              X
                                     TO LB IN ZC_F4-ZC_F6
         BASR  ZC_R14,ZC_R15
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_DH,PFPO_TYPE_LB,PFPO_RNDX
               )
         PFPO 
         LDR   ZC_F1,ZC_F0
         LD    ZC_F0,HFP_LNG
         CDR   ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_54_1
*ZC    140         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    140         ELSE
         J     PG_IF_54_E
PG_IF_54_1   DS    0H  &TYPE
*ZC    140         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_54_E   DS    0H  &TYPE
*            IF HFP-LNG = PD           PERFORM GOOD ELSE PERFORM BAD.  
*ZC    141         IF    HFP_LNG,=,PD
         ZAP   ZCVT_PWORK2,PD
         LMG   ZC_R0,ZC_R1,ZCVT_PWORK2
         CXSTR ZC_F4,ZC_R0
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_DH,PFPO_TYPE_LD,PFPO_RNDX
               )
         PFPO 
         LDR   ZC_F1,ZC_F0
         LD    ZC_F0,HFP_LNG
         CDR   ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_55_1
*ZC    141         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    141         ELSE
         J     PG_IF_55_E
PG_IF_55_1   DS    0H  &TYPE
*ZC    141         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_55_E   DS    0H  &TYPE
*            IF HFP-LNG = ZD           PERFORM GOOD ELSE PERFORM BAD.  
*ZC    142         IF    HFP_LNG,=,ZD
         PACK  ZCVT_PWORK2(8),0+ZD(15) PACK #1 FULL
         PACK  7+ZCVT_PWORK2(8),14+ZD(15) PACK #2 FULL
         PACK  14+ZCVT_PWORK2(2),28+ZD(3)  PACK #3 FINAL
         LMG   ZC_R0,ZC_R1,ZCVT_PWORK2
         CXSTR ZC_F4,ZC_R0
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_DH,PFPO_TYPE_LD,PFPO_RNDX
               )
         PFPO 
         LDR   ZC_F1,ZC_F0
         LD    ZC_F0,HFP_LNG
         CDR   ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_56_1
*ZC    142         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    142         ELSE
         J     PG_IF_56_E
PG_IF_56_1   DS    0H  &TYPE
*ZC    142         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_56_E   DS    0H  &TYPE
*            IF HFP-EXT = HFP-SRT      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    143         IF    HFP_EXT,=,HFP_SRT
         LD    ZC_F0,HFP_EXT
         LD    ZC_F2,8+HFP_EXT
         LXE   ZC_F1,HFP_SRT
         CXR   ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_57_1
*ZC    143         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    143         ELSE
         J     PG_IF_57_E
PG_IF_57_1   DS    0H  &TYPE
*ZC    143         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_57_E   DS    0H  &TYPE
*            IF HFP-EXT = HFP-LNG      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    144         IF    HFP_EXT,=,HFP_LNG
         LD    ZC_F0,HFP_EXT
         LD    ZC_F2,8+HFP_EXT
         LXD   ZC_F1,HFP_LNG
         CXR   ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_58_1
*ZC    144         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    144         ELSE
         J     PG_IF_58_E
PG_IF_58_1   DS    0H  &TYPE
*ZC    144         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_58_E   DS    0H  &TYPE
*            IF HFP-EXT = HFP-EXT      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    145         IF    HFP_EXT,=,HFP_EXT
         LD    ZC_F0,HFP_EXT
         LD    ZC_F2,8+HFP_EXT
         LD    ZC_F1,HFP_EXT
         LD    ZC_F3,8+HFP_EXT
         CXR   ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_59_1
*ZC    145         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    145         ELSE
         J     PG_IF_59_E
PG_IF_59_1   DS    0H  &TYPE
*ZC    145         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_59_E   DS    0H  &TYPE
*            IF HFP-EXT = BFP-SRT      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    146         IF    HFP_EXT,=,BFP_SRT
         LE    ZC_F4,BFP_SRT
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_LH,PFPO_TYPE_EB,PFPO_RNDX
               )
         PFPO 
         LD    ZC_F1,HFP_EXT
         LD    ZC_F3,8+HFP_EXT
         CXR   ZC_F1,ZC_F0
         BRC   15-ZC_EQ,PG_IF_60_1
*ZC    146         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    146         ELSE
         J     PG_IF_60_E
PG_IF_60_1   DS    0H  &TYPE
*ZC    146         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_60_E   DS    0H  &TYPE
*            IF HFP-EXT = BFP-LNG      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    147         IF    HFP_EXT,=,BFP_LNG
         LD    ZC_F4,BFP_LNG
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_LH,PFPO_TYPE_DB,PFPO_RNDX
               )
         PFPO 
         LD    ZC_F1,HFP_EXT
         LD    ZC_F3,8+HFP_EXT
         CXR   ZC_F1,ZC_F0
         BRC   15-ZC_EQ,PG_IF_61_1
*ZC    147         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    147         ELSE
         J     PG_IF_61_E
PG_IF_61_1   DS    0H  &TYPE
*ZC    147         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_61_E   DS    0H  &TYPE
*            IF HFP-EXT = BFP-EXT      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    148         IF    HFP_EXT,=,BFP_EXT
         LD    ZC_F4,HFP_EXT
         LD    ZC_F6,8+HFP_EXT
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_LB,PFPO_TYPE_LH,PFPO_RNDX
               )
         PFPO 
         LD    ZC_F1,BFP_EXT
         LD    ZC_F3,8+BFP_EXT
         CXBR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_62_1
*ZC    148         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    148         ELSE
         J     PG_IF_62_E
PG_IF_62_1   DS    0H  &TYPE
*ZC    148         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_62_E   DS    0H  &TYPE
*            IF HFP-EXT = DFP-SRT      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    149         IF    HFP_EXT,=,DFP_SRT
         LE    ZC_F4,DFP_SRT
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_LH,PFPO_TYPE_ED,PFPO_RNDX
               )
         PFPO 
         LD    ZC_F1,HFP_EXT
         LD    ZC_F3,8+HFP_EXT
         CXR   ZC_F1,ZC_F0
         BRC   15-ZC_EQ,PG_IF_63_1
*ZC    149         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    149         ELSE
         J     PG_IF_63_E
PG_IF_63_1   DS    0H  &TYPE
*ZC    149         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_63_E   DS    0H  &TYPE
*            IF HFP-EXT = DFP-LNG      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    150         IF    HFP_EXT,=,DFP_LNG
         LD    ZC_F4,DFP_LNG
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_LH,PFPO_TYPE_DD,PFPO_RNDX
               )
         PFPO 
         LD    ZC_F1,HFP_EXT
         LD    ZC_F3,8+HFP_EXT
         CXR   ZC_F1,ZC_F0
         BRC   15-ZC_EQ,PG_IF_64_1
*ZC    150         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    150         ELSE
         J     PG_IF_64_E
PG_IF_64_1   DS    0H  &TYPE
*ZC    150         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_64_E   DS    0H  &TYPE
*            IF HFP-EXT = DFP-EXT      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    151         IF    HFP_EXT,=,DFP_EXT
         LD    ZC_F4,DFP_EXT
         LD    ZC_F6,8+DFP_EXT
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_LH,PFPO_TYPE_LD,PFPO_RNDX
               )
         PFPO 
         LD    ZC_F1,HFP_EXT
         LD    ZC_F3,8+HFP_EXT
         CXR   ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_65_1
*ZC    151         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    151         ELSE
         J     PG_IF_65_E
PG_IF_65_1   DS    0H  &TYPE
*ZC    151         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_65_E   DS    0H  &TYPE
*            IF HFP-EXT = HW           PERFORM GOOD ELSE PERFORM BAD.  
*ZC    152         IF    HFP_EXT,=,HW
         LD    ZC_F0,HFP_EXT
         LD    ZC_F2,8+HFP_EXT
         LH    ZC_R1,HW
         CXFR  ZC_F1,ZC_R1
         CXR   ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_66_1
*ZC    152         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    152         ELSE
         J     PG_IF_66_E
PG_IF_66_1   DS    0H  &TYPE
*ZC    152         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_66_E   DS    0H  &TYPE
*            IF HFP-EXT = FW           PERFORM GOOD ELSE PERFORM BAD.  
*ZC    153         IF    HFP_EXT,=,FW
         LD    ZC_F0,HFP_EXT
         LD    ZC_F2,8+HFP_EXT
         L     ZC_R1,FW
         CXFR  ZC_F1,ZC_R1
         CXR   ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_67_1
*ZC    153         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    153         ELSE
         J     PG_IF_67_E
PG_IF_67_1   DS    0H  &TYPE
*ZC    153         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_67_E   DS    0H  &TYPE
*            IF HFP-EXT = DW           PERFORM GOOD ELSE PERFORM BAD.  
*ZC    154         IF    HFP_EXT,=,DW
         LD    ZC_F0,HFP_EXT
         LD    ZC_F2,8+HFP_EXT
         LG    ZC_R1,DW
         CXGR  ZC_F1,ZC_R1
         CXR   ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_68_1
*ZC    154         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    154         ELSE
         J     PG_IF_68_E
PG_IF_68_1   DS    0H  &TYPE
*ZC    154         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_68_E   DS    0H  &TYPE
*            IF HFP-EXT = QW           PERFORM GOOD ELSE PERFORM BAD.  
*ZC    155         IF    HFP_EXT,=,QW
         LG    ZC_R0,QW
         LG    ZC_R1,8+QW
         L     ZC_R15,ZCVT_CVTQTLB   CVT Q IN ZC_R0-ZC_R1              X
                                     TO LB IN ZC_F4-ZC_F6
         BASR  ZC_R14,ZC_R15
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_LH,PFPO_TYPE_LB,PFPO_RNDX
               )
         PFPO 
         LDR   ZC_F1,ZC_F0
         LDR   ZC_F3,ZC_F2
         LD    ZC_F0,HFP_EXT
         LD    ZC_F2,8+HFP_EXT
         CXR   ZC_F1,ZC_F0
         BRC   15-ZC_EQ,PG_IF_69_1
*ZC    155         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    155         ELSE
         J     PG_IF_69_E
PG_IF_69_1   DS    0H  &TYPE
*ZC    155         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_69_E   DS    0H  &TYPE
*            IF HFP-EXT = PD           PERFORM GOOD ELSE PERFORM BAD.  
*ZC    156         IF    HFP_EXT,=,PD
         ZAP   ZCVT_PWORK2,PD
         LMG   ZC_R0,ZC_R1,ZCVT_PWORK2
         CXSTR ZC_F4,ZC_R0
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_LH,PFPO_TYPE_LD,PFPO_RNDX
               )
         PFPO 
         LDR   ZC_F1,ZC_F0
         LDR   ZC_F3,ZC_F2
         LD    ZC_F0,HFP_EXT
         LD    ZC_F2,8+HFP_EXT
         CXR   ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_70_1
*ZC    156         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    156         ELSE
         J     PG_IF_70_E
PG_IF_70_1   DS    0H  &TYPE
*ZC    156         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_70_E   DS    0H  &TYPE
*            IF HFP-EXT = ZD           PERFORM GOOD ELSE PERFORM BAD.  
*ZC    157         IF    HFP_EXT,=,ZD
         PACK  ZCVT_PWORK2(8),0+ZD(15) PACK #1 FULL
         PACK  7+ZCVT_PWORK2(8),14+ZD(15) PACK #2 FULL
         PACK  14+ZCVT_PWORK2(2),28+ZD(3)  PACK #3 FINAL
         LMG   ZC_R0,ZC_R1,ZCVT_PWORK2
         CXSTR ZC_F4,ZC_R0
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_LH,PFPO_TYPE_LD,PFPO_RNDX
               )
         PFPO 
         LDR   ZC_F1,ZC_F0
         LDR   ZC_F3,ZC_F2
         LD    ZC_F0,HFP_EXT
         LD    ZC_F2,8+HFP_EXT
         CXR   ZC_F1,ZC_F0
         BRC   15-ZC_EQ,PG_IF_71_1
*ZC    157         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    157         ELSE
         J     PG_IF_71_E
PG_IF_71_1   DS    0H  &TYPE
*ZC    157         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_71_E   DS    0H  &TYPE
*            IF BFP-SRT = HFP-SRT      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    158         IF    BFP_SRT,=,HFP_SRT
         LE    ZC_F4,HFP_SRT
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_EB,PFPO_TYPE_EH,PFPO_RNDX
               )
         PFPO 
         LER   ZC_F1,ZC_F0
         LE    ZC_F0,BFP_SRT
         CEBR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_72_1
*ZC    158         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    158         ELSE
         J     PG_IF_72_E
PG_IF_72_1   DS    0H  &TYPE
*ZC    158         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_72_E   DS    0H  &TYPE
*            IF BFP-SRT = HFP-LNG      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    159         IF    BFP_SRT,=,HFP_LNG
         LD    ZC_F4,HFP_LNG
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_EB,PFPO_TYPE_DH,PFPO_RNDX
               )
         PFPO 
         LER   ZC_F1,ZC_F0
         LE    ZC_F0,BFP_SRT
         CEBR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_73_1
*ZC    159         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    159         ELSE
         J     PG_IF_73_E
PG_IF_73_1   DS    0H  &TYPE
*ZC    159         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_73_E   DS    0H  &TYPE
*            IF BFP-SRT = HFP-EXT      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    160         IF    BFP_SRT,=,HFP_EXT
         LD    ZC_F4,HFP_EXT
         LD    ZC_F6,8+HFP_EXT
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_EB,PFPO_TYPE_LH,PFPO_RNDX
               )
         PFPO 
         LER   ZC_F1,ZC_F0
         LE    ZC_F0,BFP_SRT
         CEBR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_74_1
*ZC    160         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    160         ELSE
         J     PG_IF_74_E
PG_IF_74_1   DS    0H  &TYPE
*ZC    160         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_74_E   DS    0H  &TYPE
*            IF BFP-SRT = BFP-SRT      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    161         IF    BFP_SRT,=,BFP_SRT
         LE    ZC_F0,BFP_SRT
         LE    ZC_F1,BFP_SRT
         CEBR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_75_1
*ZC    161         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    161         ELSE
         J     PG_IF_75_E
PG_IF_75_1   DS    0H  &TYPE
*ZC    161         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_75_E   DS    0H  &TYPE
*            IF BFP-SRT = BFP-LNG      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    162         IF    BFP_SRT,=,BFP_LNG
         LD    ZC_F4,BFP_LNG
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_EB,PFPO_TYPE_DB,PFPO_RNDX
               )
         PFPO 
         LER   ZC_F1,ZC_F0
         LE    ZC_F0,BFP_SRT
         CEBR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_76_1
*ZC    162         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    162         ELSE
         J     PG_IF_76_E
PG_IF_76_1   DS    0H  &TYPE
*ZC    162         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_76_E   DS    0H  &TYPE
*            IF BFP-SRT = BFP-EXT      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    163         IF    BFP_SRT,=,BFP_EXT
         LD    ZC_F4,BFP_EXT
         LD    ZC_F6,8+BFP_EXT
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_EB,PFPO_TYPE_LB,PFPO_RNDX
               )
         PFPO 
         LER   ZC_F1,ZC_F0
         LE    ZC_F0,BFP_SRT
         CEBR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_77_1
*ZC    163         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    163         ELSE
         J     PG_IF_77_E
PG_IF_77_1   DS    0H  &TYPE
*ZC    163         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_77_E   DS    0H  &TYPE
*            IF BFP-SRT = DFP-SRT      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    164         IF    BFP_SRT,=,DFP_SRT
         LE    ZC_F4,DFP_SRT
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_EB,PFPO_TYPE_ED,PFPO_RNDX
               )
         PFPO 
         LER   ZC_F1,ZC_F0
         LE    ZC_F0,BFP_SRT
         CEBR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_78_1
*ZC    164         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    164         ELSE
         J     PG_IF_78_E
PG_IF_78_1   DS    0H  &TYPE
*ZC    164         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_78_E   DS    0H  &TYPE
*            IF BFP-SRT = DFP-LNG      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    165         IF    BFP_SRT,=,DFP_LNG
         LD    ZC_F4,DFP_LNG
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_EB,PFPO_TYPE_DD,PFPO_RNDX
               )
         PFPO 
         LER   ZC_F1,ZC_F0
         LE    ZC_F0,BFP_SRT
         CEBR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_79_1
*ZC    165         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    165         ELSE
         J     PG_IF_79_E
PG_IF_79_1   DS    0H  &TYPE
*ZC    165         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_79_E   DS    0H  &TYPE
*            IF BFP-SRT = DFP-EXT      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    166         IF    BFP_SRT,=,DFP_EXT
         LD    ZC_F4,DFP_EXT
         LD    ZC_F6,8+DFP_EXT
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_EB,PFPO_TYPE_LD,PFPO_RNDX
               )
         PFPO 
         LER   ZC_F1,ZC_F0
         LE    ZC_F0,BFP_SRT
         CEBR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_80_1
*ZC    166         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    166         ELSE
         J     PG_IF_80_E
PG_IF_80_1   DS    0H  &TYPE
*ZC    166         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_80_E   DS    0H  &TYPE
*            IF BFP-SRT = HW           PERFORM GOOD ELSE PERFORM BAD.  
*ZC    167         IF    BFP_SRT,=,HW
         LE    ZC_F0,BFP_SRT
         LH    ZC_R1,HW
         CEFBR ZC_F1,ZC_R1
         CEBR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_81_1
*ZC    167         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    167         ELSE
         J     PG_IF_81_E
PG_IF_81_1   DS    0H  &TYPE
*ZC    167         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_81_E   DS    0H  &TYPE
*            IF BFP-SRT = FW           PERFORM GOOD ELSE PERFORM BAD.  
*ZC    168         IF    BFP_SRT,=,FW
         LE    ZC_F0,BFP_SRT
         L     ZC_R1,FW
         CEFBR ZC_F1,ZC_F1
         CEBR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_82_1
*ZC    168         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    168         ELSE
         J     PG_IF_82_E
PG_IF_82_1   DS    0H  &TYPE
*ZC    168         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_82_E   DS    0H  &TYPE
*            IF BFP-SRT = DW           PERFORM GOOD ELSE PERFORM BAD.  
*ZC    169         IF    BFP_SRT,=,DW
         LE    ZC_F0,BFP_SRT
         LG    ZC_R1,DW
         CEGBR ZC_F1,ZC_R1
         CEBR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_83_1
*ZC    169         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    169         ELSE
         J     PG_IF_83_E
PG_IF_83_1   DS    0H  &TYPE
*ZC    169         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_83_E   DS    0H  &TYPE
*            IF BFP-SRT = QW           PERFORM GOOD ELSE PERFORM BAD.  
*ZC    170         IF    BFP_SRT,=,QW
         LG    ZC_R0,QW
         LG    ZC_R1,8+QW
         L     ZC_R15,ZCVT_CVTQTLB   CVT Q IN ZC_R0-ZC_R1              X
                                     TO LB IN ZC_F4-ZC_F6
         BASR  ZC_R14,ZC_R15
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_EB,PFPO_TYPE_LB,PFPO_RNDX
               )
         PFPO 
         LER   ZC_F1,ZC_F0
         LE    ZC_F0,BFP_SRT
         CEBR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_84_1
*ZC    170         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    170         ELSE
         J     PG_IF_84_E
PG_IF_84_1   DS    0H  &TYPE
*ZC    170         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_84_E   DS    0H  &TYPE
*            IF BFP-SRT = PD           PERFORM GOOD ELSE PERFORM BAD.  
*ZC    171         IF    BFP_SRT,=,PD
         ZAP   ZCVT_PWORK2,PD
         LMG   ZC_R0,ZC_R1,ZCVT_PWORK2
         CXSTR ZC_F4,ZC_R0
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_EB,PFPO_TYPE_LD,PFPO_RNDX
               )
         PFPO 
         LER   ZC_F1,ZC_F0
         LE    ZC_F0,BFP_SRT
         CEBR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_85_1
*ZC    171         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    171         ELSE
         J     PG_IF_85_E
PG_IF_85_1   DS    0H  &TYPE
*ZC    171         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_85_E   DS    0H  &TYPE
*            IF BFP-SRT = ZD           PERFORM GOOD ELSE PERFORM BAD.  
*ZC    172         IF    BFP_SRT,=,ZD
         PACK  ZCVT_PWORK2(8),0+ZD(15) PACK #1 FULL
         PACK  7+ZCVT_PWORK2(8),14+ZD(15) PACK #2 FULL
         PACK  14+ZCVT_PWORK2(2),28+ZD(3)  PACK #3 FINAL
         LMG   ZC_R0,ZC_R1,ZCVT_PWORK2
         CXSTR ZC_F4,ZC_R0
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_EB,PFPO_TYPE_LD,PFPO_RNDX
               )
         PFPO 
         LER   ZC_F1,ZC_F0
         LE    ZC_F0,BFP_SRT
         CEBR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_86_1
*ZC    172         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    172         ELSE
         J     PG_IF_86_E
PG_IF_86_1   DS    0H  &TYPE
*ZC    172         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_86_E   DS    0H  &TYPE
*            IF BFP-LNG = HFP-SRT      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    173         IF    BFP_LNG,=,HFP_SRT
         LE    ZC_F4,HFP_SRT
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_DB,PFPO_TYPE_EH,PFPO_RNDX
               )
         PFPO 
         LDR   ZC_F1,ZC_F0
         LD    ZC_F0,BFP_LNG
         CDBR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_87_1
*ZC    173         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    173         ELSE
         J     PG_IF_87_E
PG_IF_87_1   DS    0H  &TYPE
*ZC    173         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_87_E   DS    0H  &TYPE
*            IF BFP-LNG = HFP-LNG      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    174         IF    BFP_LNG,=,HFP_LNG
         LD    ZC_F4,HFP_LNG
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_DB,PFPO_TYPE_DH,PFPO_RNDX
               )
         PFPO 
         LDR   ZC_F1,ZC_F0
         LD    ZC_F0,BFP_LNG
         CDBR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_88_1
*ZC    174         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    174         ELSE
         J     PG_IF_88_E
PG_IF_88_1   DS    0H  &TYPE
*ZC    174         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_88_E   DS    0H  &TYPE
*            IF BFP-LNG = HFP-EXT      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    175         IF    BFP_LNG,=,HFP_EXT
         LD    ZC_F4,HFP_EXT
         LD    ZC_F6,8+HFP_EXT
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_DB,PFPO_TYPE_LH,PFPO_RNDX
               )
         PFPO 
         LDR   ZC_F1,ZC_F0
         LD    ZC_F0,BFP_LNG
         CDBR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_89_1
*ZC    175         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    175         ELSE
         J     PG_IF_89_E
PG_IF_89_1   DS    0H  &TYPE
*ZC    175         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_89_E   DS    0H  &TYPE
*            IF BFP-LNG = BFP-SRT      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    176         IF    BFP_LNG,=,BFP_SRT
         LE    ZC_F4,BFP_SRT
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_DB,PFPO_TYPE_EB,PFPO_RNDX
               )
         PFPO 
         LDR   ZC_F1,ZC_F0
         LD    ZC_F0,BFP_LNG
         CDBR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_90_1
*ZC    176         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    176         ELSE
         J     PG_IF_90_E
PG_IF_90_1   DS    0H  &TYPE
*ZC    176         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_90_E   DS    0H  &TYPE
*            IF BFP-LNG = BFP-LNG      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    177         IF    BFP_LNG,=,BFP_LNG
         LD    ZC_F0,BFP_LNG
         LD    ZC_F1,BFP_LNG
         CDBR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_91_1
*ZC    177         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    177         ELSE
         J     PG_IF_91_E
PG_IF_91_1   DS    0H  &TYPE
*ZC    177         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_91_E   DS    0H  &TYPE
*            IF BFP-LNG = BFP-EXT      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    178         IF    BFP_LNG,=,BFP_EXT
         LD    ZC_F4,BFP_EXT
         LD    ZC_F6,8+BFP_EXT
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_DB,PFPO_TYPE_LB,PFPO_RNDX
               )
         PFPO 
         LDR   ZC_F1,ZC_F0
         LD    ZC_F0,BFP_LNG
         CDBR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_92_1
*ZC    178         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    178         ELSE
         J     PG_IF_92_E
PG_IF_92_1   DS    0H  &TYPE
*ZC    178         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_92_E   DS    0H  &TYPE
*            IF BFP-LNG = DFP-SRT      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    179         IF    BFP_LNG,=,DFP_SRT
         LE    ZC_F4,DFP_SRT
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_DB,PFPO_TYPE_ED,PFPO_RNDX
               )
         PFPO 
         LDR   ZC_F1,ZC_F0
         LD    ZC_F0,BFP_LNG
         CDBR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_93_1
*ZC    179         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    179         ELSE
         J     PG_IF_93_E
PG_IF_93_1   DS    0H  &TYPE
*ZC    179         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_93_E   DS    0H  &TYPE
*            IF BFP-LNG = DFP-LNG      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    180         IF    BFP_LNG,=,DFP_LNG
         LD    ZC_F4,DFP_LNG
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_DB,PFPO_TYPE_DD,PFPO_RNDX
               )
         PFPO 
         LDR   ZC_F1,ZC_F0
         LD    ZC_F0,BFP_LNG
         CDBR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_94_1
*ZC    180         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    180         ELSE
         J     PG_IF_94_E
PG_IF_94_1   DS    0H  &TYPE
*ZC    180         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_94_E   DS    0H  &TYPE
*            IF BFP-LNG = DFP-EXT      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    181         IF    BFP_LNG,=,DFP_EXT
         LD    ZC_F4,DFP_EXT
         LD    ZC_F6,8+DFP_EXT
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_DB,PFPO_TYPE_LD,PFPO_RNDX
               )
         PFPO 
         LDR   ZC_F1,ZC_F0
         LD    ZC_F0,BFP_LNG
         CDBR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_95_1
*ZC    181         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    181         ELSE
         J     PG_IF_95_E
PG_IF_95_1   DS    0H  &TYPE
*ZC    181         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_95_E   DS    0H  &TYPE
*            IF BFP-LNG = HW           PERFORM GOOD ELSE PERFORM BAD.  
*ZC    182         IF    BFP_LNG,=,HW
         LD    ZC_F0,BFP_LNG
         LH    ZC_R1,HW
         CDFBR ZC_F1,ZC_R1
         CDBR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_96_1
*ZC    182         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    182         ELSE
         J     PG_IF_96_E
PG_IF_96_1   DS    0H  &TYPE
*ZC    182         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_96_E   DS    0H  &TYPE
*            IF BFP-LNG = FW           PERFORM GOOD ELSE PERFORM BAD.  
*ZC    183         IF    BFP_LNG,=,FW
         LD    ZC_F0,BFP_LNG
         L     ZC_R1,FW
         CDFBR ZC_F1,ZC_R1
         CDBR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_97_1
*ZC    183         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    183         ELSE
         J     PG_IF_97_E
PG_IF_97_1   DS    0H  &TYPE
*ZC    183         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_97_E   DS    0H  &TYPE
*            IF BFP-LNG = DW           PERFORM GOOD ELSE PERFORM BAD.  
*ZC    184         IF    BFP_LNG,=,DW
         LD    ZC_F0,BFP_LNG
         LG    ZC_R1,DW
         CDGBR ZC_F1,ZC_R1
         CDBR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_98_1
*ZC    184         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    184         ELSE
         J     PG_IF_98_E
PG_IF_98_1   DS    0H  &TYPE
*ZC    184         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_98_E   DS    0H  &TYPE
*            IF BFP-LNG = QW           PERFORM GOOD ELSE PERFORM BAD.  
*ZC    185         IF    BFP_LNG,=,QW
         LG    ZC_R0,QW
         LG    ZC_R1,8+QW
         L     ZC_R15,ZCVT_CVTQTLB   CVT Q IN ZC_R0-ZC_R1              X
                                     TO LB IN ZC_F4-ZC_F6
         BASR  ZC_R14,ZC_R15
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_DB,PFPO_TYPE_LB,PFPO_RNDX
               )
         PFPO 
         LDR   ZC_F1,ZC_F0
         LD    ZC_F0,BFP_LNG
         CDBR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_99_1
*ZC    185         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    185         ELSE
         J     PG_IF_99_E
PG_IF_99_1   DS    0H  &TYPE
*ZC    185         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_99_E   DS    0H  &TYPE
*            IF BFP-LNG = PD           PERFORM GOOD ELSE PERFORM BAD.  
*ZC    186         IF    BFP_LNG,=,PD
         ZAP   ZCVT_PWORK2,PD
         LMG   ZC_R0,ZC_R1,ZCVT_PWORK2
         CXSTR ZC_F4,ZC_R0
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_DB,PFPO_TYPE_LD,PFPO_RNDX
               )
         PFPO 
         LDR   ZC_F1,ZC_F0
         LD    ZC_F0,BFP_LNG
         CDBR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_100_1
*ZC    186         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    186         ELSE
         J     PG_IF_100_E
PG_IF_100_1  DS    0H  &TYPE
*ZC    186         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_100_E  DS    0H  &TYPE
*            IF BFP-LNG = ZD           PERFORM GOOD ELSE PERFORM BAD.  
*ZC    187         IF    BFP_LNG,=,ZD
         PACK  ZCVT_PWORK2(8),0+ZD(15) PACK #1 FULL
         PACK  7+ZCVT_PWORK2(8),14+ZD(15) PACK #2 FULL
         PACK  14+ZCVT_PWORK2(2),28+ZD(3)  PACK #3 FINAL
         LMG   ZC_R0,ZC_R1,ZCVT_PWORK2
         CXSTR ZC_F4,ZC_R0
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_DB,PFPO_TYPE_LD,PFPO_RNDX
               )
         PFPO 
         LDR   ZC_F1,ZC_F0
         LD    ZC_F0,BFP_LNG
         CDBR  ZC_F1,ZC_F0
         BRC   15-ZC_EQ,PG_IF_101_1
*ZC    187         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    187         ELSE
         J     PG_IF_101_E
PG_IF_101_1  DS    0H  &TYPE
*ZC    187         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_101_E  DS    0H  &TYPE
*            IF BFP-EXT = HFP-SRT      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    188         IF    BFP_EXT,=,HFP_SRT
         LE    ZC_F4,HFP_SRT
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_LB,PFPO_TYPE_EH,PFPO_RNDX
               )
         PFPO 
         LDR   ZC_F1,ZC_F0
         LDR   ZC_F3,ZC_F2
         LD    ZC_F0,BFP_EXT
         LD    ZC_F2,8+BFP_EXT
         CXBR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_102_1
*ZC    188         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    188         ELSE
         J     PG_IF_102_E
PG_IF_102_1  DS    0H  &TYPE
*ZC    188         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_102_E  DS    0H  &TYPE
*            IF BFP-EXT = HFP-LNG      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    189         IF    BFP_EXT,=,HFP_LNG
         LD    ZC_F4,HFP_LNG
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_LB,PFPO_TYPE_DH,PFPO_RNDX
               )
         PFPO 
         LDR   ZC_F1,ZC_F0
         LDR   ZC_F3,ZC_F2
         LD    ZC_F0,BFP_EXT
         LD    ZC_F2,8+BFP_EXT
         CXBR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_103_1
*ZC    189         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    189         ELSE
         J     PG_IF_103_E
PG_IF_103_1  DS    0H  &TYPE
*ZC    189         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_103_E  DS    0H  &TYPE
*            IF BFP-EXT = HFP-EXT      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    190         IF    BFP_EXT,=,HFP_EXT
         LD    ZC_F4,HFP_EXT
         LD    ZC_F6,8+HFP_EXT
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_LB,PFPO_TYPE_LH,PFPO_RNDX
               )
         PFPO 
         LDR   ZC_F1,ZC_F0
         LDR   ZC_F3,ZC_F2
         LD    ZC_F0,BFP_EXT
         LD    ZC_F2,8+BFP_EXT
         CXBR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_104_1
*ZC    190         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    190         ELSE
         J     PG_IF_104_E
PG_IF_104_1  DS    0H  &TYPE
*ZC    190         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_104_E  DS    0H  &TYPE
*            IF BFP-EXT = BFP-SRT      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    191         IF    BFP_EXT,=,BFP_SRT
         LE    ZC_F4,BFP_SRT
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_LB,PFPO_TYPE_EB,PFPO_RNDX
               )
         PFPO 
         LDR   ZC_F1,ZC_F0
         LDR   ZC_F3,ZC_F2
         LD    ZC_F0,BFP_EXT
         LD    ZC_F2,8+BFP_EXT
         CXBR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_105_1
*ZC    191         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    191         ELSE
         J     PG_IF_105_E
PG_IF_105_1  DS    0H  &TYPE
*ZC    191         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_105_E  DS    0H  &TYPE
*            IF BFP-EXT = BFP-LNG      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    192         IF    BFP_EXT,=,BFP_LNG
         LD    ZC_F4,BFP_LNG
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_LB,PFPO_TYPE_DB,PFPO_RNDX
               )
         PFPO 
         LDR   ZC_F1,ZC_F0
         LDR   ZC_F3,ZC_F2
         LD    ZC_F0,BFP_EXT
         LD    ZC_F2,8+BFP_EXT
         CXBR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_106_1
*ZC    192         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    192         ELSE
         J     PG_IF_106_E
PG_IF_106_1  DS    0H  &TYPE
*ZC    192         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_106_E  DS    0H  &TYPE
*            IF BFP-EXT = BFP-EXT      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    193         IF    BFP_EXT,=,BFP_EXT
         LD    ZC_F0,BFP_EXT
         LD    ZC_F2,8+BFP_EXT
         LDR   ZC_F1,ZC_F0
         LDR   ZC_F3,ZC_F2
         LD    ZC_F0,BFP_EXT
         LD    ZC_F2,8+BFP_EXT
         CXBR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_107_1
*ZC    193         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    193         ELSE
         J     PG_IF_107_E
PG_IF_107_1  DS    0H  &TYPE
*ZC    193         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_107_E  DS    0H  &TYPE
*            IF BFP-EXT = DFP-SRT      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    194         IF    BFP_EXT,=,DFP_SRT
         LE    ZC_F4,DFP_SRT
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_LB,PFPO_TYPE_ED,PFPO_RNDX
               )
         PFPO 
         LDR   ZC_F1,ZC_F0
         LDR   ZC_F3,ZC_F2
         LD    ZC_F0,BFP_EXT
         LD    ZC_F2,8+BFP_EXT
         CXBR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_108_1
*ZC    194         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    194         ELSE
         J     PG_IF_108_E
PG_IF_108_1  DS    0H  &TYPE
*ZC    194         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_108_E  DS    0H  &TYPE
*            IF BFP-EXT = DFP-LNG      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    195         IF    BFP_EXT,=,DFP_LNG
         LD    ZC_F4,DFP_LNG
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_LB,PFPO_TYPE_DD,PFPO_RNDX
               )
         PFPO 
         LDR   ZC_F1,ZC_F0
         LDR   ZC_F3,ZC_F2
         LD    ZC_F0,BFP_EXT
         LD    ZC_F2,8+BFP_EXT
         CXBR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_109_1
*ZC    195         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    195         ELSE
         J     PG_IF_109_E
PG_IF_109_1  DS    0H  &TYPE
*ZC    195         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_109_E  DS    0H  &TYPE
*            IF BFP-EXT = DFP-EXT      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    196         IF    BFP_EXT,=,DFP_EXT
         LD    ZC_F4,DFP_EXT
         LD    ZC_F6,8+DFP_EXT
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_LB,PFPO_TYPE_LD,PFPO_RNDX
               )
         PFPO 
         LDR   ZC_F1,ZC_F0
         LDR   ZC_F3,ZC_F2
         LD    ZC_F0,BFP_EXT
         LD    ZC_F2,8+BFP_EXT
         CXBR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_110_1
*ZC    196         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    196         ELSE
         J     PG_IF_110_E
PG_IF_110_1  DS    0H  &TYPE
*ZC    196         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_110_E  DS    0H  &TYPE
*            IF BFP-EXT = HW           PERFORM GOOD ELSE PERFORM BAD.  
*ZC    197         IF    BFP_EXT,=,HW
         LH    ZC_R1,HW
         CXGBR ZC_F1,ZC_R1
         LD    ZC_F0,BFP_EXT
         LD    ZC_F2,8+BFP_EXT
         CXBR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_111_1
*ZC    197         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    197         ELSE
         J     PG_IF_111_E
PG_IF_111_1  DS    0H  &TYPE
*ZC    197         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_111_E  DS    0H  &TYPE
*            IF BFP-EXT = FW           PERFORM GOOD ELSE PERFORM BAD.  
*ZC    198         IF    BFP_EXT,=,FW
         L     ZC_R1,FW
         CXFBR ZC_F1,ZC_R1
         LD    ZC_F0,BFP_EXT
         LD    ZC_F2,8+BFP_EXT
         CXBR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_112_1
*ZC    198         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    198         ELSE
         J     PG_IF_112_E
PG_IF_112_1  DS    0H  &TYPE
*ZC    198         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_112_E  DS    0H  &TYPE
*            IF BFP-EXT = DW           PERFORM GOOD ELSE PERFORM BAD.  
*ZC    199         IF    BFP_EXT,=,DW
         LG    ZC_R1,DW
         CXGBR ZC_F1,ZC_R1
         LD    ZC_F0,BFP_EXT
         LD    ZC_F2,8+BFP_EXT
         CXBR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_113_1
*ZC    199         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    199         ELSE
         J     PG_IF_113_E
PG_IF_113_1  DS    0H  &TYPE
*ZC    199         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_113_E  DS    0H  &TYPE
*            IF BFP-EXT = QW           PERFORM GOOD ELSE PERFORM BAD.  
*ZC    200         IF    BFP_EXT,=,QW
         LG    ZC_R0,QW
         LG    ZC_R1,8+QW
         L     ZC_R15,ZCVT_CVTQTLB   CVT Q IN ZC_R0-ZC_R1              X
                                     TO LB IN ZC_F4-ZC_F6
         BASR  ZC_R14,ZC_R15
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_LB,PFPO_TYPE_LB,PFPO_RNDX
               )
         PFPO 
         LDR   ZC_F1,ZC_F0
         LDR   ZC_F3,ZC_F2
         LD    ZC_F0,BFP_EXT
         LD    ZC_F2,8+BFP_EXT
         CXBR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_114_1
*ZC    200         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    200         ELSE
         J     PG_IF_114_E
PG_IF_114_1  DS    0H  &TYPE
*ZC    200         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_114_E  DS    0H  &TYPE
*            IF BFP-EXT = PD           PERFORM GOOD ELSE PERFORM BAD.  
*ZC    201         IF    BFP_EXT,=,PD
         ZAP   ZCVT_PWORK2,PD
         LMG   ZC_R0,ZC_R1,ZCVT_PWORK2
         CXSTR ZC_F4,ZC_R0
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_LB,PFPO_TYPE_LD,PFPO_RNDX
               )
         PFPO 
         LDR   ZC_F1,ZC_F0
         LDR   ZC_F3,ZC_F2
         LD    ZC_F0,BFP_EXT
         LD    ZC_F2,8+BFP_EXT
         CXBR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_115_1
*ZC    201         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    201         ELSE
         J     PG_IF_115_E
PG_IF_115_1  DS    0H  &TYPE
*ZC    201         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_115_E  DS    0H  &TYPE
*            IF BFP-EXT = ZD           PERFORM GOOD ELSE PERFORM BAD.  
*ZC    202         IF    BFP_EXT,=,ZD
         PACK  ZCVT_PWORK2(8),0+ZD(15) PACK #1 FULL
         PACK  7+ZCVT_PWORK2(8),14+ZD(15) PACK #2 FULL
         PACK  14+ZCVT_PWORK2(2),28+ZD(3)  PACK #3 FINAL
         LMG   ZC_R0,ZC_R1,ZCVT_PWORK2
         CXSTR ZC_F4,ZC_R0
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_LB,PFPO_TYPE_LD,PFPO_RNDX
               )
         PFPO 
         LDR   ZC_F1,ZC_F0
         LDR   ZC_F3,ZC_F2
         LD    ZC_F0,BFP_EXT
         LD    ZC_F2,8+BFP_EXT
         CXBR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_116_1
*ZC    202         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    202         ELSE
         J     PG_IF_116_E
PG_IF_116_1  DS    0H  &TYPE
*ZC    202         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_116_E  DS    0H  &TYPE
*            IF DFP-SRT = HFP-SRT      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    203         IF    DFP_SRT,=,HFP_SRT
         LE    ZC_F4,HFP_SRT
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_DD,PFPO_TYPE_EH,PFPO_RNDX
               )
         PFPO 
         LDR   ZC_F1,ZC_F0
         LE    ZC_F0,DFP_SRT
         LDETR ZC_F0,ZC_F0,0
         CDTR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_117_1
*ZC    203         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    203         ELSE
         J     PG_IF_117_E
PG_IF_117_1  DS    0H  &TYPE
*ZC    203         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_117_E  DS    0H  &TYPE
*            IF DFP-SRT = HFP-LNG      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    204         IF    DFP_SRT,=,HFP_LNG
         LD    ZC_F4,HFP_LNG
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_DD,PFPO_TYPE_DH,PFPO_RNDX
               )
         PFPO 
         LDR   ZC_F1,ZC_F0
         LE    ZC_F0,DFP_SRT
         LDETR ZC_F0,ZC_F0,0
         CDTR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_118_1
*ZC    204         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    204         ELSE
         J     PG_IF_118_E
PG_IF_118_1  DS    0H  &TYPE
*ZC    204         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_118_E  DS    0H  &TYPE
*            IF DFP-SRT = HFP-EXT      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    205         IF    DFP_SRT,=,HFP_EXT
         LD    ZC_F4,HFP_EXT
         LD    ZC_F6,8+HFP_EXT
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_DD,PFPO_TYPE_LH,PFPO_RNDX
               )
         PFPO 
         LDR   ZC_F1,ZC_F0
         LE    ZC_F0,DFP_SRT
         LDETR ZC_F0,ZC_F0,0
         CDTR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_119_1
*ZC    205         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    205         ELSE
         J     PG_IF_119_E
PG_IF_119_1  DS    0H  &TYPE
*ZC    205         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_119_E  DS    0H  &TYPE
*            IF DFP-SRT = BFP-SRT      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    206         IF    DFP_SRT,=,BFP_SRT
         LE    ZC_F4,BFP_SRT
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_DD,PFPO_TYPE_EB,PFPO_RNDX
               )
         PFPO 
         LDR   ZC_F1,ZC_F0
         LE    ZC_F0,DFP_SRT
         LDETR ZC_F0,ZC_F0,0
         CDTR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_120_1
*ZC    206         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    206         ELSE
         J     PG_IF_120_E
PG_IF_120_1  DS    0H  &TYPE
*ZC    206         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_120_E  DS    0H  &TYPE
*            IF DFP-SRT = BFP-LNG      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    207         IF    DFP_SRT,=,BFP_LNG
         LD    ZC_F4,BFP_LNG
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_DD,PFPO_TYPE_DB,PFPO_RNDX
               )
         PFPO 
         LDR   ZC_F1,ZC_F0
         LE    ZC_F0,DFP_SRT
         LDETR ZC_F0,ZC_F0,0
         CDTR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_121_1
*ZC    207         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    207         ELSE
         J     PG_IF_121_E
PG_IF_121_1  DS    0H  &TYPE
*ZC    207         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_121_E  DS    0H  &TYPE
*            IF DFP-SRT = BFP-EXT      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    208         IF    DFP_SRT,=,BFP_EXT
         LD    ZC_F4,BFP_EXT
         LD    ZC_F6,8+BFP_EXT
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_DD,PFPO_TYPE_LB,PFPO_RNDX
               )
         PFPO 
         LDR   ZC_F1,ZC_F0
         LE    ZC_F0,DFP_SRT
         LDETR ZC_F0,ZC_F0,0
         CDTR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_122_1
*ZC    208         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    208         ELSE
         J     PG_IF_122_E
PG_IF_122_1  DS    0H  &TYPE
*ZC    208         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_122_E  DS    0H  &TYPE
*            IF DFP-SRT = DFP-SRT      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    209         IF    DFP_SRT,=,DFP_SRT
         LE    ZC_F0,DFP_SRT
         LDETR ZC_F0,ZC_F0,0
         LE    ZC_F1,DFP_SRT
         LDETR ZC_F1,ZC_F1,0
         CDTR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_123_1
*ZC    209         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    209         ELSE
         J     PG_IF_123_E
PG_IF_123_1  DS    0H  &TYPE
*ZC    209         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_123_E  DS    0H  &TYPE
*            IF DFP-SRT = DFP-LNG      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    210         IF    DFP_SRT,=,DFP_LNG
         LE    ZC_F0,DFP_SRT
         LDETR ZC_F0,ZC_F0,0
         LD    ZC_F1,DFP_LNG
         CDTR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_124_1
*ZC    210         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    210         ELSE
         J     PG_IF_124_E
PG_IF_124_1  DS    0H  &TYPE
*ZC    210         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_124_E  DS    0H  &TYPE
*            IF DFP-SRT = DFP-EXT      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    211         IF    DFP_SRT,=,DFP_EXT
         LD    ZC_F4,DFP_EXT
         LD    ZC_F6,8+DFP_EXT
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_DD,PFPO_TYPE_LD,PFPO_RNDX
               )
         PFPO 
         LDR   ZC_F1,ZC_F0
         LE    ZC_F0,DFP_SRT
         LDETR ZC_F0,ZC_F0,0
         CDTR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_125_1
*ZC    211         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    211         ELSE
         J     PG_IF_125_E
PG_IF_125_1  DS    0H  &TYPE
*ZC    211         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_125_E  DS    0H  &TYPE
*            IF DFP-SRT = HW           PERFORM GOOD ELSE PERFORM BAD.  
*ZC    212         IF    DFP_SRT,=,HW
         LE    ZC_F0,DFP_SRT
         LDETR ZC_F0,ZC_F0,0
         LH    ZC_R1,HW
         CDFTR ZC_F1,0,ZC_R1,0
         CDTR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_126_1
*ZC    212         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    212         ELSE
         J     PG_IF_126_E
PG_IF_126_1  DS    0H  &TYPE
*ZC    212         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_126_E  DS    0H  &TYPE
*            IF DFP-SRT = FW           PERFORM GOOD ELSE PERFORM BAD.  
*ZC    213         IF    DFP_SRT,=,FW
         LE    ZC_F0,DFP_SRT
         LDETR ZC_F0,ZC_F0,0
         L     ZC_R1,FW
         CDFTR ZC_F1,0,ZC_R1,0
         CDTR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_127_1
*ZC    213         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    213         ELSE
         J     PG_IF_127_E
PG_IF_127_1  DS    0H  &TYPE
*ZC    213         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_127_E  DS    0H  &TYPE
*            IF DFP-SRT = DW           PERFORM GOOD ELSE PERFORM BAD.  
*ZC    214         IF    DFP_SRT,=,DW
         LE    ZC_F0,DFP_SRT
         LDETR ZC_F0,ZC_F0,0
         LG    ZC_R1,DW
         CDGTR ZC_F1,ZC_R1
         CDTR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_128_1
*ZC    214         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    214         ELSE
         J     PG_IF_128_E
PG_IF_128_1  DS    0H  &TYPE
*ZC    214         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_128_E  DS    0H  &TYPE
*            IF DFP-SRT = QW           PERFORM GOOD ELSE PERFORM BAD.  
*ZC    215         IF    DFP_SRT,=,QW
         LG    ZC_R0,QW
         LG    ZC_R1,8+QW
         L     ZC_R15,ZCVT_CVTQTLB   CVT Q IN ZC_R0-ZC_R1              X
                                     TO LB IN ZC_F4-ZC_F6
         BASR  ZC_R14,ZC_R15
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_DD,PFPO_TYPE_LB,PFPO_RNDX
               )
         PFPO 
         LDR   ZC_F1,ZC_F0
         LE    ZC_F0,DFP_SRT
         LDETR ZC_F0,ZC_F0,0
         CDTR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_129_1
*ZC    215         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    215         ELSE
         J     PG_IF_129_E
PG_IF_129_1  DS    0H  &TYPE
*ZC    215         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_129_E  DS    0H  &TYPE
*            IF DFP-SRT = PD           PERFORM GOOD ELSE PERFORM BAD.  
*ZC    216         IF    DFP_SRT,=,PD
         ZAP   ZCVT_PWORK2,PD
         LMG   ZC_R0,ZC_R1,ZCVT_PWORK2
         CXSTR ZC_F4,ZC_R0
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_DD,PFPO_TYPE_LD,PFPO_RNDX
               )
         PFPO 
         LDR   ZC_F1,ZC_F0
         LE    ZC_F0,DFP_SRT
         LDETR ZC_F0,ZC_F0,0
         CDTR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_130_1
*ZC    216         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    216         ELSE
         J     PG_IF_130_E
PG_IF_130_1  DS    0H  &TYPE
*ZC    216         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_130_E  DS    0H  &TYPE
*            IF DFP-SRT = ZD           PERFORM GOOD ELSE PERFORM BAD.  
*ZC    217         IF    DFP_SRT,=,ZD
         PACK  ZCVT_PWORK2(8),0+ZD(15) PACK #1 FULL
         PACK  7+ZCVT_PWORK2(8),14+ZD(15) PACK #2 FULL
         PACK  14+ZCVT_PWORK2(2),28+ZD(3)  PACK #3 FINAL
         LMG   ZC_R0,ZC_R1,ZCVT_PWORK2
         CXSTR ZC_F4,ZC_R0
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_EB,PFPO_TYPE_LD,PFPO_RNDX
               )
         PFPO 
         LDR   ZC_F1,ZC_F0
         LE    ZC_F0,DFP_SRT
         LDETR ZC_F0,ZC_F0,0
         CDTR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_131_1
*ZC    217         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    217         ELSE
         J     PG_IF_131_E
PG_IF_131_1  DS    0H  &TYPE
*ZC    217         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_131_E  DS    0H  &TYPE
*            IF DFP-LNG = HFP-SRT      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    218         IF    DFP_LNG,=,HFP_SRT
         LE    ZC_F4,HFP_SRT
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_DD,PFPO_TYPE_EH,PFPO_RNDX
               )
         PFPO 
         LDR   ZC_F1,ZC_F0
         LD    ZC_F0,DFP_LNG
         CDTR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_132_1
*ZC    218         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    218         ELSE
         J     PG_IF_132_E
PG_IF_132_1  DS    0H  &TYPE
*ZC    218         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_132_E  DS    0H  &TYPE
*            IF DFP-LNG = HFP-LNG      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    219         IF    DFP_LNG,=,HFP_LNG
         LD    ZC_F4,HFP_LNG
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_DD,PFPO_TYPE_DH,PFPO_RNDX
               )
         PFPO 
         LDR   ZC_F1,ZC_F0
         LD    ZC_F0,DFP_LNG
         CDTR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_133_1
*ZC    219         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    219         ELSE
         J     PG_IF_133_E
PG_IF_133_1  DS    0H  &TYPE
*ZC    219         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_133_E  DS    0H  &TYPE
*            IF DFP-LNG = HFP-EXT      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    220         IF    DFP_LNG,=,HFP_EXT
         LD    ZC_F4,HFP_EXT
         LD    ZC_F6,8+HFP_EXT
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_DD,PFPO_TYPE_LH,PFPO_RNDX
               )
         PFPO 
         LDR   ZC_F1,ZC_F0
         LD    ZC_F0,DFP_LNG
         CDTR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_134_1
*ZC    220         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    220         ELSE
         J     PG_IF_134_E
PG_IF_134_1  DS    0H  &TYPE
*ZC    220         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_134_E  DS    0H  &TYPE
*            IF DFP-LNG = BFP-SRT      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    221         IF    DFP_LNG,=,BFP_SRT
         LE    ZC_F4,BFP_SRT
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_DD,PFPO_TYPE_EB,PFPO_RNDX
               )
         PFPO 
         LDR   ZC_F1,ZC_F0
         LD    ZC_F0,DFP_LNG
         CDTR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_135_1
*ZC    221         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    221         ELSE
         J     PG_IF_135_E
PG_IF_135_1  DS    0H  &TYPE
*ZC    221         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_135_E  DS    0H  &TYPE
*            IF DFP-LNG = BFP-LNG      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    222         IF    DFP_LNG,=,BFP_LNG
         LD    ZC_F4,BFP_LNG
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_DD,PFPO_TYPE_DB,PFPO_RNDX
               )
         PFPO 
         LDR   ZC_F1,ZC_F0
         LD    ZC_F0,DFP_LNG
         CDTR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_136_1
*ZC    222         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    222         ELSE
         J     PG_IF_136_E
PG_IF_136_1  DS    0H  &TYPE
*ZC    222         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_136_E  DS    0H  &TYPE
*            IF DFP-LNG = BFP-EXT      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    223         IF    DFP_LNG,=,BFP_EXT
         LD    ZC_F4,BFP_EXT
         LD    ZC_F6,8+BFP_EXT
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_DD,PFPO_TYPE_LB,PFPO_RNDX
               )
         PFPO 
         LDR   ZC_F1,ZC_F0
         LD    ZC_F0,DFP_LNG
         CDTR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_137_1
*ZC    223         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    223         ELSE
         J     PG_IF_137_E
PG_IF_137_1  DS    0H  &TYPE
*ZC    223         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_137_E  DS    0H  &TYPE
*            IF DFP-LNG = DFP-SRT      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    224         IF    DFP_LNG,=,DFP_SRT
         LE    ZC_F4,DFP_SRT
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_DD,PFPO_TYPE_ED,PFPO_RNDX
               )
         PFPO 
         LDR   ZC_F1,ZC_F0
         LD    ZC_F0,DFP_LNG
         CDTR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_138_1
*ZC    224         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    224         ELSE
         J     PG_IF_138_E
PG_IF_138_1  DS    0H  &TYPE
*ZC    224         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_138_E  DS    0H  &TYPE
*            IF DFP-LNG = DFP-LNG      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    225         IF    DFP_LNG,=,DFP_LNG
         LD    ZC_F0,DFP_LNG
         LD    ZC_F1,DFP_LNG
         CDTR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_139_1
*ZC    225         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    225         ELSE
         J     PG_IF_139_E
PG_IF_139_1  DS    0H  &TYPE
*ZC    225         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_139_E  DS    0H  &TYPE
*            IF DFP-LNG = DFP-EXT      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    226         IF    DFP_LNG,=,DFP_EXT
         LD    ZC_F4,DFP_EXT
         LD    ZC_F6,8+DFP_EXT
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_DD,PFPO_TYPE_LD,PFPO_RNDX
               )
         PFPO 
         LDR   ZC_F1,ZC_F0
         LD    ZC_F0,DFP_LNG
         CDTR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_140_1
*ZC    226         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    226         ELSE
         J     PG_IF_140_E
PG_IF_140_1  DS    0H  &TYPE
*ZC    226         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_140_E  DS    0H  &TYPE
*            IF DFP-LNG = HW           PERFORM GOOD ELSE PERFORM BAD.  
*ZC    227         IF    DFP_LNG,=,HW
         LD    ZC_F0,DFP_LNG
         LH    ZC_R1,HW
         CDFTR ZC_F1,0,ZC_R1,0
         CDTR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_141_1
*ZC    227         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    227         ELSE
         J     PG_IF_141_E
PG_IF_141_1  DS    0H  &TYPE
*ZC    227         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_141_E  DS    0H  &TYPE
*            IF DFP-LNG = FW           PERFORM GOOD ELSE PERFORM BAD.  
*ZC    228         IF    DFP_LNG,=,FW
         LD    ZC_F0,DFP_LNG
         L     ZC_R1,FW
         CDFTR ZC_F1,0,ZC_R1,0
         CDTR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_142_1
*ZC    228         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    228         ELSE
         J     PG_IF_142_E
PG_IF_142_1  DS    0H  &TYPE
*ZC    228         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_142_E  DS    0H  &TYPE
*            IF DFP-LNG = DW           PERFORM GOOD ELSE PERFORM BAD.  
*ZC    229         IF    DFP_LNG,=,DW
         LD    ZC_F0,DFP_LNG
         LG    ZC_R1,DW
         CDGTR ZC_F1,ZC_R1
         CDTR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_143_1
*ZC    229         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    229         ELSE
         J     PG_IF_143_E
PG_IF_143_1  DS    0H  &TYPE
*ZC    229         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_143_E  DS    0H  &TYPE
*            IF DFP-LNG = QW           PERFORM GOOD ELSE PERFORM BAD.  
*ZC    230         IF    DFP_LNG,=,QW
         LG    ZC_R0,QW
         LG    ZC_R1,8+QW
         L     ZC_R15,ZCVT_CVTQTLB   CVT Q IN ZC_R0-ZC_R1              X
                                     TO LB IN ZC_F4-ZC_F6
         BASR  ZC_R14,ZC_R15
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_DD,PFPO_TYPE_LB,PFPO_RNDX
               )
         PFPO 
         LDR   ZC_F1,ZC_F0
         LD    ZC_F0,DFP_LNG
         CDTR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_144_1
*ZC    230         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    230         ELSE
         J     PG_IF_144_E
PG_IF_144_1  DS    0H  &TYPE
*ZC    230         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_144_E  DS    0H  &TYPE
*            IF DFP-LNG = PD           PERFORM GOOD ELSE PERFORM BAD.  
*ZC    231         IF    DFP_LNG,=,PD
         ZAP   ZCVT_PWORK2,PD
         LMG   ZC_R0,ZC_R1,ZCVT_PWORK2
         CXSTR ZC_F4,ZC_R0
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_DD,PFPO_TYPE_LD,PFPO_RNDX
               )
         PFPO 
         LDR   ZC_F1,ZC_F0
         LD    ZC_F0,DFP_LNG
         CDTR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_145_1
*ZC    231         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    231         ELSE
         J     PG_IF_145_E
PG_IF_145_1  DS    0H  &TYPE
*ZC    231         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_145_E  DS    0H  &TYPE
*            IF DFP-LNG = ZD           PERFORM GOOD ELSE PERFORM BAD.  
*ZC    232         IF    DFP_LNG,=,ZD
         PACK  ZCVT_PWORK2(8),0+ZD(15) PACK #1 FULL
         PACK  7+ZCVT_PWORK2(8),14+ZD(15) PACK #2 FULL
         PACK  14+ZCVT_PWORK2(2),28+ZD(3)  PACK #3 FINAL
         LMG   ZC_R0,ZC_R1,ZCVT_PWORK2
         CXSTR ZC_F0,ZC_R0
         LDXTR ZC_F1,0,ZC_F0,0
         LD    ZC_F0,DFP_LNG
         CDTR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_146_1
*ZC    232         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    232         ELSE
         J     PG_IF_146_E
PG_IF_146_1  DS    0H  &TYPE
*ZC    232         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_146_E  DS    0H  &TYPE
*            IF DFP-EXT = HFP-SRT      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    233         IF    DFP_EXT,=,HFP_SRT
         LE    ZC_F4,HFP_SRT
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_LD,PFPO_TYPE_EH,PFPO_RNDX
               )
         PFPO 
         LDR   ZC_F1,ZC_F0
         LDR   ZC_F3,ZC_F2
         LD    ZC_F0,DFP_EXT
         LD    ZC_F2,8+DFP_EXT
         CXTR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_147_1
*ZC    233         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    233         ELSE
         J     PG_IF_147_E
PG_IF_147_1  DS    0H  &TYPE
*ZC    233         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_147_E  DS    0H  &TYPE
*            IF DFP-EXT = HFP-LNG      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    234         IF    DFP_EXT,=,HFP_LNG
         LD    ZC_F4,HFP_LNG
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_LD,PFPO_TYPE_DH,PFPO_RNDX
               )
         PFPO 
         LDR   ZC_F1,ZC_F0
         LDR   ZC_F3,ZC_F2
         LD    ZC_F0,DFP_EXT
         LD    ZC_F2,8+DFP_EXT
         CXTR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_148_1
*ZC    234         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    234         ELSE
         J     PG_IF_148_E
PG_IF_148_1  DS    0H  &TYPE
*ZC    234         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_148_E  DS    0H  &TYPE
*            IF DFP-EXT = HFP-EXT      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    235         IF    DFP_EXT,=,HFP_EXT
         LD    ZC_F4,HFP_EXT
         LD    ZC_F6,8+HFP_EXT
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_LD,PFPO_TYPE_LH,PFPO_RNDX
               )
         PFPO 
         LDR   ZC_F1,ZC_F0
         LDR   ZC_F3,ZC_F2
         LD    ZC_F0,DFP_EXT
         LD    ZC_F2,8+DFP_EXT
         CXTR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_149_1
*ZC    235         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    235         ELSE
         J     PG_IF_149_E
PG_IF_149_1  DS    0H  &TYPE
*ZC    235         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_149_E  DS    0H  &TYPE
*            IF DFP-EXT = BFP-SRT      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    236         IF    DFP_EXT,=,BFP_SRT
         LE    ZC_F4,BFP_SRT
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_LD,PFPO_TYPE_EB,PFPO_RNDX
               )
         PFPO 
         LDR   ZC_F1,ZC_F0
         LDR   ZC_F3,ZC_F2
         LD    ZC_F0,DFP_EXT
         LD    ZC_F2,8+DFP_EXT
         CXTR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_150_1
*ZC    236         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    236         ELSE
         J     PG_IF_150_E
PG_IF_150_1  DS    0H  &TYPE
*ZC    236         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_150_E  DS    0H  &TYPE
*            IF DFP-EXT = BFP-LNG      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    237         IF    DFP_EXT,=,BFP_LNG
         LD    ZC_F4,BFP_LNG
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_LD,PFPO_TYPE_DB,PFPO_RNDX
               )
         PFPO 
         LDR   ZC_F1,ZC_F0
         LDR   ZC_F3,ZC_F2
         LD    ZC_F0,DFP_EXT
         LD    ZC_F2,8+DFP_EXT
         CXTR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_151_1
*ZC    237         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    237         ELSE
         J     PG_IF_151_E
PG_IF_151_1  DS    0H  &TYPE
*ZC    237         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_151_E  DS    0H  &TYPE
*            IF DFP-EXT = BFP-EXT      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    238         IF    DFP_EXT,=,BFP_EXT
         LD    ZC_F4,BFP_EXT
         LD    ZC_F6,8+BFP_EXT
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_LD,PFPO_TYPE_LB,PFPO_RNDX
               )
         PFPO 
         LDR   ZC_F1,ZC_F0
         LDR   ZC_F3,ZC_F2
         LD    ZC_F0,DFP_EXT
         LD    ZC_F2,8+DFP_EXT
         CXTR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_152_1
*ZC    238         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    238         ELSE
         J     PG_IF_152_E
PG_IF_152_1  DS    0H  &TYPE
*ZC    238         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_152_E  DS    0H  &TYPE
*            IF DFP-EXT = DFP-SRT      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    239         IF    DFP_EXT,=,DFP_SRT
         LE    ZC_F4,DFP_SRT
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_LD,PFPO_TYPE_ED,PFPO_RNDX
               )
         PFPO 
         LDR   ZC_F1,ZC_F0
         LDR   ZC_F3,ZC_F2
         LD    ZC_F0,DFP_EXT
         LD    ZC_F2,8+DFP_EXT
         CXTR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_153_1
*ZC    239         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    239         ELSE
         J     PG_IF_153_E
PG_IF_153_1  DS    0H  &TYPE
*ZC    239         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_153_E  DS    0H  &TYPE
*            IF DFP-EXT = DFP-LNG      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    240         IF    DFP_EXT,=,DFP_LNG
         LD    ZC_F4,DFP_LNG
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_LD,PFPO_TYPE_DD,PFPO_RNDX
               )
         PFPO 
         LDR   ZC_F1,ZC_F0
         LDR   ZC_F3,ZC_F2
         LD    ZC_F0,DFP_EXT
         LD    ZC_F2,8+DFP_EXT
         CXTR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_154_1
*ZC    240         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    240         ELSE
         J     PG_IF_154_E
PG_IF_154_1  DS    0H  &TYPE
*ZC    240         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_154_E  DS    0H  &TYPE
*            IF DFP-EXT = DFP-EXT      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    241         IF    DFP_EXT,=,DFP_EXT
         LD    ZC_F0,DFP_EXT
         LD    ZC_F2,8+DFP_EXT
         LD    ZC_F1,DFP_EXT
         LD    ZC_F3,8+DFP_EXT
         CXTR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_155_1
*ZC    241         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    241         ELSE
         J     PG_IF_155_E
PG_IF_155_1  DS    0H  &TYPE
*ZC    241         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_155_E  DS    0H  &TYPE
*            IF DFP-EXT = HW           PERFORM GOOD ELSE PERFORM BAD.  
*ZC    242         IF    DFP_EXT,=,HW
         LD    ZC_F0,DFP_EXT
         LD    ZC_F2,8+DFP_EXT
         LH    ZC_F1,HW
         CXFTR ZC_F1,0,ZC_R1,0
         CXTR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_156_1
*ZC    242         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    242         ELSE
         J     PG_IF_156_E
PG_IF_156_1  DS    0H  &TYPE
*ZC    242         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_156_E  DS    0H  &TYPE
*            IF DFP-EXT = FW           PERFORM GOOD ELSE PERFORM BAD.  
*ZC    243         IF    DFP_EXT,=,FW
         LD    ZC_F0,DFP_EXT
         LD    ZC_F2,8+DFP_EXT
         L     ZC_F1,FW
         CXFTR ZC_F1,0,ZC_R1,0
         CXTR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_157_1
*ZC    243         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    243         ELSE
         J     PG_IF_157_E
PG_IF_157_1  DS    0H  &TYPE
*ZC    243         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_157_E  DS    0H  &TYPE
*            IF DFP-EXT = DW           PERFORM GOOD ELSE PERFORM BAD.  
*ZC    244         IF    DFP_EXT,=,DW
         LD    ZC_F0,DFP_EXT
         LD    ZC_F2,8+DFP_EXT
         LG    ZC_F1,DW
         CXGTR ZC_F1,ZC_R1
         CXTR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_158_1
*ZC    244         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    244         ELSE
         J     PG_IF_158_E
PG_IF_158_1  DS    0H  &TYPE
*ZC    244         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_158_E  DS    0H  &TYPE
*            IF DFP-EXT = QW           PERFORM GOOD ELSE PERFORM BAD.  
*ZC    245         IF    DFP_EXT,=,QW
         LG    ZC_R0,QW
         LG    ZC_R1,8+QW
         L     ZC_R15,ZCVT_CVTQTLB   CVT Q IN ZC_R0-ZC_R1              X
                                     TO LB IN ZC_F4-ZC_F6
         BASR  ZC_R14,ZC_R15
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_LD,PFPO_TYPE_LB,PFPO_RNDX
               )
         PFPO 
         LDR   ZC_F1,ZC_F0
         LDR   ZC_F3,ZC_F2
         LD    ZC_F0,DFP_EXT
         LD    ZC_F2,8+DFP_EXT
         CXTR  ZC_F1,ZC_F0
         BRC   15-ZC_EQ,PG_IF_159_1
*ZC    245         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    245         ELSE
         J     PG_IF_159_E
PG_IF_159_1  DS    0H  &TYPE
*ZC    245         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_159_E  DS    0H  &TYPE
*            IF DFP-EXT = PD           PERFORM GOOD ELSE PERFORM BAD.  
*ZC    246         IF    DFP_EXT,=,PD
         ZAP   ZCVT_PWORK2,PD
         LMG   ZC_R0,ZC_R1,ZCVT_PWORK2
         CXSTR ZC_F4,ZC_R0
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_LD,PFPO_TYPE_LD,PFPO_RNDX
               )
         PFPO 
         LDR   ZC_F1,ZC_F0
         LDR   ZC_F3,ZC_F2
         LD    ZC_F0,DFP_EXT
         LD    ZC_F2,8+DFP_EXT
         CXTR  ZC_F1,ZC_F0
         BRC   15-ZC_EQ,PG_IF_160_1
*ZC    246         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    246         ELSE
         J     PG_IF_160_E
PG_IF_160_1  DS    0H  &TYPE
*ZC    246         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_160_E  DS    0H  &TYPE
*            IF DFP-EXT = ZD           PERFORM GOOD ELSE PERFORM BAD.  
*ZC    247         IF    DFP_EXT,=,ZD
         PACK  ZCVT_PWORK2(8),0+ZD(15) PACK #1 FULL
         PACK  7+ZCVT_PWORK2(8),14+ZD(15) PACK #2 FULL
         PACK  14+ZCVT_PWORK2(2),28+ZD(3)  PACK #3 FINAL
         LMG   ZC_R0,ZC_R1,ZCVT_PWORK2
         CXSTR ZC_F1,ZC_R0
         LD    ZC_F0,DFP_EXT
         LD    ZC_F2,8+DFP_EXT
         CXTR  ZC_F1,ZC_F0
         BRC   15-ZC_EQ,PG_IF_161_1
*ZC    247         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    247         ELSE
         J     PG_IF_161_E
PG_IF_161_1  DS    0H  &TYPE
*ZC    247         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_161_E  DS    0H  &TYPE
*            IF HW      = HFP-SRT      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    248         IF    HW,=,HFP_SRT
         LH    ZC_R0,HW
         CEFR  ZC_F0,ZC_R0
         LE    ZC_F1,HFP_SRT
         CER   ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_162_1
*ZC    248         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    248         ELSE
         J     PG_IF_162_E
PG_IF_162_1  DS    0H  &TYPE
*ZC    248         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_162_E  DS    0H  &TYPE
*            IF HW      = HFP-LNG      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    249         IF    HW,=,HFP_LNG
         LH    ZC_R0,HW
         CDFR  ZC_F0,ZC_R0
         LD    ZC_F1,HFP_LNG
         CDR   ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_163_1
*ZC    249         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    249         ELSE
         J     PG_IF_163_E
PG_IF_163_1  DS    0H  &TYPE
*ZC    249         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_163_E  DS    0H  &TYPE
*            IF HW      = HFP-EXT      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    250         IF    HW,=,HFP_EXT
         LH    ZC_R0,HW
         CXFR  ZC_F0,ZC_R0
         LD    ZC_F1,HFP_EXT
         LD    ZC_F3,8+HFP_EXT
         CXR   ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_164_1
*ZC    250         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    250         ELSE
         J     PG_IF_164_E
PG_IF_164_1  DS    0H  &TYPE
*ZC    250         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_164_E  DS    0H  &TYPE
*            IF HW      = BFP-SRT      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    251         IF    HW,=,BFP_SRT
         LH    ZC_R0,HW
         CEFBR ZC_F0,ZC_R0
         LE    ZC_F1,BFP_SRT
         CEBR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_165_1
*ZC    251         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    251         ELSE
         J     PG_IF_165_E
PG_IF_165_1  DS    0H  &TYPE
*ZC    251         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_165_E  DS    0H  &TYPE
*            IF HW      = BFP-LNG      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    252         IF    HW,=,BFP_LNG
         LH    ZC_R0,HW
         CDFBR ZC_F0,ZC_R0
         LD    ZC_F1,BFP_LNG
         CDBR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_166_1
*ZC    252         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    252         ELSE
         J     PG_IF_166_E
PG_IF_166_1  DS    0H  &TYPE
*ZC    252         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_166_E  DS    0H  &TYPE
*            IF HW      = BFP-EXT      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    253         IF    HW,=,BFP_EXT
         LH    ZC_R0,HW
         CXFBR ZC_F0,ZC_R0
         LD    ZC_F1,BFP_EXT
         LD    ZC_F3,8+BFP_EXT
         CXBR  ZC_F1,ZC_F0
         BRC   15-ZC_EQ,PG_IF_167_1
*ZC    253         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    253         ELSE
         J     PG_IF_167_E
PG_IF_167_1  DS    0H  &TYPE
*ZC    253         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_167_E  DS    0H  &TYPE
*            IF HW      = DFP-SRT      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    254         IF    HW,=,DFP_SRT
         LH    ZC_R0,HW
         CDFTR ZC_F0,0,ZC_R0,0
         LE    ZC_F1,DFP_SRT
         LDETR ZC_F1,ZC_F1,0
         CDTR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_168_1
*ZC    254         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    254         ELSE
         J     PG_IF_168_E
PG_IF_168_1  DS    0H  &TYPE
*ZC    254         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_168_E  DS    0H  &TYPE
*            IF HW      = DFP-LNG      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    255         IF    HW,=,DFP_LNG
         LH    ZC_R0,HW
         CDFTR ZC_F0,0,ZC_R0,0
         LD    ZC_F1,DFP_LNG
         CDTR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_169_1
*ZC    255         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    255         ELSE
         J     PG_IF_169_E
PG_IF_169_1  DS    0H  &TYPE
*ZC    255         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_169_E  DS    0H  &TYPE
*            IF HW      = DFP-EXT      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    256         IF    HW,=,DFP_EXT
         LH    ZC_R0,HW
         CXFTR ZC_F0,0,ZC_R0,0
         LD    ZC_F1,DFP_EXT
         LD    ZC_F3,8+DFP_EXT
         CXTR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_170_1
*ZC    256         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    256         ELSE
         J     PG_IF_170_E
PG_IF_170_1  DS    0H  &TYPE
*ZC    256         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_170_E  DS    0H  &TYPE
*            IF HW      = HW           PERFORM GOOD ELSE PERFORM BAD.  
*ZC    257         IF    HW,=,HW
         LH    ZC_R0,HW
         LH    ZC_R1,HW
         CR    ZC_R0,ZC_R1
         BRC   15-ZC_EQ,PG_IF_171_1
*ZC    257         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    257         ELSE
         J     PG_IF_171_E
PG_IF_171_1  DS    0H  &TYPE
*ZC    257         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_171_E  DS    0H  &TYPE
*            IF HW      = FW           PERFORM GOOD ELSE PERFORM BAD.  
*ZC    258         IF    HW,=,FW
         LH    ZC_R0,HW
         L     ZC_R1,FW
         CR    ZC_R0,ZC_R1
         BRC   15-ZC_EQ,PG_IF_172_1
*ZC    258         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    258         ELSE
         J     PG_IF_172_E
PG_IF_172_1  DS    0H  &TYPE
*ZC    258         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_172_E  DS    0H  &TYPE
*            IF HW      = DW           PERFORM GOOD ELSE PERFORM BAD.  
*ZC    259         IF    HW,=,DW
         LGH   ZC_R0,HW
         LG    ZC_R1,DW
         CGR   ZC_R0,ZC_R1
         BRC   15-ZC_EQ,PG_IF_173_1
*ZC    259         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    259         ELSE
         J     PG_IF_173_E
PG_IF_173_1  DS    0H  &TYPE
*ZC    259         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_173_E  DS    0H  &TYPE
*            IF HW      = QW           PERFORM GOOD ELSE PERFORM BAD.  
*ZC    260         IF    HW,=,QW
         LGH   ZC_R1,HW
         LGR   ZC_R0,ZC_R1
         SRAG  ZC_R0,ZC_R0,63  SIGN FILL HIGH 64
         LG    ZC_R2,QW
         LG    ZC_R3,8+QW
         CGR   ZC_R0,ZC_R2
         JNZ   *+4+4
         CGR   ZC_R0+1,ZC_R2+1
         BRC   15-ZC_EQ,PG_IF_174_1
*ZC    260         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    260         ELSE
         J     PG_IF_174_E
PG_IF_174_1  DS    0H  &TYPE
*ZC    260         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_174_E  DS    0H  &TYPE
*            IF HW      = PD           PERFORM GOOD ELSE PERFORM BAD.  
*ZC    261         IF    HW,=,PD
         LGH   ZC_R0,HW
         ZAP   ZCVT_PWORK2,PD
         CVBG  ZC_R1,ZCVT_PWORK2
         CGR   ZC_R0,ZC_R1
         BRC   15-ZC_EQ,PG_IF_175_1
*ZC    261         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    261         ELSE
         J     PG_IF_175_E
PG_IF_175_1  DS    0H  &TYPE
*ZC    261         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_175_E  DS    0H  &TYPE
*            IF HW      = ZD           PERFORM GOOD ELSE PERFORM BAD.  
*ZC    262         IF    HW,=,ZD
         PACK  ZCVT_PWORK2(8),0+ZD(15) PACK #1 FULL
         PACK  7+ZCVT_PWORK2(8),14+ZD(15) PACK #2 FULL
         PACK  14+ZCVT_PWORK2(2),28+ZD(3)  PACK #3 FINAL
         LMG   ZC_R0,ZC_R1,ZCVT_PWORK2
         CXSTR ZC_F4,ZC_R0
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_LB,PFPO_TYPE_LD,PFPO_RNDX
               )
         PFPO 
         L     ZC_R15,ZCVT_CVTLBTQ CVT LB IN F0-F2 TO Q IN ZC_R0-ZC_R1
         BASR  ZC_R14,ZC_R15
         LGR   ZC_R2,ZC_R0
         LGR   ZC_R3,ZC_R1
         LGH   ZC_R1,HW
         LGR   ZC_R0,ZC_R1
         SRAG  ZC_R0,ZC_R0,63  SIGN FILL HIGH 64
         CGR   ZC_R0,ZC_R2
         JNZ   *+4+4
         CGR   ZC_R0+1,ZC_R2+1
         BRC   15-ZC_EQ,PG_IF_176_1
*ZC    262         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    262         ELSE
         J     PG_IF_176_E
PG_IF_176_1  DS    0H  &TYPE
*ZC    262         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_176_E  DS    0H  &TYPE
*            IF FW      = HFP-SRT      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    263         IF    FW,=,HFP_SRT
         L     ZC_R0,FW
         CEFR  ZC_F0,ZC_R0
         LE    ZC_F1,HFP_SRT
         CER   ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_177_1
*ZC    263         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    263         ELSE
         J     PG_IF_177_E
PG_IF_177_1  DS    0H  &TYPE
*ZC    263         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_177_E  DS    0H  &TYPE
*            IF FW      = HFP-LNG      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    264         IF    FW,=,HFP_LNG
         L     ZC_R0,FW
         CDFR  ZC_F0,ZC_R0
         LD    ZC_F1,HFP_LNG
         CDR   ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_178_1
*ZC    264         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    264         ELSE
         J     PG_IF_178_E
PG_IF_178_1  DS    0H  &TYPE
*ZC    264         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_178_E  DS    0H  &TYPE
*            IF FW      = HFP-EXT      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    265         IF    FW,=,HFP_EXT
         L     ZC_R0,FW
         CXFR  ZC_F0,ZC_R0
         LD    ZC_F1,HFP_EXT
         LD    ZC_F3,8+HFP_EXT
         CXR   ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_179_1
*ZC    265         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    265         ELSE
         J     PG_IF_179_E
PG_IF_179_1  DS    0H  &TYPE
*ZC    265         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_179_E  DS    0H  &TYPE
*            IF FW      = BFP-SRT      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    266         IF    FW,=,BFP_SRT
         L     ZC_R0,FW
         CEFBR ZC_F0,ZC_R0
         LE    ZC_F1,BFP_SRT
         CEBR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_180_1
*ZC    266         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    266         ELSE
         J     PG_IF_180_E
PG_IF_180_1  DS    0H  &TYPE
*ZC    266         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_180_E  DS    0H  &TYPE
*            IF FW      = BFP-LNG      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    267         IF    FW,=,BFP_LNG
         L     ZC_R0,FW
         CDFBR ZC_F0,ZC_R0
         LD    ZC_F1,BFP_LNG
         CDBR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_181_1
*ZC    267         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    267         ELSE
         J     PG_IF_181_E
PG_IF_181_1  DS    0H  &TYPE
*ZC    267         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_181_E  DS    0H  &TYPE
*            IF FW      = BFP-EXT      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    268         IF    FW,=,BFP_EXT
         L     ZC_R0,FW
         CXFBR ZC_F0,ZC_R0
         LD    ZC_F1,BFP_EXT
         LD    ZC_F3,8+BFP_EXT
         CXBR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_182_1
*ZC    268         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    268         ELSE
         J     PG_IF_182_E
PG_IF_182_1  DS    0H  &TYPE
*ZC    268         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_182_E  DS    0H  &TYPE
*            IF FW      = DFP-SRT      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    269         IF    FW,=,DFP_SRT
         L     ZC_R0,FW
         CDFTR ZC_F0,0,ZC_R0,0
         LE    ZC_F1,DFP_SRT
         LDETR ZC_F1,ZC_F1,0
         CDTR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_183_1
*ZC    269         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    269         ELSE
         J     PG_IF_183_E
PG_IF_183_1  DS    0H  &TYPE
*ZC    269         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_183_E  DS    0H  &TYPE
*            IF FW      = DFP-LNG      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    270         IF    FW,=,DFP_LNG
         L     ZC_R0,FW
         CDFTR ZC_F0,0,ZC_R0,0
         LD    ZC_F1,DFP_LNG
         CDTR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_184_1
*ZC    270         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    270         ELSE
         J     PG_IF_184_E
PG_IF_184_1  DS    0H  &TYPE
*ZC    270         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_184_E  DS    0H  &TYPE
*            IF FW      = DFP-EXT      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    271         IF    FW,=,DFP_EXT
         L     ZC_R0,FW
         CXFTR ZC_F0,0,ZC_R0,0
         LD    ZC_F1,DFP_EXT
         LD    ZC_F3,8+DFP_EXT
         CXTR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_185_1
*ZC    271         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    271         ELSE
         J     PG_IF_185_E
PG_IF_185_1  DS    0H  &TYPE
*ZC    271         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_185_E  DS    0H  &TYPE
*            IF FW      = HW           PERFORM GOOD ELSE PERFORM BAD.  
*ZC    272         IF    FW,=,HW
         L     ZC_R0,FW
         LH    ZC_R1,HW
         CR    ZC_R0,ZC_R1
         BRC   15-ZC_EQ,PG_IF_186_1
*ZC    272         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    272         ELSE
         J     PG_IF_186_E
PG_IF_186_1  DS    0H  &TYPE
*ZC    272         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_186_E  DS    0H  &TYPE
*            IF FW      = FW           PERFORM GOOD ELSE PERFORM BAD.  
*ZC    273         IF    FW,=,FW
         L     ZC_R0,FW
         L     ZC_R1,FW
         CR    ZC_R0,ZC_R1
         BRC   15-ZC_EQ,PG_IF_187_1
*ZC    273         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    273         ELSE
         J     PG_IF_187_E
PG_IF_187_1  DS    0H  &TYPE
*ZC    273         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_187_E  DS    0H  &TYPE
*            IF FW      = DW           PERFORM GOOD ELSE PERFORM BAD.  
*ZC    274         IF    FW,=,DW
         LGF   ZC_R0,FW
         LG    ZC_R1,DW
         CGR   ZC_R0,ZC_R1
         BRC   15-ZC_EQ,PG_IF_188_1
*ZC    274         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    274         ELSE
         J     PG_IF_188_E
PG_IF_188_1  DS    0H  &TYPE
*ZC    274         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_188_E  DS    0H  &TYPE
*            IF FW      = QW           PERFORM GOOD ELSE PERFORM BAD.  
*ZC    275         IF    FW,=,QW
         LGF   ZC_R1,FW
         LGR   ZC_R0,ZC_R1
         SRAG  ZC_R0,ZC_R0,63  SIGN FILL HIGH 64
         LG    ZC_R2,QW
         LG    ZC_R3,8+QW
         CGR   ZC_R0,ZC_R2
         JNZ   *+4+4
         CGR   ZC_R0+1,ZC_R2+1
         BRC   15-ZC_EQ,PG_IF_189_1
*ZC    275         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    275         ELSE
         J     PG_IF_189_E
PG_IF_189_1  DS    0H  &TYPE
*ZC    275         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_189_E  DS    0H  &TYPE
*            IF FW      = PD           PERFORM GOOD ELSE PERFORM BAD.  
*ZC    276         IF    FW,=,PD
         LGF   ZC_R0,FW
         ZAP   ZCVT_PWORK2,PD
         CVBG  ZC_R1,ZCVT_PWORK2
         CGR   ZC_R0,ZC_R1
         BRC   15-ZC_EQ,PG_IF_190_1
*ZC    276         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    276         ELSE
         J     PG_IF_190_E
PG_IF_190_1  DS    0H  &TYPE
*ZC    276         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_190_E  DS    0H  &TYPE
*            IF FW      = ZD           PERFORM GOOD ELSE PERFORM BAD.  
*ZC    277         IF    FW,=,ZD
         PACK  ZCVT_PWORK2(8),0+ZD(15) PACK #1 FULL
         PACK  7+ZCVT_PWORK2(8),14+ZD(15) PACK #2 FULL
         PACK  14+ZCVT_PWORK2(2),28+ZD(3)  PACK #3 FINAL
         LMG   ZC_R0,ZC_R1,ZCVT_PWORK2
         CXSTR ZC_F4,ZC_R0
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_LB,PFPO_TYPE_LD,PFPO_RNDX
               )
         PFPO 
         L     ZC_R15,ZCVT_CVTLBTQ CVT LB IN F0-F2 TO Q IN ZC_R0-ZC_R1
         BASR  ZC_R14,ZC_R15
         LGR   ZC_R2,ZC_R0
         LGR   ZC_R3,ZC_R1
         LGF   ZC_R1,FW
         LGR   ZC_R0,ZC_R1
         SRAG  ZC_R0,ZC_R0,63 SET SIGN FROM R1
         CGR   ZC_R0,ZC_R2
         JNZ   *+4+4
         CGR   ZC_R0+1,ZC_R2+1
         BRC   15-ZC_EQ,PG_IF_191_1
*ZC    277         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    277         ELSE
         J     PG_IF_191_E
PG_IF_191_1  DS    0H  &TYPE
*ZC    277         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_191_E  DS    0H  &TYPE
*            IF DW      = HFP-SRT      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    278         IF    DW,=,HFP_SRT
         LG    ZC_R0,DW
         CEGR  ZC_F0,ZC_R0
         LE    ZC_F1,HFP_SRT
         CER   ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_192_1
*ZC    278         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    278         ELSE
         J     PG_IF_192_E
PG_IF_192_1  DS    0H  &TYPE
*ZC    278         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_192_E  DS    0H  &TYPE
*            IF DW      = HFP-LNG      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    279         IF    DW,=,HFP_LNG
         LG    ZC_R0,DW
         CDGR  ZC_F0,ZC_R0
         LD    ZC_F1,HFP_LNG
         CDR   ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_193_1
*ZC    279         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    279         ELSE
         J     PG_IF_193_E
PG_IF_193_1  DS    0H  &TYPE
*ZC    279         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_193_E  DS    0H  &TYPE
*            IF DW      = HFP-EXT      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    280         IF    DW,=,HFP_EXT
         LG    ZC_R0,DW
         CXGR  ZC_F0,ZC_R0
         LD    ZC_F1,HFP_EXT
         LD    ZC_F3,8+HFP_EXT
         CXR   ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_194_1
*ZC    280         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    280         ELSE
         J     PG_IF_194_E
PG_IF_194_1  DS    0H  &TYPE
*ZC    280         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_194_E  DS    0H  &TYPE
*            IF DW      = BFP-SRT      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    281         IF    DW,=,BFP_SRT
         LG    ZC_R0,DW
         CEGBR ZC_F0,ZC_R0
         LE    ZC_F1,BFP_SRT
         CEBR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_195_1
*ZC    281         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    281         ELSE
         J     PG_IF_195_E
PG_IF_195_1  DS    0H  &TYPE
*ZC    281         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_195_E  DS    0H  &TYPE
*            IF DW      = BFP-LNG      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    282         IF    DW,=,BFP_LNG
         LG    ZC_R0,DW
         CDGBR ZC_F0,ZC_R0
         LD    ZC_F1,BFP_LNG
         CDBR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_196_1
*ZC    282         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    282         ELSE
         J     PG_IF_196_E
PG_IF_196_1  DS    0H  &TYPE
*ZC    282         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_196_E  DS    0H  &TYPE
*            IF DW      = BFP-EXT      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    283         IF    DW,=,BFP_EXT
         LG    ZC_R0,DW
         CXGBR ZC_F0,ZC_R0
         LD    ZC_F1,BFP_EXT
         LD    ZC_F3,8+BFP_EXT
         CXBR  ZC_F1,ZC_F0
         BRC   15-ZC_EQ,PG_IF_197_1
*ZC    283         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    283         ELSE
         J     PG_IF_197_E
PG_IF_197_1  DS    0H  &TYPE
*ZC    283         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_197_E  DS    0H  &TYPE
*            IF DW      = DFP-SRT      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    284         IF    DW,=,DFP_SRT
         LG    ZC_R0,DW
         CDGTR ZC_F0,ZC_R0
         LE    ZC_F1,DFP_SRT
         LDETR ZC_F1,ZC_F1,0
         CDTR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_198_1
*ZC    284         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    284         ELSE
         J     PG_IF_198_E
PG_IF_198_1  DS    0H  &TYPE
*ZC    284         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_198_E  DS    0H  &TYPE
*            IF DW      = DFP-LNG      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    285         IF    DW,=,DFP_LNG
         LG    ZC_R0,DW
         CDGTR ZC_F0,ZC_R0
         LD    ZC_F1,DFP_LNG
         CDTR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_199_1
*ZC    285         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    285         ELSE
         J     PG_IF_199_E
PG_IF_199_1  DS    0H  &TYPE
*ZC    285         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_199_E  DS    0H  &TYPE
*            IF DW      = DFP-EXT      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    286         IF    DW,=,DFP_EXT
         LG    ZC_R0,DW
         CXGTR ZC_F0,ZC_R0
         LD    ZC_F1,DFP_EXT
         LD    ZC_F3,8+DFP_EXT
         CXTR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_200_1
*ZC    286         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    286         ELSE
         J     PG_IF_200_E
PG_IF_200_1  DS    0H  &TYPE
*ZC    286         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_200_E  DS    0H  &TYPE
*            IF DW      = HW           PERFORM GOOD ELSE PERFORM BAD.  
*ZC    287         IF    DW,=,HW
         LG    ZC_R0,DW
         LGH   ZC_R1,HW
         CGR   ZC_R0,ZC_R1
         BRC   15-ZC_EQ,PG_IF_201_1
*ZC    287         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    287         ELSE
         J     PG_IF_201_E
PG_IF_201_1  DS    0H  &TYPE
*ZC    287         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_201_E  DS    0H  &TYPE
*            IF DW      = FW           PERFORM GOOD ELSE PERFORM BAD.  
*ZC    288         IF    DW,=,FW
         LG    ZC_R0,DW
         LGF   ZC_R1,FW
         CGR   ZC_R0,ZC_R1
         BRC   15-ZC_EQ,PG_IF_202_1
*ZC    288         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    288         ELSE
         J     PG_IF_202_E
PG_IF_202_1  DS    0H  &TYPE
*ZC    288         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_202_E  DS    0H  &TYPE
*            IF DW      = DW           PERFORM GOOD ELSE PERFORM BAD.  
*ZC    289         IF    DW,=,DW
         LG    ZC_R0,DW
         LG    ZC_R1,DW
         CGR   ZC_R0,ZC_R1
         BRC   15-ZC_EQ,PG_IF_203_1
*ZC    289         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    289         ELSE
         J     PG_IF_203_E
PG_IF_203_1  DS    0H  &TYPE
*ZC    289         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_203_E  DS    0H  &TYPE
*            IF DW      = QW           PERFORM GOOD ELSE PERFORM BAD.  
*ZC    290         IF    DW,=,QW
         LG    ZC_R1,DW
         LGR   ZC_R0,ZC_R1
         SRAG  ZC_R0,ZC_R0,63  SIGN FILL HIGH 64
         LG    ZC_R2,QW
         LG    ZC_R3,8+QW
         CGR   ZC_R0,ZC_R2
         JNZ   *+4+4
         CGR   ZC_R0+1,ZC_R2+1
         BRC   15-ZC_EQ,PG_IF_204_1
*ZC    290         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    290         ELSE
         J     PG_IF_204_E
PG_IF_204_1  DS    0H  &TYPE
*ZC    290         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_204_E  DS    0H  &TYPE
*            IF DW      = PD           PERFORM GOOD ELSE PERFORM BAD.  
*ZC    291         IF    DW,=,PD
         LG    ZC_R0,DW
         ZAP   ZCVT_PWORK2,PD
         CVBG  ZC_R1,ZCVT_PWORK2
         CGR   ZC_R0,ZC_R1
         BRC   15-ZC_EQ,PG_IF_205_1
*ZC    291         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    291         ELSE
         J     PG_IF_205_E
PG_IF_205_1  DS    0H  &TYPE
*ZC    291         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_205_E  DS    0H  &TYPE
*            IF DW      = ZD           PERFORM GOOD ELSE PERFORM BAD.  
*ZC    292         IF    DW,=,ZD
         PACK  ZCVT_PWORK2(8),0+ZD(15) PACK #1 FULL
         PACK  7+ZCVT_PWORK2(8),14+ZD(15) PACK #2 FULL
         PACK  14+ZCVT_PWORK2(2),28+ZD(3)  PACK #3 FINAL
         LMG   ZC_R0,ZC_R1,ZCVT_PWORK2
         CXSTR ZC_F4,ZC_R0
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_LB,PFPO_TYPE_LD,PFPO_RNDX
               )
         PFPO 
         L     ZC_R15,ZCVT_CVTLBTQ CVT LB IN F0-F2 TO Q IN ZC_R0-ZC_R1
         BASR  ZC_R14,ZC_R15
         LGR   ZC_R2,ZC_R0
         LGR   ZC_R3,ZC_R1
         LG    ZC_R1,DW
         LGR   ZC_R0,ZC_R1
         SRAG  ZC_R0,ZC_R0,63
         CGR   ZC_R0,ZC_R2
         JNZ   *+4+4
         CGR   ZC_R0+1,ZC_R2+1
         BRC   15-ZC_EQ,PG_IF_206_1
*ZC    292         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    292         ELSE
         J     PG_IF_206_E
PG_IF_206_1  DS    0H  &TYPE
*ZC    292         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_206_E  DS    0H  &TYPE
*            IF QW      = HFP-SRT      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    293         IF    QW,=,HFP_SRT
         LG    ZC_R0,QW
         LG    ZC_R1,8+QW
         L     ZC_R15,ZCVT_CVTQTLB   CVT Q IN ZC_R0-ZC_R1              X
                                     TO LB IN ZC_F4-ZC_F6
         BASR  ZC_R14,ZC_R15
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_EH,PFPO_TYPE_LB,PFPO_RNDX
               )
         PFPO 
         LE    ZC_F1,HFP_SRT
         CER   ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_207_1
*ZC    293         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    293         ELSE
         J     PG_IF_207_E
PG_IF_207_1  DS    0H  &TYPE
*ZC    293         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_207_E  DS    0H  &TYPE
*            IF QW      = HFP-LNG      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    294         IF    QW,=,HFP_LNG
         LG    ZC_R0,QW
         LG    ZC_R1,8+QW
         L     ZC_R15,ZCVT_CVTQTLB   CVT Q IN ZC_R0-ZC_R1              X
                                     TO LB IN ZC_F4-ZC_F6
         BASR  ZC_R14,ZC_R15
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_DH,PFPO_TYPE_LB,PFPO_RNDX
               )
         PFPO 
         LD    ZC_F1,HFP_LNG
         CDR   ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_208_1
*ZC    294         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    294         ELSE
         J     PG_IF_208_E
PG_IF_208_1  DS    0H  &TYPE
*ZC    294         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_208_E  DS    0H  &TYPE
*            IF QW      = HFP-EXT      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    295         IF    QW,=,HFP_EXT
         LG    ZC_R0,QW
         LG    ZC_R1,8+QW
         L     ZC_R15,ZCVT_CVTQTLB   CVT Q IN ZC_R0-ZC_R1              X
                                     TO LB IN ZC_F4-ZC_F6
         BASR  ZC_R14,ZC_R15
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_LH,PFPO_TYPE_LB,PFPO_RNDX
               )
         PFPO 
         LD    ZC_F1,HFP_EXT
         LD    ZC_F3,8+HFP_EXT
         CXR   ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_209_1
*ZC    295         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    295         ELSE
         J     PG_IF_209_E
PG_IF_209_1  DS    0H  &TYPE
*ZC    295         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_209_E  DS    0H  &TYPE
*            IF QW      = BFP-SRT      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    296         IF    QW,=,BFP_SRT
         LG    ZC_R0,QW
         LG    ZC_R1,8+QW
         L     ZC_R15,ZCVT_CVTQTLB   CVT Q IN ZC_R0-ZC_R1              X
                                     TO LB IN ZC_F4-ZC_F6
         BASR  ZC_R14,ZC_R15
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_EB,PFPO_TYPE_LB,PFPO_RNDX
               )
         PFPO 
         LE    ZC_F1,BFP_SRT
         CEBR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_210_1
*ZC    296         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    296         ELSE
         J     PG_IF_210_E
PG_IF_210_1  DS    0H  &TYPE
*ZC    296         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_210_E  DS    0H  &TYPE
*            IF QW      = BFP-LNG      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    297         IF    QW,=,BFP_LNG
         LG    ZC_R0,QW
         LG    ZC_R1,8+QW
         L     ZC_R15,ZCVT_CVTQTLB   CVT Q IN ZC_R0-ZC_R1              X
                                     TO LB IN ZC_F4-ZC_F6
         BASR  ZC_R14,ZC_R15
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_DB,PFPO_TYPE_LB,PFPO_RNDX
               )
         PFPO 
         LD    ZC_F1,BFP_LNG
         CDBR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_211_1
*ZC    297         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    297         ELSE
         J     PG_IF_211_E
PG_IF_211_1  DS    0H  &TYPE
*ZC    297         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_211_E  DS    0H  &TYPE
*            IF QW      = BFP-EXT      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    298         IF    QW,=,BFP_EXT
         LG    ZC_R0,QW
         LG    ZC_R1,8+QW
         L     ZC_R15,ZCVT_CVTQTLB   CVT Q IN ZC_R0-ZC_R1              X
                                     TO LB IN ZC_F4-ZC_F6
         BASR  ZC_R14,ZC_R15
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_LB,PFPO_TYPE_LB,PFPO_RNDX
               )
         PFPO 
         LD    ZC_F1,BFP_EXT
         LD    ZC_F3,8+BFP_EXT
         CXBR  ZC_F1,ZC_F0
         BRC   15-ZC_EQ,PG_IF_212_1
*ZC    298         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    298         ELSE
         J     PG_IF_212_E
PG_IF_212_1  DS    0H  &TYPE
*ZC    298         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_212_E  DS    0H  &TYPE
*            IF QW      = DFP-SRT      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    299         IF    QW,=,DFP_SRT
         LG    ZC_R0,QW
         LG    ZC_R1,8+QW
         L     ZC_R15,ZCVT_CVTQTLB   CVT Q IN ZC_R0-ZC_R1              X
                                     TO LB IN ZC_F4-ZC_F6
         BASR  ZC_R14,ZC_R15
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_DD,PFPO_TYPE_LB,PFPO_RNDX
               )
         PFPO 
         LE    ZC_F1,DFP_SRT
         LDETR ZC_F1,ZC_F1,0
         CDTR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_213_1
*ZC    299         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    299         ELSE
         J     PG_IF_213_E
PG_IF_213_1  DS    0H  &TYPE
*ZC    299         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_213_E  DS    0H  &TYPE
*            IF QW      = DFP-LNG      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    300         IF    QW,=,DFP_LNG
         LG    ZC_R0,QW
         LG    ZC_R1,8+QW
         L     ZC_R15,ZCVT_CVTQTLB   CVT Q IN ZC_R0-ZC_R1              X
                                     TO LB IN ZC_F4-ZC_F6
         BASR  ZC_R14,ZC_R15
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_DD,PFPO_TYPE_LB,PFPO_RNDX
               )
         PFPO 
         LD    ZC_F1,DFP_LNG
         CDTR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_214_1
*ZC    300         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    300         ELSE
         J     PG_IF_214_E
PG_IF_214_1  DS    0H  &TYPE
*ZC    300         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_214_E  DS    0H  &TYPE
*            IF QW      = DFP-EXT      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    301         IF    QW,=,DFP_EXT
         LG    ZC_R0,QW
         LG    ZC_R1,8+QW
         L     ZC_R15,ZCVT_CVTQTLB   CVT Q IN ZC_R0-ZC_R1              X
                                     TO LB IN ZC_F4-ZC_F6
         BASR  ZC_R14,ZC_R15
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_LD,PFPO_TYPE_LB,PFPO_RNDX
               )
         PFPO 
         LD    ZC_F1,DFP_EXT
         LD    ZC_F3,8+DFP_EXT
         CXTR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_215_1
*ZC    301         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    301         ELSE
         J     PG_IF_215_E
PG_IF_215_1  DS    0H  &TYPE
*ZC    301         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_215_E  DS    0H  &TYPE
*            IF QW      = HW           PERFORM GOOD ELSE PERFORM BAD.  
*ZC    302         IF    QW,=,HW
         LG    ZC_R0,QW
         LG    ZC_R1,8+QW
         LGH   ZC_R3,HW
         LGR   ZC_R2,ZC_R3
         SRAG  ZC_R2,ZC_R2,63 SIGN FILL
         CGR   ZC_R0,ZC_R2
         JNZ   *+4+4
         CGR   ZC_R0+1,ZC_R2+1
         BRC   15-ZC_EQ,PG_IF_216_1
*ZC    302         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    302         ELSE
         J     PG_IF_216_E
PG_IF_216_1  DS    0H  &TYPE
*ZC    302         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_216_E  DS    0H  &TYPE
*            IF QW      = FW           PERFORM GOOD ELSE PERFORM BAD.  
*ZC    303         IF    QW,=,FW
         LG    ZC_R0,QW
         LG    ZC_R1,8+QW
         LGF   ZC_R3,FW
         LGR   ZC_R2,ZC_R3
         SRAG  ZC_R2,ZC_R2,63 SIGN FILL
         CGR   ZC_R0,ZC_R2
         JNZ   *+4+4
         CGR   ZC_R0+1,ZC_R2+1
         BRC   15-ZC_EQ,PG_IF_217_1
*ZC    303         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    303         ELSE
         J     PG_IF_217_E
PG_IF_217_1  DS    0H  &TYPE
*ZC    303         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_217_E  DS    0H  &TYPE
*            IF QW      = DW           PERFORM GOOD ELSE PERFORM BAD.  
*ZC    304         IF    QW,=,DW
         LG    ZC_R0,QW
         LG    ZC_R1,8+QW
         LG    ZC_R3,DW
         LGR   ZC_R2,ZC_R3
         SRAG  ZC_R2,ZC_R2,63 SIGN FILL
         CGR   ZC_R0,ZC_R2
         JNZ   *+4+4
         CGR   ZC_R0+1,ZC_R2+1
         BRC   15-ZC_EQ,PG_IF_218_1
*ZC    304         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    304         ELSE
         J     PG_IF_218_E
PG_IF_218_1  DS    0H  &TYPE
*ZC    304         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_218_E  DS    0H  &TYPE
*            IF QW      = QW           PERFORM GOOD ELSE PERFORM BAD.  
*ZC    305         IF    QW,=,QW
         LMG   ZC_R0,ZC_R1,QW
         LMG   ZC_R2,ZC_R3,QW
         CGR   ZC_R0,ZC_R2
         JNZ   *+4+4
         CGR   ZC_R0+1,ZC_R2+1
         BRC   15-ZC_EQ,PG_IF_219_1
*ZC    305         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    305         ELSE
         J     PG_IF_219_E
PG_IF_219_1  DS    0H  &TYPE
*ZC    305         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_219_E  DS    0H  &TYPE
*            IF QW      = PD           PERFORM GOOD ELSE PERFORM BAD.  
*ZC    306         IF    QW,=,PD
         ZAP   ZCVT_PWORK2,PD
         LMG   ZC_R0,ZC_R1,ZCVT_PWORK2
         CXSTR ZC_F4,ZC_R0
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_LB,PFPO_TYPE_LD,PFPO_RNDX
               )
         PFPO 
         L     ZC_R15,ZCVT_CVTLBTQ CVT LB IN F0-F2 TO Q IN ZC_R0-ZC_R1
         BASR  ZC_R14,ZC_R15
         LGR   ZC_R2,ZC_R0
         LGR   ZC_R3,ZC_R1
         LMG   ZC_R0,ZC_R1,QW
         CGR   ZC_R0,ZC_R2
         JNZ   *+4+4
         CGR   ZC_R0+1,ZC_R2+1
         BRC   15-ZC_EQ,PG_IF_220_1
*ZC    306         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    306         ELSE
         J     PG_IF_220_E
PG_IF_220_1  DS    0H  &TYPE
*ZC    306         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_220_E  DS    0H  &TYPE
*            IF QW      = ZD           PERFORM GOOD ELSE PERFORM BAD.  
*ZC    307         IF    QW,=,ZD
         PACK  ZCVT_PWORK2(8),0+ZD(15) PACK #1 FULL
         PACK  7+ZCVT_PWORK2(8),14+ZD(15) PACK #2 FULL
         PACK  14+ZCVT_PWORK2(2),28+ZD(3)  PACK #3 FINAL
         LMG   ZC_R0,ZC_R1,ZCVT_PWORK2
         CXSTR ZC_F4,ZC_R0
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_LB,PFPO_TYPE_LD,PFPO_RNDX
               )
         PFPO 
         L     ZC_R15,ZCVT_CVTLBTQ CVT LB IN F0-F2 TO Q IN ZC_R0-ZC_R1
         BASR  ZC_R14,ZC_R15
         LGR   ZC_R2,ZC_R0
         LGR   ZC_R3,ZC_R1
         LMG   ZC_R0,ZC_R1,QW
         CGR   ZC_R0,ZC_R2
         JNZ   *+4+4
         CGR   ZC_R0+1,ZC_R2+1
         BRC   15-ZC_EQ,PG_IF_221_1
*ZC    307         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    307         ELSE
         J     PG_IF_221_E
PG_IF_221_1  DS    0H  &TYPE
*ZC    307         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_221_E  DS    0H  &TYPE
*            IF PD      = HFP-SRT      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    308         IF    PD,=,HFP_SRT
         ZAP   ZCVT_PWORK1,PD
         LMG   ZC_R0,ZC_R1,ZCVT_PWORK1
         CXSTR ZC_F4,ZC_R0
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_EH,PFPO_TYPE_LD,PFPO_RNDX
               )
         PFPO 
         LE    ZC_F1,HFP_SRT
         CER   ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_222_1
*ZC    308         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    308         ELSE
         J     PG_IF_222_E
PG_IF_222_1  DS    0H  &TYPE
*ZC    308         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_222_E  DS    0H  &TYPE
*            IF PD      = HFP-LNG      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    309         IF    PD,=,HFP_LNG
         ZAP   ZCVT_PWORK1,PD
         LMG   ZC_R0,ZC_R1,ZCVT_PWORK1
         CXSTR ZC_F4,ZC_R0
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_DH,PFPO_TYPE_LD,PFPO_RNDX
               )
         PFPO 
         LD    ZC_F1,HFP_LNG
         CDR   ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_223_1
*ZC    309         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    309         ELSE
         J     PG_IF_223_E
PG_IF_223_1  DS    0H  &TYPE
*ZC    309         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_223_E  DS    0H  &TYPE
*            IF PD      = HFP-EXT      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    310         IF    PD,=,HFP_EXT
         ZAP   ZCVT_PWORK1,PD
         LMG   ZC_R0,ZC_R1,ZCVT_PWORK1
         CXSTR ZC_F4,ZC_R0
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_LH,PFPO_TYPE_LD,PFPO_RNDX
               )
         PFPO 
         LD    ZC_F1,HFP_EXT
         LD    ZC_F3,8+HFP_EXT
         CXR   ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_224_1
*ZC    310         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    310         ELSE
         J     PG_IF_224_E
PG_IF_224_1  DS    0H  &TYPE
*ZC    310         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_224_E  DS    0H  &TYPE
*            IF PD      = BFP-SRT      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    311         IF    PD,=,BFP_SRT
         ZAP   ZCVT_PWORK1,PD
         LMG   ZC_R0,ZC_R1,ZCVT_PWORK1
         CXSTR ZC_F4,ZC_R0
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_EB,PFPO_TYPE_LD,PFPO_RNDX
               )
         PFPO 
         LE    ZC_F1,BFP_SRT
         CEBR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_225_1
*ZC    311         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    311         ELSE
         J     PG_IF_225_E
PG_IF_225_1  DS    0H  &TYPE
*ZC    311         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_225_E  DS    0H  &TYPE
*            IF PD      = BFP-LNG      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    312         IF    PD,=,BFP_LNG
         ZAP   ZCVT_PWORK1,PD
         LMG   ZC_R0,ZC_R1,ZCVT_PWORK1
         CXSTR ZC_F4,ZC_R0
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_DB,PFPO_TYPE_LD,PFPO_RNDX
               )
         PFPO 
         LD    ZC_F1,BFP_LNG
         CDBR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_226_1
*ZC    312         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    312         ELSE
         J     PG_IF_226_E
PG_IF_226_1  DS    0H  &TYPE
*ZC    312         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_226_E  DS    0H  &TYPE
*            IF PD      = BFP-EXT      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    313         IF    PD,=,BFP_EXT
         ZAP   ZCVT_PWORK1,PD
         LMG   ZC_R0,ZC_R1,ZCVT_PWORK1
         CXSTR ZC_F4,ZC_R0
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_LB,PFPO_TYPE_LD,PFPO_RNDX
               )
         PFPO 
         LD    ZC_F1,BFP_EXT
         LD    ZC_F3,8+BFP_EXT
         CXBR  ZC_F1,ZC_F0
         BRC   15-ZC_EQ,PG_IF_227_1
*ZC    313         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    313         ELSE
         J     PG_IF_227_E
PG_IF_227_1  DS    0H  &TYPE
*ZC    313         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_227_E  DS    0H  &TYPE
*            IF PD      = DFP-SRT      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    314         IF    PD,=,DFP_SRT
         ZAP   ZCVT_PWORK1,PD
         LMG   ZC_R0,ZC_R1,ZCVT_PWORK1
         CXSTR ZC_F4,ZC_R0
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_DD,PFPO_TYPE_LD,PFPO_RNDX
               )
         PFPO 
         LE    ZC_F1,DFP_SRT
         LDETR ZC_F1,ZC_F1,0
         CDTR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_228_1
*ZC    314         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    314         ELSE
         J     PG_IF_228_E
PG_IF_228_1  DS    0H  &TYPE
*ZC    314         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_228_E  DS    0H  &TYPE
*            IF PD      = DFP-LNG      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    315         IF    PD,=,DFP_LNG
         ZAP   ZCVT_PWORK1,PD
         LMG   ZC_R0,ZC_R1,ZCVT_PWORK1
         CXSTR ZC_F4,ZC_R0
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_DD,PFPO_TYPE_LD,PFPO_RNDX
               )
         PFPO 
         LD    ZC_F1,DFP_LNG
         CDTR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_229_1
*ZC    315         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    315         ELSE
         J     PG_IF_229_E
PG_IF_229_1  DS    0H  &TYPE
*ZC    315         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_229_E  DS    0H  &TYPE
*            IF PD      = DFP-EXT      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    316         IF    PD,=,DFP_EXT
         ZAP   ZCVT_PWORK1,PD
         LMG   ZC_R0,ZC_R1,ZCVT_PWORK1
         CXSTR ZC_F0,ZC_R0
         LD    ZC_F1,DFP_EXT
         LD    ZC_F3,8+DFP_EXT
         CXTR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_230_1
*ZC    316         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    316         ELSE
         J     PG_IF_230_E
PG_IF_230_1  DS    0H  &TYPE
*ZC    316         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_230_E  DS    0H  &TYPE
*            IF PD      = HW           PERFORM GOOD ELSE PERFORM BAD.  
*ZC    317         IF    PD,=,HW
         LGH   ZC_R1,HW
         ZAP   ZCVT_PWORK1,PD
         CVBG  ZC_R0,ZCVT_PWORK1
         CGR   ZC_R0,ZC_R1
         BRC   15-ZC_EQ,PG_IF_231_1
*ZC    317         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    317         ELSE
         J     PG_IF_231_E
PG_IF_231_1  DS    0H  &TYPE
*ZC    317         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_231_E  DS    0H  &TYPE
*            IF PD      = FW           PERFORM GOOD ELSE PERFORM BAD.  
*ZC    318         IF    PD,=,FW
         LGF   ZC_R1,FW
         ZAP   ZCVT_PWORK1,PD
         CVBG  ZC_R0,ZCVT_PWORK1
         CGR   ZC_R0,ZC_R1
         BRC   15-ZC_EQ,PG_IF_232_1
*ZC    318         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    318         ELSE
         J     PG_IF_232_E
PG_IF_232_1  DS    0H  &TYPE
*ZC    318         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_232_E  DS    0H  &TYPE
*            IF PD      = DW           PERFORM GOOD ELSE PERFORM BAD.  
*ZC    319         IF    PD,=,DW
         LG    ZC_R1,DW
         ZAP   ZCVT_PWORK1,PD
         CVBG  ZC_R0,ZCVT_PWORK1
         CGR   ZC_R0,ZC_R1
         BRC   15-ZC_EQ,PG_IF_233_1
*ZC    319         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    319         ELSE
         J     PG_IF_233_E
PG_IF_233_1  DS    0H  &TYPE
*ZC    319         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_233_E  DS    0H  &TYPE
*            IF PD      = QW           PERFORM GOOD ELSE PERFORM BAD.  
*ZC    320         IF    PD,=,QW
         ZAP   ZCVT_PWORK1,PD
         LMG   ZC_R0,ZC_R1,ZCVT_PWORK1
         CXSTR ZC_F4,ZC_R0
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_LB,PFPO_TYPE_LD,PFPO_RNDX
               )
         PFPO 
         L     ZC_R15,ZCVT_CVTLBTQ CVT LB IN F0-F2 TO Q IN ZC_R0-ZC_R1
         BASR  ZC_R14,ZC_R15
         LG    ZC_R2,QW
         LG    ZC_R3,8+QW
         CGR   ZC_R0,ZC_R2
         JNZ   *+4+4
         CGR   ZC_R0+1,ZC_R2+1
         BRC   15-ZC_EQ,PG_IF_234_1
*ZC    320         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    320         ELSE
         J     PG_IF_234_E
PG_IF_234_1  DS    0H  &TYPE
*ZC    320         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_234_E  DS    0H  &TYPE
*            IF PD      = PD           PERFORM GOOD ELSE PERFORM BAD.  
*ZC    321         IF    PD,=,PD
         CP    PD,PD
         BRC   15-ZC_EQ,PG_IF_235_1
*ZC    321         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    321         ELSE
         J     PG_IF_235_E
PG_IF_235_1  DS    0H  &TYPE
*ZC    321         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_235_E  DS    0H  &TYPE
*            IF PD      = ZD           PERFORM GOOD ELSE PERFORM BAD.  
*ZC    322         IF    PD,=,ZD
         PACK  ZCVT_PWORK2(8),0+ZD(15) PACK #1 FULL
         PACK  7+ZCVT_PWORK2(8),14+ZD(15) PACK #2 FULL
         PACK  14+ZCVT_PWORK2(2),28+ZD(3)  PACK #3 FINAL
         CP    PD,ZCVT_PWORK2
         BRC   15-ZC_EQ,PG_IF_236_1
*ZC    322         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    322         ELSE
         J     PG_IF_236_E
PG_IF_236_1  DS    0H  &TYPE
*ZC    322         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_236_E  DS    0H  &TYPE
*            IF ZD      = HFP-SRT      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    323         IF    ZD,=,HFP_SRT
         PACK  ZCVT_PWORK1(8),0+ZD(15) PACK #1 FULL
         PACK  7+ZCVT_PWORK1(8),14+ZD(15) PACK #2 FULL
         PACK  14+ZCVT_PWORK1(2),28+ZD(3)  PACK #3 FINAL
         LMG   ZC_R0,ZC_R1,ZCVT_PWORK1
         CXSTR ZC_F4,ZC_R0
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_EH,PFPO_TYPE_LD,PFPO_RNDX
               )
         PFPO 
         LE    ZC_F1,HFP_SRT
         CER   ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_237_1
*ZC    323         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    323         ELSE
         J     PG_IF_237_E
PG_IF_237_1  DS    0H  &TYPE
*ZC    323         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_237_E  DS    0H  &TYPE
*            IF ZD      = HFP-LNG      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    324         IF    ZD,=,HFP_LNG
         PACK  ZCVT_PWORK1(8),0+ZD(15) PACK #1 FULL
         PACK  7+ZCVT_PWORK1(8),14+ZD(15) PACK #2 FULL
         PACK  14+ZCVT_PWORK1(2),28+ZD(3)  PACK #3 FINAL
         LMG   ZC_R0,ZC_R1,ZCVT_PWORK1
         CXSTR ZC_F4,ZC_R0
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_DH,PFPO_TYPE_LD,PFPO_RNDX
               )
         PFPO 
         LD    ZC_F1,HFP_LNG
         CDR   ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_238_1
*ZC    324         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    324         ELSE
         J     PG_IF_238_E
PG_IF_238_1  DS    0H  &TYPE
*ZC    324         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_238_E  DS    0H  &TYPE
*            IF ZD      = HFP-EXT      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    325         IF    ZD,=,HFP_EXT
         PACK  ZCVT_PWORK1(8),0+ZD(15) PACK #1 FULL
         PACK  7+ZCVT_PWORK1(8),14+ZD(15) PACK #2 FULL
         PACK  14+ZCVT_PWORK1(2),28+ZD(3)  PACK #3 FINAL
         LMG   ZC_R0,ZC_R1,ZCVT_PWORK1
         CXSTR ZC_F4,ZC_R0
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_LH,PFPO_TYPE_LD,PFPO_RNDX
               )
         PFPO 
         LD    ZC_F1,HFP_EXT
         LD    ZC_F3,8+HFP_EXT
         CXR   ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_239_1
*ZC    325         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    325         ELSE
         J     PG_IF_239_E
PG_IF_239_1  DS    0H  &TYPE
*ZC    325         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_239_E  DS    0H  &TYPE
*            IF ZD      = BFP-SRT      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    326         IF    ZD,=,BFP_SRT
         PACK  ZCVT_PWORK1(8),0+ZD(15) PACK #1 FULL
         PACK  7+ZCVT_PWORK1(8),14+ZD(15) PACK #2 FULL
         PACK  14+ZCVT_PWORK1(2),28+ZD(3)  PACK #3 FINAL
         LMG   ZC_R0,ZC_R1,ZCVT_PWORK1
         CXSTR ZC_F4,ZC_R0
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_EB,PFPO_TYPE_LD,PFPO_RNDX
               )
         PFPO 
         LE    ZC_F1,BFP_SRT
         CEBR  ZC_F0,ZC_R1
         BRC   15-ZC_EQ,PG_IF_240_1
*ZC    326         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    326         ELSE
         J     PG_IF_240_E
PG_IF_240_1  DS    0H  &TYPE
*ZC    326         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_240_E  DS    0H  &TYPE
*            IF ZD      = BFP-LNG      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    327         IF    ZD,=,BFP_LNG
         PACK  ZCVT_PWORK1(8),0+ZD(15) PACK #1 FULL
         PACK  7+ZCVT_PWORK1(8),14+ZD(15) PACK #2 FULL
         PACK  14+ZCVT_PWORK1(2),28+ZD(3)  PACK #3 FINAL
         LMG   ZC_R0,ZC_R1,ZCVT_PWORK1
         CXSTR ZC_F4,ZC_R0
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_DB,PFPO_TYPE_LD,PFPO_RNDX
               )
         PFPO 
         LD    ZC_F1,BFP_LNG
         CDBR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_241_1
*ZC    327         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    327         ELSE
         J     PG_IF_241_E
PG_IF_241_1  DS    0H  &TYPE
*ZC    327         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_241_E  DS    0H  &TYPE
*            IF ZD      = BFP-EXT      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    328         IF    ZD,=,BFP_EXT
         PACK  ZCVT_PWORK1(8),0+ZD(15) PACK #1 FULL
         PACK  7+ZCVT_PWORK1(8),14+ZD(15) PACK #2 FULL
         PACK  14+ZCVT_PWORK1(2),28+ZD(3)  PACK #3 FINAL
         LMG   ZC_R0,ZC_R1,ZCVT_PWORK1
         CXSTR ZC_F4,ZC_R0
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_LB,PFPO_TYPE_LD,PFPO_RNDX
               )
         PFPO 
         LD    ZC_F1,BFP_EXT
         LD    ZC_F3,8+BFP_EXT
         CXBR  ZC_F1,ZC_F0
         BRC   15-ZC_EQ,PG_IF_242_1
*ZC    328         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    328         ELSE
         J     PG_IF_242_E
PG_IF_242_1  DS    0H  &TYPE
*ZC    328         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_242_E  DS    0H  &TYPE
*            IF ZD      = DFP-SRT      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    329         IF    ZD,=,DFP_SRT
         PACK  ZCVT_PWORK1(8),0+ZD(15) PACK #1 FULL
         PACK  7+ZCVT_PWORK1(8),14+ZD(15) PACK #2 FULL
         PACK  14+ZCVT_PWORK1(2),28+ZD(3)  PACK #3 FINAL
         LMG   ZC_R0,ZC_R1,ZCVT_PWORK1
         CXSTR ZC_F4,ZC_R0
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_DD,PFPO_TYPE_LD,PFPO_RNDX
               )
         PFPO 
         LE    ZC_F1,DFP_SRT
         LDETR ZC_F1,ZC_F1,0
         CDTR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_243_1
*ZC    329         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    329         ELSE
         J     PG_IF_243_E
PG_IF_243_1  DS    0H  &TYPE
*ZC    329         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_243_E  DS    0H  &TYPE
*            IF ZD      = DFP-LNG      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    330         IF    ZD,=,DFP_LNG
         PACK  ZCVT_PWORK1(8),0+ZD(15) PACK #1 FULL
         PACK  7+ZCVT_PWORK1(8),14+ZD(15) PACK #2 FULL
         PACK  14+ZCVT_PWORK1(2),28+ZD(3)  PACK #3 FINAL
         LMG   ZC_R0,ZC_R1,ZCVT_PWORK1
         CXSTR ZC_F4,ZC_R0
         LRL   ZC_R0,=AL1(PFPO_RADIX,PFPO_TYPE_DD,PFPO_TYPE_LD,PFPO_RNDX
               )
         PFPO 
         LD    ZC_F1,DFP_LNG
         CDTR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_244_1
*ZC    330         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    330         ELSE
         J     PG_IF_244_E
PG_IF_244_1  DS    0H  &TYPE
*ZC    330         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_244_E  DS    0H  &TYPE
*            IF ZD      = DFP-EXT      PERFORM GOOD ELSE PERFORM BAD.  
*ZC    331         IF    ZD,=,DFP_EXT
         PACK  ZCVT_PWORK1(8),0+ZD(15) PACK #1 FULL
         PACK  7+ZCVT_PWORK1(8),14+ZD(15) PACK #2 FULL
         PACK  14+ZCVT_PWORK1(2),28+ZD(3)  PACK #3 FINAL
         LMG   ZC_R0,ZC_R1,ZCVT_PWORK1
         CXSTR ZC_F0,ZC_R0
         LD    ZC_F1,DFP_EXT
         LD    ZC_F3,8+DFP_EXT
         CXTR  ZC_F0,ZC_F1
         BRC   15-ZC_EQ,PG_IF_245_1
*ZC    331         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    331         ELSE
         J     PG_IF_245_E
PG_IF_245_1  DS    0H  &TYPE
*ZC    331         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_245_E  DS    0H  &TYPE
*            IF ZD      = HW           PERFORM GOOD ELSE PERFORM BAD.  
*ZC    332         IF    ZD,=,HW
         PACK  ZCVT_PWORK1(8),0+ZD(15) PACK #1 FULL
         PACK  7+ZCVT_PWORK1(8),14+ZD(15) PACK #2 FULL
         PACK  14+ZCVT_PWORK1(2),28+ZD(3)  PACK #3 FINAL
         CVBG  ZC_R0,ZCVT_PWORK1
         LGH   ZC_R1,HW
         CGR   ZC_R0,ZC_R1
         BRC   15-ZC_EQ,PG_IF_246_1
*ZC    332         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    332         ELSE
         J     PG_IF_246_E
PG_IF_246_1  DS    0H  &TYPE
*ZC    332         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_246_E  DS    0H  &TYPE
*            IF ZD      = DW           PERFORM GOOD ELSE PERFORM BAD.  
*ZC    333         IF    ZD,=,DW
         PACK  ZCVT_PWORK1(8),0+ZD(15) PACK #1 FULL
         PACK  7+ZCVT_PWORK1(8),14+ZD(15) PACK #2 FULL
         PACK  14+ZCVT_PWORK1(2),28+ZD(3)  PACK #3 FINAL
         CVBG  ZC_R0,ZCVT_PWORK1
         LG    ZC_R1,DW
         CGR   ZC_R0,ZC_R1
         BRC   15-ZC_EQ,PG_IF_247_1
*ZC    333         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    333         ELSE
         J     PG_IF_247_E
PG_IF_247_1  DS    0H  &TYPE
*ZC    333         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_247_E  DS    0H  &TYPE
*            IF ZD      = QW           PERFORM GOOD ELSE PERFORM BAD.  
*ZC    334         IF    ZD,=,QW
         PACK  ZCVT_PWORK1(8),0+ZD(15) PACK #1 FULL
         PACK  7+ZCVT_PWORK1(8),14+ZD(15) PACK #2 FULL
         PACK  14+ZCVT_PWORK1(2),28+ZD(3)  PACK #3 FINAL
         CVBG  ZC_R1,ZCVT_PWORK1
         LGR   ZC_R0,ZC_R1
         SRAG  ZC_R0,ZC_R0,63 SIGN FILL
         LMG   ZC_R2,ZC_R3,QW
         CGR   ZC_R0,ZC_R2
         JNZ   *+4+4
         CGR   ZC_R0+1,ZC_R2+1
         BRC   15-ZC_EQ,PG_IF_248_1
*ZC    334         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    334         ELSE
         J     PG_IF_248_E
PG_IF_248_1  DS    0H  &TYPE
*ZC    334         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_248_E  DS    0H  &TYPE
*            IF ZD      = PD           PERFORM GOOD ELSE PERFORM BAD.  
*ZC    335         IF    ZD,=,PD
         PACK  ZCVT_PWORK1(8),0+ZD(15) PACK #1 FULL
         PACK  7+ZCVT_PWORK1(8),14+ZD(15) PACK #2 FULL
         PACK  14+ZCVT_PWORK1(2),28+ZD(3)  PACK #3 FINAL
         CP    ZCVT_PWORK1(16),PD
         BRC   15-ZC_EQ,PG_IF_249_1
*ZC    335         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    335         ELSE
         J     PG_IF_249_E
PG_IF_249_1  DS    0H  &TYPE
*ZC    335         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_249_E  DS    0H  &TYPE
*            IF ZD      = ZD           PERFORM GOOD ELSE PERFORM BAD.  
*ZC    336         IF    ZD,=,ZD
         PACK  ZCVT_PWORK1(8),0+ZD(15) PACK #1 FULL
         PACK  7+ZCVT_PWORK1(8),14+ZD(15) PACK #2 FULL
         PACK  14+ZCVT_PWORK1(2),28+ZD(3)  PACK #3 FINAL
         PACK  ZCVT_PWORK2(8),0+ZD(15) PACK #1 FULL
         PACK  7+ZCVT_PWORK2(8),14+ZD(15) PACK #2 FULL
         PACK  14+ZCVT_PWORK2(2),28+ZD(3)  PACK #3 FINAL
         CP    ZCVT_PWORK1(16),ZCVT_PWORK2(16)
         BRC   15-ZC_EQ,PG_IF_250_1
*ZC    336         PERFORM GOOD
         LARL  ZC_R14,PG_GOOD
         LARL  ZC_R0,PG_GOOD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
*ZC    336         ELSE
         J     PG_IF_250_E
PG_IF_250_1  DS    0H  &TYPE
*ZC    336         PERFORM BAD
         LARL  ZC_R14,PG_BAD
         LARL  ZC_R0,PG_BAD_END+6
         L     ZC_R15,ZCVT_PERFORM
         BASR  ZC_R1,ZC_R15
PG_IF_250_E  DS    0H  &TYPE
*            DISPLAY 'TESTIF1 GOOD TESTS =' GOOD
*ZC    337         DISPLAY 'TESTIF1 GOOD TESTS =',GOOD
         LA    ZC_R3,ZCVT_WORKAREA  ZC_R3=CVT LIST WORK AREA
         LARL  ZC_R0,=CL20'TESTIF1 GOOD TESTS =' PAD TO EVEN LEN LIT
         LA    ZC_R1,20
         LA    ZC_R2,C'X'
         STM   ZC_R0,ZC_R2,0(ZC_R3)  SET DISPLAY LIST ENTRY
         LA    ZC_R0,GOOD
         LA    ZC_R1,3  RPI 1182 WAS &SYM_LEN(&FIELD_IX)
         LA    ZC_R2,C'P'
         STM   ZC_R0,ZC_R2,12(ZC_R3)  SET DISPLAY LIST ENTRY
         OI    24-4(ZC_R3),X'80' SET VL BIT IN LAST WORD OF PARM LIST
         LR    ZC_R1,ZC_R3
         L     ZC_R15,ZCVT_DISPLAY
         BASR  ZC_R14,ZC_R15
*            STOP RUN.
*ZC    338         STOP  RUN
         LH    ZC_R1,RETURN_CODE      PASS RETURN CODE IN R1
         L     ZC_R15,ZCVT_GOBACK
         BR    ZC_R15
*        GOOD.
PG_MAINLINE_END L ZC_R15,ZCVT_PMCHECK
         BASR  ZC_R14,ZC_R15 CHECK FOR END OF CURRENT PERFORM
PG_GOOD  DS    0H
*            ADD 1 TO GOOD.
*ZC    340         ADD   1,TO,GOOD
         BRAS  ZC_R14,3 SET ZC_R1 TO A(INLINE LIT) AND SKIP OVER IT
         DC    PL2'1'
         AP    GOOD,0(2,ZC_R14)
*        BAD.
PG_GOOD_END L  ZC_R15,ZCVT_PMCHECK
         BASR  ZC_R14,ZC_R15 CHECK FOR END OF CURRENT PERFORM
PG_BAD   DS    0H
*            MOVE 16 TO RETURN-CODE
*ZC    342         MOVE  16,TO,RETURN_CODE
          MVHHI RETURN_CODE,16
*            STOP RUN.
*ZC    343         STOP  RUN
         LH    ZC_R1,RETURN_CODE      PASS RETURN CODE IN R1
         L     ZC_R15,ZCVT_GOBACK
         BR    ZC_R15
PG_BAD_END L   ZC_R15,ZCVT_PMCHECK
         BASR  ZC_R14,ZC_R15 CHECK FOR END OF CURRENT PERFORM
SN_END_PROCEDURE DS 0H SECTION
*        PROCEDURE END
         LH    ZC_R1,RETURN_CODE
         L     ZC_R15,ZCVT_GOBACK
         BASR  ZC_R14,ZC_R15
         LTORG 
*    ZCOBOL WORKING STORAGE SECTION DATA ITEMS 
*    LVL DATA NAME                      ADDR     LEN      DUP TYP PIC  X
                     VALUE 
*    01  ZC_SAVEAREA                    00000000 00000048 1   X   X(72)X
                      
*    01  ZC_WS_ID                       00000048 00000008 1   X   X(8) X
                     ''WS*WS*WS'' 
*    01  ZC_WS_START                    00000050 00000004 1   A        X
                      
*    01  ZC_WS_LEN                      00000054 00000004 1   F   9(9) X
                      
*    01  FILLER                         00000058 00000000 1   X        X
                      
*    01  A                              00000058 00000001 1   Z   9    X
                     1 
*    01  B                              00000059 00000001 1   Z   9    X
                     2 
*    01  C                              0000005A 00000001 1   Z   9    X
                     3 
*    01  D                              0000005B 00000001 1   Z   9    X
                     4 
*    01  ERRORS                         0000005C 00000001 1   X   X    X
                     ''F'' 
*    01  H1                             0000005D 00000002 2   H   9(4) X
                      
*    88  H1_ZERO                        00000001 00000000 0            X
                     
*    01  H2                             00000061 00000002 2   H   9(4) X
                      
*    88  H2_ONE_TWO                     00000002 00000000 0            X
                     
*    01  HFP_SRT                        00000065 00000004 1   1        X
                     1234 
*    01  HFP_LNG                        00000069 00000008 1   2        X
                     1234 
*    01  HFP_EXT                        00000071 00000010 1   3        X
                     1234 
*    01  BFP_SRT                        00000081 00000004 1   4        X
                     1234 
*    01  BFP_LNG                        00000085 00000008 1   5        X
                     1234 
*    01  BFP_EXT                        0000008D 00000010 1   6        X
                     1234 
*    01  DFP_SRT                        0000009D 00000004 1   7        X
                     1234 
*    01  DFP_LNG                        000000A1 00000008 1   8        X
                     1234 
*    01  DFP_EXT                        000000A9 00000010 1   9        X
                     1234 
*    01  HW                             000000B9 00000002 1   H   9(4) X
                     1234 
*    01  FW                             000000BB 00000004 1   F   9(9) X
                     1234 
*    01  DW                             000000BF 00000008 1   G   9(18)X
                     1234 
*    01  QW                             000000C7 00000010 1   Q   9(39)X
                     1234 
*    01  PD                             000000D7 00000010 1   P   9(31)X
                     1234 
*    01  ZD                             000000E7 0000001F 1   Z   9(31)X
                     1234 
*    01  GOOD                           00000106 00000003 1   P   9(4) X
                     0 
*    01  DEBUG_ITEM                     00000109 00000058 1   X        X
                      
*    02  DEBUG_LINE                     00000109 00000006 1   X   X(6) X
                      
*    02  FILLER                         0000010F 00000001 1   X   X    X
                     SPACE 
*    02  DEBUG_NAME                     00000110 0000001E 1   X   X(30)X
                      
*    02  FILLER                         0000012E 00000001 1   X   X    X
                     SPACE 
*    02  DEBUG_SUB_1                    0000012F 00000004 1   Z   9999 X
                      
*    02  FILLER                         00000133 00000001 1   X   X    X
                     SPACE 
*    02  DEBUG_SUB_2                    00000134 00000004 1   Z   9999 X
                      
*    02  FILLER                         00000138 00000001 1   X   X    X
                     SPACE 
*    02  DEBUG_SUB_3                    00000139 00000004 1   Z   9999 X
                      
*    02  FILLER                         0000013D 00000001 1   X   X    X
                     SPACE 
*    02  DEBUG_CONTENTS                 0000013E 00000023 1   X   X(35)X
                      
*    01  TRUE                           00000161 00000001 1   Z   9    X
                     1 
*    01  FALSE                          00000162 00000001 1   Z   9    X
                     0 
*    01  RETURN_CODE                    00000163 00000002 1   H   9(4) X
                     0 
ZC_WSLOC LOCTR 
ZC_WS_LOC_1  EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
ZC_SAVEAREA DS CL72
ZC_WS_LOC_2  EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
ZC_WS_ID DC CL8'WS*WS*WS'
ZC_WS_LOC_3  EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
ZC_WS_START DS AL4
ZC_WS_LOC_4  EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
ZC_WS_LEN DS FL4
ZC_WS_LOC_5  EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
         DS  0CL0
ZC_WS_LOC_6  EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
A        DC CL1'1'
ZC_WS_LOC_7  EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
B        DC CL1'2'
ZC_WS_LOC_8  EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
C        DC CL1'3'
ZC_WS_LOC_9  EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
D        DC CL1'4'
ZC_WS_LOC_10 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
ERRORS   DC CL1'F'
ZC_WS_LOC_11 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
H1       DS  2HL2
ZC_WS_LOC_13 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
H2       DS  2HL2
ZC_WS_LOC_15 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
HFP_SRT  DC EHL4'1234'
ZC_WS_LOC_16 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
HFP_LNG  DC DHL8'1234'
ZC_WS_LOC_17 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
HFP_EXT  DC LHL16'1234'
ZC_WS_LOC_18 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
BFP_SRT  DC EBL4'1234'
ZC_WS_LOC_19 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
BFP_LNG  DC DBL8'1234'
ZC_WS_LOC_20 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
BFP_EXT  DC LBL16'1234'
ZC_WS_LOC_21 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
DFP_SRT  DC EDL4'1234'
ZC_WS_LOC_22 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
DFP_LNG  DC DDL8'1234'
ZC_WS_LOC_23 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
DFP_EXT  DC LDL16'1234'
ZC_WS_LOC_24 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
HW       DC AL2(1234)                  RPI 1065
ZC_WS_LOC_25 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
FW       DC AL4(1234)                  RPI 1065
ZC_WS_LOC_26 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
DW       DC FL8'1234'                  RPI 1065
ZC_WS_LOC_27 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
QW       DC FL16'1234'                 RPI 1065
ZC_WS_LOC_28 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
PD       DC PL16'1234'
ZC_WS_LOC_29 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
ZD       DC ZL31'1234'
ZC_WS_LOC_30 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
GOOD     DC PL3'0'
ZC_WS_LOC_31 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
DEBUG_ITEM DS 0CL88
ZC_WS_LOC_32 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
DEBUG_LINE DS CL6
ZC_WS_LOC_33 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
         DC CL1' '
ZC_WS_LOC_34 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
DEBUG_NAME DS CL30
ZC_WS_LOC_35 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
         DC CL1' '
ZC_WS_LOC_36 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
DEBUG_SUB_1 DS ZL4
ZC_WS_LOC_37 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
         DC CL1' '
ZC_WS_LOC_38 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
DEBUG_SUB_2 DS ZL4
ZC_WS_LOC_39 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
         DC CL1' '
ZC_WS_LOC_40 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
DEBUG_SUB_3 DS ZL4
ZC_WS_LOC_41 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
         DC CL1' '
ZC_WS_LOC_42 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
DEBUG_CONTENTS DS CL35
ZC_WS_LOC_43 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
TRUE     DC CL1'1'
ZC_WS_LOC_44 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
FALSE    DC CL1'0'
ZC_WS_LOC_45 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
RETURN_CODE DC AL2(0)                  RPI 1065
*    ZCOBOL LINKAGE SECTION DATA ITEMS 
*    LVL DATA NAME                      ADDR     LEN      DUP TYP PIC  X
                     VALUE 
ZC_WSLOC LOCTR 
ZC_WSLOC LOCTR 
ZC_WS_DIFF EQU  *-ZC_WS-357  DIFF BETWEEN ALLOC AND CALC WS
ZC_WS_END DS   0D
         MNOTE *,'ZCOBOL TOTAL SYMBOLS                 = 45'
         MNOTE *,'ZCOBOL TOTAL SYMBOL DUPLICATES       = 0'
         MNOTE *,'ZCOBOL TOTAL SYMBOL MAX DUP CHAIN    = 0'
         MNOTE *,'ZCOBOL TOTAL SYMBOL LEVEL 88         = 3'
         MNOTE *,'ZCOBOL TOTAL SYMBOL SET INDEXES      = 0'
         MNOTE *,'ZCOBOL TOTAL SYMBOL LINKAGE SECTIONS = 0'
         MNOTE *,'ZCOBOL TOTAL PROCEDURE SECTIONS      = 0'
         MNOTE *,'ZCOBOL TOTAL PROCEDURE PARAGRAPHS    = 3'
         MNOTE *,'ZCOBOL TOTAL PROCEDURE PARAGRAPH DUP = 0'
         END 
