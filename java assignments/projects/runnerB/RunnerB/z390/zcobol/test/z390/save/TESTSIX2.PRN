TESTSIX2  MZ390 START
AZ390I Copyright 2011 Automated Software Tools Corporation
AZ390I z390 is licensed under GNU General Public License
AZ390I program = zcobol\test\TESTSIX2
AZ390I options = W:\work\z390\z390.OPT=(time(60)) @zcobol\z390\ZC390CLG=(
  sysmac(+zcobol+zcobol\z390+mac+cics) syscpy(+zcobol+zcobol\z390+mac+cics) 
  BAL NOLISTCALL MAXGBL(1500000)) notiming stats
External Symbol Definitions
 ESD=0001 LOC=00000000 LEN=000009A8 TYPE=CST NAME=TESTSIX2
Assembler Listing
000000                                       (6/15)1+*    ZCOBOL PGM='zcobol\test\TESTSIX2' VER=V1.5.06 MM/DD/YY  
000000                                       (6/15)2+*    ZCOBOL OPTIONS=() 
000000                                        (1/4)3          COPY  TESTSIX2_ZC_LABELS.CPY
000000                                        (1/5)4 *        IDENTIFICATION DIVISION.
000000                                        (1/7)5 *        PROGRAM-ID.    TESTSIX2.
000000                                      (11/34)6+         PRINT NOLIST,NOGEN,NOLISTUSE    SET LIST OPTION FOR INTERNAL CODE
000000                                      (11/59)8+TESTSIX2 CSECT ,                CSECT WITH PROCEDURE CODE AND WS
000000                                      (11/60)9+         USING *,ZC_R15
LISTUSE TESTSIX2 ESD=0001 LOC=00000000 LEN=01000 REG=F OFF=00000 LAB=
000000 90ECD00C                            (16/51)10+         STM   14,12,12+4*(14-14)(13)
000004                                     (11/93)11+         CNOP  4,8             FORCE ZC390PVT TO DOUBLEWORD BOUNDARY
000004 A785001A                000038      (11/94)12+         BRAS  ZC_R8,ZC_LOAD
000008                                     (11/95)13+         USING *,ZC_R8            BASE FOR LOAD AND CICS V5 USE
LISTUSE TESTSIX2 ESD=0001 LOC=00000000 LEN=01000 REG=F OFF=00000 LAB=
LISTUSE TESTSIX2 ESD=0001 LOC=00000008 LEN=01000 REG=8 OFF=00000 LAB=
000008                                     (11/96)14+*
000008                                     (11/97)15+*  THESE FIELDS MUST BE KEPT IN SYNC WITH zcobol\ZC390PVT.CPY
000008                                     (11/98)16+*
000008 E3C5E2E3E2C9E7F2                    (11/99)17+         DC    CL8'TESTSIX2'    PVTPGM   ZCOBOL PGM NAME
000010 F0F161F0F261F0F5                   (11/100)18+         DC    CL8'01/02/05'   PVTDATE  ZCOBOL COMPILE DATE
000018 F2F24BF3F3404040                   (11/101)19+         DC    CL8'22.33'   PVTTIME  ZCOBOL COMPILE TIME
000020 E5F14BF54BF0F640                   (11/102)20+         DC    CL8'V1.5.06'    PVTVER   ZCOBOL COMPILER VERSION
000028 F0                                 (11/103)21+         DC    C'0'     PVTCICS  ZCOBOL EXEC CICS PGM
000029 F1                                 (11/104)22+         DC    C'1'   PVTEXTND ZCOBOL EXTENDED PRECISION
00002A F0                                 (11/105)23+         DC    C'0'    PVTTRUNC ZCOBOL TRUNCATE TO PICTURE
00002B F1                                 (11/106)24+         DC    C'1'      PVTR64   ZCOBOL USE 64 BIT REGISTERS
00002C 0050                               (11/107)25+         DC    H'80' MAX DISPLAY LINE LEN  RPI 1118
00002E                                    (11/108)26+         DS    XL10            RESERVED
000038                                    (11/109)27+ZC_LOAD  DS    0H
000038 410080B0                0000B8      (17/74)28+         LA    0,=CL8'ZC390LIB'
00003C 1BFF                                (17/95)29+         SR    15,15 USE DEFAULT SYS390 SEARCH
00003E 0A08                               (17/125)30+         SVC   8 LOAD R0=A(NAME) R15=DDNAME/DSNAME ADDR OR 0
000040 12FF                               (11/111)31+         LTR   ZC_R15,ZC_R15
000042 A7840013                000068     (11/112)32+         JZ    ZC_LOAD_OK
000046 A715000D                000060      (18/49)33+         BRAS  1,*+(WTO#0015_EOT-*+1)/2*2
00004A 00160000E9C3F3F9                    (18/50)34+         DC    AL2(WTO#0015_EOT-*,0),C'ZC390LIB NOT FOUND'
000060                  00000060           (18/51)35+WTO#0015_EOT     EQU *
000060 0A23                                (18/52)36+         SVC   35
000062 41F00010                           (11/114)37+         LA  ZC_R15,16
000066 0A03                               (11/115)38+         SVC 3      EXIT TO CALLER WITH RC=16
000068                                    (11/116)39+ZC_LOAD_OK DS  0H
000068 1890                               (11/117)40+         LR    ZC_R9,ZC_R0
00006A                                    (11/118)41+         USING ZC390CVT,ZC_R9    R9=CVT
LISTUSE TESTSIX2 ESD=0001 LOC=00000000 LEN=01000 REG=F OFF=00000 LAB=
LISTUSE TESTSIX2 ESD=0001 LOC=00000008 LEN=01000 REG=8 OFF=00000 LAB=
LISTUSE ZC390CVT ESD=0003 LOC=00000000 LEN=01000 REG=9 OFF=00000 LAB=
00006A D503900080B8     000000 0000C0     (11/119)42+         CLC   ZCVT_ID,=C'ZCVT'              CHECK ZCVT ID AND LENGTH
000070 A774000C                000088     (11/120)43+         JNE   ZC_VER_ERR                    IN ZC390LIB.390 MATCH
000074 D503900480BC     000004 0000C4     (11/121)44+         CLC   ZCVT_LEN,=A(ZCVT_END-ZCVT_ID) ZCOBOL PGM COMPILED ID/LEN
00007A 47708080                000088     (11/122)45+         BNE   ZC_VER_ERR
00007E 58F09010                000010     (11/123)46+         L     ZC_R15,ZCVT_ZC390NUC
000082 0DEF                               (11/124)47+         BASR  ZC_R14,ZC_R15 CALL ZC390NUC TO VERIFY VER, OPTIONS
000084 A7F40022                0000C8     (11/125)48+         J     ZC_VER_OK
000088                                    (11/126)49+ZC_VER_ERR DS 0H
000088 A7150011                0000AA      (18/49)50+         BRAS  1,*+(WTO#0016_EOT-*+1)/2*2
00008C 001E0000E9C3F3F9                    (18/50)51+         DC    AL2(WTO#0016_EOT-*,0),C'ZC390LIB ZCVT VERIFY ERROR'
0000AA                  000000AA           (18/51)52+WTO#0016_EOT     EQU *
0000AA 0A23                                (18/52)53+         SVC   35
0000AC 41F00010                           (11/128)54+         LA  ZC_R15,16
0000B0 0A03                               (11/129)55+         SVC 3      EXIT TO CALLER WITH RC=16
0000B2                                    (11/130)56+         LTORG 
0000B8 E9C3F3F9F0D3C9C2 =CL8'ZC390LIB'
0000C0 E9C3E5E3         =C'ZCVT'
0000C4 000001F8         =A(ZCVT_END-ZCVT_ID)
0000C8                  00000080          (15/10)111=PFPO_TEST    EQU  X'80' PFPO TEST IF VALID OPCODE (NOT SUPPORTED YET)
0000C8                  00000001          (15/11)112=PFPO_RADIX   EQU  1 PFPO OPCODE - CONVERT FROM ONE RADIX TO ANOTHER
0000C8                  00000000          (15/12)113=PFPO_RND     EQU  0 PFOP ROUNDING OPTION (ONLY DEFAULT ALLOWED)
0000C8                  00000000          (15/13)114=PFPO_TYPE_EH EQU  0 EH HFP SHORT     32 BITS 7  DIGITS
0000C8                  00000001          (15/14)115=PFPO_TYPE_DH EQU  1 ED HFP LONG      64 BITS 15 DIGITS
0000C8                  00000002          (15/15)116=PFPO_TYPE_LH EQU  2 EL HFP EXTENDED 128 BITS 30 DIGITS
0000C8                  00000005          (15/16)117=PFPO_TYPE_EB EQU  5 EB BFP SHORT     32 BITS 7  DIGITS
0000C8                  00000006          (15/17)118=PFPO_TYPE_DB EQU  6 DB BFP LONG      64 BITS 16 DIGITS
0000C8                  00000007          (15/18)119=PFPO_TYPE_LB EQU  7 LB BFP EXTENDED 128 BITS 34 DIGITS
0000C8                  00000008          (15/19)120=PFPO_TYPE_ED EQU  8 ED DFP SHORT     32 BITS 7  DIGITS
0000C8                  00000009          (15/20)121=PFPO_TYPE_DD EQU  9 DD DFP LONG      64 BITS 16 DIGITS
0000C8                  0000000A          (15/21)122=PFPO_TYPE_LD EQU 10 LD DFP EXTENDED 128 BITS 34 DIGITS
0000C8                                   (11/133)123+ZC_VER_OK DS   0H
0000C8 582D0018                           (11/63)124+         L     ZC_R2,24(ZC_R13) SET ZC_R2=PARMLIST ADDRESS AFTER LOAD
0000CC C010000003EE            0008A8     (11/64)125+         LARL  ZC_R1,ZC_WS     ZC_R2=A(WORKING STORAGE WITH SAVEAREA)
0000D2 501D0008                           (11/65)126+         ST    ZC_R1,8(ZC_R13) FORWARD  SAVE CHAIN
0000D6 50D10004                           (11/66)127+         ST    ZC_R13,4(ZC_R1) BACKWARD SAVE CHAIN
0000DA 18D1                               (11/67)128+         LR    ZC_R13,ZC_R1    LINK SAVE AREA IN ZC390CVT
0000DC                                    (11/68)129+         USING ZC_WS,ZC_R13    BASE FOR ZCOBOL WS (SEE GEN_SYM_RX.MAC)
LISTUSE TESTSIX2 ESD=0001 LOC=00000000 LEN=01000 REG=F OFF=00000 LAB=
LISTUSE TESTSIX2 ESD=0001 LOC=00000008 LEN=01000 REG=8 OFF=00000 LAB=
LISTUSE ZC390CVT ESD=0003 LOC=00000000 LEN=01000 REG=9 OFF=00000 LAB=
LISTUSE TESTSIX2 ESD=0001 LOC=000008A8 LEN=01000 REG=D OFF=00000 LAB=
0000DC 50D0D050                0008F8     (11/69)130+         ST    ZC_R13,ZC_WS_START  SAVE ADDR WS IN WS PREFIX
0000E0 C00000000464            0009A8     (11/70)131+         LARL  ZC_R0,ZC_WS_END
0000E6 1B0D                               (11/71)132+         SR    ZC_R0,ZC_R13
0000E8 5000D054                0008FC     (11/72)133+         ST    ZC_R0,ZC_WS_LEN     SAVE LENGTH OF WS IN WS PREFIX
0000EC                                    (11/73)134+         DROP  ZC_R15              RPI 1042
LISTUSE TESTSIX2 ESD=0001 LOC=000008A8 LEN=01000 REG=D OFF=00000 LAB=
LISTUSE TESTSIX2 ESD=0001 LOC=00000008 LEN=01000 REG=8 OFF=00000 LAB=
LISTUSE ZC390CVT ESD=0003 LOC=00000000 LEN=01000 REG=9 OFF=00000 LAB=
0008A8                                    (11/74)135+ZC_WSLOC LOCTR 
0008A8                                    (11/75)136+ZC_WS    DS    0D           START WORKING STORAGE
000000                                    (11/81)137+ZC390CVT DSECT 
000000                                    (12/31)138=ZCVT_ID            DC    C'ZCVT'             ZCVT ID  VERIFIED BY ZCOB
000004                                    (12/32)139=ZCVT_LEN           DC    A(ZCVT_END-ZCVT_ID) ZCVT LEN VERIFIED BY ZCOB
000008                                    (12/33)140=ZCVT_VER           DC    CL8'V1.5.06'    ZCVT VER VERIFIED BY ZC390NUC
000010                                    (12/34)141=ZCVT_ZC390NUC  DC V(ZC390NUC)      MODULE  SYSTEM ROUTINE MODULE INIT
000014                                    (12/35)142=ZCVT_CALL           DC V(CALL)       ENTRY R0=A(PGM),R1=A(PARMLIST)
000018                                    (12/36)143=ZCVT_CMP64R32       DC V(CMP64R32)   ENTRY COMPARE R0-1=FLD1 R2-3=FLD2
00001C                                    (12/37)144=ZCVT_CVTLBTQ        DC V(CVTLBTQ)    ENTRY CVT LB IN F4-6 TO Q IN R0-1
000020                                    (12/38)145=ZCVT_CVTLDTP        DC V(CVTLDTP)    ENTRY CVT LD IN F0-2 TO PL31 R0-1
000024                                    (12/39)146=ZCVT_CVTQTLB        DC V(CVTQTLB)    ENTRY CVT Q IN R0-1 TO LB IN F4-6
000028                                    (12/40)147=ZCVT_DIV64R32       DC V(DIV64R32)   ENTRY DIVIDE R0-1=N64, R2-3=MAX64
00002C                                    (12/41)148=ZCVT_DIVQ128        DC V(DIVQ128)    ENTRY DIVIDE Q128 R0-R1 BY R2-R3
000030                                    (12/42)149=ZCVT_GOBACK         DC V(GOBACK)     ENTRY R1=RC
000034                                    (12/43)150=ZCVT_MPYQ128        DC V(MPYQ128)    ENTRY MULTIPLY Q128 R0-R1 BY R2-R3
000038                                    (12/44)151=ZCVT_OSE64R32       DC V(OSE64R32)   ENTRY ON SIZE ERR R0-1=N, R2-3=MAX
00003C                                    (12/45)152=ZCVT_PERFORM        DC V(PERFORM)    ENTRY R14=PGTAR,R0=PGEXT,R1=PMRET
000040                                    (12/46)153=ZCVT_PMCHECK        DC V(PMCHECK)    ENTRY R14=RETURN TO NEXT INSTR.
000044                                    (12/47)154=ZCVT_ROUNDF         DC V(ROUNDF)     ENTRY R0=REM,R1=QUO,R2=DIVISOR
000048                                    (12/48)155=ZCVT_STACKORG       DC V(STACKORG)   ENTRY PERFORM STACK ORIGIN
00004C                                    (12/49)156=ZCVT_STACKPTR       DC V(STACKPTR)   ENTRY CUR ENTRY A(PG_END+4,RET)
000050                                    (12/50)157=ZCVT_STACKEND       DC V(STACKEND)   ENTRY PERFORM STACK END
000054                                    (12/51)158=ZCVT_STOPRUN        DC V(STOPRUN)    ENTRY R1=RC
000058                                    (12/52)159=ZCVT_TALPHAX        DC V(TALPHAX)    ENTRY TEST ALPHABETIC X
00005C                                    (12/53)160=ZCVT_TNUMP          DC V(TNUMP)      ENTRY TEST NUMERIC P
000060                                    (12/54)161=ZCVT_TNUMX          DC V(TNUMX)      ENTRY TEST NUMERIC X
000064                                    (12/55)162=ZCVT_TNUMZ          DC V(TNUMZ)      ENTRY TEST NUMERIC Z
000068                                    (12/56)163=*
000068                                    (12/57)164=* ADDITIONAL SEPARATE MODULES LINKED WITH Z390NUC IN ZC390LIB.390
000068                                    (12/58)165=*
000068                                    (12/59)166=ZCVT_ABORT     DC V(ABORT)         MODULE  R1=ABORT ERROR MSG #
00006C                  00000001          (12/60)167=ZCVT_ABORT_ALTER   EQU    1 ABORT ALTER DUE TO BRC NOT FOUND AT TARGET
00006C                  00000002          (12/61)168=ZCVT_ABORT_CALL    EQU    2 ABORT DYNAMIC CALL - PGM NOT FOUND
00006C                  00000003          (12/62)169=ZCVT_ABORT_DISPLAY EQU    3 ABORT DISPLAY DUE TO BUFFER EXCEEDED
00006C                  00000004          (12/63)170=ZCVT_ABORT_OPEN    EQU    4 ABORT OPEN  INVALID DCB
00006C                  00000006          (12/64)171=ZCVT_ABORT_STACK   EQU    6 ABORT PEROFRM STACK OVERFLOW
00006C                  00000007          (12/65)172=ZCVT_ABORT_VERSION EQU    7 ABORT ZC390NUC INIT ZCOBOL VERSION ERROR
00006C                  00000008          (12/66)173=ZCVT_ABORT_INT128  EQU    8 ABORT INTEGER 128 CONVERSION OVERFLO
00006C                  00000009          (12/67)174=ZCVT_ABORT_DIVQ    EQU    9 ABORT DIVIDE Q IF DIVISOR 0 OR > 2**63
00006C                  0000000A          (12/68)175=ZCVT_ABORT_CICS    EQU   10 ABORT THIS PGM REQUIRES EXEC CICS TRANS MGR
00006C                  0000000B          (12/69)176=ZCVT_ABORT_ACCEPT  EQU   11 ABORT ACCEPT EOF
00006C                  0000000B          (12/70)177=ZCVT_ABORT_MAXERR  EQU   11 ABORT MAX ERROR CODE
00006C                                    (12/71)178=ZCVT_ACCEPT    DC V(ACCEPT)        MODULE  R1=A(TYPE,FLD_ADD,FLD_LEN)
000070                  00000001          (12/72)179=ZCVT_ACCEPT_DEFAULT EQU   1 INPUT DEFAULT DDNAME=SYSIN
000070                  00000002          (12/73)180=ZCVT_ACCEPT_CONSOLE EQU   2 INPUT VIA WTOR FROM CONSOLE
000070                  00000003          (12/74)181=ZCVT_ACCEPT_DDNAME  EQU   3 INPUT FROM DDNAME WITH DDNAME ADDR IN R3
000070                  00000004          (12/75)182=ZCVT_ACCEPT_DATE    EQU   4 RETURN DAY OF WEEK PIC 9(8) MMDDYYYY
000070                  00000005          (12/76)183=ZCVT_ACCEPT_TIME    EQU   5 RETURN DAY OF WEEK PIC 9(8) HHMMSSTH
000070                  00000006          (12/77)184=ZCVT_ACCEPT_DOW     EQU   6 RETURN DAY OF WEEK PIC 9 1-7
000070                                    (12/78)185=ZCVT_DISPLAY   DC V(DISPLAY)       MODULE  R1=A(ADDR,LEN,TYPE)
000074                                    (12/79)186=ZCVT_INSPECT   DC V(INSPECT)       MODULE  R0=TYPE,R1=PARMLIST
000078                  00000000          (12/80)187=ZCVT_TALLYING      EQU   0 INSPECT TALLYING
000078                  00000004          (12/81)188=ZCVT_REPLACING     EQU   4 INSPECT REPLACING
000078                  00000008          (12/82)189=ZCVT_CONVERTING    EQU   8 INSPECT CONVERTING
000078                                    (12/83)190=*
000078                                    (12/84)191=* SHARED DATA AREAS
000078                                    (12/85)192=*
000078                                    (12/86)193=ZCVT_PVTMAXDL  DS H          MAXIMUM DISPLAY LINE LENGTH  RPI 1118
000080                                    (12/87)194=               DS 0D
000080                                    (12/88)195=ZCVT_ZERO      DC XL16'00'   BINARY ZEROS
000090                                    (12/89)196=ZCVT_HIGH_VALUES DC 0XL16,16X'FF' BINARY FF'S     RPI 1181
0000A0                                    (12/90)197=ZCVT_PWORK     DS PL8        CVD/CVB WORK
0000A8                                    (12/91)198=ZCVT_PWORK1    DS PL16       DIV DIVIDEND, CVDG/CVBG WORK
0000B8                                    (12/92)199=ZCVT_PWORK2    DS PL16       DIV DIVISOR
0000C8                                    (12/93)200=ZCVT_PWORK3    DS PL16       DIV QUOTIENT
0000D8                                    (12/94)201=ZCVT_PWORK4    DS PL16       DIV REMAINDER
0000E8                                    (12/95)202=ZCVT_NDDX      DS XL16       DIV DIVIDEND HOLD AREA
0000F8                                    (12/96)203=ZCVT_WORKAREA  DS XL256      GEN_INSPECT PARMS, GEN_EDIT WORK, ETC.
0001F8                                    (12/97)204=*
0001F8                                    (12/98)205=* END OF ZC390CVT
0001F8                                    (12/99)206=*
0001F8                  000001F8         (12/100)207=ZCVT_END   EQU   *
000000                                    (11/83)208+ZC390PVT DSECT 
000000                                    (13/11)209=PVTPGM   DS    CL8  ZCOBOL PGM NAME
000008                                    (13/12)210=PVTDATE  DS    CL8  ZCOBOL COMPILE DATE
000010                                    (13/13)211=PVTTIME  DS    CL8  ZCOBOL COMPILE TIME
000018                                    (13/14)212=PVTVER   DS    CL8  ZCOBOL COMPILER VERSION
000020                                    (13/15)213=PVTCICS  DS    C    ZCOBOL EXEC CICS PGM
000021                                    (13/16)214=PVTEXTND DS    C    ZCOBOL EXTENDED PRECISION
000022                                    (13/17)215=PVTTRUNC DS    C    ZCOBOL TRUNCATE TO PICTURE
000023                                    (13/18)216=PVTR64   DS    C    ZCOBOL USE 64 BIT REGISTERS
000024                                    (13/19)217=PVTMAXDL DS    H    ZCOBOL MAX DISPLAY LINE LENGTH
000026                                    (13/20)218=         DS    XL10 RESERVED
0008A8                                    (11/85)219+ZC_WSLOC LOCTR              CONTINUE WS FOR FD AND DATA
0008A8                                      (1/9)220 *        AUTHOR.        DON HIGGINS.
0008A8                                     (1/11)221 *        DATE-WRITTEN.  01/08/09.
0008A8                                     (1/12)222 *      ***************************************************************
0008A8                                     (1/13)223 *      * TEST SET AND INDEXES
0008A8                                     (1/14)224 *      ***************************************************************
0008A8                                     (1/15)225 *      * 02/24/09 RPI 1002 TEST SET AND INDEX SUPPORT
0008A8                                     (1/16)226 *      ***************************************************************
0008A8                                     (1/18)227 *        ENVIRONMENT DIVISION.
0008A8                                     (1/20)228 *        DATA DIVISION.
0008A8                                    (28/23)229+         PRINT DATA
0008A8                                     (1/22)230 *        WORKING-STORAGE SECTION.
0008A8                                     (1/24)231 *        01  T0.
0008A8                                     (1/26)232 *            10  T1 OCCURS 2 TIMES.
0008A8                                     (1/28)233 *                15 T1-ID PIC X.
0008A8                                     (1/30)234 *                15 T2 OCCURS 3 TIMES.
0008A8                                     (1/32)235 *                   20 T2-ID PIC X.
0008A8                                     (1/34)236 *        77  S1 COMP PIC S9(9).
0008A8                                     (1/36)237 *        77  S2 COMP PIC S9(9).
0008A8                                     (1/38)238 *        77  NFS2 COMP   PIC S9(9)  OCCURS 2 TIMES.
0008A8                                     (1/40)239 *        77  NGS2 COMP   PIC S9(18) OCCURS 2 TIMES.
0008A8                                     (1/42)240 *        77  NHS2 COMP   PIC S9(4)  OCCURS 2 TIMES.
0008A8                                     (1/44)241 *        77  I    COMP   PIC S99    VALUE 1.
0008A8                                     (1/46)242 *        77  J    COMP   PIC S99    VALUE 2.
0008A8                                     (1/48)243 *        77  GOOD COMP-3 PIC S9(9) VALUE 0.
0008A8                                     (1/50)244 *        01  H1 PIC S9(4) COMP OCCURS 3 TIMES INDEXED BY H1X.
0008A8                                     (1/52)245 *            88 H1-ZERO VALUE 10.
0008A8                                     (1/54)246 *        77  H1X-SAVE  INDEX.
0008A8                                     (1/56)247 *        77  H1X-SAVE2 INDEX.
0008A8                                     (1/58)248 *        77  SUB PIC S9(9) COMP.
0008A8                                     (1/61)249 *        PROCEDURE DIVISION.
0008A8                                     (1/62)250 *ZC   PROCEDURE DIVISION
0008A8                                    (31/18)251+         PRINT LIST,GEN,LISTUSE TURN PRINT LISTING ON FOR USER CODE GEN
0000EC                                    (31/19)252+TESTSIX2 CSECT                SWITCH TO PROCEDURE CODE AHEAD OF WS
0000EC                                     (1/64)253 *        MAINLINE.
0000EC                                     (8/96)254+PG_MAINLINE DS 0H
0000EC                                     (1/66)255 *            DISPLAY 'TESTSIX2 STARTING'
0000EC                                     (1/67)256 *ZC     33         DISPLAY 'TESTSIX2 STARTING'
0000EC A715000D                000106     (18/49)257+         BRAS  1,*+(WTO#0141_EOT-*+1)/2*2
0000F0 00150000E3C5E2E3                   (18/50)258+         DC    AL2(WTO#0141_EOT-*,0),C'TESTSIX2 STARTING'
0000F8 E2C9E7F240E2E3C1
000100 D9E3C9D5C7
000105                  00000105          (18/51)259+WTO#0141_EOT     EQU *
000106 0A23                               (18/52)260+         SVC   35
000108                                     (1/69)261 *            MOVE '1ABC2DEF' TO T0
000108                                     (1/70)262 *ZC     34         MOVE  '1ABC2DEF',TO,T0
000108 C010000003B8            000878    (41/160)263+         LARL  ZC_R1,=CL8'1ABC2DEF'
00010E D207D0581000     000900           (41/299)264+          MVC   T0,0(ZC_R1)
000114                                     (1/72)265 *      1     IF T1-ID(1) = '1'   PERFORM GOOD ELSE PERFORM BAD.
000114                                     (1/73)266 *ZC     35      1  IF    T1_ID,'(',1,')',=,'1'
000114 95F1D058                000900    (44/438)267+         CLI   T1_ID,C'1'
000118 A774000D                000132     (45/15)268+         BRC   15-ZC_EQ,PG_IF_1_1
00011C                                     (1/75)269 *ZC     35      1  PERFORM GOOD
00011C C0E000000393            000842     (48/44)270+         LARL  ZC_R14,PG_GOOD
000122 C00000000399            000854     (48/45)271+         LARL  ZC_R0,PG_GOOD_END+6
000128 58F0903C                00003C     (48/46)272+         L     ZC_R15,ZCVT_PERFORM
00012C 0D1F                               (48/47)273+         BASR  ZC_R1,ZC_R15
00012E                                     (1/77)274 *ZC     35      1  ELSE
00012E A7F4000B                000144     (50/15)275+         J     PG_IF_1_E
000132                                     (8/41)276+PG_IF_1_1    DS    0H  &TYPE
000132                                     (1/79)277 *ZC     35      1  PERFORM BAD
000132 C0E000000391            000854     (48/44)278+         LARL  ZC_R14,PG_BAD
000138 C00000000399            00086A     (48/45)279+         LARL  ZC_R0,PG_BAD_END+6
00013E 58F0903C                00003C     (48/46)280+         L     ZC_R15,ZCVT_PERFORM
000142 0D1F                               (48/47)281+         BASR  ZC_R1,ZC_R15
000144                                     (8/41)282+PG_IF_1_E    DS    0H  &TYPE
000144                                     (1/82)283 *      2     IF T1-ID(2) = '2'   PERFORM GOOD ELSE PERFORM BAD.
000144                                     (1/83)284 *ZC     36      2  IF    T1_ID,'(',2,')',=,'2'
000144 C02900000004            000004     (43/32)285+         IILF  ZC_R2,(2-1)*4 (LIT-1)*LEN
00014A 4122D058                000900     (43/33)286+         LA    ZC_R2,T1_ID(ZC_R2)
00014E 95F22000                          (44/438)287+         CLI   0(ZC_R2),C'2'
000152 A774000D                00016C     (45/15)288+         BRC   15-ZC_EQ,PG_IF_2_1
000156                                     (1/85)289 *ZC     36      2  PERFORM GOOD
000156 C0E000000376            000842     (48/44)290+         LARL  ZC_R14,PG_GOOD
00015C C0000000037C            000854     (48/45)291+         LARL  ZC_R0,PG_GOOD_END+6
000162 58F0903C                00003C     (48/46)292+         L     ZC_R15,ZCVT_PERFORM
000166 0D1F                               (48/47)293+         BASR  ZC_R1,ZC_R15
000168                                     (1/87)294 *ZC     36      2  ELSE
000168 A7F4000B                00017E     (50/15)295+         J     PG_IF_2_E
00016C                                     (8/41)296+PG_IF_2_1    DS    0H  &TYPE
00016C                                     (1/89)297 *ZC     36      2  PERFORM BAD
00016C C0E000000374            000854     (48/44)298+         LARL  ZC_R14,PG_BAD
000172 C0000000037C            00086A     (48/45)299+         LARL  ZC_R0,PG_BAD_END+6
000178 58F0903C                00003C     (48/46)300+         L     ZC_R15,ZCVT_PERFORM
00017C 0D1F                               (48/47)301+         BASR  ZC_R1,ZC_R15
00017E                                     (8/41)302+PG_IF_2_E    DS    0H  &TYPE
00017E                                     (1/92)303 *      3     IF T2-ID(1 1) = 'A' PERFORM GOOD ELSE PERFORM BAD.
00017E                                     (1/93)304 *ZC     37      3  IF    T2_ID,'(',1,1,')',=,'A'
00017E 4120D059                000901     (43/56)305+         LA    ZC_R2,T2_ID
000182 95C12000                          (44/438)306+         CLI   0(ZC_R2),C'A'
000186 A774000D                0001A0     (45/15)307+         BRC   15-ZC_EQ,PG_IF_3_1
00018A                                     (1/95)308 *ZC     37      3  PERFORM GOOD
00018A C0E00000035C            000842     (48/44)309+         LARL  ZC_R14,PG_GOOD
000190 C00000000362            000854     (48/45)310+         LARL  ZC_R0,PG_GOOD_END+6
000196 58F0903C                00003C     (48/46)311+         L     ZC_R15,ZCVT_PERFORM
00019A 0D1F                               (48/47)312+         BASR  ZC_R1,ZC_R15
00019C                                     (1/97)313 *ZC     37      3  ELSE
00019C A7F4000B                0001B2     (50/15)314+         J     PG_IF_3_E
0001A0                                     (8/41)315+PG_IF_3_1    DS    0H  &TYPE
0001A0                                     (1/99)316 *ZC     37      3  PERFORM BAD
0001A0 C0E00000035A            000854     (48/44)317+         LARL  ZC_R14,PG_BAD
0001A6 C00000000362            00086A     (48/45)318+         LARL  ZC_R0,PG_BAD_END+6
0001AC 58F0903C                00003C     (48/46)319+         L     ZC_R15,ZCVT_PERFORM
0001B0 0D1F                               (48/47)320+         BASR  ZC_R1,ZC_R15
0001B2                                     (8/41)321+PG_IF_3_E    DS    0H  &TYPE
0001B2                                    (1/102)322 *      4     IF T2-ID(2 1) = 'D' PERFORM GOOD ELSE PERFORM BAD.
0001B2                                    (1/103)323 *ZC     38      4  IF    T2_ID,'(',2,1,')',=,'D'
0001B2 4120D059                000901     (43/56)324+         LA    ZC_R2,T2_ID
0001B6 C22900000004            000004     (43/70)325+         AFI   ZC_R2,(2-1)*4 (LIT-1)*LEN
0001BC 95C42000                          (44/438)326+         CLI   0(ZC_R2),C'D'
0001C0 A774000D                0001DA     (45/15)327+         BRC   15-ZC_EQ,PG_IF_4_1
0001C4                                    (1/105)328 *ZC     38      4  PERFORM GOOD
0001C4 C0E00000033F            000842     (48/44)329+         LARL  ZC_R14,PG_GOOD
0001CA C00000000345            000854     (48/45)330+         LARL  ZC_R0,PG_GOOD_END+6
0001D0 58F0903C                00003C     (48/46)331+         L     ZC_R15,ZCVT_PERFORM
0001D4 0D1F                               (48/47)332+         BASR  ZC_R1,ZC_R15
0001D6                                    (1/107)333 *ZC     38      4  ELSE
0001D6 A7F4000B                0001EC     (50/15)334+         J     PG_IF_4_E
0001DA                                     (8/41)335+PG_IF_4_1    DS    0H  &TYPE
0001DA                                    (1/109)336 *ZC     38      4  PERFORM BAD
0001DA C0E00000033D            000854     (48/44)337+         LARL  ZC_R14,PG_BAD
0001E0 C00000000345            00086A     (48/45)338+         LARL  ZC_R0,PG_BAD_END+6
0001E6 58F0903C                00003C     (48/46)339+         L     ZC_R15,ZCVT_PERFORM
0001EA 0D1F                               (48/47)340+         BASR  ZC_R1,ZC_R15
0001EC                                     (8/41)341+PG_IF_4_E    DS    0H  &TYPE
0001EC                                    (1/112)342 *      5     IF T2-ID(1 3) = 'C' PERFORM GOOD ELSE PERFORM BAD.
0001EC                                    (1/113)343 *ZC     39      5  IF    T2_ID,'(',1,3,')',=,'C'
0001EC 4120D059                000901     (43/56)344+         LA    ZC_R2,T2_ID
0001F0 C22900000002            000002     (43/70)345+         AFI   ZC_R2,(3-1)*1 (LIT-1)*LEN
0001F6 95C32000                          (44/438)346+         CLI   0(ZC_R2),C'C'
0001FA A774000D                000214     (45/15)347+         BRC   15-ZC_EQ,PG_IF_5_1
0001FE                                    (1/115)348 *ZC     39      5  PERFORM GOOD
0001FE C0E000000322            000842     (48/44)349+         LARL  ZC_R14,PG_GOOD
000204 C00000000328            000854     (48/45)350+         LARL  ZC_R0,PG_GOOD_END+6
00020A 58F0903C                00003C     (48/46)351+         L     ZC_R15,ZCVT_PERFORM
00020E 0D1F                               (48/47)352+         BASR  ZC_R1,ZC_R15
000210                                    (1/117)353 *ZC     39      5  ELSE
000210 A7F4000B                000226     (50/15)354+         J     PG_IF_5_E
000214                                     (8/41)355+PG_IF_5_1    DS    0H  &TYPE
000214                                    (1/119)356 *ZC     39      5  PERFORM BAD
000214 C0E000000320            000854     (48/44)357+         LARL  ZC_R14,PG_BAD
00021A C00000000328            00086A     (48/45)358+         LARL  ZC_R0,PG_BAD_END+6
000220 58F0903C                00003C     (48/46)359+         L     ZC_R15,ZCVT_PERFORM
000224 0D1F                               (48/47)360+         BASR  ZC_R1,ZC_R15
000226                                     (8/41)361+PG_IF_5_E    DS    0H  &TYPE
000226                                    (1/122)362 *      6     IF T2-ID(2 3) = 'F' PERFORM GOOD ELSE PERFORM BAD.
000226                                    (1/123)363 *ZC     40      6  IF    T2_ID,'(',2,3,')',=,'F'
000226 4120D059                000901     (43/56)364+         LA    ZC_R2,T2_ID
00022A C22900000004            000004     (43/70)365+         AFI   ZC_R2,(2-1)*4 (LIT-1)*LEN
000230 C22900000002            000002     (43/70)366+         AFI   ZC_R2,(3-1)*1 (LIT-1)*LEN
000236 95C62000                          (44/438)367+         CLI   0(ZC_R2),C'F'
00023A A774000D                000254     (45/15)368+         BRC   15-ZC_EQ,PG_IF_6_1
00023E                                    (1/125)369 *ZC     40      6  PERFORM GOOD
00023E C0E000000302            000842     (48/44)370+         LARL  ZC_R14,PG_GOOD
000244 C00000000308            000854     (48/45)371+         LARL  ZC_R0,PG_GOOD_END+6
00024A 58F0903C                00003C     (48/46)372+         L     ZC_R15,ZCVT_PERFORM
00024E 0D1F                               (48/47)373+         BASR  ZC_R1,ZC_R15
000250                                    (1/127)374 *ZC     40      6  ELSE
000250 A7F4000B                000266     (50/15)375+         J     PG_IF_6_E
000254                                     (8/41)376+PG_IF_6_1    DS    0H  &TYPE
000254                                    (1/129)377 *ZC     40      6  PERFORM BAD
000254 C0E000000300            000854     (48/44)378+         LARL  ZC_R14,PG_BAD
00025A C00000000308            00086A     (48/45)379+         LARL  ZC_R0,PG_BAD_END+6
000260 58F0903C                00003C     (48/46)380+         L     ZC_R15,ZCVT_PERFORM
000264 0D1F                               (48/47)381+         BASR  ZC_R1,ZC_R15
000266                                     (8/41)382+PG_IF_6_E    DS    0H  &TYPE
000266                                    (1/132)383 *            MOVE 1 TO S1 MOVE 3 TO S2
000266                                    (1/133)384 *ZC     41         MOVE  1,TO,S1
000266 E54CD0600001            000908    (41/342)385+          MVHI  S1,1
00026C                                    (1/135)386 *ZC     41         MOVE  3,TO,S2
00026C E54CD0640003            00090C    (41/342)387+          MVHI  S2,3
000272                                    (1/137)388 *      7     IF T2-ID(S1 S2) = 'C' PERFORM GOOD ELSE PERFORM BAD.
000272                                    (1/138)389 *ZC     42      7  IF    T2_ID,'(',S1,S2,')',=,'C'
000272 4120D059                000901     (43/56)390+         LA    ZC_R2,T2_ID
000276 C0F900000060            000060    (43/115)391+         IILF  ZC_R15,S1-ZC_WS
00027C 1AFD                              (43/116)392+         AR    ZC_R15,ZC_R13
00027E 58FF0000                          (43/124)393+         L     ZC_R15,0(ZC_R15)
000282 06F0                              (43/145)394+         BCTR  ZC_R15,0
000284 C2F100000004            000004    (43/148)395+         MSFI  ZC_R15,4 L'&SYM_NAME(&SIX_OCCUR(&CUR_SIX)) RPI 1161 CORRECT CONTINUE RPI 1182
00028A 1A2F                               (43/77)397+         AR    ZC_R2,ZC_R15                         RPI 1182
00028C C0F900000064            000064    (43/115)398+         IILF  ZC_R15,S2-ZC_WS
000292 1AFD                              (43/116)399+         AR    ZC_R15,ZC_R13
000294 58FF0000                          (43/124)400+         L     ZC_R15,0(ZC_R15)
000298 06F0                              (43/145)401+         BCTR  ZC_R15,0
00029A C2F100000001            000001    (43/148)402+         MSFI  ZC_R15,1 L'&SYM_NAME(&SIX_OCCUR(&CUR_SIX)) RPI 1161 CORRECT CONTINUE RPI 1182
0002A0 1A2F                               (43/77)404+         AR    ZC_R2,ZC_R15                         RPI 1182
0002A2 95C32000                          (44/438)405+         CLI   0(ZC_R2),C'C'
0002A6 A774000D                0002C0     (45/15)406+         BRC   15-ZC_EQ,PG_IF_7_1
0002AA                                    (1/140)407 *ZC     42      7  PERFORM GOOD
0002AA C0E0000002CC            000842     (48/44)408+         LARL  ZC_R14,PG_GOOD
0002B0 C000000002D2            000854     (48/45)409+         LARL  ZC_R0,PG_GOOD_END+6
0002B6 58F0903C                00003C     (48/46)410+         L     ZC_R15,ZCVT_PERFORM
0002BA 0D1F                               (48/47)411+         BASR  ZC_R1,ZC_R15
0002BC                                    (1/142)412 *ZC     42      7  ELSE
0002BC A7F4000B                0002D2     (50/15)413+         J     PG_IF_7_E
0002C0                                     (8/41)414+PG_IF_7_1    DS    0H  &TYPE
0002C0                                    (1/144)415 *ZC     42      7  PERFORM BAD
0002C0 C0E0000002CA            000854     (48/44)416+         LARL  ZC_R14,PG_BAD
0002C6 C000000002D2            00086A     (48/45)417+         LARL  ZC_R0,PG_BAD_END+6
0002CC 58F0903C                00003C     (48/46)418+         L     ZC_R15,ZCVT_PERFORM
0002D0 0D1F                               (48/47)419+         BASR  ZC_R1,ZC_R15
0002D2                                     (8/41)420+PG_IF_7_E    DS    0H  &TYPE
0002D2                                    (1/147)421 *            PERFORM VARYING S1 FROM 1 BY 1 UNTIL S1 > 2
0002D2                                    (1/148)422 *ZC     43         PERFORM VARYING,S1,FROM,1,BY,1,UNTIL,S1,>,2
0002D2 E54CD0600001            000908    (41/342)423+          MVHI  S1,1
0002D8 A7F40005                0002E2     (50/15)424+         J     PG_PM_15_T
0002DC                                     (8/41)425+PG_PM_15_A   DS    0H  &TYPE
0002DC EB01D060006A            000908    (53/190)426+         ASI   S1,1
0002E2                                     (8/41)427+PG_PM_15_T   DS    0H  &TYPE
0002E2 5800D060                000908    (44/289)428+         L     0,S1
0002E6 C20D00000002            000002    (44/290)429+         CFI   0,2
0002EC A7D40004                0002F4     (45/15)430+         BRC   15-ZC_H,PG_IF_8_1
0002F0 A7F4006A                0003C4     (50/15)431+         J     PG_PM_15_E
0002F4                                     (8/41)432+PG_IF_8_1    DS    0H  &TYPE
0002F4                                    (1/150)433 *                PERFORM VARYING S2 FROM 1 BY 1 UNTIL S2 > 3
0002F4                                    (1/151)434 *ZC     44         PERFORM VARYING,S2,FROM,1,BY,1,UNTIL,S2,>,3
0002F4 E54CD0640001            00090C    (41/342)435+          MVHI  S2,1
0002FA A7F40005                000304     (50/15)436+         J     PG_PM_16_T
0002FE                                     (8/41)437+PG_PM_16_A   DS    0H  &TYPE
0002FE EB01D064006A            00090C    (53/190)438+         ASI   S2,1
000304                                     (8/41)439+PG_PM_16_T   DS    0H  &TYPE
000304 5800D064                00090C    (44/289)440+         L     0,S2
000308 C20D00000003            000003    (44/290)441+         CFI   0,3
00030E A7D40004                000316     (45/15)442+         BRC   15-ZC_H,PG_IF_9_1
000312 A7F40057                0003C0     (50/15)443+         J     PG_PM_16_E
000316                                     (8/41)444+PG_IF_9_1    DS    0H  &TYPE
000316                                    (1/153)445 *                   DISPLAY 'T2-ID(' S1 ',' S2 ')=' T2-ID(S1 S2).
000316                                    (1/154)446 *ZC     45         DISPLAY 'T2-ID(',S1,',',S2,')=',T2_ID,'(',S1,S2,')'
000316 413090F8                0000F8     (35/28)447+         LA    ZC_R3,ZCVT_WORKAREA  ZC_R3=CVT LIST WORK AREA
00031A C000000002B7            000888     (35/68)448+         LARL  ZC_R0,=CL6'T2-ID(' PAD TO EVEN LEN LIT
000320 41100006                           (35/69)449+         LA    ZC_R1,6
000324 412000E7                           (35/70)450+         LA    ZC_R2,C'X'
000328 90023000                           (35/71)451+         STM   ZC_R0,ZC_R2,0(ZC_R3)  SET DISPLAY LIST ENTRY
00032C 4100D060                000908     (35/82)452+         LA    ZC_R0,S1
000330 41100004                           (35/83)453+         LA    ZC_R1,4  RPI 1182 WAS &SYM_LEN(&FIELD_IX)
000334 412000C6                           (35/88)454+         LA    ZC_R2,C'F'
000338 9002300C                           (35/90)455+         STM   ZC_R0,ZC_R2,12(ZC_R3)  SET DISPLAY LIST ENTRY
00033C C000000002A9            00088E     (35/68)456+         LARL  ZC_R0,=CL2',' PAD TO EVEN LEN LIT
000342 41100001                           (35/69)457+         LA    ZC_R1,1
000346 412000E7                           (35/70)458+         LA    ZC_R2,C'X'
00034A 90023018                           (35/71)459+         STM   ZC_R0,ZC_R2,24(ZC_R3)  SET DISPLAY LIST ENTRY
00034E 4100D064                00090C     (35/82)460+         LA    ZC_R0,S2
000352 41100004                           (35/83)461+         LA    ZC_R1,4  RPI 1182 WAS &SYM_LEN(&FIELD_IX)
000356 412000C6                           (35/88)462+         LA    ZC_R2,C'F'
00035A 90023024                           (35/90)463+         STM   ZC_R0,ZC_R2,36(ZC_R3)  SET DISPLAY LIST ENTRY
00035E C00000000299            000890     (35/68)464+         LARL  ZC_R0,=CL2')=' PAD TO EVEN LEN LIT
000364 41100002                           (35/69)465+         LA    ZC_R1,2
000368 412000E7                           (35/70)466+         LA    ZC_R2,C'X'
00036C 90023030                           (35/71)467+         STM   ZC_R0,ZC_R2,48(ZC_R3)  SET DISPLAY LIST ENTRY
000370 4120D059                000901     (43/56)468+         LA    ZC_R2,T2_ID
000374 C0F900000060            000060    (43/115)469+         IILF  ZC_R15,S1-ZC_WS
00037A 1AFD                              (43/116)470+         AR    ZC_R15,ZC_R13
00037C 58FF0000                          (43/124)471+         L     ZC_R15,0(ZC_R15)
000380 06F0                              (43/145)472+         BCTR  ZC_R15,0
000382 C2F100000004            000004    (43/148)473+         MSFI  ZC_R15,4 L'&SYM_NAME(&SIX_OCCUR(&CUR_SIX)) RPI 1161 CORRECT CONTINUE RPI 1182
000388 1A2F                               (43/77)475+         AR    ZC_R2,ZC_R15                         RPI 1182
00038A C0F900000064            000064    (43/115)476+         IILF  ZC_R15,S2-ZC_WS
000390 1AFD                              (43/116)477+         AR    ZC_R15,ZC_R13
000392 58FF0000                          (43/124)478+         L     ZC_R15,0(ZC_R15)
000396 06F0                              (43/145)479+         BCTR  ZC_R15,0
000398 C2F100000001            000001    (43/148)480+         MSFI  ZC_R15,1 L'&SYM_NAME(&SIX_OCCUR(&CUR_SIX)) RPI 1161 CORRECT CONTINUE RPI 1182
00039E 1A2F                               (43/77)482+         AR    ZC_R2,ZC_R15                         RPI 1182
0003A0 41020000                           (35/82)483+         LA    ZC_R0,0(ZC_R2)
0003A4 41100001                           (35/83)484+         LA    ZC_R1,1  RPI 1182 WAS &SYM_LEN(&FIELD_IX)
0003A8 412000E7                           (35/88)485+         LA    ZC_R2,C'X'
0003AC 9002303C                           (35/90)486+         STM   ZC_R0,ZC_R2,60(ZC_R3)  SET DISPLAY LIST ENTRY
0003B0 96803044                           (35/94)487+         OI    72-4(ZC_R3),X'80' SET VL BIT IN LAST WORD OF PARM LIST
0003B4 1813                               (35/95)488+         LR    ZC_R1,ZC_R3
0003B6 58F09070                000070     (35/96)489+         L     ZC_R15,ZCVT_DISPLAY
0003BA 0DEF                               (35/97)490+         BASR  ZC_R14,ZC_R15
0003BC A7F4FFA1                0002FE     (50/15)491+         J     PG_PM_16_A
0003C0                                     (8/41)492+PG_PM_16_E   DS    0H  &TYPE
0003C0 A7F4FF8E                0002DC     (50/15)493+         J     PG_PM_15_A
0003C4                                     (8/41)494+PG_PM_15_E   DS    0H  &TYPE
0003C4                                    (1/157)495 *            MOVE 1 TO NFS2(I) NFS2(I+1)
0003C4                                    (1/158)496 *ZC     46         MOVE  1,TO,NFS2,'(',I,')',NFS2,'(',I,+,1,')'
0003C4 C0F900000084            000084    (43/115)497+         IILF  ZC_R15,I-ZC_WS
0003CA 1AFD                              (43/116)498+         AR    ZC_R15,ZC_R13
0003CC 48FF0000                          (43/128)499+         LH    ZC_R15,0(ZC_R15)
0003D0 06F0                              (43/145)500+         BCTR  ZC_R15,0
0003D2 C2F100000004            000004    (43/148)501+         MSFI  ZC_R15,4 L'&SYM_NAME(&SIX_OCCUR(&CUR_SIX)) RPI 1161 CORRECT CONTINUE RPI 1182
0003D8 413FD068                000910     (43/42)503+         LA    ZC_R3,NFS2(ZC_R15)
0003DC E54C30000001                      (41/342)504+          MVHI  0(ZC_R3),1
0003E2 C0F900000084            000084    (43/115)505+         IILF  ZC_R15,I-ZC_WS
0003E8 1AFD                              (43/116)506+         AR    ZC_R15,ZC_R13
0003EA 48FF0000                          (43/128)507+         LH    ZC_R15,0(ZC_R15)
0003EE A7FA0000                          (43/143)508+         AHI   ZC_R15,+1-1
0003F2 C2F100000004            000004    (43/148)509+         MSFI  ZC_R15,4 L'&SYM_NAME(&SIX_OCCUR(&CUR_SIX)) RPI 1161 CORRECT CONTINUE RPI 1182
0003F8 413FD068                000910     (43/42)511+         LA    ZC_R3,NFS2(ZC_R15)
0003FC E54C30000001                      (41/342)512+          MVHI  0(ZC_R3),1
000402                                    (1/160)513 *            ADD       NFS2(I) TO NFS2(I+1)
000402                                    (1/161)514 *ZC     47         ADD   NFS2,'(',I,')',TO,NFS2,'(',I,+,1,')'
000402 C0F900000084            000084    (43/115)515+         IILF  ZC_R15,I-ZC_WS
000408 1AFD                              (43/116)516+         AR    ZC_R15,ZC_R13
00040A 48FF0000                          (43/128)517+         LH    ZC_R15,0(ZC_R15)
00040E 06F0                              (43/145)518+         BCTR  ZC_R15,0
000410 C2F100000004            000004    (43/148)519+         MSFI  ZC_R15,4 L'&SYM_NAME(&SIX_OCCUR(&CUR_SIX)) RPI 1161 CORRECT CONTINUE RPI 1182
000416 411FD068                000910     (43/42)521+         LA    ZC_R1,NFS2(ZC_R15)
00041A C0F900000084            000084    (43/115)522+         IILF  ZC_R15,I-ZC_WS
000420 1AFD                              (43/116)523+         AR    ZC_R15,ZC_R13
000422 48FF0000                          (43/128)524+         LH    ZC_R15,0(ZC_R15)
000426 A7FA0000                          (43/143)525+         AHI   ZC_R15,+1-1
00042A C2F100000004            000004    (43/148)526+         MSFI  ZC_R15,4 L'&SYM_NAME(&SIX_OCCUR(&CUR_SIX)) RPI 1161 CORRECT CONTINUE RPI 1182
000430 412FD068                000910     (43/42)528+         LA    ZC_R2,NFS2(ZC_R15)
000434 58010000                          (53/872)529+         L     ZC_R0,0(ZC_R1)
000438 5A020000                          (53/910)530+         A     ZC_R0,0(ZC_R2)
00043C 50020000                          (53/911)531+         ST    ZC_R0,0(ZC_R2)
000440                                    (1/163)532 *      8     IF NFS2(I+1) = 2 PERFORM GOOD ELSE PERFORM BAD.
000440                                    (1/164)533 *ZC     48      8  IF    NFS2,'(',I,+,1,')',=,2
000440 C0F900000084            000084    (43/115)534+         IILF  ZC_R15,I-ZC_WS
000446 1AFD                              (43/116)535+         AR    ZC_R15,ZC_R13
000448 48FF0000                          (43/128)536+         LH    ZC_R15,0(ZC_R15)
00044C A7FA0000                          (43/143)537+         AHI   ZC_R15,+1-1
000450 C2F100000004            000004    (43/148)538+         MSFI  ZC_R15,4 L'&SYM_NAME(&SIX_OCCUR(&CUR_SIX)) RPI 1161 CORRECT CONTINUE RPI 1182
000456 412FD068                000910     (43/42)540+         LA    ZC_R2,NFS2(ZC_R15)
00045A 58020000                          (44/289)541+         L     0,0(ZC_R2)
00045E C20D00000002            000002    (44/290)542+         CFI   0,2
000464 A774000D                00047E     (45/15)543+         BRC   15-ZC_EQ,PG_IF_10_1
000468                                    (1/166)544 *ZC     48      8  PERFORM GOOD
000468 C0E0000001ED            000842     (48/44)545+         LARL  ZC_R14,PG_GOOD
00046E C000000001F3            000854     (48/45)546+         LARL  ZC_R0,PG_GOOD_END+6
000474 58F0903C                00003C     (48/46)547+         L     ZC_R15,ZCVT_PERFORM
000478 0D1F                               (48/47)548+         BASR  ZC_R1,ZC_R15
00047A                                    (1/168)549 *ZC     48      8  ELSE
00047A A7F4000B                000490     (50/15)550+         J     PG_IF_10_E
00047E                                     (8/41)551+PG_IF_10_1   DS    0H  &TYPE
00047E                                    (1/170)552 *ZC     48      8  PERFORM BAD
00047E C0E0000001EB            000854     (48/44)553+         LARL  ZC_R14,PG_BAD
000484 C000000001F3            00086A     (48/45)554+         LARL  ZC_R0,PG_BAD_END+6
00048A 58F0903C                00003C     (48/46)555+         L     ZC_R15,ZCVT_PERFORM
00048E 0D1F                               (48/47)556+         BASR  ZC_R1,ZC_R15
000490                                     (8/41)557+PG_IF_10_E   DS    0H  &TYPE
000490                                    (1/173)558 *            ADD  1 TO NFS2(I) NFS2(I+1)
000490                                    (1/174)559 *ZC     49         ADD   1,TO,NFS2,'(',I,')',NFS2,'(',I,+,1,')'
000490 C0F900000084            000084    (43/115)560+         IILF  ZC_R15,I-ZC_WS
000496 1AFD                              (43/116)561+         AR    ZC_R15,ZC_R13
000498 48FF0000                          (43/128)562+         LH    ZC_R15,0(ZC_R15)
00049C 06F0                              (43/145)563+         BCTR  ZC_R15,0
00049E C2F100000004            000004    (43/148)564+         MSFI  ZC_R15,4 L'&SYM_NAME(&SIX_OCCUR(&CUR_SIX)) RPI 1161 CORRECT CONTINUE RPI 1182
0004A4 412FD068                000910     (43/42)566+         LA    ZC_R2,NFS2(ZC_R15)
0004A8 EB012000006A                      (53/190)567+         ASI   0(ZC_R2),1
0004AE C0F900000084            000084    (43/115)568+         IILF  ZC_R15,I-ZC_WS
0004B4 1AFD                              (43/116)569+         AR    ZC_R15,ZC_R13
0004B6 48FF0000                          (43/128)570+         LH    ZC_R15,0(ZC_R15)
0004BA A7FA0000                          (43/143)571+         AHI   ZC_R15,+1-1
0004BE C2F100000004            000004    (43/148)572+         MSFI  ZC_R15,4 L'&SYM_NAME(&SIX_OCCUR(&CUR_SIX)) RPI 1161 CORRECT CONTINUE RPI 1182
0004C4 412FD068                000910     (43/42)574+         LA    ZC_R2,NFS2(ZC_R15)
0004C8 EB012000006A                      (53/190)575+         ASI   0(ZC_R2),1
0004CE                                    (1/176)576 *      9     IF NFS2(I)   = 2 PERFORM GOOD ELSE PERFORM BAD.
0004CE                                    (1/177)577 *ZC     50      9  IF    NFS2,'(',I,')',=,2
0004CE C0F900000084            000084    (43/115)578+         IILF  ZC_R15,I-ZC_WS
0004D4 1AFD                              (43/116)579+         AR    ZC_R15,ZC_R13
0004D6 48FF0000                          (43/128)580+         LH    ZC_R15,0(ZC_R15)
0004DA 06F0                              (43/145)581+         BCTR  ZC_R15,0
0004DC C2F100000004            000004    (43/148)582+         MSFI  ZC_R15,4 L'&SYM_NAME(&SIX_OCCUR(&CUR_SIX)) RPI 1161 CORRECT CONTINUE RPI 1182
0004E2 412FD068                000910     (43/42)584+         LA    ZC_R2,NFS2(ZC_R15)
0004E6 58020000                          (44/289)585+         L     0,0(ZC_R2)
0004EA C20D00000002            000002    (44/290)586+         CFI   0,2
0004F0 A774000D                00050A     (45/15)587+         BRC   15-ZC_EQ,PG_IF_11_1
0004F4                                    (1/179)588 *ZC     50      9  PERFORM GOOD
0004F4 C0E0000001A7            000842     (48/44)589+         LARL  ZC_R14,PG_GOOD
0004FA C000000001AD            000854     (48/45)590+         LARL  ZC_R0,PG_GOOD_END+6
000500 58F0903C                00003C     (48/46)591+         L     ZC_R15,ZCVT_PERFORM
000504 0D1F                               (48/47)592+         BASR  ZC_R1,ZC_R15
000506                                    (1/181)593 *ZC     50      9  ELSE
000506 A7F4000B                00051C     (50/15)594+         J     PG_IF_11_E
00050A                                     (8/41)595+PG_IF_11_1   DS    0H  &TYPE
00050A                                    (1/183)596 *ZC     50      9  PERFORM BAD
00050A C0E0000001A5            000854     (48/44)597+         LARL  ZC_R14,PG_BAD
000510 C000000001AD            00086A     (48/45)598+         LARL  ZC_R0,PG_BAD_END+6
000516 58F0903C                00003C     (48/46)599+         L     ZC_R15,ZCVT_PERFORM
00051A 0D1F                               (48/47)600+         BASR  ZC_R1,ZC_R15
00051C                                     (8/41)601+PG_IF_11_E   DS    0H  &TYPE
00051C                                    (1/186)602 *     10     IF NFS2(I+1) = 3 PERFORM GOOD ELSE PERFORM BAD.
00051C                                    (1/187)603 *ZC     51     10  IF    NFS2,'(',I,+,1,')',=,3
00051C C0F900000084            000084    (43/115)604+         IILF  ZC_R15,I-ZC_WS
000522 1AFD                              (43/116)605+         AR    ZC_R15,ZC_R13
000524 48FF0000                          (43/128)606+         LH    ZC_R15,0(ZC_R15)
000528 A7FA0000                          (43/143)607+         AHI   ZC_R15,+1-1
00052C C2F100000004            000004    (43/148)608+         MSFI  ZC_R15,4 L'&SYM_NAME(&SIX_OCCUR(&CUR_SIX)) RPI 1161 CORRECT CONTINUE RPI 1182
000532 412FD068                000910     (43/42)610+         LA    ZC_R2,NFS2(ZC_R15)
000536 58020000                          (44/289)611+         L     0,0(ZC_R2)
00053A C20D00000003            000003    (44/290)612+         CFI   0,3
000540 A774000D                00055A     (45/15)613+         BRC   15-ZC_EQ,PG_IF_12_1
000544                                    (1/189)614 *ZC     51     10  PERFORM GOOD
000544 C0E00000017F            000842     (48/44)615+         LARL  ZC_R14,PG_GOOD
00054A C00000000185            000854     (48/45)616+         LARL  ZC_R0,PG_GOOD_END+6
000550 58F0903C                00003C     (48/46)617+         L     ZC_R15,ZCVT_PERFORM
000554 0D1F                               (48/47)618+         BASR  ZC_R1,ZC_R15
000556                                    (1/191)619 *ZC     51     10  ELSE
000556 A7F4000B                00056C     (50/15)620+         J     PG_IF_12_E
00055A                                     (8/41)621+PG_IF_12_1   DS    0H  &TYPE
00055A                                    (1/193)622 *      * TEST SET 88 LEVEL
00055A                                    (1/194)623 *ZC     51     10  PERFORM BAD
00055A C0E00000017D            000854     (48/44)624+         LARL  ZC_R14,PG_BAD
000560 C00000000185            00086A     (48/45)625+         LARL  ZC_R0,PG_BAD_END+6
000566 58F0903C                00003C     (48/46)626+         L     ZC_R15,ZCVT_PERFORM
00056A 0D1F                               (48/47)627+         BASR  ZC_R1,ZC_R15
00056C                                     (8/41)628+PG_IF_12_E   DS    0H  &TYPE
00056C                                    (1/197)629 *     11     SET H1-ZERO(2) TO TRUE
00056C                                    (1/198)630 *ZC     53     11  SET   H1_ZERO,'(',2,')',TO,TRUE
00056C C02900000002            000002     (43/32)631+         IILF  ZC_R2,(2-1)*2 (LIT-1)*LEN
000572 4122D08D                000935     (43/33)632+         LA    ZC_R2,H1(ZC_R2)
000576 E5442000000A                      (41/361)633+          MVHHI 0(ZC_R2),10
00057C                                    (1/200)634 *            IF H1-ZERO(2)
00057C                                    (1/201)635 *ZC     54         IF    H1_ZERO,'(',2,')'
00057C C02900000002            000002     (43/32)636+         IILF  ZC_R2,(2-1)*2 (LIT-1)*LEN
000582 4122D08D                000935     (43/33)637+         LA    ZC_R2,H1(ZC_R2)
000586 48020000                          (44/312)638+         LH    0,0(ZC_R2)
00058A A70E000A                          (44/313)639+         CHI   0,10
00058E A774000D                0005A8     (45/15)640+         BRC   15-ZC_EQ,PG_IF_13_1
000592                                    (1/203)641 *               PERFORM GOOD ELSE PERFORM BAD.
000592                                    (1/204)642 *ZC     55         PERFORM GOOD
000592 C0E000000158            000842     (48/44)643+         LARL  ZC_R14,PG_GOOD
000598 C0000000015E            000854     (48/45)644+         LARL  ZC_R0,PG_GOOD_END+6
00059E 58F0903C                00003C     (48/46)645+         L     ZC_R15,ZCVT_PERFORM
0005A2 0D1F                               (48/47)646+         BASR  ZC_R1,ZC_R15
0005A4                                    (1/206)647 *ZC     55         ELSE
0005A4 A7F4000B                0005BA     (50/15)648+         J     PG_IF_13_E
0005A8                                     (8/41)649+PG_IF_13_1   DS    0H  &TYPE
0005A8                                    (1/208)650 *      * TEST SET INDEXE-MAME, INDEX DATA FEILD, INT FIELD
0005A8                                    (1/209)651 *ZC     55         PERFORM BAD
0005A8 C0E000000156            000854     (48/44)652+         LARL  ZC_R14,PG_BAD
0005AE C0000000015E            00086A     (48/45)653+         LARL  ZC_R0,PG_BAD_END+6
0005B4 58F0903C                00003C     (48/46)654+         L     ZC_R15,ZCVT_PERFORM
0005B8 0D1F                               (48/47)655+         BASR  ZC_R1,ZC_R15
0005BA                                     (8/41)656+PG_IF_13_E   DS    0H  &TYPE
0005BA                                    (1/212)657 *            SET H1X TO 2
0005BA                                    (1/213)658 *ZC     57         SET   H1X,TO,2
0005BA C01000000163            000880    (41/308)659+          LARL  ZC_R1,=A((2-1)*2)
0005C0 D203D09F1000     000947           (41/309)660+          MVC   H1X,0(ZC_R1)
0005C6                                    (1/215)661 *            MOVE 10 TO H1(2)
0005C6                                    (1/216)662 *ZC     58         MOVE  10,TO,H1,'(',2,')'
0005C6 C03900000002            000002     (43/32)663+         IILF  ZC_R3,(2-1)*2 (LIT-1)*LEN
0005CC 4133D08D                000935     (43/33)664+         LA    ZC_R3,H1(ZC_R3)
0005D0 E5443000000A                      (41/361)665+          MVHHI 0(ZC_R3),10
0005D6                                    (1/218)666 *     12     IF H1(H1X) = 10
0005D6                                    (1/219)667 *ZC     59     12  IF    H1,'(',H1X,')',=,10
0005D6 C0F90000009F            00009F    (43/115)668+         IILF  ZC_R15,H1X-ZC_WS
0005DC 1AFD                              (43/116)669+         AR    ZC_R15,ZC_R13
0005DE 58FF0000                          (43/120)670+         L     ZC_R15,0(ZC_R15) INDEX OFFSET
0005E2 412FD08D                000935     (43/42)671+         LA    ZC_R2,H1(ZC_R15)
0005E6 48020000                          (44/312)672+         LH    0,0(ZC_R2)
0005EA A70E000A                          (44/313)673+         CHI   0,10
0005EE A774000D                000608     (45/15)674+         BRC   15-ZC_EQ,PG_IF_14_1
0005F2                                    (1/221)675 *               PERFORM GOOD ELSE PERFORM BAD.
0005F2                                    (1/222)676 *ZC     60         PERFORM GOOD
0005F2 C0E000000128            000842     (48/44)677+         LARL  ZC_R14,PG_GOOD
0005F8 C0000000012E            000854     (48/45)678+         LARL  ZC_R0,PG_GOOD_END+6
0005FE 58F0903C                00003C     (48/46)679+         L     ZC_R15,ZCVT_PERFORM
000602 0D1F                               (48/47)680+         BASR  ZC_R1,ZC_R15
000604                                    (1/224)681 *ZC     60         ELSE
000604 A7F4000B                00061A     (50/15)682+         J     PG_IF_14_E
000608                                     (8/41)683+PG_IF_14_1   DS    0H  &TYPE
000608                                    (1/226)684 *ZC     60         PERFORM BAD
000608 C0E000000126            000854     (48/44)685+         LARL  ZC_R14,PG_BAD
00060E C0000000012E            00086A     (48/45)686+         LARL  ZC_R0,PG_BAD_END+6
000614 58F0903C                00003C     (48/46)687+         L     ZC_R15,ZCVT_PERFORM
000618 0D1F                               (48/47)688+         BASR  ZC_R1,ZC_R15
00061A                                     (8/41)689+PG_IF_14_E   DS    0H  &TYPE
00061A                                    (1/229)690 *            SET H1X UP BY 1
00061A                                    (1/230)691 *ZC     61         SET   H1X,UP,BY,1
00061A 5800D09F                000947    (53/192)692+         L     ZC_R0,H1X
00061E C20900000002            000002    (53/193)693+         AFI   ZC_R0,1*2
000624 5000D09F                000947    (53/194)694+         ST    ZC_R0,H1X
000628                                    (1/232)695 *            SET SUB TO H1X
000628                                    (1/233)696 *ZC     62         SET   SUB,TO,H1X
000628 B9090000                          (58/115)697+         SGR   ZC_R0,ZC_R0
00062C 5810D09F                000947     (59/20)698+         L     ZC_R1,H1X
000630 C0E00000012A            000884    (58/117)699+         LARL  ZC_R14,=F'2'
000636 5D0E0000                          (58/118)700+         D     ZC_R0,0(ZC_R14)
00063A A71A0001                          (58/119)701+         AHI   ZC_R1,1
00063E 5010D09B                000943    (58/120)702+         ST    ZC_R1,SUB
000642                                    (1/235)703 *     13     IF SUB = 3
000642                                    (1/236)704 *ZC     63     13  IF    SUB,=,3
000642 5800D09B                000943    (44/289)705+         L     0,SUB
000646 C20D00000003            000003    (44/290)706+         CFI   0,3
00064C A774000D                000666     (45/15)707+         BRC   15-ZC_EQ,PG_IF_15_1
000650                                    (1/238)708 *               PERFORM GOOD ELSE PERFORM BAD.
000650                                    (1/239)709 *ZC     64         PERFORM GOOD
000650 C0E0000000F9            000842     (48/44)710+         LARL  ZC_R14,PG_GOOD
000656 C000000000FF            000854     (48/45)711+         LARL  ZC_R0,PG_GOOD_END+6
00065C 58F0903C                00003C     (48/46)712+         L     ZC_R15,ZCVT_PERFORM
000660 0D1F                               (48/47)713+         BASR  ZC_R1,ZC_R15
000662                                    (1/241)714 *ZC     64         ELSE
000662 A7F4000B                000678     (50/15)715+         J     PG_IF_15_E
000666                                     (8/41)716+PG_IF_15_1   DS    0H  &TYPE
000666                                    (1/243)717 *ZC     64         PERFORM BAD
000666 C0E0000000F7            000854     (48/44)718+         LARL  ZC_R14,PG_BAD
00066C C000000000FF            00086A     (48/45)719+         LARL  ZC_R0,PG_BAD_END+6
000672 58F0903C                00003C     (48/46)720+         L     ZC_R15,ZCVT_PERFORM
000676 0D1F                               (48/47)721+         BASR  ZC_R1,ZC_R15
000678                                     (8/41)722+PG_IF_15_E   DS    0H  &TYPE
000678                                    (1/246)723 *            SET H1X-SAVE TO H1X
000678                                    (1/247)724 *ZC     65         SET   H1X_SAVE,TO,H1X
000678 D203D093D09F     00093B 000947    (41/107)725+         MVC   H1X_SAVE,H1X  ALIGN LEFT X OTHER
00067E                                    (1/249)726 *     14     IF H1X-SAVE = H1X
00067E                                    (1/250)727 *ZC     66     14  IF    H1X_SAVE,=,H1X
00067E 5800D093                00093B   (44/1447)728+         L     ZC_R0,H1X_SAVE
000682 5810D09F                000947   (44/1448)729+         L     ZC_R1,H1X
000686 1901                             (44/1450)730+         CR    ZC_R0,ZC_R1
000688 A774000D                0006A2     (45/15)731+         BRC   15-ZC_EQ,PG_IF_16_1
00068C                                    (1/252)732 *               PERFORM GOOD ELSE PERFORM BAD.
00068C                                    (1/253)733 *ZC     67         PERFORM GOOD
00068C C0E0000000DB            000842     (48/44)734+         LARL  ZC_R14,PG_GOOD
000692 C000000000E1            000854     (48/45)735+         LARL  ZC_R0,PG_GOOD_END+6
000698 58F0903C                00003C     (48/46)736+         L     ZC_R15,ZCVT_PERFORM
00069C 0D1F                               (48/47)737+         BASR  ZC_R1,ZC_R15
00069E                                    (1/255)738 *ZC     67         ELSE
00069E A7F4000B                0006B4     (50/15)739+         J     PG_IF_16_E
0006A2                                     (8/41)740+PG_IF_16_1   DS    0H  &TYPE
0006A2                                    (1/257)741 *ZC     67         PERFORM BAD
0006A2 C0E0000000D9            000854     (48/44)742+         LARL  ZC_R14,PG_BAD
0006A8 C000000000E1            00086A     (48/45)743+         LARL  ZC_R0,PG_BAD_END+6
0006AE 58F0903C                00003C     (48/46)744+         L     ZC_R15,ZCVT_PERFORM
0006B2 0D1F                               (48/47)745+         BASR  ZC_R1,ZC_R15
0006B4                                     (8/41)746+PG_IF_16_E   DS    0H  &TYPE
0006B4                                    (1/260)747 *            SET H1X-SAVE2 TO H1X-SAVE
0006B4                                    (1/261)748 *ZC     68         SET   H1X_SAVE2,TO,H1X_SAVE
0006B4 D203D097D093     00093F 00093B    (41/107)749+         MVC   H1X_SAVE2,H1X_SAVE  ALIGN LEFT X OTHER
0006BA                                    (1/263)750 *     15     IF H1X-SAVE = H1X
0006BA                                    (1/264)751 *ZC     69     15  IF    H1X_SAVE,=,H1X
0006BA 5800D093                00093B   (44/1447)752+         L     ZC_R0,H1X_SAVE
0006BE 5810D09F                000947   (44/1448)753+         L     ZC_R1,H1X
0006C2 1901                             (44/1450)754+         CR    ZC_R0,ZC_R1
0006C4 A774000D                0006DE     (45/15)755+         BRC   15-ZC_EQ,PG_IF_17_1
0006C8                                    (1/266)756 *               PERFORM GOOD ELSE PERFORM BAD.
0006C8                                    (1/267)757 *ZC     70         PERFORM GOOD
0006C8 C0E0000000BD            000842     (48/44)758+         LARL  ZC_R14,PG_GOOD
0006CE C000000000C3            000854     (48/45)759+         LARL  ZC_R0,PG_GOOD_END+6
0006D4 58F0903C                00003C     (48/46)760+         L     ZC_R15,ZCVT_PERFORM
0006D8 0D1F                               (48/47)761+         BASR  ZC_R1,ZC_R15
0006DA                                    (1/269)762 *ZC     70         ELSE
0006DA A7F4000B                0006F0     (50/15)763+         J     PG_IF_17_E
0006DE                                     (8/41)764+PG_IF_17_1   DS    0H  &TYPE
0006DE                                    (1/271)765 *ZC     70         PERFORM BAD
0006DE C0E0000000BB            000854     (48/44)766+         LARL  ZC_R14,PG_BAD
0006E4 C000000000C3            00086A     (48/45)767+         LARL  ZC_R0,PG_BAD_END+6
0006EA 58F0903C                00003C     (48/46)768+         L     ZC_R15,ZCVT_PERFORM
0006EE 0D1F                               (48/47)769+         BASR  ZC_R1,ZC_R15
0006F0                                     (8/41)770+PG_IF_17_E   DS    0H  &TYPE
0006F0                                    (1/274)771 *            MOVE 11 TO H1(3)
0006F0                                    (1/275)772 *ZC     71         MOVE  11,TO,H1,'(',3,')'
0006F0 C03900000004            000004     (43/32)773+         IILF  ZC_R3,(3-1)*2 (LIT-1)*LEN
0006F6 4133D08D                000935     (43/33)774+         LA    ZC_R3,H1(ZC_R3)
0006FA E5443000000B                      (41/361)775+          MVHHI 0(ZC_R3),11
000700                                    (1/277)776 *     16     IF H1(H1X) = 11
000700                                    (1/278)777 *ZC     72     16  IF    H1,'(',H1X,')',=,11
000700 C0F90000009F            00009F    (43/115)778+         IILF  ZC_R15,H1X-ZC_WS
000706 1AFD                              (43/116)779+         AR    ZC_R15,ZC_R13
000708 58FF0000                          (43/120)780+         L     ZC_R15,0(ZC_R15) INDEX OFFSET
00070C 412FD08D                000935     (43/42)781+         LA    ZC_R2,H1(ZC_R15)
000710 48020000                          (44/312)782+         LH    0,0(ZC_R2)
000714 A70E000B                          (44/313)783+         CHI   0,11
000718 A774000D                000732     (45/15)784+         BRC   15-ZC_EQ,PG_IF_18_1
00071C                                    (1/280)785 *               PERFORM GOOD ELSE PERFORM BAD.
00071C                                    (1/281)786 *ZC     73         PERFORM GOOD
00071C C0E000000093            000842     (48/44)787+         LARL  ZC_R14,PG_GOOD
000722 C00000000099            000854     (48/45)788+         LARL  ZC_R0,PG_GOOD_END+6
000728 58F0903C                00003C     (48/46)789+         L     ZC_R15,ZCVT_PERFORM
00072C 0D1F                               (48/47)790+         BASR  ZC_R1,ZC_R15
00072E                                    (1/283)791 *ZC     73         ELSE
00072E A7F4000B                000744     (50/15)792+         J     PG_IF_18_E
000732                                     (8/41)793+PG_IF_18_1   DS    0H  &TYPE
000732                                    (1/285)794 *ZC     73         PERFORM BAD
000732 C0E000000091            000854     (48/44)795+         LARL  ZC_R14,PG_BAD
000738 C00000000099            00086A     (48/45)796+         LARL  ZC_R0,PG_BAD_END+6
00073E 58F0903C                00003C     (48/46)797+         L     ZC_R15,ZCVT_PERFORM
000742 0D1F                               (48/47)798+         BASR  ZC_R1,ZC_R15
000744                                     (8/41)799+PG_IF_18_E   DS    0H  &TYPE
000744                                    (1/288)800 *            SET H1X DOWN BY 1
000744                                    (1/289)801 *ZC     74         SET   H1X,DOWN,BY,1
000744 5800D09F                000947    (53/192)802+         L     ZC_R0,H1X
000748 C209FFFFFFFE            FFFFFE    (53/193)803+         AFI   ZC_R0,-1*2
00074E 5000D09F                000947    (53/194)804+         ST    ZC_R0,H1X
000752                                    (1/291)805 *            MOVE 12 TO H1(H1X)
000752                                    (1/292)806 *ZC     75         MOVE  12,TO,H1,'(',H1X,')'
000752 C0F90000009F            00009F    (43/115)807+         IILF  ZC_R15,H1X-ZC_WS
000758 1AFD                              (43/116)808+         AR    ZC_R15,ZC_R13
00075A 58FF0000                          (43/120)809+         L     ZC_R15,0(ZC_R15) INDEX OFFSET
00075E 413FD08D                000935     (43/42)810+         LA    ZC_R3,H1(ZC_R15)
000762 E5443000000C                      (41/361)811+          MVHHI 0(ZC_R3),12
000768                                    (1/294)812 *     17     IF H1(2) = 12
000768                                    (1/295)813 *ZC     76     17  IF    H1,'(',2,')',=,12
000768 C02900000002            000002     (43/32)814+         IILF  ZC_R2,(2-1)*2 (LIT-1)*LEN
00076E 4122D08D                000935     (43/33)815+         LA    ZC_R2,H1(ZC_R2)
000772 48020000                          (44/312)816+         LH    0,0(ZC_R2)
000776 A70E000C                          (44/313)817+         CHI   0,12
00077A A774000D                000794     (45/15)818+         BRC   15-ZC_EQ,PG_IF_19_1
00077E                                    (1/297)819 *               PERFORM GOOD ELSE PERFORM BAD.
00077E                                    (1/298)820 *ZC     77         PERFORM GOOD
00077E C0E000000062            000842     (48/44)821+         LARL  ZC_R14,PG_GOOD
000784 C00000000068            000854     (48/45)822+         LARL  ZC_R0,PG_GOOD_END+6
00078A 58F0903C                00003C     (48/46)823+         L     ZC_R15,ZCVT_PERFORM
00078E 0D1F                               (48/47)824+         BASR  ZC_R1,ZC_R15
000790                                    (1/300)825 *ZC     77         ELSE
000790 A7F4000B                0007A6     (50/15)826+         J     PG_IF_19_E
000794                                     (8/41)827+PG_IF_19_1   DS    0H  &TYPE
000794                                    (1/302)828 *ZC     77         PERFORM BAD
000794 C0E000000060            000854     (48/44)829+         LARL  ZC_R14,PG_BAD
00079A C00000000068            00086A     (48/45)830+         LARL  ZC_R0,PG_BAD_END+6
0007A0 58F0903C                00003C     (48/46)831+         L     ZC_R15,ZCVT_PERFORM
0007A4 0D1F                               (48/47)832+         BASR  ZC_R1,ZC_R15
0007A6                                     (8/41)833+PG_IF_19_E   DS    0H  &TYPE
0007A6                                    (1/305)834 *            SET H1X TO H1X-SAVE
0007A6                                    (1/306)835 *ZC     78         SET   H1X,TO,H1X_SAVE
0007A6 D203D09FD093     000947 00093B    (41/107)836+         MVC   H1X,H1X_SAVE  ALIGN LEFT X OTHER
0007AC                                    (1/308)837 *            MOVE 11 TO H1(3)
0007AC                                    (1/309)838 *ZC     79         MOVE  11,TO,H1,'(',3,')'
0007AC C03900000004            000004     (43/32)839+         IILF  ZC_R3,(3-1)*2 (LIT-1)*LEN
0007B2 4133D08D                000935     (43/33)840+         LA    ZC_R3,H1(ZC_R3)
0007B6 E5443000000B                      (41/361)841+          MVHHI 0(ZC_R3),11
0007BC                                    (1/311)842 *     18     IF H1(H1X) = 11
0007BC                                    (1/312)843 *ZC     80     18  IF    H1,'(',H1X,')',=,11
0007BC C0F90000009F            00009F    (43/115)844+         IILF  ZC_R15,H1X-ZC_WS
0007C2 1AFD                              (43/116)845+         AR    ZC_R15,ZC_R13
0007C4 58FF0000                          (43/120)846+         L     ZC_R15,0(ZC_R15) INDEX OFFSET
0007C8 412FD08D                000935     (43/42)847+         LA    ZC_R2,H1(ZC_R15)
0007CC 48020000                          (44/312)848+         LH    0,0(ZC_R2)
0007D0 A70E000B                          (44/313)849+         CHI   0,11
0007D4 A774000D                0007EE     (45/15)850+         BRC   15-ZC_EQ,PG_IF_20_1
0007D8                                    (1/314)851 *               PERFORM GOOD ELSE PERFORM BAD.
0007D8                                    (1/315)852 *ZC     81         PERFORM GOOD
0007D8 C0E000000035            000842     (48/44)853+         LARL  ZC_R14,PG_GOOD
0007DE C0000000003B            000854     (48/45)854+         LARL  ZC_R0,PG_GOOD_END+6
0007E4 58F0903C                00003C     (48/46)855+         L     ZC_R15,ZCVT_PERFORM
0007E8 0D1F                               (48/47)856+         BASR  ZC_R1,ZC_R15
0007EA                                    (1/317)857 *ZC     81         ELSE
0007EA A7F4000B                000800     (50/15)858+         J     PG_IF_20_E
0007EE                                     (8/41)859+PG_IF_20_1   DS    0H  &TYPE
0007EE                                    (1/319)860 *ZC     81         PERFORM BAD
0007EE C0E000000033            000854     (48/44)861+         LARL  ZC_R14,PG_BAD
0007F4 C0000000003B            00086A     (48/45)862+         LARL  ZC_R0,PG_BAD_END+6
0007FA 58F0903C                00003C     (48/46)863+         L     ZC_R15,ZCVT_PERFORM
0007FE 0D1F                               (48/47)864+         BASR  ZC_R1,ZC_R15
000800                                     (8/41)865+PG_IF_20_E   DS    0H  &TYPE
000800                                    (1/322)866 *            DISPLAY 'TESTSIX2 GOOD TESTS =' GOOD
000800                                    (1/323)867 *ZC     82         DISPLAY 'TESTSIX2 GOOD TESTS =',GOOD
000800 413090F8                0000F8     (35/28)868+         LA    ZC_R3,ZCVT_WORKAREA  ZC_R3=CVT LIST WORK AREA
000804 C00000000047            000892     (35/68)869+         LARL  ZC_R0,=CL22'TESTSIX2 GOOD TESTS =' PAD TO EVEN LEN LIT
00080A 41100015                           (35/69)870+         LA    ZC_R1,21
00080E 412000E7                           (35/70)871+         LA    ZC_R2,C'X'
000812 90023000                           (35/71)872+         STM   ZC_R0,ZC_R2,0(ZC_R3)  SET DISPLAY LIST ENTRY
000816 4100D088                000930     (35/82)873+         LA    ZC_R0,GOOD
00081A 41100005                           (35/83)874+         LA    ZC_R1,5  RPI 1182 WAS &SYM_LEN(&FIELD_IX)
00081E 412000D7                           (35/88)875+         LA    ZC_R2,C'P'
000822 9002300C                           (35/90)876+         STM   ZC_R0,ZC_R2,12(ZC_R3)  SET DISPLAY LIST ENTRY
000826 96803014                           (35/94)877+         OI    24-4(ZC_R3),X'80' SET VL BIT IN LAST WORD OF PARM LIST
00082A 1813                               (35/95)878+         LR    ZC_R1,ZC_R3
00082C 58F09070                000070     (35/96)879+         L     ZC_R15,ZCVT_DISPLAY
000830 0DEF                               (35/97)880+         BASR  ZC_R14,ZC_R15
000832                                    (1/325)881 *            STOP RUN.
000832                                    (1/326)882 *ZC     83         STOP  RUN
000832 4810D0FD                0009A5     (61/18)883+         LH    ZC_R1,RETURN_CODE      PASS RETURN CODE IN R1
000836 58F09030                000030     (61/23)884+         L     ZC_R15,ZCVT_GOBACK
00083A 07FF                               (61/24)885+         BR    ZC_R15
00083C                                    (1/329)886 *        GOOD.
00083C 58F09040                000040      (8/64)887+PG_MAINLINE_END L ZC_R15,ZCVT_PMCHECK
000840 0DEF                                (8/65)888+         BASR  ZC_R14,ZC_R15 CHECK FOR END OF CURRENT PERFORM
000842                                     (8/96)889+PG_GOOD  DS    0H
000842                                    (1/331)890 *            ADD 1 TO GOOD.
000842                                    (1/332)891 *ZC     85         ADD   1,TO,GOOD
000842 A7E50003                          (53/279)892+         BRAS  ZC_R14,3 SET ZC_R1 TO A(INLINE LIT) AND SKIP OVER IT
000846 001C                              (53/280)893+         DC    PL2'1'
000848 FA41D088E000     000930           (53/287)894+         AP    GOOD,0(2,ZC_R14)
00084E                                    (1/335)895 *        BAD.
00084E 58F09040                000040      (8/64)896+PG_GOOD_END L  ZC_R15,ZCVT_PMCHECK
000852 0DEF                                (8/65)897+         BASR  ZC_R14,ZC_R15 CHECK FOR END OF CURRENT PERFORM
000854                                     (8/96)898+PG_BAD   DS    0H
000854                                    (1/337)899 *            MOVE 16 TO RETURN-CODE
000854                                    (1/338)900 *ZC     87         MOVE  16,TO,RETURN_CODE
000854 E544D0FD0010            0009A5    (41/361)901+          MVHHI RETURN_CODE,16
00085A                                    (1/340)902 *            STOP RUN.
00085A                                    (1/341)903 *ZC     88         STOP  RUN
00085A 4810D0FD                0009A5     (61/18)904+         LH    ZC_R1,RETURN_CODE      PASS RETURN CODE IN R1
00085E 58F09030                000030     (61/23)905+         L     ZC_R15,ZCVT_GOBACK
000862 07FF                               (61/24)906+         BR    ZC_R15
000864 58F09040                000040      (8/64)907+PG_BAD_END L   ZC_R15,ZCVT_PMCHECK
000868 0DEF                                (8/65)908+         BASR  ZC_R14,ZC_R15 CHECK FOR END OF CURRENT PERFORM
00086A                                    (8/108)909+SN_END_PROCEDURE DS 0H SECTION
00086A                                    (62/18)910+*        PROCEDURE END
00086A 4810D0FD                0009A5     (62/24)911+         LH    ZC_R1,RETURN_CODE
00086E 58F09030                000030     (62/25)912+         L     ZC_R15,ZCVT_GOBACK
000872 0DEF                               (62/26)913+         BASR  ZC_R14,ZC_R15
000874                                    (62/32)914+         LTORG 
000878 F1C1C2C3F2C4C5C6 =CL8'1ABC2DEF'
000880 00000002         =A((2-1)*2)
000884 00000002         =F'2'
000888 E3F260C9C44D     =CL6'T2-ID('
00088E 6B40             =CL2','
000890 5D7E             =CL2')='
000892 E3C5E2E3E2C9E7F2 =CL22'TESTSIX2 GOOD TESTS ='
00089A 40C7D6D6C440E3C5
0008A2 E2E3E2407E40
0008A8                                     (6/15)915+*    ZCOBOL WORKING STORAGE SECTION DATA ITEMS 
0008A8                                     (6/15)916+*    LVL DATA NAME                      ADDR     LEN      DUP TYP PIC        VALUE 
0008A8                                     (6/15)918+*    01  ZC_SAVEAREA                    00000000 00000048 1   X   X(72)       
0008A8                                     (6/15)920+*    01  ZC_WS_ID                       00000048 00000008 1   X   X(8)       ''WS*WS*WS'' 
0008A8                                     (6/15)922+*    01  ZC_WS_START                    00000050 00000004 1   A               
0008A8                                     (6/15)924+*    01  ZC_WS_LEN                      00000054 00000004 1   F   9(9)        
0008A8                                     (6/15)926+*    01  FILLER                         00000058 00000008 1   X               
0008A8                                     (6/15)928+*    01  T0                             00000058 00000008 1   X               
0008A8                                     (6/15)930+*    10  T1                             00000058 00000004 2   X               
0008A8                                     (6/15)932+*    15  T1_ID                          00000058 00000001 1   X   X           
0008A8                                     (6/15)934+*    15  T2                             00000059 00000001 3   X               
0008A8                                     (6/15)936+*    20  T2_ID                          00000059 00000001 1   X   X           
0008A8                                     (6/15)938+*    01  S1                             00000060 00000004 1   F   9(9)        
0008A8                                     (6/15)940+*    01  S2                             00000064 00000004 1   F   9(9)        
0008A8                                     (6/15)942+*    01  NFS2                           00000068 00000004 2   F   9(9)        
0008A8                                     (6/15)944+*    01  NGS2                           00000070 00000008 2   G   9(18)       
0008A8                                     (6/15)946+*    01  NHS2                           00000080 00000002 2   H   9(4)        
0008A8                                     (6/15)948+*    01  I                              00000084 00000002 1   H   99         1 
0008A8                                     (6/15)950+*    01  J                              00000086 00000002 1   H   99         2 
0008A8                                     (6/15)952+*    01  GOOD                           00000088 00000005 1   P   9(9)       0 
0008A8                                     (6/15)954+*    01  H1                             0000008D 00000002 3   H   9(4)        
0008A8                                     (6/15)956+*    88  H1_ZERO                        00000001 00000000 0                  
0008A8                                     (6/15)958+*    01  H1X_SAVE                       00000093 00000004 1   I               
0008A8                                     (6/15)960+*    01  H1X_SAVE2                      00000097 00000004 1   I               
0008A8                                     (6/15)962+*    01  SUB                            0000009B 00000004 1   F   9(9)        
0008A8                                     (6/15)964+*    01  H1X                            0000009F 00000004 1   I               
0008A8                                     (6/15)966+*    01  DEBUG_ITEM                     000000A3 00000058 1   X               
0008A8                                     (6/15)968+*    02  DEBUG_LINE                     000000A3 00000006 1   X   X(6)        
0008A8                                     (6/15)970+*    02  FILLER                         000000A9 00000001 1   X   X          SPACE 
0008A8                                     (6/15)972+*    02  DEBUG_NAME                     000000AA 0000001E 1   X   X(30)       
0008A8                                     (6/15)974+*    02  FILLER                         000000C8 00000001 1   X   X          SPACE 
0008A8                                     (6/15)976+*    02  DEBUG_SUB_1                    000000C9 00000004 1   Z   9999        
0008A8                                     (6/15)978+*    02  FILLER                         000000CD 00000001 1   X   X          SPACE 
0008A8                                     (6/15)980+*    02  DEBUG_SUB_2                    000000CE 00000004 1   Z   9999        
0008A8                                     (6/15)982+*    02  FILLER                         000000D2 00000001 1   X   X          SPACE 
0008A8                                     (6/15)984+*    02  DEBUG_SUB_3                    000000D3 00000004 1   Z   9999        
0008A8                                     (6/15)986+*    02  FILLER                         000000D7 00000001 1   X   X          SPACE 
0008A8                                     (6/15)988+*    02  DEBUG_CONTENTS                 000000D8 00000023 1   X   X(35)       
0008A8                                     (6/15)990+*    01  TRUE                           000000FB 00000001 1   Z   9          1 
0008A8                                     (6/15)992+*    01  FALSE                          000000FC 00000001 1   Z   9          0 
0008A8                                     (6/15)994+*    01  RETURN_CODE                    000000FD 00000002 1   H   9(4)       0 
0008A8                                    (64/39)996+ZC_WSLOC LOCTR 
0008A8                  00000000         (64/131)997+ZC_WS_LOC_1  EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
0008A8                                   (64/336)998+ZC_SAVEAREA DS CL72
0008F0                  00000048         (64/131)999+ZC_WS_LOC_2  EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
0008F0 E6E25CE6E25CE6E2                 (64/220)1000+ZC_WS_ID DC CL8'WS*WS*WS'
0008F8                  00000050        (64/131)1001+ZC_WS_LOC_3  EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
0008F8                                  (64/322)1002+ZC_WS_START DS AL4
0008FC                  00000054        (64/131)1003+ZC_WS_LOC_4  EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
0008FC                                  (64/324)1004+ZC_WS_LEN DS FL4
000900                  00000058        (64/131)1005+ZC_WS_LOC_5  EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000900                                  (64/336)1006+         DS  0CL8
000900                  00000058        (64/131)1007+ZC_WS_LOC_6  EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000900                                  (64/336)1008+T0       DS  0CL8
000900                  00000058        (64/131)1009+ZC_WS_LOC_7  EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000900                                  (64/336)1010+T1       DS  0CL4
000900                  00000058        (64/131)1011+ZC_WS_LOC_8  EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000900                                  (64/336)1012+T1_ID    DS  CL1
000901                  00000059        (64/131)1013+ZC_WS_LOC_9  EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000901                                  (64/336)1014+T2       DS  0CL1
000901                  00000059        (64/131)1015+ZC_WS_LOC_10 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000901                                  (64/336)1016+T2_ID    DS  CL1
000902                                   (64/61)1017+         DS    XL2 PAD FOR MULT OCCURS
000904                                   (64/61)1018+         DS    XL4 PAD FOR MULT OCCURS
000908                  00000060        (64/131)1019+ZC_WS_LOC_11 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000908                                  (64/324)1020+S1       DS  FL4
00090C                  00000064        (64/131)1021+ZC_WS_LOC_12 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
00090C                                  (64/324)1022+S2       DS  FL4
000910                  00000068        (64/131)1023+ZC_WS_LOC_13 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000910                                  (64/324)1024+NFS2     DS  2FL4
000918                  00000070        (64/131)1025+ZC_WS_LOC_14 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000918                                  (64/326)1026+NGS2     DS  2FL8
000928                  00000080        (64/131)1027+ZC_WS_LOC_15 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000928                                  (64/328)1028+NHS2     DS  2HL2
00092C                  00000084        (64/131)1029+ZC_WS_LOC_16 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
00092C 0001                             (64/199)1030+I        DC AL2(1)                  RPI 1065
00092E                  00000086        (64/131)1031+ZC_WS_LOC_17 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
00092E 0002                             (64/199)1032+J        DC AL2(2)                  RPI 1065
000930                  00000088        (64/131)1033+ZC_WS_LOC_18 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000930 000000000C                       (64/204)1034+GOOD     DC PL5'0'
000935                  0000008D        (64/131)1035+ZC_WS_LOC_19 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000935                                  (64/328)1036+H1       DS  3HL2
00093B                  00000093        (64/131)1037+ZC_WS_LOC_21 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
00093B                                  (64/330)1038+H1X_SAVE DS FL4
00093F                  00000097        (64/131)1039+ZC_WS_LOC_22 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
00093F                                  (64/330)1040+H1X_SAVE2 DS FL4
000943                  0000009B        (64/131)1041+ZC_WS_LOC_23 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000943                                  (64/324)1042+SUB      DS  FL4
000947                  0000009F        (64/131)1043+ZC_WS_LOC_24 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000947                                  (64/330)1044+H1X      DS FL4
00094B                  000000A3        (64/131)1045+ZC_WS_LOC_25 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
00094B                                  (64/336)1046+DEBUG_ITEM DS 0CL88
00094B                  000000A3        (64/131)1047+ZC_WS_LOC_26 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
00094B                                  (64/336)1048+DEBUG_LINE DS CL6
000951                  000000A9        (64/131)1049+ZC_WS_LOC_27 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000951 40                               (64/227)1050+         DC CL1' '
000952                  000000AA        (64/131)1051+ZC_WS_LOC_28 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000952                                  (64/336)1052+DEBUG_NAME DS CL30
000970                  000000C8        (64/131)1053+ZC_WS_LOC_29 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000970 40                               (64/227)1054+         DC CL1' '
000971                  000000C9        (64/131)1055+ZC_WS_LOC_30 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000971                                  (64/338)1056+DEBUG_SUB_1 DS ZL4
000975                  000000CD        (64/131)1057+ZC_WS_LOC_31 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000975 40                               (64/227)1058+         DC CL1' '
000976                  000000CE        (64/131)1059+ZC_WS_LOC_32 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000976                                  (64/338)1060+DEBUG_SUB_2 DS ZL4
00097A                  000000D2        (64/131)1061+ZC_WS_LOC_33 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
00097A 40                               (64/227)1062+         DC CL1' '
00097B                  000000D3        (64/131)1063+ZC_WS_LOC_34 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
00097B                                  (64/338)1064+DEBUG_SUB_3 DS ZL4
00097F                  000000D7        (64/131)1065+ZC_WS_LOC_35 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
00097F 40                               (64/227)1066+         DC CL1' '
000980                  000000D8        (64/131)1067+ZC_WS_LOC_36 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000980                                  (64/336)1068+DEBUG_CONTENTS DS CL35
0009A3                  000000FB        (64/131)1069+ZC_WS_LOC_37 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
0009A3 F1                               (64/251)1070+TRUE     DC CL1'1'
0009A4                  000000FC        (64/131)1071+ZC_WS_LOC_38 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
0009A4 F0                               (64/251)1072+FALSE    DC CL1'0'
0009A5                  000000FD        (64/131)1073+ZC_WS_LOC_39 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
0009A5 0000                             (64/199)1074+RETURN_CODE DC AL2(0)                  RPI 1065
0009A7                                    (6/15)1075+*    ZCOBOL LINKAGE SECTION DATA ITEMS 
0009A7                                    (6/15)1076+*    LVL DATA NAME                      ADDR     LEN      DUP TYP PIC        VALUE 
0009A7                                   (64/39)1078+ZC_WSLOC LOCTR 
0009A7                                   (62/58)1079+ZC_WSLOC LOCTR 
0009A7                  00000000         (62/60)1080+ZC_WS_DIFF EQU  *-ZC_WS-255  DIFF BETWEEN ALLOC AND CALC WS
0009A8                                   (62/65)1081+ZC_WS_END DS   0D
0009A8                                   (65/14)1082+         MNOTE *,'ZCOBOL TOTAL SYMBOLS                 = 39'
0009A8                                   (65/15)1083+         MNOTE *,'ZCOBOL TOTAL SYMBOL DUPLICATES       = 0'
0009A8                                   (65/16)1084+         MNOTE *,'ZCOBOL TOTAL SYMBOL MAX DUP CHAIN    = 0'
0009A8                                   (65/17)1085+         MNOTE *,'ZCOBOL TOTAL SYMBOL LEVEL 88         = 1'
0009A8                                   (65/18)1086+         MNOTE *,'ZCOBOL TOTAL SYMBOL SET INDEXES      = 1'
0009A8                                   (65/19)1087+         MNOTE *,'ZCOBOL TOTAL SYMBOL LINKAGE SECTIONS = 0'
0009A8                                   (65/20)1088+         MNOTE *,'ZCOBOL TOTAL PROCEDURE SECTIONS      = 0'
0009A8                                   (65/21)1089+         MNOTE *,'ZCOBOL TOTAL PROCEDURE PARAGRAPHS    = 3'
0009A8                                   (65/22)1090+         MNOTE *,'ZCOBOL TOTAL PROCEDURE PARAGRAPH DUP = 0'
0009A8                                   (1/345)1091          END 

Symbol Table Listing

 SYM=DEBUG_CONTENTS LOC=00000980 LEN=00000023 ESD=0001 TYPE=REL  XREF=1068 
 SYM=DEBUG_ITEM LOC=0000094B LEN=00000058 ESD=0001 TYPE=REL  XREF=1046 
 SYM=DEBUG_LINE LOC=0000094B LEN=00000006 ESD=0001 TYPE=REL  XREF=1048 
 SYM=DEBUG_NAME LOC=00000952 LEN=0000001E ESD=0001 TYPE=REL  XREF=1052 
 SYM=DEBUG_SUB_1 LOC=00000971 LEN=00000004 ESD=0001 TYPE=REL  XREF=1056 
 SYM=DEBUG_SUB_2 LOC=00000976 LEN=00000004 ESD=0001 TYPE=REL  XREF=1060 
 SYM=DEBUG_SUB_3 LOC=0000097B LEN=00000004 ESD=0001 TYPE=REL  XREF=1064 
 SYM=FALSE    LOC=000009A4 LEN=00000001 ESD=0001 TYPE=REL  XREF=1072 
 SYM=GOOD     LOC=00000930 LEN=00000005 ESD=0001 TYPE=REL  XREF=1034 873 894 
 SYM=H1       LOC=00000935 LEN=00000002 ESD=0001 TYPE=REL  XREF=1036 632 637 664 
  671 774 781 810 815 840 847 
 SYM=H1X      LOC=00000947 LEN=00000004 ESD=0001 TYPE=REL  XREF=1044 660 668 692 
  694 698 725 729 753 778 802 804 807 836 844 
 SYM=H1X_SAVE LOC=0000093B LEN=00000004 ESD=0001 TYPE=REL  XREF=1038 725 728 749 
  752 836 
 SYM=H1X_SAVE2 LOC=0000093F LEN=00000004 ESD=0001 TYPE=REL  XREF=1040 749 
 SYM=I        LOC=0000092C LEN=00000002 ESD=0001 TYPE=REL  XREF=1030 497 505 515 
  522 534 560 568 578 604 
 SYM=J        LOC=0000092E LEN=00000002 ESD=0001 TYPE=REL  XREF=1032 
 SYM=NFS2     LOC=00000910 LEN=00000004 ESD=0001 TYPE=REL  XREF=1024 503 511 521 
  528 540 566 574 584 610 
 SYM=NGS2     LOC=00000918 LEN=00000008 ESD=0001 TYPE=REL  XREF=1026 
 SYM=NHS2     LOC=00000928 LEN=00000002 ESD=0001 TYPE=REL  XREF=1028 
 SYM=PFPO_RADIX LOC=00000001 LEN=00000001 ESD=0000 TYPE=ABS  XREF=112 
 SYM=PFPO_RND LOC=00000000 LEN=00000001 ESD=0000 TYPE=ABS  XREF=113 
 SYM=PFPO_TEST LOC=00000080 LEN=00000001 ESD=0000 TYPE=ABS  XREF=111 
 SYM=PFPO_TYPE_DB LOC=00000006 LEN=00000001 ESD=0000 TYPE=ABS  XREF=118 
 SYM=PFPO_TYPE_DD LOC=00000009 LEN=00000001 ESD=0000 TYPE=ABS  XREF=121 
 SYM=PFPO_TYPE_DH LOC=00000001 LEN=00000001 ESD=0000 TYPE=ABS  XREF=115 
 SYM=PFPO_TYPE_EB LOC=00000005 LEN=00000001 ESD=0000 TYPE=ABS  XREF=117 
 SYM=PFPO_TYPE_ED LOC=00000008 LEN=00000001 ESD=0000 TYPE=ABS  XREF=120 
 SYM=PFPO_TYPE_EH LOC=00000000 LEN=00000001 ESD=0000 TYPE=ABS  XREF=114 
 SYM=PFPO_TYPE_LB LOC=00000007 LEN=00000001 ESD=0000 TYPE=ABS  XREF=119 
 SYM=PFPO_TYPE_LD LOC=0000000A LEN=00000001 ESD=0000 TYPE=ABS  XREF=122 
 SYM=PFPO_TYPE_LH LOC=00000002 LEN=00000001 ESD=0000 TYPE=ABS  XREF=116 
 SYM=PG_BAD   LOC=00000854 LEN=00000002 ESD=0001 TYPE=REL  XREF=898 278 298 317 337 
  357 378 416 553 597 624 652 685 718 742 766 795 829 861 
 SYM=PG_BAD_END LOC=00000864 LEN=00000004 ESD=0001 TYPE=REL  XREF=907 279 299 318 
  338 358 379 417 554 598 625 653 686 719 743 767 796 830 862 
 SYM=PG_GOOD  LOC=00000842 LEN=00000002 ESD=0001 TYPE=REL  XREF=889 270 290 309 329 
  349 370 408 545 589 615 643 677 710 734 758 787 821 853 
 SYM=PG_GOOD_END LOC=0000084E LEN=00000004 ESD=0001 TYPE=REL  XREF=896 271 291 310 
  330 350 371 409 546 590 616 644 678 711 735 759 788 822 854 
 SYM=PG_IF_10_1 LOC=0000047E LEN=00000002 ESD=0001 TYPE=REL  XREF=551 543 
 SYM=PG_IF_10_E LOC=00000490 LEN=00000002 ESD=0001 TYPE=REL  XREF=557 550 
 SYM=PG_IF_11_1 LOC=0000050A LEN=00000002 ESD=0001 TYPE=REL  XREF=595 587 
 SYM=PG_IF_11_E LOC=0000051C LEN=00000002 ESD=0001 TYPE=REL  XREF=601 594 
 SYM=PG_IF_12_1 LOC=0000055A LEN=00000002 ESD=0001 TYPE=REL  XREF=621 613 
 SYM=PG_IF_12_E LOC=0000056C LEN=00000002 ESD=0001 TYPE=REL  XREF=628 620 
 SYM=PG_IF_13_1 LOC=000005A8 LEN=00000002 ESD=0001 TYPE=REL  XREF=649 640 
 SYM=PG_IF_13_E LOC=000005BA LEN=00000002 ESD=0001 TYPE=REL  XREF=656 648 
 SYM=PG_IF_14_1 LOC=00000608 LEN=00000002 ESD=0001 TYPE=REL  XREF=683 674 
 SYM=PG_IF_14_E LOC=0000061A LEN=00000002 ESD=0001 TYPE=REL  XREF=689 682 
 SYM=PG_IF_15_1 LOC=00000666 LEN=00000002 ESD=0001 TYPE=REL  XREF=716 707 
 SYM=PG_IF_15_E LOC=00000678 LEN=00000002 ESD=0001 TYPE=REL  XREF=722 715 
 SYM=PG_IF_16_1 LOC=000006A2 LEN=00000002 ESD=0001 TYPE=REL  XREF=740 731 
 SYM=PG_IF_16_E LOC=000006B4 LEN=00000002 ESD=0001 TYPE=REL  XREF=746 739 
 SYM=PG_IF_17_1 LOC=000006DE LEN=00000002 ESD=0001 TYPE=REL  XREF=764 755 
 SYM=PG_IF_17_E LOC=000006F0 LEN=00000002 ESD=0001 TYPE=REL  XREF=770 763 
 SYM=PG_IF_18_1 LOC=00000732 LEN=00000002 ESD=0001 TYPE=REL  XREF=793 784 
 SYM=PG_IF_18_E LOC=00000744 LEN=00000002 ESD=0001 TYPE=REL  XREF=799 792 
 SYM=PG_IF_19_1 LOC=00000794 LEN=00000002 ESD=0001 TYPE=REL  XREF=827 818 
 SYM=PG_IF_19_E LOC=000007A6 LEN=00000002 ESD=0001 TYPE=REL  XREF=833 826 
 SYM=PG_IF_1_1 LOC=00000132 LEN=00000002 ESD=0001 TYPE=REL  XREF=276 268 
 SYM=PG_IF_1_E LOC=00000144 LEN=00000002 ESD=0001 TYPE=REL  XREF=282 275 
 SYM=PG_IF_20_1 LOC=000007EE LEN=00000002 ESD=0001 TYPE=REL  XREF=859 850 
 SYM=PG_IF_20_E LOC=00000800 LEN=00000002 ESD=0001 TYPE=REL  XREF=865 858 
 SYM=PG_IF_2_1 LOC=0000016C LEN=00000002 ESD=0001 TYPE=REL  XREF=296 288 
 SYM=PG_IF_2_E LOC=0000017E LEN=00000002 ESD=0001 TYPE=REL  XREF=302 295 
 SYM=PG_IF_3_1 LOC=000001A0 LEN=00000002 ESD=0001 TYPE=REL  XREF=315 307 
 SYM=PG_IF_3_E LOC=000001B2 LEN=00000002 ESD=0001 TYPE=REL  XREF=321 314 
 SYM=PG_IF_4_1 LOC=000001DA LEN=00000002 ESD=0001 TYPE=REL  XREF=335 327 
 SYM=PG_IF_4_E LOC=000001EC LEN=00000002 ESD=0001 TYPE=REL  XREF=341 334 
 SYM=PG_IF_5_1 LOC=00000214 LEN=00000002 ESD=0001 TYPE=REL  XREF=355 347 
 SYM=PG_IF_5_E LOC=00000226 LEN=00000002 ESD=0001 TYPE=REL  XREF=361 354 
 SYM=PG_IF_6_1 LOC=00000254 LEN=00000002 ESD=0001 TYPE=REL  XREF=376 368 
 SYM=PG_IF_6_E LOC=00000266 LEN=00000002 ESD=0001 TYPE=REL  XREF=382 375 
 SYM=PG_IF_7_1 LOC=000002C0 LEN=00000002 ESD=0001 TYPE=REL  XREF=414 406 
 SYM=PG_IF_7_E LOC=000002D2 LEN=00000002 ESD=0001 TYPE=REL  XREF=420 413 
 SYM=PG_IF_8_1 LOC=000002F4 LEN=00000002 ESD=0001 TYPE=REL  XREF=432 430 
 SYM=PG_IF_9_1 LOC=00000316 LEN=00000002 ESD=0001 TYPE=REL  XREF=444 442 
 SYM=PG_MAINLINE LOC=000000EC LEN=00000002 ESD=0001 TYPE=REL  XREF=254 
 SYM=PG_MAINLINE_END LOC=0000083C LEN=00000004 ESD=0001 TYPE=REL  XREF=887 
 SYM=PG_PM_15_A LOC=000002DC LEN=00000002 ESD=0001 TYPE=REL  XREF=425 493 
 SYM=PG_PM_15_E LOC=000003C4 LEN=00000002 ESD=0001 TYPE=REL  XREF=494 431 
 SYM=PG_PM_15_T LOC=000002E2 LEN=00000002 ESD=0001 TYPE=REL  XREF=427 424 
 SYM=PG_PM_16_A LOC=000002FE LEN=00000002 ESD=0001 TYPE=REL  XREF=437 491 
 SYM=PG_PM_16_E LOC=000003C0 LEN=00000002 ESD=0001 TYPE=REL  XREF=492 443 
 SYM=PG_PM_16_T LOC=00000304 LEN=00000002 ESD=0001 TYPE=REL  XREF=439 436 
 SYM=PVTCICS  LOC=00000020 LEN=00000001 ESD=0004 TYPE=REL  XREF=213 
 SYM=PVTDATE  LOC=00000008 LEN=00000008 ESD=0004 TYPE=REL  XREF=210 
 SYM=PVTEXTND LOC=00000021 LEN=00000001 ESD=0004 TYPE=REL  XREF=214 
 SYM=PVTMAXDL LOC=00000024 LEN=00000002 ESD=0004 TYPE=REL  XREF=217 
 SYM=PVTPGM   LOC=00000000 LEN=00000008 ESD=0004 TYPE=REL  XREF=209 
 SYM=PVTR64   LOC=00000023 LEN=00000001 ESD=0004 TYPE=REL  XREF=216 
 SYM=PVTTIME  LOC=00000010 LEN=00000008 ESD=0004 TYPE=REL  XREF=211 
 SYM=PVTTRUNC LOC=00000022 LEN=00000001 ESD=0004 TYPE=REL  XREF=215 
 SYM=PVTVER   LOC=00000018 LEN=00000008 ESD=0004 TYPE=REL  XREF=212 
 SYM=RETURN_CODE LOC=000009A5 LEN=00000002 ESD=0001 TYPE=REL  XREF=1074 883 901 904 
  911 
 SYM=S1       LOC=00000908 LEN=00000004 ESD=0001 TYPE=REL  XREF=1020 385 391 423 
  426 428 452 469 
 SYM=S2       LOC=0000090C LEN=00000004 ESD=0001 TYPE=REL  XREF=1022 387 398 435 
  438 440 460 476 
 SYM=SN_END_PROCEDURE LOC=0000086A LEN=00000002 ESD=0001 TYPE=REL  XREF=909 
 SYM=SUB      LOC=00000943 LEN=00000004 ESD=0001 TYPE=REL  XREF=1042 702 705 
 SYM=T0       LOC=00000900 LEN=00000008 ESD=0001 TYPE=REL  XREF=1008 264 
 SYM=T1       LOC=00000900 LEN=00000004 ESD=0001 TYPE=REL  XREF=1010 
 SYM=T1_ID    LOC=00000900 LEN=00000001 ESD=0001 TYPE=REL  XREF=1012 267 286 
 SYM=T2       LOC=00000901 LEN=00000001 ESD=0001 TYPE=REL  XREF=1014 
 SYM=T2_ID    LOC=00000901 LEN=00000001 ESD=0001 TYPE=REL  XREF=1016 305 324 344 
  364 390 468 
 SYM=TESTSIX2 LOC=00000000 LEN=000009A8 ESD=0001 TYPE=CST  XREF=8 252 
 SYM=TRUE     LOC=000009A3 LEN=00000001 ESD=0001 TYPE=REL  XREF=1070 
 SYM=WTO#0015_EOT LOC=00000060 LEN=00000001 ESD=0001 TYPE=REL  XREF=35 33 34 
 SYM=WTO#0016_EOT LOC=000000AA LEN=00000001 ESD=0001 TYPE=REL  XREF=52 50 51 
 SYM=WTO#0141_EOT LOC=00000105 LEN=00000001 ESD=0001 TYPE=REL  XREF=259 257 258 
 SYM=ZC390CVT LOC=00000000 LEN=000001F8 ESD=0003 TYPE=DST  XREF=137 41 
 SYM=ZC390PVT LOC=00000000 LEN=00000030 ESD=0004 TYPE=DST  XREF=208 
 SYM=ZCVT_ABORT LOC=00000068 LEN=00000004 ESD=0003 TYPE=REL  XREF=166 
 SYM=ZCVT_ABORT_ACCEPT LOC=0000000B LEN=00000001 ESD=0000 TYPE=ABS  XREF=176 
 SYM=ZCVT_ABORT_ALTER LOC=00000001 LEN=00000001 ESD=0000 TYPE=ABS  XREF=167 
 SYM=ZCVT_ABORT_CALL LOC=00000002 LEN=00000001 ESD=0000 TYPE=ABS  XREF=168 
 SYM=ZCVT_ABORT_CICS LOC=0000000A LEN=00000001 ESD=0000 TYPE=ABS  XREF=175 
 SYM=ZCVT_ABORT_DISPLAY LOC=00000003 LEN=00000001 ESD=0000 TYPE=ABS  XREF=169 
 SYM=ZCVT_ABORT_DIVQ LOC=00000009 LEN=00000001 ESD=0000 TYPE=ABS  XREF=174 
 SYM=ZCVT_ABORT_INT128 LOC=00000008 LEN=00000001 ESD=0000 TYPE=ABS  XREF=173 
 SYM=ZCVT_ABORT_MAXERR LOC=0000000B LEN=00000001 ESD=0000 TYPE=ABS  XREF=177 
 SYM=ZCVT_ABORT_OPEN LOC=00000004 LEN=00000001 ESD=0000 TYPE=ABS  XREF=170 
 SYM=ZCVT_ABORT_STACK LOC=00000006 LEN=00000001 ESD=0000 TYPE=ABS  XREF=171 
 SYM=ZCVT_ABORT_VERSION LOC=00000007 LEN=00000001 ESD=0000 TYPE=ABS  XREF=172 
 SYM=ZCVT_ACCEPT LOC=0000006C LEN=00000004 ESD=0003 TYPE=REL  XREF=178 
 SYM=ZCVT_ACCEPT_CONSOLE LOC=00000002 LEN=00000001 ESD=0000 TYPE=ABS  XREF=180 
 SYM=ZCVT_ACCEPT_DATE LOC=00000004 LEN=00000001 ESD=0000 TYPE=ABS  XREF=182 
 SYM=ZCVT_ACCEPT_DDNAME LOC=00000003 LEN=00000001 ESD=0000 TYPE=ABS  XREF=181 
 SYM=ZCVT_ACCEPT_DEFAULT LOC=00000001 LEN=00000001 ESD=0000 TYPE=ABS  XREF=179 
 SYM=ZCVT_ACCEPT_DOW LOC=00000006 LEN=00000001 ESD=0000 TYPE=ABS  XREF=184 
 SYM=ZCVT_ACCEPT_TIME LOC=00000005 LEN=00000001 ESD=0000 TYPE=ABS  XREF=183 
 SYM=ZCVT_CALL LOC=00000014 LEN=00000004 ESD=0003 TYPE=REL  XREF=142 
 SYM=ZCVT_CMP64R32 LOC=00000018 LEN=00000004 ESD=0003 TYPE=REL  XREF=143 
 SYM=ZCVT_CONVERTING LOC=00000008 LEN=00000001 ESD=0000 TYPE=ABS  XREF=189 
 SYM=ZCVT_CVTLBTQ LOC=0000001C LEN=00000004 ESD=0003 TYPE=REL  XREF=144 
 SYM=ZCVT_CVTLDTP LOC=00000020 LEN=00000004 ESD=0003 TYPE=REL  XREF=145 
 SYM=ZCVT_CVTQTLB LOC=00000024 LEN=00000004 ESD=0003 TYPE=REL  XREF=146 
 SYM=ZCVT_DISPLAY LOC=00000070 LEN=00000004 ESD=0003 TYPE=REL  XREF=185 489 879 
 SYM=ZCVT_DIV64R32 LOC=00000028 LEN=00000004 ESD=0003 TYPE=REL  XREF=147 
 SYM=ZCVT_DIVQ128 LOC=0000002C LEN=00000004 ESD=0003 TYPE=REL  XREF=148 
 SYM=ZCVT_END LOC=000001F8 LEN=00000001 ESD=0003 TYPE=REL  XREF=207 44 56 139 
 SYM=ZCVT_GOBACK LOC=00000030 LEN=00000004 ESD=0003 TYPE=REL  XREF=149 884 905 912 
 SYM=ZCVT_HIGH_VALUES LOC=00000090 LEN=00000010 ESD=0003 TYPE=REL  XREF=196 
 SYM=ZCVT_ID  LOC=00000000 LEN=00000004 ESD=0003 TYPE=REL  XREF=138 42 44 56 139 
 SYM=ZCVT_INSPECT LOC=00000074 LEN=00000004 ESD=0003 TYPE=REL  XREF=186 
 SYM=ZCVT_LEN LOC=00000004 LEN=00000004 ESD=0003 TYPE=REL  XREF=139 44 
 SYM=ZCVT_MPYQ128 LOC=00000034 LEN=00000004 ESD=0003 TYPE=REL  XREF=150 
 SYM=ZCVT_NDDX LOC=000000E8 LEN=00000010 ESD=0003 TYPE=REL  XREF=202 
 SYM=ZCVT_OSE64R32 LOC=00000038 LEN=00000004 ESD=0003 TYPE=REL  XREF=151 
 SYM=ZCVT_PERFORM LOC=0000003C LEN=00000004 ESD=0003 TYPE=REL  XREF=152 272 280 292 
  300 311 319 331 339 351 359 372 380 410 418 547 555 591 599 617 626 645 654 679 
  687 712 720 736 744 760 768 789 797 823 831 855 863 
 SYM=ZCVT_PMCHECK LOC=00000040 LEN=00000004 ESD=0003 TYPE=REL  XREF=153 887 896 907 
 SYM=ZCVT_PVTMAXDL LOC=00000078 LEN=00000002 ESD=0003 TYPE=REL  XREF=193 
 SYM=ZCVT_PWORK LOC=000000A0 LEN=00000008 ESD=0003 TYPE=REL  XREF=197 
 SYM=ZCVT_PWORK1 LOC=000000A8 LEN=00000010 ESD=0003 TYPE=REL  XREF=198 
 SYM=ZCVT_PWORK2 LOC=000000B8 LEN=00000010 ESD=0003 TYPE=REL  XREF=199 
 SYM=ZCVT_PWORK3 LOC=000000C8 LEN=00000010 ESD=0003 TYPE=REL  XREF=200 
 SYM=ZCVT_PWORK4 LOC=000000D8 LEN=00000010 ESD=0003 TYPE=REL  XREF=201 
 SYM=ZCVT_REPLACING LOC=00000004 LEN=00000001 ESD=0000 TYPE=ABS  XREF=188 
 SYM=ZCVT_ROUNDF LOC=00000044 LEN=00000004 ESD=0003 TYPE=REL  XREF=154 
 SYM=ZCVT_STACKEND LOC=00000050 LEN=00000004 ESD=0003 TYPE=REL  XREF=157 
 SYM=ZCVT_STACKORG LOC=00000048 LEN=00000004 ESD=0003 TYPE=REL  XREF=155 
 SYM=ZCVT_STACKPTR LOC=0000004C LEN=00000004 ESD=0003 TYPE=REL  XREF=156 
 SYM=ZCVT_STOPRUN LOC=00000054 LEN=00000004 ESD=0003 TYPE=REL  XREF=158 
 SYM=ZCVT_TALLYING LOC=00000000 LEN=00000001 ESD=0000 TYPE=ABS  XREF=187 
 SYM=ZCVT_TALPHAX LOC=00000058 LEN=00000004 ESD=0003 TYPE=REL  XREF=159 
 SYM=ZCVT_TNUMP LOC=0000005C LEN=00000004 ESD=0003 TYPE=REL  XREF=160 
 SYM=ZCVT_TNUMX LOC=00000060 LEN=00000004 ESD=0003 TYPE=REL  XREF=161 
 SYM=ZCVT_TNUMZ LOC=00000064 LEN=00000004 ESD=0003 TYPE=REL  XREF=162 
 SYM=ZCVT_VER LOC=00000008 LEN=00000008 ESD=0003 TYPE=REL  XREF=140 
 SYM=ZCVT_WORKAREA LOC=000000F8 LEN=00000100 ESD=0003 TYPE=REL  XREF=203 447 868 
 SYM=ZCVT_ZC390NUC LOC=00000010 LEN=00000004 ESD=0003 TYPE=REL  XREF=141 46 
 SYM=ZCVT_ZERO LOC=00000080 LEN=00000010 ESD=0003 TYPE=REL  XREF=195 
 SYM=ZC_E     LOC=00000008 LEN=00000001 ESD=0000 TYPE=ABS  XREF=93 
 SYM=ZC_EQ    LOC=00000008 LEN=00000001 ESD=0000 TYPE=ABS  XREF=105 268 288 307 327 
  347 368 406 543 587 613 640 674 707 731 755 784 818 850 
 SYM=ZC_F0    LOC=00000000 LEN=00000001 ESD=0000 TYPE=ABS  XREF=75 
 SYM=ZC_F10   LOC=0000000A LEN=00000001 ESD=0000 TYPE=ABS  XREF=85 
 SYM=ZC_F1    LOC=00000001 LEN=00000001 ESD=0000 TYPE=ABS  XREF=76 
 SYM=ZC_F11   LOC=0000000B LEN=00000001 ESD=0000 TYPE=ABS  XREF=86 
 SYM=ZC_F12   LOC=0000000C LEN=00000001 ESD=0000 TYPE=ABS  XREF=87 
 SYM=ZC_F13   LOC=0000000D LEN=00000001 ESD=0000 TYPE=ABS  XREF=88 
 SYM=ZC_F14   LOC=0000000E LEN=00000001 ESD=0000 TYPE=ABS  XREF=89 
 SYM=ZC_F15   LOC=0000000F LEN=00000001 ESD=0000 TYPE=ABS  XREF=90 
 SYM=ZC_F2    LOC=00000002 LEN=00000001 ESD=0000 TYPE=ABS  XREF=77 
 SYM=ZC_F3    LOC=00000003 LEN=00000001 ESD=0000 TYPE=ABS  XREF=78 
 SYM=ZC_F4    LOC=00000004 LEN=00000001 ESD=0000 TYPE=ABS  XREF=79 
 SYM=ZC_F5    LOC=00000005 LEN=00000001 ESD=0000 TYPE=ABS  XREF=80 
 SYM=ZC_F6    LOC=00000006 LEN=00000001 ESD=0000 TYPE=ABS  XREF=81 
 SYM=ZC_F7    LOC=00000007 LEN=00000001 ESD=0000 TYPE=ABS  XREF=82 
 SYM=ZC_F8    LOC=00000008 LEN=00000001 ESD=0000 TYPE=ABS  XREF=83 
 SYM=ZC_F9    LOC=00000009 LEN=00000001 ESD=0000 TYPE=ABS  XREF=84 
 SYM=ZC_GE    LOC=0000000B LEN=00000001 ESD=0000 TYPE=ABS  XREF=108 
 SYM=ZC_GT    LOC=00000002 LEN=00000001 ESD=0000 TYPE=ABS  XREF=106 
 SYM=ZC_H     LOC=00000002 LEN=00000001 ESD=0000 TYPE=ABS  XREF=91 430 442 
 SYM=ZC_L     LOC=00000004 LEN=00000001 ESD=0000 TYPE=ABS  XREF=92 
 SYM=ZC_LE    LOC=0000000D LEN=00000001 ESD=0000 TYPE=ABS  XREF=109 
 SYM=ZC_LOAD  LOC=00000038 LEN=00000002 ESD=0001 TYPE=REL  XREF=27 12 
 SYM=ZC_LOAD_OK LOC=00000068 LEN=00000002 ESD=0001 TYPE=REL  XREF=39 32 
 SYM=ZC_LT    LOC=00000004 LEN=00000001 ESD=0000 TYPE=ABS  XREF=107 
 SYM=ZC_M     LOC=00000004 LEN=00000001 ESD=0000 TYPE=ABS  XREF=99 
 SYM=ZC_NE    LOC=00000007 LEN=00000001 ESD=0000 TYPE=ABS  XREF=96 
 SYM=ZC_NH    LOC=0000000D LEN=00000001 ESD=0000 TYPE=ABS  XREF=94 
 SYM=ZC_NL    LOC=0000000B LEN=00000001 ESD=0000 TYPE=ABS  XREF=95 
 SYM=ZC_NM    LOC=0000000B LEN=00000001 ESD=0000 TYPE=ABS  XREF=102 
 SYM=ZC_NO    LOC=0000000E LEN=00000001 ESD=0000 TYPE=ABS  XREF=104 
 SYM=ZC_NP    LOC=0000000D LEN=00000001 ESD=0000 TYPE=ABS  XREF=101 
 SYM=ZC_NZ    LOC=00000007 LEN=00000001 ESD=0000 TYPE=ABS  XREF=103 
 SYM=ZC_O     LOC=00000001 LEN=00000001 ESD=0000 TYPE=ABS  XREF=97 
 SYM=ZC_P     LOC=00000002 LEN=00000001 ESD=0000 TYPE=ABS  XREF=98 
 SYM=ZC_R0    LOC=00000000 LEN=00000001 ESD=0000 TYPE=ABS  XREF=59 40 131 132 133 
  271 279 291 299 310 318 330 338 350 358 371 379 409 417 448 451 452 455 456 459 
  460 463 464 467 483 486 529 530 531 546 554 590 598 616 625 644 653 678 686 692 
  693 694 697 700 711 719 728 730 735 743 752 754 759 767 788 796 802 803 804 822 
  830 854 862 869 872 873 876 
 SYM=ZC_R10   LOC=0000000A LEN=00000001 ESD=0000 TYPE=ABS  XREF=69 
 SYM=ZC_R1    LOC=00000001 LEN=00000001 ESD=0000 TYPE=ABS  XREF=60 125 126 127 128 
  263 264 273 281 293 301 312 320 332 340 352 360 373 381 411 419 449 453 457 461 
  465 484 488 521 529 548 556 592 600 618 627 646 655 659 660 680 688 698 701 702 
  713 721 729 730 737 745 753 754 761 769 790 798 824 832 856 864 870 874 878 883 
  904 911 
 SYM=ZC_R11   LOC=0000000B LEN=00000001 ESD=0000 TYPE=ABS  XREF=70 
 SYM=ZC_R12   LOC=0000000C LEN=00000001 ESD=0000 TYPE=ABS  XREF=71 
 SYM=ZC_R13   LOC=0000000D LEN=00000001 ESD=0000 TYPE=ABS  XREF=72 124 126 127 128 
  129 130 132 392 399 470 477 498 506 516 523 535 561 569 579 605 669 779 808 845 
 SYM=ZC_R14   LOC=0000000E LEN=00000001 ESD=0000 TYPE=ABS  XREF=73 47 270 278 290 
  298 309 317 329 337 349 357 370 378 408 416 490 545 553 589 597 615 624 643 652 
  677 685 699 700 710 718 734 742 758 766 787 795 821 829 853 861 880 888 892 894 
  897 908 913 
 SYM=ZC_R15   LOC=0000000F LEN=00000001 ESD=0000 TYPE=ABS  XREF=74 9 31 37 46 47 
  54 134 272 273 280 281 292 293 300 301 311 312 319 320 331 332 339 340 351 352 
  359 360 372 373 380 381 391 392 393 394 395 397 398 399 400 401 402 404 410 411 
  418 419 469 470 471 472 473 475 476 477 478 479 480 482 489 490 497 498 499 500 
  501 503 505 506 507 508 509 511 515 516 517 518 519 521 522 523 524 525 526 528 
  534 535 536 537 538 540 547 548 555 556 560 561 562 563 564 566 568 569 570 571 
  572 574 578 579 580 581 582 584 591 592 599 600 604 605 606 607 608 610 617 618 
  626 627 645 646 654 655 668 669 670 671 679 680 687 688 712 713 720 721 736 737 
  744 745 760 761 768 769 778 779 780 781 789 790 797 798 807 808 809 810 823 824 
  831 832 844 845 846 847 855 856 863 864 879 880 884 885 887 888 896 897 905 906 
  907 908 912 913 
 SYM=ZC_R2    LOC=00000002 LEN=00000001 ESD=0000 TYPE=ABS  XREF=61 124 285 286 287 
  305 306 324 325 326 344 345 346 364 365 366 367 390 397 404 405 450 451 454 455 
  458 459 462 463 466 467 468 475 482 483 485 486 528 530 531 540 541 566 567 574 
  575 584 585 610 611 631 632 633 636 637 638 671 672 781 782 814 815 816 847 848 
  871 872 875 876 
 SYM=ZC_R3    LOC=00000003 LEN=00000001 ESD=0000 TYPE=ABS  XREF=62 447 451 455 459 
  463 467 486 487 488 503 504 511 512 663 664 665 773 774 775 810 811 839 840 841 
  868 872 876 877 878 
 SYM=ZC_R4    LOC=00000004 LEN=00000001 ESD=0000 TYPE=ABS  XREF=63 
 SYM=ZC_R5    LOC=00000005 LEN=00000001 ESD=0000 TYPE=ABS  XREF=64 
 SYM=ZC_R6    LOC=00000006 LEN=00000001 ESD=0000 TYPE=ABS  XREF=65 
 SYM=ZC_R7    LOC=00000007 LEN=00000001 ESD=0000 TYPE=ABS  XREF=66 
 SYM=ZC_R8    LOC=00000008 LEN=00000001 ESD=0000 TYPE=ABS  XREF=67 12 13 
 SYM=ZC_R9    LOC=00000009 LEN=00000001 ESD=0000 TYPE=ABS  XREF=68 40 41 
 SYM=ZC_SAVEAREA LOC=000008A8 LEN=00000048 ESD=0001 TYPE=REL  XREF=998 
 SYM=ZC_VER_ERR LOC=00000088 LEN=00000002 ESD=0001 TYPE=REL  XREF=49 43 45 
 SYM=ZC_VER_OK LOC=000000C8 LEN=00000002 ESD=0001 TYPE=REL  XREF=123 48 
 SYM=ZC_WS    LOC=000008A8 LEN=00000008 ESD=0001 TYPE=REL  XREF=136 125 129 391 398 
  469 476 497 505 515 522 534 560 568 578 604 668 778 807 844 997 999 1001 1003 1005 
  1007 1009 1011 1013 1015 1019 1021 1023 1025 1027 1029 1031 1033 1035 1037 1039 
  1041 1043 1045 1047 1049 1051 1053 1055 1057 1059 1061 1063 1065 1067 1069 1071 
  1073 1080 
 SYM=ZC_WSLOC LOC=000008A8 LEN=00000100 ESD=0001 TYPE=CST  XREF=135 219 996 1078 
  1079 
 SYM=ZC_WS_DIFF LOC=00000000 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1080 
 SYM=ZC_WS_END LOC=000009A8 LEN=00000008 ESD=0001 TYPE=REL  XREF=1081 131 
 SYM=ZC_WS_ID LOC=000008F0 LEN=00000008 ESD=0001 TYPE=REL  XREF=1000 
 SYM=ZC_WS_LEN LOC=000008FC LEN=00000004 ESD=0001 TYPE=REL  XREF=1004 133 
 SYM=ZC_WS_LOC_10 LOC=00000059 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1015 
 SYM=ZC_WS_LOC_1 LOC=00000000 LEN=00000001 ESD=0000 TYPE=ABS  XREF=997 
 SYM=ZC_WS_LOC_11 LOC=00000060 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1019 
 SYM=ZC_WS_LOC_12 LOC=00000064 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1021 
 SYM=ZC_WS_LOC_13 LOC=00000068 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1023 
 SYM=ZC_WS_LOC_14 LOC=00000070 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1025 
 SYM=ZC_WS_LOC_15 LOC=00000080 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1027 
 SYM=ZC_WS_LOC_16 LOC=00000084 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1029 
 SYM=ZC_WS_LOC_17 LOC=00000086 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1031 
 SYM=ZC_WS_LOC_18 LOC=00000088 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1033 
 SYM=ZC_WS_LOC_19 LOC=0000008D LEN=00000001 ESD=0000 TYPE=ABS  XREF=1035 
 SYM=ZC_WS_LOC_2 LOC=00000048 LEN=00000001 ESD=0000 TYPE=ABS  XREF=999 
 SYM=ZC_WS_LOC_21 LOC=00000093 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1037 
 SYM=ZC_WS_LOC_22 LOC=00000097 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1039 
 SYM=ZC_WS_LOC_23 LOC=0000009B LEN=00000001 ESD=0000 TYPE=ABS  XREF=1041 
 SYM=ZC_WS_LOC_24 LOC=0000009F LEN=00000001 ESD=0000 TYPE=ABS  XREF=1043 
 SYM=ZC_WS_LOC_25 LOC=000000A3 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1045 
 SYM=ZC_WS_LOC_26 LOC=000000A3 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1047 
 SYM=ZC_WS_LOC_27 LOC=000000A9 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1049 
 SYM=ZC_WS_LOC_28 LOC=000000AA LEN=00000001 ESD=0000 TYPE=ABS  XREF=1051 
 SYM=ZC_WS_LOC_29 LOC=000000C8 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1053 
 SYM=ZC_WS_LOC_30 LOC=000000C9 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1055 
 SYM=ZC_WS_LOC_3 LOC=00000050 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1001 
 SYM=ZC_WS_LOC_31 LOC=000000CD LEN=00000001 ESD=0000 TYPE=ABS  XREF=1057 
 SYM=ZC_WS_LOC_32 LOC=000000CE LEN=00000001 ESD=0000 TYPE=ABS  XREF=1059 
 SYM=ZC_WS_LOC_33 LOC=000000D2 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1061 
 SYM=ZC_WS_LOC_34 LOC=000000D3 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1063 
 SYM=ZC_WS_LOC_35 LOC=000000D7 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1065 
 SYM=ZC_WS_LOC_36 LOC=000000D8 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1067 
 SYM=ZC_WS_LOC_37 LOC=000000FB LEN=00000001 ESD=0000 TYPE=ABS  XREF=1069 
 SYM=ZC_WS_LOC_38 LOC=000000FC LEN=00000001 ESD=0000 TYPE=ABS  XREF=1071 
 SYM=ZC_WS_LOC_39 LOC=000000FD LEN=00000001 ESD=0000 TYPE=ABS  XREF=1073 
 SYM=ZC_WS_LOC_4 LOC=00000054 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1003 
 SYM=ZC_WS_LOC_5 LOC=00000058 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1005 
 SYM=ZC_WS_LOC_6 LOC=00000058 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1007 
 SYM=ZC_WS_LOC_7 LOC=00000058 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1009 
 SYM=ZC_WS_LOC_8 LOC=00000058 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1011 
 SYM=ZC_WS_LOC_9 LOC=00000059 LEN=00000001 ESD=0000 TYPE=ABS  XREF=1013 
 SYM=ZC_WS_START LOC=000008F8 LEN=00000004 ESD=0001 TYPE=REL  XREF=1002 130 
 SYM=ZC_Z     LOC=00000008 LEN=00000001 ESD=0000 TYPE=ABS  XREF=100 

Literal Table Listing

 LIT=A((2-1)*2) LOC=00000880 LEN=00000004 ESD=0001 POOL=0002 XREF=659 
 LIT=A(ZCVT_END-ZCVT_ID) LOC=000000C4 LEN=00000004 ESD=0001 POOL=0001 XREF=44 
 LIT=C'ZCVT'  LOC=000000C0 LEN=00000004 ESD=0001 POOL=0001 XREF=42 
 LIT=CL2')='  LOC=00000890 LEN=00000002 ESD=0001 POOL=0002 XREF=464 
 LIT=CL2','   LOC=0000088E LEN=00000002 ESD=0001 POOL=0002 XREF=456 
 LIT=CL22'TESTSIX2 GOOD TESTS =' LOC=00000892 LEN=00000016 ESD=0001 POOL=0002 XREF=869 
 LIT=CL6'T2-ID(' LOC=00000888 LEN=00000006 ESD=0001 POOL=0002 XREF=448 
 LIT=CL8'1ABC2DEF' LOC=00000878 LEN=00000008 ESD=0001 POOL=0002 XREF=263 
 LIT=CL8'ZC390LIB' LOC=000000B8 LEN=00000008 ESD=0001 POOL=0001 XREF=28 
 LIT=F'2'     LOC=00000884 LEN=00000004 ESD=0001 POOL=0002 XREF=699 
 
AZ390I total mnote warnings = 0
AZ390I total mnote errors   = 0
AZ390I max   mnote level    = 0
AZ390I total mz390 errors   = 0
AZ390I total az390 errors   = 0
TESTSIX2  MZ390 ENDED   RC= 0 MEM(MB)= MB IO=27638
