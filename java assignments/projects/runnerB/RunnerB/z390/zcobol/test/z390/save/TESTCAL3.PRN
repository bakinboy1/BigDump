TESTCAL3  MZ390 START
AZ390I Copyright 2011 Automated Software Tools Corporation
AZ390I z390 is licensed under GNU General Public License
AZ390I program = ZCOBOL\TEST\TESTCAL3
AZ390I options = W:\work\z390\z390.OPT=(time(60)) @zcobol\z390\ZC390CLG=(
  sysmac(+zcobol+zcobol\z390+mac+cics) syscpy(+zcobol+zcobol\z390+mac+cics) 
  BAL NOLISTCALL MAXGBL(1500000)) notiming stats
External Symbol Definitions
 ESD=0001 LOC=00000000 LEN=00000398 TYPE=CST NAME=TESTCAL3
 ESD=0005 LOC=00000000 LEN=00000000 TYPE=EXT NAME=TESTASM4
Assembler Listing
000000                                       (6/15)1+*    ZCOBOL PGM='ZCOBOL\TEST\TESTCAL3' VER=V1.5.06 MM/DD/YY  
000000                                       (6/15)2+*    ZCOBOL OPTIONS=() 
000000                                        (1/4)3          COPY  TESTCAL3_ZC_LABELS.CPY
000000                                        (1/5)4 *        IDENTIFICATION DIVISION.
000000                                        (1/7)5 *        PROGRAM-ID.    TESTCAL3.
000000                                      (11/34)6+         PRINT NOLIST,NOGEN,NOLISTUSE    SET LIST OPTION FOR INTERNAL CODE
000000                                      (11/59)8+TESTCAL3 CSECT ,                CSECT WITH PROCEDURE CODE AND WS
000000                                      (11/60)9+         USING *,ZC_R15
LISTUSE TESTCAL3 ESD=0001 LOC=00000000 LEN=01000 REG=F OFF=00000 LAB=
000000 90ECD00C                            (16/51)10+         STM   14,12,12+4*(14-14)(13)
000004                                     (11/93)11+         CNOP  4,8             FORCE ZC390PVT TO DOUBLEWORD BOUNDARY
000004 A785001A                000038      (11/94)12+         BRAS  ZC_R8,ZC_LOAD
000008                                     (11/95)13+         USING *,ZC_R8            BASE FOR LOAD AND CICS V5 USE
LISTUSE TESTCAL3 ESD=0001 LOC=00000000 LEN=01000 REG=F OFF=00000 LAB=
LISTUSE TESTCAL3 ESD=0001 LOC=00000008 LEN=01000 REG=8 OFF=00000 LAB=
000008                                     (11/96)14+*
000008                                     (11/97)15+*  THESE FIELDS MUST BE KEPT IN SYNC WITH zcobol\ZC390PVT.CPY
000008                                     (11/98)16+*
000008 E3C5E2E3C3C1D3F3                    (11/99)17+         DC    CL8'TESTCAL3'    PVTPGM   ZCOBOL PGM NAME
000010 F0F161F0F261F0F5                   (11/100)18+         DC    CL8'01/02/05'   PVTDATE  ZCOBOL COMPILE DATE
000018 F2F24BF3F3404040                   (11/101)19+         DC    CL8'22.33'   PVTTIME  ZCOBOL COMPILE TIME
000020 E5F14BF54BF0F640                   (11/102)20+         DC    CL8'V1.5.06'    PVTVER   ZCOBOL COMPILER VERSION
000028 F0                                 (11/103)21+         DC    C'0'     PVTCICS  ZCOBOL EXEC CICS PGM
000029 F1                                 (11/104)22+         DC    C'1'   PVTEXTND ZCOBOL EXTENDED PRECISION
00002A F0                                 (11/105)23+         DC    C'0'    PVTTRUNC ZCOBOL TRUNCATE TO PICTURE
00002B F1                                 (11/106)24+         DC    C'1'      PVTR64   ZCOBOL USE 64 BIT REGISTERS
00002C 0050                               (11/107)25+         DC    H'80' MAX DISPLAY LINE LEN  RPI 1118
00002E                                    (11/108)26+         DS    XL10            RESERVED
000038                                    (11/109)27+ZC_LOAD  DS    0H
000038 410080B0                0000B8      (17/74)28+         LA    0,=CL8'ZC390LIB'
00003C 1BFF                                (17/95)29+         SR    15,15 USE DEFAULT SYS390 SEARCH
00003E 0A08                               (17/125)30+         SVC   8 LOAD R0=A(NAME) R15=DDNAME/DSNAME ADDR OR 0
000040 12FF                               (11/111)31+         LTR   ZC_R15,ZC_R15
000042 A7840013                000068     (11/112)32+         JZ    ZC_LOAD_OK
000046 A715000D                000060      (18/49)33+         BRAS  1,*+(WTO#0011_EOT-*+1)/2*2
00004A 00160000E9C3F3F9                    (18/50)34+         DC    AL2(WTO#0011_EOT-*,0),C'ZC390LIB NOT FOUND'
000060                  00000060           (18/51)35+WTO#0011_EOT     EQU *
000060 0A23                                (18/52)36+         SVC   35
000062 41F00010                           (11/114)37+         LA  ZC_R15,16
000066 0A03                               (11/115)38+         SVC 3      EXIT TO CALLER WITH RC=16
000068                                    (11/116)39+ZC_LOAD_OK DS  0H
000068 1890                               (11/117)40+         LR    ZC_R9,ZC_R0
00006A                                    (11/118)41+         USING ZC390CVT,ZC_R9    R9=CVT
LISTUSE TESTCAL3 ESD=0001 LOC=00000000 LEN=01000 REG=F OFF=00000 LAB=
LISTUSE TESTCAL3 ESD=0001 LOC=00000008 LEN=01000 REG=8 OFF=00000 LAB=
LISTUSE ZC390CVT ESD=0003 LOC=00000000 LEN=01000 REG=9 OFF=00000 LAB=
00006A D503900080B8     000000 0000C0     (11/119)42+         CLC   ZCVT_ID,=C'ZCVT'              CHECK ZCVT ID AND LENGTH
000070 A774000C                000088     (11/120)43+         JNE   ZC_VER_ERR                    IN ZC390LIB.390 MATCH
000074 D503900480BC     000004 0000C4     (11/121)44+         CLC   ZCVT_LEN,=A(ZCVT_END-ZCVT_ID) ZCOBOL PGM COMPILED ID/LEN
00007A 47708080                000088     (11/122)45+         BNE   ZC_VER_ERR
00007E 58F09010                000010     (11/123)46+         L     ZC_R15,ZCVT_ZC390NUC
000082 0DEF                               (11/124)47+         BASR  ZC_R14,ZC_R15 CALL ZC390NUC TO VERIFY VER, OPTIONS
000084 A7F40022                0000C8     (11/125)48+         J     ZC_VER_OK
000088                                    (11/126)49+ZC_VER_ERR DS 0H
000088 A7150011                0000AA      (18/49)50+         BRAS  1,*+(WTO#0012_EOT-*+1)/2*2
00008C 001E0000E9C3F3F9                    (18/50)51+         DC    AL2(WTO#0012_EOT-*,0),C'ZC390LIB ZCVT VERIFY ERROR'
0000AA                  000000AA           (18/51)52+WTO#0012_EOT     EQU *
0000AA 0A23                                (18/52)53+         SVC   35
0000AC 41F00010                           (11/128)54+         LA  ZC_R15,16
0000B0 0A03                               (11/129)55+         SVC 3      EXIT TO CALLER WITH RC=16
0000B2                                    (11/130)56+         LTORG 
0000B8 E9C3F3F9F0D3C9C2 =CL8'ZC390LIB'
0000C0 E9C3E5E3         =C'ZCVT'
0000C4 000001F8         =A(ZCVT_END-ZCVT_ID)
0000C8                  00000080          (15/10)111=PFPO_TEST    EQU  X'80' PFPO TEST IF VALID OPCODE (NOT SUPPORTED YET)
0000C8                  00000001          (15/11)112=PFPO_RADIX   EQU  1 PFPO OPCODE - CONVERT FROM ONE RADIX TO ANOTHER
0000C8                  00000000          (15/12)113=PFPO_RND     EQU  0 PFOP ROUNDING OPTION (ONLY DEFAULT ALLOWED)
0000C8                  00000000          (15/13)114=PFPO_TYPE_EH EQU  0 EH HFP SHORT     32 BITS 7  DIGITS
0000C8                  00000001          (15/14)115=PFPO_TYPE_DH EQU  1 ED HFP LONG      64 BITS 15 DIGITS
0000C8                  00000002          (15/15)116=PFPO_TYPE_LH EQU  2 EL HFP EXTENDED 128 BITS 30 DIGITS
0000C8                  00000005          (15/16)117=PFPO_TYPE_EB EQU  5 EB BFP SHORT     32 BITS 7  DIGITS
0000C8                  00000006          (15/17)118=PFPO_TYPE_DB EQU  6 DB BFP LONG      64 BITS 16 DIGITS
0000C8                  00000007          (15/18)119=PFPO_TYPE_LB EQU  7 LB BFP EXTENDED 128 BITS 34 DIGITS
0000C8                  00000008          (15/19)120=PFPO_TYPE_ED EQU  8 ED DFP SHORT     32 BITS 7  DIGITS
0000C8                  00000009          (15/20)121=PFPO_TYPE_DD EQU  9 DD DFP LONG      64 BITS 16 DIGITS
0000C8                  0000000A          (15/21)122=PFPO_TYPE_LD EQU 10 LD DFP EXTENDED 128 BITS 34 DIGITS
0000C8                                   (11/133)123+ZC_VER_OK DS   0H
0000C8 582D0018                           (11/63)124+         L     ZC_R2,24(ZC_R13) SET ZC_R2=PARMLIST ADDRESS AFTER LOAD
0000CC C010000000E6            000298     (11/64)125+         LARL  ZC_R1,ZC_WS     ZC_R2=A(WORKING STORAGE WITH SAVEAREA)
0000D2 501D0008                           (11/65)126+         ST    ZC_R1,8(ZC_R13) FORWARD  SAVE CHAIN
0000D6 50D10004                           (11/66)127+         ST    ZC_R13,4(ZC_R1) BACKWARD SAVE CHAIN
0000DA 18D1                               (11/67)128+         LR    ZC_R13,ZC_R1    LINK SAVE AREA IN ZC390CVT
0000DC                                    (11/68)129+         USING ZC_WS,ZC_R13    BASE FOR ZCOBOL WS (SEE GEN_SYM_RX.MAC)
LISTUSE TESTCAL3 ESD=0001 LOC=00000000 LEN=01000 REG=F OFF=00000 LAB=
LISTUSE TESTCAL3 ESD=0001 LOC=00000008 LEN=01000 REG=8 OFF=00000 LAB=
LISTUSE ZC390CVT ESD=0003 LOC=00000000 LEN=01000 REG=9 OFF=00000 LAB=
LISTUSE TESTCAL3 ESD=0001 LOC=00000298 LEN=01000 REG=D OFF=00000 LAB=
0000DC 50D0D050                0002E8     (11/69)130+         ST    ZC_R13,ZC_WS_START  SAVE ADDR WS IN WS PREFIX
0000E0 C0000000015C            000398     (11/70)131+         LARL  ZC_R0,ZC_WS_END
0000E6 1B0D                               (11/71)132+         SR    ZC_R0,ZC_R13
0000E8 5000D054                0002EC     (11/72)133+         ST    ZC_R0,ZC_WS_LEN     SAVE LENGTH OF WS IN WS PREFIX
0000EC                                    (11/73)134+         DROP  ZC_R15              RPI 1042
LISTUSE TESTCAL3 ESD=0001 LOC=00000298 LEN=01000 REG=D OFF=00000 LAB=
LISTUSE TESTCAL3 ESD=0001 LOC=00000008 LEN=01000 REG=8 OFF=00000 LAB=
LISTUSE ZC390CVT ESD=0003 LOC=00000000 LEN=01000 REG=9 OFF=00000 LAB=
000294                                    (11/74)135+ZC_WSLOC LOCTR 
000298                                    (11/75)136+ZC_WS    DS    0D           START WORKING STORAGE
000000                                    (11/81)137+ZC390CVT DSECT 
000000                                    (12/31)138=ZCVT_ID            DC    C'ZCVT'             ZCVT ID  VERIFIED BY ZCOB
000004                                    (12/32)139=ZCVT_LEN           DC    A(ZCVT_END-ZCVT_ID) ZCVT LEN VERIFIED BY ZCOB
000008                                    (12/33)140=ZCVT_VER           DC    CL8'V1.5.06'    ZCVT VER VERIFIED BY ZC390NUC
000010                                    (12/34)141=ZCVT_ZC390NUC  DC V(ZC390NUC)      MODULE  SYSTEM ROUTINE MODULE INIT
000014                                    (12/35)142=ZCVT_CALL           DC V(CALL)       ENTRY R0=A(PGM),R1=A(PARMLIST)
000018                                    (12/36)143=ZCVT_CMP64R32       DC V(CMP64R32)   ENTRY COMPARE R0-1=FLD1 R2-3=FLD2
00001C                                    (12/37)144=ZCVT_CVTLBTQ        DC V(CVTLBTQ)    ENTRY CVT LB IN F4-6 TO Q IN R0-1
000020                                    (12/38)145=ZCVT_CVTLDTP        DC V(CVTLDTP)    ENTRY CVT LD IN F0-2 TO PL31 R0-1
000024                                    (12/39)146=ZCVT_CVTQTLB        DC V(CVTQTLB)    ENTRY CVT Q IN R0-1 TO LB IN F4-6
000028                                    (12/40)147=ZCVT_DIV64R32       DC V(DIV64R32)   ENTRY DIVIDE R0-1=N64, R2-3=MAX64
00002C                                    (12/41)148=ZCVT_DIVQ128        DC V(DIVQ128)    ENTRY DIVIDE Q128 R0-R1 BY R2-R3
000030                                    (12/42)149=ZCVT_GOBACK         DC V(GOBACK)     ENTRY R1=RC
000034                                    (12/43)150=ZCVT_MPYQ128        DC V(MPYQ128)    ENTRY MULTIPLY Q128 R0-R1 BY R2-R3
000038                                    (12/44)151=ZCVT_OSE64R32       DC V(OSE64R32)   ENTRY ON SIZE ERR R0-1=N, R2-3=MAX
00003C                                    (12/45)152=ZCVT_PERFORM        DC V(PERFORM)    ENTRY R14=PGTAR,R0=PGEXT,R1=PMRET
000040                                    (12/46)153=ZCVT_PMCHECK        DC V(PMCHECK)    ENTRY R14=RETURN TO NEXT INSTR.
000044                                    (12/47)154=ZCVT_ROUNDF         DC V(ROUNDF)     ENTRY R0=REM,R1=QUO,R2=DIVISOR
000048                                    (12/48)155=ZCVT_STACKORG       DC V(STACKORG)   ENTRY PERFORM STACK ORIGIN
00004C                                    (12/49)156=ZCVT_STACKPTR       DC V(STACKPTR)   ENTRY CUR ENTRY A(PG_END+4,RET)
000050                                    (12/50)157=ZCVT_STACKEND       DC V(STACKEND)   ENTRY PERFORM STACK END
000054                                    (12/51)158=ZCVT_STOPRUN        DC V(STOPRUN)    ENTRY R1=RC
000058                                    (12/52)159=ZCVT_TALPHAX        DC V(TALPHAX)    ENTRY TEST ALPHABETIC X
00005C                                    (12/53)160=ZCVT_TNUMP          DC V(TNUMP)      ENTRY TEST NUMERIC P
000060                                    (12/54)161=ZCVT_TNUMX          DC V(TNUMX)      ENTRY TEST NUMERIC X
000064                                    (12/55)162=ZCVT_TNUMZ          DC V(TNUMZ)      ENTRY TEST NUMERIC Z
000068                                    (12/56)163=*
000068                                    (12/57)164=* ADDITIONAL SEPARATE MODULES LINKED WITH Z390NUC IN ZC390LIB.390
000068                                    (12/58)165=*
000068                                    (12/59)166=ZCVT_ABORT     DC V(ABORT)         MODULE  R1=ABORT ERROR MSG #
00006C                  00000001          (12/60)167=ZCVT_ABORT_ALTER   EQU    1 ABORT ALTER DUE TO BRC NOT FOUND AT TARGET
00006C                  00000002          (12/61)168=ZCVT_ABORT_CALL    EQU    2 ABORT DYNAMIC CALL - PGM NOT FOUND
00006C                  00000003          (12/62)169=ZCVT_ABORT_DISPLAY EQU    3 ABORT DISPLAY DUE TO BUFFER EXCEEDED
00006C                  00000004          (12/63)170=ZCVT_ABORT_OPEN    EQU    4 ABORT OPEN  INVALID DCB
00006C                  00000006          (12/64)171=ZCVT_ABORT_STACK   EQU    6 ABORT PEROFRM STACK OVERFLOW
00006C                  00000007          (12/65)172=ZCVT_ABORT_VERSION EQU    7 ABORT ZC390NUC INIT ZCOBOL VERSION ERROR
00006C                  00000008          (12/66)173=ZCVT_ABORT_INT128  EQU    8 ABORT INTEGER 128 CONVERSION OVERFLO
00006C                  00000009          (12/67)174=ZCVT_ABORT_DIVQ    EQU    9 ABORT DIVIDE Q IF DIVISOR 0 OR > 2**63
00006C                  0000000A          (12/68)175=ZCVT_ABORT_CICS    EQU   10 ABORT THIS PGM REQUIRES EXEC CICS TRANS MGR
00006C                  0000000B          (12/69)176=ZCVT_ABORT_ACCEPT  EQU   11 ABORT ACCEPT EOF
00006C                  0000000B          (12/70)177=ZCVT_ABORT_MAXERR  EQU   11 ABORT MAX ERROR CODE
00006C                                    (12/71)178=ZCVT_ACCEPT    DC V(ACCEPT)        MODULE  R1=A(TYPE,FLD_ADD,FLD_LEN)
000070                  00000001          (12/72)179=ZCVT_ACCEPT_DEFAULT EQU   1 INPUT DEFAULT DDNAME=SYSIN
000070                  00000002          (12/73)180=ZCVT_ACCEPT_CONSOLE EQU   2 INPUT VIA WTOR FROM CONSOLE
000070                  00000003          (12/74)181=ZCVT_ACCEPT_DDNAME  EQU   3 INPUT FROM DDNAME WITH DDNAME ADDR IN R3
000070                  00000004          (12/75)182=ZCVT_ACCEPT_DATE    EQU   4 RETURN DAY OF WEEK PIC 9(8) MMDDYYYY
000070                  00000005          (12/76)183=ZCVT_ACCEPT_TIME    EQU   5 RETURN DAY OF WEEK PIC 9(8) HHMMSSTH
000070                  00000006          (12/77)184=ZCVT_ACCEPT_DOW     EQU   6 RETURN DAY OF WEEK PIC 9 1-7
000070                                    (12/78)185=ZCVT_DISPLAY   DC V(DISPLAY)       MODULE  R1=A(ADDR,LEN,TYPE)
000074                                    (12/79)186=ZCVT_INSPECT   DC V(INSPECT)       MODULE  R0=TYPE,R1=PARMLIST
000078                  00000000          (12/80)187=ZCVT_TALLYING      EQU   0 INSPECT TALLYING
000078                  00000004          (12/81)188=ZCVT_REPLACING     EQU   4 INSPECT REPLACING
000078                  00000008          (12/82)189=ZCVT_CONVERTING    EQU   8 INSPECT CONVERTING
000078                                    (12/83)190=*
000078                                    (12/84)191=* SHARED DATA AREAS
000078                                    (12/85)192=*
000078                                    (12/86)193=ZCVT_PVTMAXDL  DS H          MAXIMUM DISPLAY LINE LENGTH  RPI 1118
000080                                    (12/87)194=               DS 0D
000080                                    (12/88)195=ZCVT_ZERO      DC XL16'00'   BINARY ZEROS
000090                                    (12/89)196=ZCVT_HIGH_VALUES DC 0XL16,16X'FF' BINARY FF'S     RPI 1181
0000A0                                    (12/90)197=ZCVT_PWORK     DS PL8        CVD/CVB WORK
0000A8                                    (12/91)198=ZCVT_PWORK1    DS PL16       DIV DIVIDEND, CVDG/CVBG WORK
0000B8                                    (12/92)199=ZCVT_PWORK2    DS PL16       DIV DIVISOR
0000C8                                    (12/93)200=ZCVT_PWORK3    DS PL16       DIV QUOTIENT
0000D8                                    (12/94)201=ZCVT_PWORK4    DS PL16       DIV REMAINDER
0000E8                                    (12/95)202=ZCVT_NDDX      DS XL16       DIV DIVIDEND HOLD AREA
0000F8                                    (12/96)203=ZCVT_WORKAREA  DS XL256      GEN_INSPECT PARMS, GEN_EDIT WORK, ETC.
0001F8                                    (12/97)204=*
0001F8                                    (12/98)205=* END OF ZC390CVT
0001F8                                    (12/99)206=*
0001F8                  000001F8         (12/100)207=ZCVT_END   EQU   *
000000                                    (11/83)208+ZC390PVT DSECT 
000000                                    (13/11)209=PVTPGM   DS    CL8  ZCOBOL PGM NAME
000008                                    (13/12)210=PVTDATE  DS    CL8  ZCOBOL COMPILE DATE
000010                                    (13/13)211=PVTTIME  DS    CL8  ZCOBOL COMPILE TIME
000018                                    (13/14)212=PVTVER   DS    CL8  ZCOBOL COMPILER VERSION
000020                                    (13/15)213=PVTCICS  DS    C    ZCOBOL EXEC CICS PGM
000021                                    (13/16)214=PVTEXTND DS    C    ZCOBOL EXTENDED PRECISION
000022                                    (13/17)215=PVTTRUNC DS    C    ZCOBOL TRUNCATE TO PICTURE
000023                                    (13/18)216=PVTR64   DS    C    ZCOBOL USE 64 BIT REGISTERS
000024                                    (13/19)217=PVTMAXDL DS    H    ZCOBOL MAX DISPLAY LINE LENGTH
000026                                    (13/20)218=         DS    XL10 RESERVED
000298                                    (11/85)219+ZC_WSLOC LOCTR              CONTINUE WS FOR FD AND DATA
000298                                      (1/9)220 *        AUTHOR.        DON HIGGINS.
000298                                     (1/11)221 *        DATE-WRITTEN.  12/02/08.
000298                                     (1/12)222 *      ***************************************************************
000298                                     (1/13)223 *      * REGRESSION TEST CALL
000298                                     (1/14)224 *      *  FROM TESTCAL1.CBL TO TESTCAL2.CBL STATIC LINKED
000298                                     (1/15)225 *      *  FROM TESTCBL2.CBL TO TESTCBL3.CBL DYNAMIC LINK
000298                                     (1/16)226 *      *  FROM TESTCBL3.CBL TO TESTASM4.MLC STATIC LINK
000298                                     (1/17)227 *      * USING BY VALUE PARM1 BY REFERENCE PARM2.
000298                                     (1/18)228 *      ***************************************************************
000298                                     (1/20)229 *        ENVIRONMENT DIVISION.
000298                                     (1/22)230 *        DATA DIVISION.
000298                                    (28/23)231+         PRINT DATA
000298                                     (1/24)232 *        WORKING-STORAGE SECTION.
000298                                     (1/26)233 *        LINKAGE SECTION.
000298                                     (1/28)234 *        01 PARM1 PIC X(20).
000298                                     (1/30)235 *        01 PARM2 PIC X(20).
000298                                     (1/33)236 *        PROCEDURE DIVISION USING PARM1 PARM2.
000298                                     (1/34)237 *ZC   PROCEDURE DIVISION,USING,PARM1,PARM2
000298                                    (32/18)238+         PRINT LIST,GEN,LISTUSE TURN PRINT LISTING ON FOR USER CODE GEN
0000EC                                    (32/19)239+TESTCAL3 CSECT                SWITCH TO PROCEDURE CODE AHEAD OF WS
0000EC 58020000                           (32/70)240+         L     ZC_R0,0(ZC_R2)          LOAD PARM ADDR FROM PARMLIST
0000F0 5000D0BB                000353     (32/72)241+         ST    ZC_R0,ZC_PARM1_PTR STORE PARM POINTER
0000F4 58020004                           (32/70)242+         L     ZC_R0,4(ZC_R2)          LOAD PARM ADDR FROM PARMLIST
0000F8 5000D0BF                000357     (32/72)243+         ST    ZC_R0,ZC_PARM2_PTR STORE PARM POINTER
0000FC                                     (1/36)244 *        MAINLINE.
0000FC                                     (8/96)245+PG_MAINLINE DS 0H
0000FC                                     (1/38)246 *            DISPLAY 'TESTCAL3 STARTING'
0000FC                                     (1/39)247 *ZC     20         DISPLAY 'TESTCAL3 STARTING'
0000FC A715000D                000116     (18/49)248+         BRAS  1,*+(WTO#0106_EOT-*+1)/2*2
000100 00150000E3C5E2E3                   (18/50)249+         DC    AL2(WTO#0106_EOT-*,0),C'TESTCAL3 STARTING'
000108 C3C1D3F340E2E3C1
000110 D9E3C9D5C7
000115                  00000115          (18/51)250+WTO#0106_EOT     EQU *
000116 0A23                               (18/52)251+         SVC   35
000118                                     (1/41)252 *            DISPLAY 'TESTCAL3 PARM1 =' PARM1
000118                                     (1/42)253 *ZC     21         DISPLAY 'TESTCAL3 PARM1 =',PARM1
000118 413090F8                0000F8     (38/28)254+         LA    ZC_R3,ZCVT_WORKAREA  ZC_R3=CVT LIST WORK AREA
00011C C000000000AA            000270     (38/68)255+         LARL  ZC_R0,=CL16'TESTCAL3 PARM1 =' PAD TO EVEN LEN LIT
000122 41100010                           (38/69)256+         LA    ZC_R1,16
000126 412000E7                           (38/70)257+         LA    ZC_R2,C'X'
00012A 90023000                           (38/71)258+         STM   ZC_R0,ZC_R2,0(ZC_R3)  SET DISPLAY LIST ENTRY
00012E 5850D0BB                000353    (35/111)259+         L     ZC_R5,ZC_PARM1_PTR
000132                                   (35/119)260+         USING PARM1_DSECT,ZC_R5
LISTUSE TESTCAL3 ESD=0001 LOC=00000298 LEN=01000 REG=D OFF=00000 LAB=
LISTUSE TESTCAL3 ESD=0001 LOC=00000008 LEN=01000 REG=8 OFF=00000 LAB=
LISTUSE ZC390CVT ESD=0003 LOC=00000000 LEN=01000 REG=9 OFF=00000 LAB=
LISTUSE PARM1_DSECT ESD=0006 LOC=00000000 LEN=01000 REG=5 OFF=00000 LAB=
000132 41005000                000000     (38/82)261+         LA    ZC_R0,PARM1
000136 41100014                           (38/83)262+         LA    ZC_R1,20  RPI 1182 WAS &SYM_LEN(&FIELD_IX)
00013A 412000E7                           (38/88)263+         LA    ZC_R2,C'X'
00013E 9002300C                           (38/90)264+         STM   ZC_R0,ZC_R2,12(ZC_R3)  SET DISPLAY LIST ENTRY
000142 96803014                           (38/94)265+         OI    24-4(ZC_R3),X'80' SET VL BIT IN LAST WORD OF PARM LIST
000146 1813                               (38/95)266+         LR    ZC_R1,ZC_R3
000148 58F09070                000070     (38/96)267+         L     ZC_R15,ZCVT_DISPLAY
00014C 0DEF                               (38/97)268+         BASR  ZC_R14,ZC_R15
00014E                                     (1/44)269 *            DISPLAY 'TESTCAL3 PARM2 =' PARM2
00014E                                     (1/45)270 *ZC     22         DISPLAY 'TESTCAL3 PARM2 =',PARM2
00014E 413090F8                0000F8     (38/28)271+         LA    ZC_R3,ZCVT_WORKAREA  ZC_R3=CVT LIST WORK AREA
000152 C00000000097            000280     (38/68)272+         LARL  ZC_R0,=CL16'TESTCAL3 PARM2 =' PAD TO EVEN LEN LIT
000158 41100010                           (38/69)273+         LA    ZC_R1,16
00015C 412000E7                           (38/70)274+         LA    ZC_R2,C'X'
000160 90023000                           (38/71)275+         STM   ZC_R0,ZC_R2,0(ZC_R3)  SET DISPLAY LIST ENTRY
000164 5840D0BF                000357    (35/128)276+         L     ZC_R4,ZC_PARM2_PTR
000168                                   (35/136)277+         USING PARM2_DSECT,ZC_R4
LISTUSE TESTCAL3 ESD=0001 LOC=00000298 LEN=01000 REG=D OFF=00000 LAB=
LISTUSE TESTCAL3 ESD=0001 LOC=00000008 LEN=01000 REG=8 OFF=00000 LAB=
LISTUSE ZC390CVT ESD=0003 LOC=00000000 LEN=01000 REG=9 OFF=00000 LAB=
LISTUSE PARM1_DSECT ESD=0006 LOC=00000000 LEN=01000 REG=5 OFF=00000 LAB=
LISTUSE PARM2_DSECT ESD=0007 LOC=00000000 LEN=01000 REG=4 OFF=00000 LAB=
000168 41004000                000000     (38/82)278+         LA    ZC_R0,PARM2
00016C 41100014                           (38/83)279+         LA    ZC_R1,20  RPI 1182 WAS &SYM_LEN(&FIELD_IX)
000170 412000E7                           (38/88)280+         LA    ZC_R2,C'X'
000174 9002300C                           (38/90)281+         STM   ZC_R0,ZC_R2,12(ZC_R3)  SET DISPLAY LIST ENTRY
000178 96803014                           (38/94)282+         OI    24-4(ZC_R3),X'80' SET VL BIT IN LAST WORD OF PARM LIST
00017C 1813                               (38/95)283+         LR    ZC_R1,ZC_R3
00017E 58F09070                000070     (38/96)284+         L     ZC_R15,ZCVT_DISPLAY
000182 0DEF                               (38/97)285+         BASR  ZC_R14,ZC_R15
000184                                     (1/47)286 *            CALL 'TESTASM4' USING BY VALUE PARM1
000184                                     (1/48)287 *                                  BY REFERENCE PARM2.
000184                                     (1/50)288 *ZC     23         CALL  'TESTASM4',USING,BY,VALUE,PARM1,BY,REFERENCE,PARM2
000184 D213D0CF5000     000367 000000    (41/107)290+         MVC   ZC_CALL_VALUE_4,PARM1  ALIGN LEFT X OTHER
00018A 4100D0CF                000367     (40/76)291+         LA    ZC_R0,ZC_CALL_VALUE_4
00018E 5000D0C7                00035F     (40/77)292+         ST    ZC_R0,ZC_CALL_LIST_3+0
000192 41004000                000000     (40/54)293+         LA    ZC_R0,PARM2
000196 5000D0CB                000363     (40/55)294+         ST    ZC_R0,ZC_CALL_LIST_3+4
00019A 9680D0CB                000363    (40/113)295+         OI    ZC_CALL_LIST_3+8-4,X'80'
00019E 4110D0C7                00035F    (40/114)296+         LA    ZC_R1,ZC_CALL_LIST_3
0001A2 C4FD00000077            000290    (40/123)297+         LRL   ZC_R15,=V(TESTASM4)
0001A8 0DEF                              (40/124)298+         BASR  ZC_R14,ZC_R15
0001AA                                     (1/53)299 *            CALL 'TESTASM4' USING BY VALUE PARM1
0001AA                                     (1/54)300 *                                  BY REFERENCE PARM2.
0001AA                                     (1/56)301 *ZC     25         CALL  'TESTASM4',USING,BY,VALUE,PARM1,BY,REFERENCE,PARM2
0001AA D213D0EB5000     000383 000000    (41/107)303+         MVC   ZC_CALL_VALUE_6,PARM1  ALIGN LEFT X OTHER
0001B0 4100D0EB                000383     (40/76)304+         LA    ZC_R0,ZC_CALL_VALUE_6
0001B4 5000D0E3                00037B     (40/77)305+         ST    ZC_R0,ZC_CALL_LIST_5+0
0001B8 41004000                000000     (40/54)306+         LA    ZC_R0,PARM2
0001BC 5000D0E7                00037F     (40/55)307+         ST    ZC_R0,ZC_CALL_LIST_5+4
0001C0 9680D0E7                00037F    (40/113)308+         OI    ZC_CALL_LIST_5+8-4,X'80'
0001C4 4110D0E3                00037B    (40/114)309+         LA    ZC_R1,ZC_CALL_LIST_5
0001C8 C4FD00000064            000290    (40/123)310+         LRL   ZC_R15,=V(TESTASM4)
0001CE 0DEF                              (40/124)311+         BASR  ZC_R14,ZC_R15
0001D0                                     (1/59)312 *            DISPLAY 'TESTCAL3 PARM1 =' PARM1
0001D0                                     (1/60)313 *ZC     27         DISPLAY 'TESTCAL3 PARM1 =',PARM1
0001D0 413090F8                0000F8     (38/28)314+         LA    ZC_R3,ZCVT_WORKAREA  ZC_R3=CVT LIST WORK AREA
0001D4 C0000000004E            000270     (38/68)315+         LARL  ZC_R0,=CL16'TESTCAL3 PARM1 =' PAD TO EVEN LEN LIT
0001DA 41100010                           (38/69)316+         LA    ZC_R1,16
0001DE 412000E7                           (38/70)317+         LA    ZC_R2,C'X'
0001E2 90023000                           (38/71)318+         STM   ZC_R0,ZC_R2,0(ZC_R3)  SET DISPLAY LIST ENTRY
0001E6 41005000                000000     (38/82)319+         LA    ZC_R0,PARM1
0001EA 41100014                           (38/83)320+         LA    ZC_R1,20  RPI 1182 WAS &SYM_LEN(&FIELD_IX)
0001EE 412000E7                           (38/88)321+         LA    ZC_R2,C'X'
0001F2 9002300C                           (38/90)322+         STM   ZC_R0,ZC_R2,12(ZC_R3)  SET DISPLAY LIST ENTRY
0001F6 96803014                           (38/94)323+         OI    24-4(ZC_R3),X'80' SET VL BIT IN LAST WORD OF PARM LIST
0001FA 1813                               (38/95)324+         LR    ZC_R1,ZC_R3
0001FC 58F09070                000070     (38/96)325+         L     ZC_R15,ZCVT_DISPLAY
000200 0DEF                               (38/97)326+         BASR  ZC_R14,ZC_R15
000202                                     (1/62)327 *            DISPLAY 'TESTCAL3 PARM2 =' PARM2
000202                                     (1/63)328 *ZC     28         DISPLAY 'TESTCAL3 PARM2 =',PARM2
000202 413090F8                0000F8     (38/28)329+         LA    ZC_R3,ZCVT_WORKAREA  ZC_R3=CVT LIST WORK AREA
000206 C0000000003D            000280     (38/68)330+         LARL  ZC_R0,=CL16'TESTCAL3 PARM2 =' PAD TO EVEN LEN LIT
00020C 41100010                           (38/69)331+         LA    ZC_R1,16
000210 412000E7                           (38/70)332+         LA    ZC_R2,C'X'
000214 90023000                           (38/71)333+         STM   ZC_R0,ZC_R2,0(ZC_R3)  SET DISPLAY LIST ENTRY
000218 41004000                000000     (38/82)334+         LA    ZC_R0,PARM2
00021C 41100014                           (38/83)335+         LA    ZC_R1,20  RPI 1182 WAS &SYM_LEN(&FIELD_IX)
000220 412000E7                           (38/88)336+         LA    ZC_R2,C'X'
000224 9002300C                           (38/90)337+         STM   ZC_R0,ZC_R2,12(ZC_R3)  SET DISPLAY LIST ENTRY
000228 96803014                           (38/94)338+         OI    24-4(ZC_R3),X'80' SET VL BIT IN LAST WORD OF PARM LIST
00022C 1813                               (38/95)339+         LR    ZC_R1,ZC_R3
00022E 58F09070                000070     (38/96)340+         L     ZC_R15,ZCVT_DISPLAY
000232 0DEF                               (38/97)341+         BASR  ZC_R14,ZC_R15
000234                                     (1/65)342 *            DISPLAY 'TESTCAL3 ENDING OK'
000234                                     (1/66)343 *ZC     29         DISPLAY 'TESTCAL3 ENDING OK'
000234 A715000D                00024E     (18/49)344+         BRAS  1,*+(WTO#0169_EOT-*+1)/2*2
000238 00160000E3C5E2E3                   (18/50)345+         DC    AL2(WTO#0169_EOT-*,0),C'TESTCAL3 ENDING OK'
000240 C3C1D3F340C5D5C4
000248 C9D5C740D6D2
00024E                  0000024E          (18/51)346+WTO#0169_EOT     EQU *
00024E 0A23                               (18/52)347+         SVC   35
000250                                     (1/68)348 *            GOBACK.
000250                                     (1/69)349 *ZC     30         GOBACK
000250 4810D0B9                000351     (44/18)350+         LH    ZC_R1,RETURN_CODE      PASS RETURN CODE IN R1
000254 58F09030                000030     (44/23)351+         L     ZC_R15,ZCVT_GOBACK
000258 07FF                               (44/24)352+         BR    ZC_R15
00025A 58F09040                000040      (8/64)353+PG_MAINLINE_END L ZC_R15,ZCVT_PMCHECK
00025E 0DEF                                (8/65)354+         BASR  ZC_R14,ZC_R15 CHECK FOR END OF CURRENT PERFORM
000260                                    (8/108)355+SN_END_PROCEDURE DS 0H SECTION
000260                                    (46/12)356+         DROP     ZC_R4
LISTUSE TESTCAL3 ESD=0001 LOC=00000298 LEN=01000 REG=D OFF=00000 LAB=
LISTUSE TESTCAL3 ESD=0001 LOC=00000008 LEN=01000 REG=8 OFF=00000 LAB=
LISTUSE ZC390CVT ESD=0003 LOC=00000000 LEN=01000 REG=9 OFF=00000 LAB=
LISTUSE PARM1_DSECT ESD=0006 LOC=00000000 LEN=01000 REG=5 OFF=00000 LAB=
000260                                    (46/12)357+         DROP     ZC_R5
LISTUSE TESTCAL3 ESD=0001 LOC=00000298 LEN=01000 REG=D OFF=00000 LAB=
LISTUSE TESTCAL3 ESD=0001 LOC=00000008 LEN=01000 REG=8 OFF=00000 LAB=
LISTUSE ZC390CVT ESD=0003 LOC=00000000 LEN=01000 REG=9 OFF=00000 LAB=
000260                                    (45/18)358+*        PROCEDURE END
000260 4810D0B9                000351     (45/24)359+         LH    ZC_R1,RETURN_CODE
000264 58F09030                000030     (45/25)360+         L     ZC_R15,ZCVT_GOBACK
000268 0DEF                               (45/26)361+         BASR  ZC_R14,ZC_R15
00026A                                    (45/32)362+         LTORG 
000270 E3C5E2E3C3C1D3F3 =CL16'TESTCAL3 PARM1 ='
000278 40D7C1D9D4F1407E
000280 E3C5E2E3C3C1D3F3 =CL16'TESTCAL3 PARM2 ='
000288 40D7C1D9D4F2407E
000290 00000000         =V(TESTASM4)
000294                                     (6/15)363+*    ZCOBOL WORKING STORAGE SECTION DATA ITEMS 
000294                                     (6/15)364+*    LVL DATA NAME                      ADDR     LEN      DUP TYP PIC        VALUE 
000294                                     (6/15)366+*    01  ZC_SAVEAREA                    00000000 00000048 1   X   X(72)       
000294                                     (6/15)368+*    01  ZC_WS_ID                       00000048 00000008 1   X   X(8)       ''WS*WS*WS'' 
000294                                     (6/15)370+*    01  ZC_WS_START                    00000050 00000004 1   A               
000294                                     (6/15)372+*    01  ZC_WS_LEN                      00000054 00000004 1   F   9(9)        
000294                                     (6/15)374+*    01  FILLER                         00000058 00000000 1   X               
000294                                     (6/15)376+*    01  ZC_WS_ID1                      00000058 00000007 1   X   X(7)       ''ZCWSID1'' 
000294                                     (6/15)378+*    01  DEBUG_ITEM                     0000005F 00000058 1   X               
000294                                     (6/15)380+*    02  DEBUG_LINE                     0000005F 00000006 1   X   X(6)        
000294                                     (6/15)382+*    02  FILLER                         00000065 00000001 1   X   X          SPACE 
000294                                     (6/15)384+*    02  DEBUG_NAME                     00000066 0000001E 1   X   X(30)       
000294                                     (6/15)386+*    02  FILLER                         00000084 00000001 1   X   X          SPACE 
000294                                     (6/15)388+*    02  DEBUG_SUB_1                    00000085 00000004 1   Z   9999        
000294                                     (6/15)390+*    02  FILLER                         00000089 00000001 1   X   X          SPACE 
000294                                     (6/15)392+*    02  DEBUG_SUB_2                    0000008A 00000004 1   Z   9999        
000294                                     (6/15)394+*    02  FILLER                         0000008E 00000001 1   X   X          SPACE 
000294                                     (6/15)396+*    02  DEBUG_SUB_3                    0000008F 00000004 1   Z   9999        
000294                                     (6/15)398+*    02  FILLER                         00000093 00000001 1   X   X          SPACE 
000294                                     (6/15)400+*    02  DEBUG_CONTENTS                 00000094 00000023 1   X   X(35)       
000294                                     (6/15)402+*    01  TRUE                           000000B7 00000001 1   Z   9          1 
000294                                     (6/15)404+*    01  FALSE                          000000B8 00000001 1   Z   9          0 
000294                                     (6/15)406+*    01  RETURN_CODE                    000000B9 00000002 1   H   9(4)       0 
000294                                     (6/15)408+*    01  ZC_PARM1_PTR                   000000BB 00000004 1   A               
000294                                     (6/15)410+*    01  ZC_PARM2_PTR                   000000BF 00000004 1   A               
000294                                     (6/15)412+*    01  ZC_ZC_LK_END_PTR               000000C3 00000004 1   A               
000294                                     (6/15)414+*    01  ZC_CALL_LIST_3                 000000C7 00000008 1   X   X(8)        
000294                                     (6/15)416+*    01  ZC_CALL_VALUE_4                000000CF 00000014 1   X   X(20)       
000294                                     (6/15)418+*    01  ZC_CALL_LIST_5                 000000E3 00000008 1   X   X(8)        
000294                                     (6/15)420+*    01  ZC_CALL_VALUE_6                000000EB 00000014 1   X   X(20)       
000298                                    (48/39)422+ZC_WSLOC LOCTR 
000298                  00000000         (48/131)423+ZC_WS_LOC_1  EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000298                                   (48/336)424+ZC_SAVEAREA DS CL72
0002E0                  00000048         (48/131)425+ZC_WS_LOC_2  EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
0002E0 E6E25CE6E25CE6E2                  (48/220)426+ZC_WS_ID DC CL8'WS*WS*WS'
0002E8                  00000050         (48/131)427+ZC_WS_LOC_3  EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
0002E8                                   (48/322)428+ZC_WS_START DS AL4
0002EC                  00000054         (48/131)429+ZC_WS_LOC_4  EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
0002EC                                   (48/324)430+ZC_WS_LEN DS FL4
0002F0                  00000058         (48/131)431+ZC_WS_LOC_5  EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
0002F0                                   (48/336)432+         DS  0CL0
0002F0                  00000058         (48/131)433+ZC_WS_LOC_6  EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
0002F0 E9C3E6E2C9C4F1                    (48/220)434+ZC_WS_ID1 DC CL7'ZCWSID1'
0002F7                  0000005F         (48/131)435+ZC_WS_LOC_10 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
0002F7                                   (48/336)436+DEBUG_ITEM DS 0CL88
0002F7                  0000005F         (48/131)437+ZC_WS_LOC_11 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
0002F7                                   (48/336)438+DEBUG_LINE DS CL6
0002FD                  00000065         (48/131)439+ZC_WS_LOC_12 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
0002FD 40                                (48/227)440+         DC CL1' '
0002FE                  00000066         (48/131)441+ZC_WS_LOC_13 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
0002FE                                   (48/336)442+DEBUG_NAME DS CL30
00031C                  00000084         (48/131)443+ZC_WS_LOC_14 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
00031C 40                                (48/227)444+         DC CL1' '
00031D                  00000085         (48/131)445+ZC_WS_LOC_15 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
00031D                                   (48/338)446+DEBUG_SUB_1 DS ZL4
000321                  00000089         (48/131)447+ZC_WS_LOC_16 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000321 40                                (48/227)448+         DC CL1' '
000322                  0000008A         (48/131)449+ZC_WS_LOC_17 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000322                                   (48/338)450+DEBUG_SUB_2 DS ZL4
000326                  0000008E         (48/131)451+ZC_WS_LOC_18 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000326 40                                (48/227)452+         DC CL1' '
000327                  0000008F         (48/131)453+ZC_WS_LOC_19 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000327                                   (48/338)454+DEBUG_SUB_3 DS ZL4
00032B                  00000093         (48/131)455+ZC_WS_LOC_20 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
00032B 40                                (48/227)456+         DC CL1' '
00032C                  00000094         (48/131)457+ZC_WS_LOC_21 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
00032C                                   (48/336)458+DEBUG_CONTENTS DS CL35
00034F                  000000B7         (48/131)459+ZC_WS_LOC_22 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
00034F F1                                (48/251)460+TRUE     DC CL1'1'
000350                  000000B8         (48/131)461+ZC_WS_LOC_23 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000350 F0                                (48/251)462+FALSE    DC CL1'0'
000351                  000000B9         (48/131)463+ZC_WS_LOC_24 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000351 0000                              (48/199)464+RETURN_CODE DC AL2(0)                  RPI 1065
000353                  000000BB         (48/131)465+ZC_WS_LOC_25 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000353                                   (48/322)466+ZC_PARM1_PTR DS AL4
000357                  000000BF         (48/131)467+ZC_WS_LOC_26 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000357                                   (48/322)468+ZC_PARM2_PTR DS AL4
00035B                  000000C3         (48/131)469+ZC_WS_LOC_27 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
00035B                                   (48/322)470+ZC_ZC_LK_END_PTR DS AL4
00035F                  000000C7         (48/131)471+ZC_WS_LOC_28 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
00035F                                   (48/336)472+ZC_CALL_LIST_3 DS CL8
000367                  000000CF         (48/131)473+ZC_WS_LOC_29 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000367                                   (48/336)474+ZC_CALL_VALUE_4 DS CL20
00037B                  000000E3         (48/131)475+ZC_WS_LOC_30 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
00037B                                   (48/336)476+ZC_CALL_LIST_5 DS CL8
000383                  000000EB         (48/131)477+ZC_WS_LOC_31 EQU *-ZC_WS CHECK &SYM_NAME(&I) WS LOC
000383                                   (48/336)478+ZC_CALL_VALUE_6 DS CL20
000397                                     (6/15)479+*    ZCOBOL LINKAGE SECTION DATA ITEMS 
000397                                     (6/15)480+*    LVL DATA NAME                      ADDR     LEN      DUP TYP PIC        VALUE 
000397                                     (6/15)482+*    01  PARM1                          00000000 00000014 1   X   X(20)       
000397                                     (6/15)484+*    01  PARM2                          00000000 00000014 1   X   X(20)       
000397                                     (6/15)486+*    01  ZC_LK_END                      00000000 00000001 1   X   X           
000397                                    (48/39)488+ZC_WSLOC LOCTR 
000000                                    (48/80)489+PARM1_DSECT DSECT 
000000                  00000000         (48/128)490+ZC_LK_LOC_7  EQU *-PARM1 CHECK &SYM_NAME(&I) LK LOC
000000                                   (48/336)491+PARM1    DS  CL20
000000                                    (48/80)492+PARM2_DSECT DSECT 
000000                  00000000         (48/128)493+ZC_LK_LOC_8  EQU *-PARM2 CHECK &SYM_NAME(&I) LK LOC
000000                                   (48/336)494+PARM2    DS  CL20
000000                                    (48/80)495+ZC_LK_END_DSECT DSECT 
000000                  00000000         (48/128)496+ZC_LK_LOC_9  EQU *-ZC_LK_END CHECK &SYM_NAME(&I) LK LOC
000000                                   (48/336)497+ZC_LK_END DS CL1
000397                                    (45/58)498+ZC_WSLOC LOCTR 
000397                  00000000          (45/60)499+ZC_WS_DIFF EQU  *-ZC_WS-255  DIFF BETWEEN ALLOC AND CALC WS
000398                                    (45/65)500+ZC_WS_END DS   0D
000398                                    (49/14)501+         MNOTE *,'ZCOBOL TOTAL SYMBOLS                 = 31'
000398                                    (49/15)502+         MNOTE *,'ZCOBOL TOTAL SYMBOL DUPLICATES       = 0'
000398                                    (49/16)503+         MNOTE *,'ZCOBOL TOTAL SYMBOL MAX DUP CHAIN    = 0'
000398                                    (49/17)504+         MNOTE *,'ZCOBOL TOTAL SYMBOL LEVEL 88         = 0'
000398                                    (49/18)505+         MNOTE *,'ZCOBOL TOTAL SYMBOL SET INDEXES      = 0'
000398                                    (49/19)506+         MNOTE *,'ZCOBOL TOTAL SYMBOL LINKAGE SECTIONS = 3'
000398                                    (49/20)507+         MNOTE *,'ZCOBOL TOTAL PROCEDURE SECTIONS      = 0'
000398                                    (49/21)508+         MNOTE *,'ZCOBOL TOTAL PROCEDURE PARAGRAPHS    = 1'
000398                                    (49/22)509+         MNOTE *,'ZCOBOL TOTAL PROCEDURE PARAGRAPH DUP = 0'
000398                                     (1/73)510          END 
Relocation Definitions
 ESD=0001 LOC=00000290 LEN=4 SIGN=+ XESD=0005

Symbol Table Listing

 SYM=DEBUG_CONTENTS LOC=0000032C LEN=00000023 ESD=0001 TYPE=REL  XREF=458 
 SYM=DEBUG_ITEM LOC=000002F7 LEN=00000058 ESD=0001 TYPE=REL  XREF=436 
 SYM=DEBUG_LINE LOC=000002F7 LEN=00000006 ESD=0001 TYPE=REL  XREF=438 
 SYM=DEBUG_NAME LOC=000002FE LEN=0000001E ESD=0001 TYPE=REL  XREF=442 
 SYM=DEBUG_SUB_1 LOC=0000031D LEN=00000004 ESD=0001 TYPE=REL  XREF=446 
 SYM=DEBUG_SUB_2 LOC=00000322 LEN=00000004 ESD=0001 TYPE=REL  XREF=450 
 SYM=DEBUG_SUB_3 LOC=00000327 LEN=00000004 ESD=0001 TYPE=REL  XREF=454 
 SYM=FALSE    LOC=00000350 LEN=00000001 ESD=0001 TYPE=REL  XREF=462 
 SYM=PARM1    LOC=00000000 LEN=00000014 ESD=0006 TYPE=REL  XREF=491 261 290 303 319 
  490 
 SYM=PARM1_DSECT LOC=00000000 LEN=00000018 ESD=0006 TYPE=DST  XREF=489 260 
 SYM=PARM2    LOC=00000000 LEN=00000014 ESD=0007 TYPE=REL  XREF=494 278 293 306 334 
  493 
 SYM=PARM2_DSECT LOC=00000000 LEN=00000018 ESD=0007 TYPE=DST  XREF=492 277 
 SYM=PFPO_RADIX LOC=00000001 LEN=00000001 ESD=0000 TYPE=ABS  XREF=112 
 SYM=PFPO_RND LOC=00000000 LEN=00000001 ESD=0000 TYPE=ABS  XREF=113 
 SYM=PFPO_TEST LOC=00000080 LEN=00000001 ESD=0000 TYPE=ABS  XREF=111 
 SYM=PFPO_TYPE_DB LOC=00000006 LEN=00000001 ESD=0000 TYPE=ABS  XREF=118 
 SYM=PFPO_TYPE_DD LOC=00000009 LEN=00000001 ESD=0000 TYPE=ABS  XREF=121 
 SYM=PFPO_TYPE_DH LOC=00000001 LEN=00000001 ESD=0000 TYPE=ABS  XREF=115 
 SYM=PFPO_TYPE_EB LOC=00000005 LEN=00000001 ESD=0000 TYPE=ABS  XREF=117 
 SYM=PFPO_TYPE_ED LOC=00000008 LEN=00000001 ESD=0000 TYPE=ABS  XREF=120 
 SYM=PFPO_TYPE_EH LOC=00000000 LEN=00000001 ESD=0000 TYPE=ABS  XREF=114 
 SYM=PFPO_TYPE_LB LOC=00000007 LEN=00000001 ESD=0000 TYPE=ABS  XREF=119 
 SYM=PFPO_TYPE_LD LOC=0000000A LEN=00000001 ESD=0000 TYPE=ABS  XREF=122 
 SYM=PFPO_TYPE_LH LOC=00000002 LEN=00000001 ESD=0000 TYPE=ABS  XREF=116 
 SYM=PG_MAINLINE LOC=000000FC LEN=00000002 ESD=0001 TYPE=REL  XREF=245 
 SYM=PG_MAINLINE_END LOC=0000025A LEN=00000004 ESD=0001 TYPE=REL  XREF=353 
 SYM=PVTCICS  LOC=00000020 LEN=00000001 ESD=0004 TYPE=REL  XREF=213 
 SYM=PVTDATE  LOC=00000008 LEN=00000008 ESD=0004 TYPE=REL  XREF=210 
 SYM=PVTEXTND LOC=00000021 LEN=00000001 ESD=0004 TYPE=REL  XREF=214 
 SYM=PVTMAXDL LOC=00000024 LEN=00000002 ESD=0004 TYPE=REL  XREF=217 
 SYM=PVTPGM   LOC=00000000 LEN=00000008 ESD=0004 TYPE=REL  XREF=209 
 SYM=PVTR64   LOC=00000023 LEN=00000001 ESD=0004 TYPE=REL  XREF=216 
 SYM=PVTTIME  LOC=00000010 LEN=00000008 ESD=0004 TYPE=REL  XREF=211 
 SYM=PVTTRUNC LOC=00000022 LEN=00000001 ESD=0004 TYPE=REL  XREF=215 
 SYM=PVTVER   LOC=00000018 LEN=00000008 ESD=0004 TYPE=REL  XREF=212 
 SYM=RETURN_CODE LOC=00000351 LEN=00000002 ESD=0001 TYPE=REL  XREF=464 350 359 
 SYM=SN_END_PROCEDURE LOC=00000260 LEN=00000002 ESD=0001 TYPE=REL  XREF=355 
 SYM=TESTASM4 LOC=00000000 LEN=00000000 ESD=0005 TYPE=EXT  XREF=297 310 362 
 SYM=TESTCAL3 LOC=00000000 LEN=00000398 ESD=0001 TYPE=CST  XREF=8 239 
 SYM=TRUE     LOC=0000034F LEN=00000001 ESD=0001 TYPE=REL  XREF=460 
 SYM=WTO#0011_EOT LOC=00000060 LEN=00000001 ESD=0001 TYPE=REL  XREF=35 33 34 
 SYM=WTO#0012_EOT LOC=000000AA LEN=00000001 ESD=0001 TYPE=REL  XREF=52 50 51 
 SYM=WTO#0106_EOT LOC=00000115 LEN=00000001 ESD=0001 TYPE=REL  XREF=250 248 249 
 SYM=WTO#0169_EOT LOC=0000024E LEN=00000001 ESD=0001 TYPE=REL  XREF=346 344 345 
 SYM=ZC390CVT LOC=00000000 LEN=000001F8 ESD=0003 TYPE=DST  XREF=137 41 
 SYM=ZC390PVT LOC=00000000 LEN=00000030 ESD=0004 TYPE=DST  XREF=208 
 SYM=ZCVT_ABORT LOC=00000068 LEN=00000004 ESD=0003 TYPE=REL  XREF=166 
 SYM=ZCVT_ABORT_ACCEPT LOC=0000000B LEN=00000001 ESD=0000 TYPE=ABS  XREF=176 
 SYM=ZCVT_ABORT_ALTER LOC=00000001 LEN=00000001 ESD=0000 TYPE=ABS  XREF=167 
 SYM=ZCVT_ABORT_CALL LOC=00000002 LEN=00000001 ESD=0000 TYPE=ABS  XREF=168 
 SYM=ZCVT_ABORT_CICS LOC=0000000A LEN=00000001 ESD=0000 TYPE=ABS  XREF=175 
 SYM=ZCVT_ABORT_DISPLAY LOC=00000003 LEN=00000001 ESD=0000 TYPE=ABS  XREF=169 
 SYM=ZCVT_ABORT_DIVQ LOC=00000009 LEN=00000001 ESD=0000 TYPE=ABS  XREF=174 
 SYM=ZCVT_ABORT_INT128 LOC=00000008 LEN=00000001 ESD=0000 TYPE=ABS  XREF=173 
 SYM=ZCVT_ABORT_MAXERR LOC=0000000B LEN=00000001 ESD=0000 TYPE=ABS  XREF=177 
 SYM=ZCVT_ABORT_OPEN LOC=00000004 LEN=00000001 ESD=0000 TYPE=ABS  XREF=170 
 SYM=ZCVT_ABORT_STACK LOC=00000006 LEN=00000001 ESD=0000 TYPE=ABS  XREF=171 
 SYM=ZCVT_ABORT_VERSION LOC=00000007 LEN=00000001 ESD=0000 TYPE=ABS  XREF=172 
 SYM=ZCVT_ACCEPT LOC=0000006C LEN=00000004 ESD=0003 TYPE=REL  XREF=178 
 SYM=ZCVT_ACCEPT_CONSOLE LOC=00000002 LEN=00000001 ESD=0000 TYPE=ABS  XREF=180 
 SYM=ZCVT_ACCEPT_DATE LOC=00000004 LEN=00000001 ESD=0000 TYPE=ABS  XREF=182 
 SYM=ZCVT_ACCEPT_DDNAME LOC=00000003 LEN=00000001 ESD=0000 TYPE=ABS  XREF=181 
 SYM=ZCVT_ACCEPT_DEFAULT LOC=00000001 LEN=00000001 ESD=0000 TYPE=ABS  XREF=179 
 SYM=ZCVT_ACCEPT_DOW LOC=00000006 LEN=00000001 ESD=0000 TYPE=ABS  XREF=184 
 SYM=ZCVT_ACCEPT_TIME LOC=00000005 LEN=00000001 ESD=0000 TYPE=ABS  XREF=183 
 SYM=ZCVT_CALL LOC=00000014 LEN=00000004 ESD=0003 TYPE=REL  XREF=142 
 SYM=ZCVT_CMP64R32 LOC=00000018 LEN=00000004 ESD=0003 TYPE=REL  XREF=143 
 SYM=ZCVT_CONVERTING LOC=00000008 LEN=00000001 ESD=0000 TYPE=ABS  XREF=189 
 SYM=ZCVT_CVTLBTQ LOC=0000001C LEN=00000004 ESD=0003 TYPE=REL  XREF=144 
 SYM=ZCVT_CVTLDTP LOC=00000020 LEN=00000004 ESD=0003 TYPE=REL  XREF=145 
 SYM=ZCVT_CVTQTLB LOC=00000024 LEN=00000004 ESD=0003 TYPE=REL  XREF=146 
 SYM=ZCVT_DISPLAY LOC=00000070 LEN=00000004 ESD=0003 TYPE=REL  XREF=185 267 284 325 
  340 
 SYM=ZCVT_DIV64R32 LOC=00000028 LEN=00000004 ESD=0003 TYPE=REL  XREF=147 
 SYM=ZCVT_DIVQ128 LOC=0000002C LEN=00000004 ESD=0003 TYPE=REL  XREF=148 
 SYM=ZCVT_END LOC=000001F8 LEN=00000001 ESD=0003 TYPE=REL  XREF=207 44 56 139 
 SYM=ZCVT_GOBACK LOC=00000030 LEN=00000004 ESD=0003 TYPE=REL  XREF=149 351 360 
 SYM=ZCVT_HIGH_VALUES LOC=00000090 LEN=00000010 ESD=0003 TYPE=REL  XREF=196 
 SYM=ZCVT_ID  LOC=00000000 LEN=00000004 ESD=0003 TYPE=REL  XREF=138 42 44 56 139 
 SYM=ZCVT_INSPECT LOC=00000074 LEN=00000004 ESD=0003 TYPE=REL  XREF=186 
 SYM=ZCVT_LEN LOC=00000004 LEN=00000004 ESD=0003 TYPE=REL  XREF=139 44 
 SYM=ZCVT_MPYQ128 LOC=00000034 LEN=00000004 ESD=0003 TYPE=REL  XREF=150 
 SYM=ZCVT_NDDX LOC=000000E8 LEN=00000010 ESD=0003 TYPE=REL  XREF=202 
 SYM=ZCVT_OSE64R32 LOC=00000038 LEN=00000004 ESD=0003 TYPE=REL  XREF=151 
 SYM=ZCVT_PERFORM LOC=0000003C LEN=00000004 ESD=0003 TYPE=REL  XREF=152 
 SYM=ZCVT_PMCHECK LOC=00000040 LEN=00000004 ESD=0003 TYPE=REL  XREF=153 353 
 SYM=ZCVT_PVTMAXDL LOC=00000078 LEN=00000002 ESD=0003 TYPE=REL  XREF=193 
 SYM=ZCVT_PWORK LOC=000000A0 LEN=00000008 ESD=0003 TYPE=REL  XREF=197 
 SYM=ZCVT_PWORK1 LOC=000000A8 LEN=00000010 ESD=0003 TYPE=REL  XREF=198 
 SYM=ZCVT_PWORK2 LOC=000000B8 LEN=00000010 ESD=0003 TYPE=REL  XREF=199 
 SYM=ZCVT_PWORK3 LOC=000000C8 LEN=00000010 ESD=0003 TYPE=REL  XREF=200 
 SYM=ZCVT_PWORK4 LOC=000000D8 LEN=00000010 ESD=0003 TYPE=REL  XREF=201 
 SYM=ZCVT_REPLACING LOC=00000004 LEN=00000001 ESD=0000 TYPE=ABS  XREF=188 
 SYM=ZCVT_ROUNDF LOC=00000044 LEN=00000004 ESD=0003 TYPE=REL  XREF=154 
 SYM=ZCVT_STACKEND LOC=00000050 LEN=00000004 ESD=0003 TYPE=REL  XREF=157 
 SYM=ZCVT_STACKORG LOC=00000048 LEN=00000004 ESD=0003 TYPE=REL  XREF=155 
 SYM=ZCVT_STACKPTR LOC=0000004C LEN=00000004 ESD=0003 TYPE=REL  XREF=156 
 SYM=ZCVT_STOPRUN LOC=00000054 LEN=00000004 ESD=0003 TYPE=REL  XREF=158 
 SYM=ZCVT_TALLYING LOC=00000000 LEN=00000001 ESD=0000 TYPE=ABS  XREF=187 
 SYM=ZCVT_TALPHAX LOC=00000058 LEN=00000004 ESD=0003 TYPE=REL  XREF=159 
 SYM=ZCVT_TNUMP LOC=0000005C LEN=00000004 ESD=0003 TYPE=REL  XREF=160 
 SYM=ZCVT_TNUMX LOC=00000060 LEN=00000004 ESD=0003 TYPE=REL  XREF=161 
 SYM=ZCVT_TNUMZ LOC=00000064 LEN=00000004 ESD=0003 TYPE=REL  XREF=162 
 SYM=ZCVT_VER LOC=00000008 LEN=00000008 ESD=0003 TYPE=REL  XREF=140 
 SYM=ZCVT_WORKAREA LOC=000000F8 LEN=00000100 ESD=0003 TYPE=REL  XREF=203 254 271 
  314 329 
 SYM=ZCVT_ZC390NUC LOC=00000010 LEN=00000004 ESD=0003 TYPE=REL  XREF=141 46 
 SYM=ZCVT_ZERO LOC=00000080 LEN=00000010 ESD=0003 TYPE=REL  XREF=195 
 SYM=ZC_CALL_LIST_3 LOC=0000035F LEN=00000008 ESD=0001 TYPE=REL  XREF=472 292 294 
  295 296 
 SYM=ZC_CALL_LIST_5 LOC=0000037B LEN=00000008 ESD=0001 TYPE=REL  XREF=476 305 307 
  308 309 
 SYM=ZC_CALL_VALUE_4 LOC=00000367 LEN=00000014 ESD=0001 TYPE=REL  XREF=474 290 291 
 SYM=ZC_CALL_VALUE_6 LOC=00000383 LEN=00000014 ESD=0001 TYPE=REL  XREF=478 303 304 
 SYM=ZC_E     LOC=00000008 LEN=00000001 ESD=0000 TYPE=ABS  XREF=93 
 SYM=ZC_EQ    LOC=00000008 LEN=00000001 ESD=0000 TYPE=ABS  XREF=105 
 SYM=ZC_F0    LOC=00000000 LEN=00000001 ESD=0000 TYPE=ABS  XREF=75 
 SYM=ZC_F10   LOC=0000000A LEN=00000001 ESD=0000 TYPE=ABS  XREF=85 
 SYM=ZC_F1    LOC=00000001 LEN=00000001 ESD=0000 TYPE=ABS  XREF=76 
 SYM=ZC_F11   LOC=0000000B LEN=00000001 ESD=0000 TYPE=ABS  XREF=86 
 SYM=ZC_F12   LOC=0000000C LEN=00000001 ESD=0000 TYPE=ABS  XREF=87 
 SYM=ZC_F13   LOC=0000000D LEN=00000001 ESD=0000 TYPE=ABS  XREF=88 
 SYM=ZC_F14   LOC=0000000E LEN=00000001 ESD=0000 TYPE=ABS  XREF=89 
 SYM=ZC_F15   LOC=0000000F LEN=00000001 ESD=0000 TYPE=ABS  XREF=90 
 SYM=ZC_F2    LOC=00000002 LEN=00000001 ESD=0000 TYPE=ABS  XREF=77 
 SYM=ZC_F3    LOC=00000003 LEN=00000001 ESD=0000 TYPE=ABS  XREF=78 
 SYM=ZC_F4    LOC=00000004 LEN=00000001 ESD=0000 TYPE=ABS  XREF=79 
 SYM=ZC_F5    LOC=00000005 LEN=00000001 ESD=0000 TYPE=ABS  XREF=80 
 SYM=ZC_F6    LOC=00000006 LEN=00000001 ESD=0000 TYPE=ABS  XREF=81 
 SYM=ZC_F7    LOC=00000007 LEN=00000001 ESD=0000 TYPE=ABS  XREF=82 
 SYM=ZC_F8    LOC=00000008 LEN=00000001 ESD=0000 TYPE=ABS  XREF=83 
 SYM=ZC_F9    LOC=00000009 LEN=00000001 ESD=0000 TYPE=ABS  XREF=84 
 SYM=ZC_GE    LOC=0000000B LEN=00000001 ESD=0000 TYPE=ABS  XREF=108 
 SYM=ZC_GT    LOC=00000002 LEN=00000001 ESD=0000 TYPE=ABS  XREF=106 
 SYM=ZC_H     LOC=00000002 LEN=00000001 ESD=0000 TYPE=ABS  XREF=91 
 SYM=ZC_L     LOC=00000004 LEN=00000001 ESD=0000 TYPE=ABS  XREF=92 
 SYM=ZC_LE    LOC=0000000D LEN=00000001 ESD=0000 TYPE=ABS  XREF=109 
 SYM=ZC_LK_END LOC=00000000 LEN=00000001 ESD=0008 TYPE=REL  XREF=497 496 
 SYM=ZC_LK_END_DSECT LOC=00000000 LEN=00000008 ESD=0008 TYPE=DST  XREF=495 
 SYM=ZC_LK_LOC_7 LOC=00000000 LEN=00000001 ESD=0000 TYPE=ABS  XREF=490 
 SYM=ZC_LK_LOC_8 LOC=00000000 LEN=00000001 ESD=0000 TYPE=ABS  XREF=493 
 SYM=ZC_LK_LOC_9 LOC=00000000 LEN=00000001 ESD=0000 TYPE=ABS  XREF=496 
 SYM=ZC_LOAD  LOC=00000038 LEN=00000002 ESD=0001 TYPE=REL  XREF=27 12 
 SYM=ZC_LOAD_OK LOC=00000068 LEN=00000002 ESD=0001 TYPE=REL  XREF=39 32 
 SYM=ZC_LT    LOC=00000004 LEN=00000001 ESD=0000 TYPE=ABS  XREF=107 
 SYM=ZC_M     LOC=00000004 LEN=00000001 ESD=0000 TYPE=ABS  XREF=99 
 SYM=ZC_NE    LOC=00000007 LEN=00000001 ESD=0000 TYPE=ABS  XREF=96 
 SYM=ZC_NH    LOC=0000000D LEN=00000001 ESD=0000 TYPE=ABS  XREF=94 
 SYM=ZC_NL    LOC=0000000B LEN=00000001 ESD=0000 TYPE=ABS  XREF=95 
 SYM=ZC_NM    LOC=0000000B LEN=00000001 ESD=0000 TYPE=ABS  XREF=102 
 SYM=ZC_NO    LOC=0000000E LEN=00000001 ESD=0000 TYPE=ABS  XREF=104 
 SYM=ZC_NP    LOC=0000000D LEN=00000001 ESD=0000 TYPE=ABS  XREF=101 
 SYM=ZC_NZ    LOC=00000007 LEN=00000001 ESD=0000 TYPE=ABS  XREF=103 
 SYM=ZC_O     LOC=00000001 LEN=00000001 ESD=0000 TYPE=ABS  XREF=97 
 SYM=ZC_P     LOC=00000002 LEN=00000001 ESD=0000 TYPE=ABS  XREF=98 
 SYM=ZC_PARM1_PTR LOC=00000353 LEN=00000004 ESD=0001 TYPE=REL  XREF=466 241 259 
 SYM=ZC_PARM2_PTR LOC=00000357 LEN=00000004 ESD=0001 TYPE=REL  XREF=468 243 276 
 SYM=ZC_R0    LOC=00000000 LEN=00000001 ESD=0000 TYPE=ABS  XREF=59 40 131 132 133 
  240 241 242 243 255 258 261 264 272 275 278 281 291 292 293 294 304 305 306 307 
  315 318 319 322 330 333 334 337 
 SYM=ZC_R10   LOC=0000000A LEN=00000001 ESD=0000 TYPE=ABS  XREF=69 
 SYM=ZC_R1    LOC=00000001 LEN=00000001 ESD=0000 TYPE=ABS  XREF=60 125 126 127 128 
  256 262 266 273 279 283 296 309 316 320 324 331 335 339 350 359 
 SYM=ZC_R11   LOC=0000000B LEN=00000001 ESD=0000 TYPE=ABS  XREF=70 
 SYM=ZC_R12   LOC=0000000C LEN=00000001 ESD=0000 TYPE=ABS  XREF=71 
 SYM=ZC_R13   LOC=0000000D LEN=00000001 ESD=0000 TYPE=ABS  XREF=72 124 126 127 128 
  129 130 132 
 SYM=ZC_R14   LOC=0000000E LEN=00000001 ESD=0000 TYPE=ABS  XREF=73 47 268 285 298 
  311 326 341 354 361 
 SYM=ZC_R15   LOC=0000000F LEN=00000001 ESD=0000 TYPE=ABS  XREF=74 9 31 37 46 47 
  54 134 267 268 284 285 297 298 310 311 325 326 340 341 351 352 353 354 360 361 
 SYM=ZC_R2    LOC=00000002 LEN=00000001 ESD=0000 TYPE=ABS  XREF=61 124 240 242 257 
  258 263 264 274 275 280 281 317 318 321 322 332 333 336 337 
 SYM=ZC_R3    LOC=00000003 LEN=00000001 ESD=0000 TYPE=ABS  XREF=62 254 258 264 265 
  266 271 275 281 282 283 314 318 322 323 324 329 333 337 338 339 
 SYM=ZC_R4    LOC=00000004 LEN=00000001 ESD=0000 TYPE=ABS  XREF=63 276 277 356 
 SYM=ZC_R5    LOC=00000005 LEN=00000001 ESD=0000 TYPE=ABS  XREF=64 259 260 357 
 SYM=ZC_R6    LOC=00000006 LEN=00000001 ESD=0000 TYPE=ABS  XREF=65 
 SYM=ZC_R7    LOC=00000007 LEN=00000001 ESD=0000 TYPE=ABS  XREF=66 
 SYM=ZC_R8    LOC=00000008 LEN=00000001 ESD=0000 TYPE=ABS  XREF=67 12 13 
 SYM=ZC_R9    LOC=00000009 LEN=00000001 ESD=0000 TYPE=ABS  XREF=68 40 41 
 SYM=ZC_SAVEAREA LOC=00000298 LEN=00000048 ESD=0001 TYPE=REL  XREF=424 
 SYM=ZC_VER_ERR LOC=00000088 LEN=00000002 ESD=0001 TYPE=REL  XREF=49 43 45 
 SYM=ZC_VER_OK LOC=000000C8 LEN=00000002 ESD=0001 TYPE=REL  XREF=123 48 
 SYM=ZC_WS    LOC=00000298 LEN=00000008 ESD=0001 TYPE=REL  XREF=136 125 129 423 425 
  427 429 431 433 435 437 439 441 443 445 447 449 451 453 455 457 459 461 463 465 
  467 469 471 473 475 477 499 
 SYM=ZC_WSLOC LOC=00000294 LEN=00000104 ESD=0001 TYPE=CST  XREF=135 219 422 488 498 
 SYM=ZC_WS_DIFF LOC=00000000 LEN=00000001 ESD=0000 TYPE=ABS  XREF=499 
 SYM=ZC_WS_END LOC=00000398 LEN=00000008 ESD=0001 TYPE=REL  XREF=500 131 
 SYM=ZC_WS_ID LOC=000002E0 LEN=00000008 ESD=0001 TYPE=REL  XREF=426 
 SYM=ZC_WS_ID1 LOC=000002F0 LEN=00000007 ESD=0001 TYPE=REL  XREF=434 
 SYM=ZC_WS_LEN LOC=000002EC LEN=00000004 ESD=0001 TYPE=REL  XREF=430 133 
 SYM=ZC_WS_LOC_10 LOC=0000005F LEN=00000001 ESD=0000 TYPE=ABS  XREF=435 
 SYM=ZC_WS_LOC_1 LOC=00000000 LEN=00000001 ESD=0000 TYPE=ABS  XREF=423 
 SYM=ZC_WS_LOC_11 LOC=0000005F LEN=00000001 ESD=0000 TYPE=ABS  XREF=437 
 SYM=ZC_WS_LOC_12 LOC=00000065 LEN=00000001 ESD=0000 TYPE=ABS  XREF=439 
 SYM=ZC_WS_LOC_13 LOC=00000066 LEN=00000001 ESD=0000 TYPE=ABS  XREF=441 
 SYM=ZC_WS_LOC_14 LOC=00000084 LEN=00000001 ESD=0000 TYPE=ABS  XREF=443 
 SYM=ZC_WS_LOC_15 LOC=00000085 LEN=00000001 ESD=0000 TYPE=ABS  XREF=445 
 SYM=ZC_WS_LOC_16 LOC=00000089 LEN=00000001 ESD=0000 TYPE=ABS  XREF=447 
 SYM=ZC_WS_LOC_17 LOC=0000008A LEN=00000001 ESD=0000 TYPE=ABS  XREF=449 
 SYM=ZC_WS_LOC_18 LOC=0000008E LEN=00000001 ESD=0000 TYPE=ABS  XREF=451 
 SYM=ZC_WS_LOC_19 LOC=0000008F LEN=00000001 ESD=0000 TYPE=ABS  XREF=453 
 SYM=ZC_WS_LOC_20 LOC=00000093 LEN=00000001 ESD=0000 TYPE=ABS  XREF=455 
 SYM=ZC_WS_LOC_2 LOC=00000048 LEN=00000001 ESD=0000 TYPE=ABS  XREF=425 
 SYM=ZC_WS_LOC_21 LOC=00000094 LEN=00000001 ESD=0000 TYPE=ABS  XREF=457 
 SYM=ZC_WS_LOC_22 LOC=000000B7 LEN=00000001 ESD=0000 TYPE=ABS  XREF=459 
 SYM=ZC_WS_LOC_23 LOC=000000B8 LEN=00000001 ESD=0000 TYPE=ABS  XREF=461 
 SYM=ZC_WS_LOC_24 LOC=000000B9 LEN=00000001 ESD=0000 TYPE=ABS  XREF=463 
 SYM=ZC_WS_LOC_25 LOC=000000BB LEN=00000001 ESD=0000 TYPE=ABS  XREF=465 
 SYM=ZC_WS_LOC_26 LOC=000000BF LEN=00000001 ESD=0000 TYPE=ABS  XREF=467 
 SYM=ZC_WS_LOC_27 LOC=000000C3 LEN=00000001 ESD=0000 TYPE=ABS  XREF=469 
 SYM=ZC_WS_LOC_28 LOC=000000C7 LEN=00000001 ESD=0000 TYPE=ABS  XREF=471 
 SYM=ZC_WS_LOC_29 LOC=000000CF LEN=00000001 ESD=0000 TYPE=ABS  XREF=473 
 SYM=ZC_WS_LOC_30 LOC=000000E3 LEN=00000001 ESD=0000 TYPE=ABS  XREF=475 
 SYM=ZC_WS_LOC_3 LOC=00000050 LEN=00000001 ESD=0000 TYPE=ABS  XREF=427 
 SYM=ZC_WS_LOC_31 LOC=000000EB LEN=00000001 ESD=0000 TYPE=ABS  XREF=477 
 SYM=ZC_WS_LOC_4 LOC=00000054 LEN=00000001 ESD=0000 TYPE=ABS  XREF=429 
 SYM=ZC_WS_LOC_5 LOC=00000058 LEN=00000001 ESD=0000 TYPE=ABS  XREF=431 
 SYM=ZC_WS_LOC_6 LOC=00000058 LEN=00000001 ESD=0000 TYPE=ABS  XREF=433 
 SYM=ZC_WS_START LOC=000002E8 LEN=00000004 ESD=0001 TYPE=REL  XREF=428 130 
 SYM=ZC_Z     LOC=00000008 LEN=00000001 ESD=0000 TYPE=ABS  XREF=100 
 SYM=ZC_ZC_LK_END_PTR LOC=0000035B LEN=00000004 ESD=0001 TYPE=REL  XREF=470 

Literal Table Listing

 LIT=A(ZCVT_END-ZCVT_ID) LOC=000000C4 LEN=00000004 ESD=0001 POOL=0001 XREF=44 
 LIT=C'ZCVT'  LOC=000000C0 LEN=00000004 ESD=0001 POOL=0001 XREF=42 
 LIT=CL16'TESTCAL3 PARM1 =' LOC=00000270 LEN=00000010 ESD=0001 POOL=0002 XREF=255 
  315 
 LIT=CL16'TESTCAL3 PARM2 =' LOC=00000280 LEN=00000010 ESD=0001 POOL=0002 XREF=272 
  330 
 LIT=CL8'ZC390LIB' LOC=000000B8 LEN=00000008 ESD=0001 POOL=0001 XREF=28 
 LIT=V(TESTASM4) LOC=00000290 LEN=00000004 ESD=0001 POOL=0002 XREF=297 310 
 
AZ390I total mnote warnings = 0
AZ390I total mnote errors   = 0
AZ390I max   mnote level    = 0
AZ390I total mz390 errors   = 0
AZ390I total az390 errors   = 0
TESTCAL3  MZ390 ENDED   RC= 0 MEM(MB)= MB IO=15215
